var searchIndex = JSON.parse('{\
"abyss":{"doc":"The abyss of kernel that operates hardwares.","t":[17,0,0,14,0,14,0,0,14,14,14,0,14,0,17,17,17,3,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,3,11,11,11,11,5,11,0,0,11,11,11,0,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,18,3,18,18,3,13,18,13,18,13,3,13,13,18,18,3,13,3,13,3,3,4,4,3,3,13,18,18,18,18,13,3,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,18,18,18,13,13,13,18,18,18,18,4,13,18,18,13,18,13,13,13,3,13,13,13,13,18,18,13,18,2,13,18,3,3,18,18,18,13,13,13,18,13,13,13,3,13,13,18,3,8,3,2,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,3,4,13,3,13,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,4,18,13,13,3,3,3,3,3,3,3,3,3,3,3,18,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,0,0,3,11,11,5,11,5,11,5,11,11,11,3,11,11,11,5,11,11,11,11,11,11,5,5,3,3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,3,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,18,18,3,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,4,18,3,13,13,13,13,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,0,11,11,11,11,11,11,0,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,6,6,13,13,13,13,13,13,13,13,4,4,13,6,6,6,6,7,18,13,3,3,13,13,13,3,13,13,3,18,13,18,13,13,13,13,18,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,3,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,18,18,18,13,18,13,18,18,13,13,18,18,13,18,18,18,13,13,18,13,18,18,18,7,4,3,3,3,3,4,3,3,13,18,18,18,13,13,18,18,13,13,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,12,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,11,11,11],"n":["MAX_CPU","addressing","boot","debug","dev","info","interrupt","kprint","mmio","print","println","spin_lock","warning","x86_64","PAGE_MASK","PAGE_SHIFT","PAGE_SIZE","Pa","Va","ZERO","add","add","add_assign","add_assign","as_mut","as_ref","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","eq","eq","fmt","fmt","fmt","fmt","from","from","into","into","into_pa","into_usize","into_usize","into_va","new","new","partial_cmp","partial_cmp","sub","sub","sub_assign","sub_assign","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","Region","Regions","addr","bootup_mps","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","fmt","fmt","from","from","into","into","iter","regions","size","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","usable","DeviceError","borrow","borrow_mut","fmt","from","get_bdev","into","mmio","pci","try_from","try_into","type_id","x86_64","ActiveMmioArea","MmioAccessor","MmioArea","MmioArrayAccessor","activate","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","new","read","read_at","read_at","size","split_at","start_end","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","write_at","write_at","Bar","CAPABILITIES_LIST","Capability","DETECTED_PARITY_ERROR","DEVSEL_TIMING","DeviceVendor","EthernetController","FAST_BACK_TO_BACK_CAPABLE","HostBridge","INTERRUPT_STATUS","IdeController","IoSpace","IoSpace","IsaBridge","MASTER_DATA_PARITY_ERROR","MHZ66_CAPABLE","MemorySpace","MemorySpace","MessageControl","OtherBridge","PciAccessor","PciDevice","PciDeviceClass","PciDeviceHeader","PciHeader","PciIterator","PciToPciBridge","RECEIVED_MASTER_ABORT","RECEIVED_TARGET_ABORT","SIGNALLED_SYSTEM_ERROR","SIGNALLED_TARGET_ABORT","ScsiBusController","Status","Type0","Type1","Type2","UnknownClass","VgaCompatController","accessor","all","all","bar","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capabilities","class","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","complement","contains","dev_id","device_vendor","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","functions","get","get_secondary_bus","hash","init","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","is_all","is_empty","next","not","offset","offset","partial_cmp","read_u16","read_u32","read_u8","remove","scan","scan_bus","set","set","status","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get_io_bar","try_get_memory_bar","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_split_mmio_range","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","vendor","vendor_id","virtio","write_u16","write_u32","write_u8","ACCESS_PLATFORM","ACKNOWLEDGE","ANY_LAYOUT","Block","Console","Crypto","DEVICE_CONFIGURATION_INTERRUPT","DEVICE_NEEDS_RESET","DRIVER","DRIVER_OK","DeviceType","EntropySource","FAILED","FEATURES_OK","Gpu","IN_ORDER","Input","IoMemory","IoMmu","IsrCfg","Mac802WLan","Memory","MemoryBallonningTranditional","MemoryBalloon","NOTIFY_ON_EMPTY","NOTRIFICATION_DATA","NetworkCard","ORDER_PLATFORM","PciTransport","Pstore","QUEUE_INTERRUPT","QueueBuilder","QueueScope","RING_EVENT_IDX","RING_INDIRECT_DESC","RING_PACKED","Reserved","RpMsg","RprocSerial","SR_IOV","ScsiHost","SignalDistributionModule","Socket","Status","TimerClock","Transport9P","VERSION_1","VirtIoDevice","VirtIoDeviceFeature","VirtIoFeaturesCommon","VirtQueue","VirtioCaif","all","all","all","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","block","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","complement","complement","configure_queue","contains","contains","contains","difference","difference","difference","empty","empty","empty","eq","eq","eq","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_transport","get_queue","hash","hash","hash","init","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","into","into","into","is_all","is_all","is_all","is_empty","is_empty","is_empty","not","not","not","partial_cmp","partial_cmp","partial_cmp","pci","queue_builder","queue_size","register","remove","remove","remove","set","set","set","set_size","sub","sub","sub","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","toggle","toggle","toggle","transport","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_primitive","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","virt_queue","VirtIoBlock","VirtIoBlockCfg","blk_size","block_cnt","block_size","borrow","borrow","borrow_mut","borrow_mut","capacity","discard_sector_alignment","from","from","from_pci","geometry_cylinders","geometry_heads","geometry_sectors","init","into","into","max_discard_sectors","max_discard_seg","max_write_zeros_sectors","max_write_zeros_seg","new_from_mmio_area","read_bios","seg_max","size_max","topology_alignment_offset","topology_min_io_size","topology_opt_io_size","topology_physical_block_exp","try_from","try_from","try_into","try_into","type_id","type_id","va","write_bios","write_zeros_may_unmap","writeback","CommonCfg","DeviceCfg","IsrCfg","NotifyCfg","NotifyCfgTriple","PciCapabilityType","PciCfg","PciTransport","Unknown","VirtIoIsrCfg","VirtIoNotifyCfg","VirtIoPciCommonCfg","_pci","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","common","config","config_generation","deref","device_features","device_features_select","device_status","driver_features","driver_features_select","eq","feat","fmt","from","from","from","from","from","from","get_device_features","get_driver_features","get_kick","into","into","into","into","into","into","isr","msix_config","new","new_from_mmio_area","new_from_mmio_area","new_from_mmio_area","notify","num_queues","private","queue_desc","queue_device","queue_driver","queue_enable","queue_msix_vector","queue_notify_off","queue_select","queue_size","queue_size","register_virtqueue","select_queue","set_features","try_from","try_from","try_from","try_from","try_from","try_from","try_get_configurations","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","v","va","va","va","INDIRECT","Kick","NEXT","None","Pci","VirtQueue","VirtqAvail","VirtqAvailContainer","VirtqDesc","VirtqDescContainer","VirtqDescFlags","VirtqDescs","VirtqSglBuilder","VirtqUsed","VirtqUsedContainer","VirtqUsedElem","WRITE","addr","all","avail","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","complement","contains","desc","difference","empty","eq","extend","finish","flags","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","id","idx","index","index","index","index_mut","index_mut","index_mut","inner","inner","inner","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_empty","len","new","new","new","not","partial_cmp","push","push_mut","remove","set","sgl_builder","size","sub","sub_assign","submit_chain","symmetric_difference","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","used","apic","serial","timer","_8259A","borrow","borrow_mut","eoi","from","init","into","send_ipi","try_from","try_into","type_id","Serial","borrow","borrow_mut","from","init","into","new","try_from","try_into","type_id","write_str","init","set_tsc_timer","GeneralPurposeRegisters","InterruptGuard","InterruptState","Off","On","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","current","default","drop","eq","error_code","fmt","fmt","from","from","from","into","into","into","new","r10","r11","r12","r13","r14","r15","r8","r9","rax","rbp","rbx","rcx","rdi","rdx","rsi","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","SpinLock","SpinLockGuard","TryLockError","WouldBlock","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","deref","deref_mut","from","from","from","into","into","into","into_inner","lock","new","try_from","try_from","try_from","try_into","try_into","try_into","try_lock","type_id","type_id","type_id","AC","AF","AM","CD","CET","CF","Cr0","Cr4","DE","DF","EM","ET","ID","IF","IOPL0","IOPL1","MCE","MP","NE","NT","NW","OF","OSFXSR","OSXMMEXCPT","OSXSAVE","PAE","PCE","PCIDE","PE","PF","PG","PGE","PKE","PKS","PSE","PVI","PrivilegeLevel","RF","Rflags","Ring0","Ring1","Ring2","Ring3","SF","SMAP","SMEP","SMXE","TF","TS","TSD","UMIP","VIF","VIP","VM","VME","VMXE","WP","ZF","_1","all","all","all","apply","apply","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","complement","complement","contains","contains","contains","current","current","difference","difference","difference","empty","empty","empty","eq","eq","eq","eq","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","hash","hash","hash","insert","insert","insert","interrupt","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","intrinsics","is_all","is_all","is_all","is_empty","is_empty","is_empty","msr","not","not","not","partial_cmp","partial_cmp","partial_cmp","pio","read","remove","remove","remove","segmentation","set","set","set","sub","sub","sub","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","table","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tss","type_id","type_id","type_id","type_id","union","union","union","AbortDoubleFault","AbortMachineCheck","AlignmentCheckException","BoundRangeExceeded","Breakpoint","CoprocessorSegmentOverrun","Debug","DeviceNotAvailable","DivideError","DoubleFault","ExceptionType","ExceptionVector","GeneralProtection","Handler","HandlerAlignCheck","HandlerPageFault","HandlerWithSegmentSelectorErrorCode","IDT","INSTRCUTION_FETCH","Interrupt","InterruptGateDescriptor","InterruptStackFrame","InvalidOpcode","InvalidTss","MachineCheckException","MustbeZero","NonMaskableInterrupt","OverflowException","PFErrorCode","PRESENT","PageFault","RESERVED_WRITE","SegmentNotPresent","SimdFloatingPointException","StackFault","Trap","USER","UserDefined0","UserDefined1","UserDefined10","UserDefined100","UserDefined101","UserDefined102","UserDefined103","UserDefined104","UserDefined105","UserDefined106","UserDefined107","UserDefined108","UserDefined109","UserDefined11","UserDefined110","UserDefined111","UserDefined112","UserDefined113","UserDefined114","UserDefined115","UserDefined116","UserDefined117","UserDefined118","UserDefined119","UserDefined12","UserDefined120","UserDefined121","UserDefined122","UserDefined123","UserDefined124","UserDefined125","UserDefined126","UserDefined127","UserDefined128","UserDefined129","UserDefined13","UserDefined130","UserDefined131","UserDefined132","UserDefined133","UserDefined134","UserDefined135","UserDefined136","UserDefined137","UserDefined138","UserDefined139","UserDefined14","UserDefined140","UserDefined141","UserDefined142","UserDefined143","UserDefined144","UserDefined145","UserDefined146","UserDefined147","UserDefined148","UserDefined149","UserDefined15","UserDefined150","UserDefined151","UserDefined152","UserDefined153","UserDefined154","UserDefined155","UserDefined156","UserDefined157","UserDefined158","UserDefined159","UserDefined16","UserDefined160","UserDefined161","UserDefined162","UserDefined163","UserDefined164","UserDefined165","UserDefined166","UserDefined167","UserDefined168","UserDefined169","UserDefined17","UserDefined170","UserDefined171","UserDefined172","UserDefined173","UserDefined174","UserDefined175","UserDefined176","UserDefined177","UserDefined178","UserDefined179","UserDefined18","UserDefined180","UserDefined181","UserDefined182","UserDefined183","UserDefined184","UserDefined185","UserDefined186","UserDefined187","UserDefined188","UserDefined189","UserDefined19","UserDefined190","UserDefined191","UserDefined192","UserDefined193","UserDefined194","UserDefined195","UserDefined196","UserDefined197","UserDefined198","UserDefined199","UserDefined2","UserDefined20","UserDefined200","UserDefined201","UserDefined202","UserDefined203","UserDefined204","UserDefined205","UserDefined206","UserDefined207","UserDefined208","UserDefined209","UserDefined21","UserDefined210","UserDefined211","UserDefined212","UserDefined213","UserDefined214","UserDefined215","UserDefined216","UserDefined217","UserDefined218","UserDefined219","UserDefined22","UserDefined220","UserDefined221","UserDefined222","UserDefined223","UserDefined23","UserDefined24","UserDefined25","UserDefined26","UserDefined27","UserDefined28","UserDefined29","UserDefined3","UserDefined30","UserDefined31","UserDefined32","UserDefined33","UserDefined34","UserDefined35","UserDefined36","UserDefined37","UserDefined38","UserDefined39","UserDefined4","UserDefined40","UserDefined41","UserDefined42","UserDefined43","UserDefined44","UserDefined45","UserDefined46","UserDefined47","UserDefined48","UserDefined49","UserDefined5","UserDefined50","UserDefined51","UserDefined52","UserDefined53","UserDefined54","UserDefined55","UserDefined56","UserDefined57","UserDefined58","UserDefined59","UserDefined6","UserDefined60","UserDefined61","UserDefined62","UserDefined63","UserDefined64","UserDefined65","UserDefined66","UserDefined67","UserDefined68","UserDefined69","UserDefined7","UserDefined70","UserDefined71","UserDefined72","UserDefined73","UserDefined74","UserDefined75","UserDefined76","UserDefined77","UserDefined78","UserDefined79","UserDefined8","UserDefined80","UserDefined81","UserDefined82","UserDefined83","UserDefined84","UserDefined85","UserDefined86","UserDefined87","UserDefined88","UserDefined89","UserDefined9","UserDefined90","UserDefined91","UserDefined92","UserDefined93","UserDefined94","UserDefined95","UserDefined96","UserDefined97","UserDefined98","UserDefined99","VirtualizationException","WRITE_ACCESS","X87FpuFloatingPointError","_Reserved0","_Reserved1","_Reserved10","_Reserved11","_Reserved2","_Reserved3","_Reserved4","_Reserved5","_Reserved6","_Reserved7","_Reserved8","_Reserved9","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","complement","contains","cs","difference","empty","empty","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","into","into","into","into","into","into_raw","is_all","is_empty","new","not","partial_cmp","remove","rflags","rip","rsp","set","set","set","set","set","set","set","ss","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","cpuid","read_cr3","Msr","borrow","borrow_mut","from","into","read","try_from","try_into","type_id","write","Pio","borrow","borrow_mut","clone","clone_into","from","into","new","read_u16","read_u32","read_u32_multiple","read_u8","to_owned","try_from","try_into","type_id","write_u16","write_u32","write_u8","A","A","AVL","AVL","CG64","CODE","CODE","Cs","D_B","Ds","EC","EC","Es","Fs","G","G","Gs","IG64","KERNEL_CODE_SELECTOR","KERNEL_DATA_SELECTOR","KernelCode","KernelData","L","Null","P","P","S","SEGMENT_TABLE","Segment","SegmentAccess","SegmentAccess64","SegmentDescriptor","SegmentDescriptor64","SegmentRegister","SegmentSelector","SegmentTable","Ss","T64A","T64B","TG64","Tss","Tss","USER_CODE_SELECTOR","USER_DATA_SELECTOR","UserCode","UserData","WR","WR","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","complement","complement","contains","contains","current_tss","difference","difference","dpl","empty","empty","eq","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","hash","hash","index","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into_selector","is_all","is_all","is_empty","is_empty","load","load","new","new","new","not","not","null","null","partial_cmp","partial_cmp","remove","remove","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","update_tss","GlobalDescriptorTable","InterruptDescriptorTable","LocalDescriptorTable","SystemTableRegister","address","alignment_check_exception","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_range_exceeded","breakpoint","coprocessor_segment_overrun","debug","device_not_available","divide_error","double_fault","empty","from","from","from","from","general_protection","into","into","into","into","invalid_opcode","invalid_tss","kill","load","load","machine_check_exception","new","nmi","overflow_exception","page_fault","segment_not_present","simd_floating_point_exception","size","stack_fault","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","user_defined","virtualization_exception","x87_fpu_floating_point_error","TaskStateSegment","borrow","borrow_mut","empty","fill_segment_descriptor","from","into","io_map_base","ist1","ist2","ist3","ist4","ist5","ist6","ist7","rsp0","rsp1","rsp2","try_from","try_into","type_id"],"q":["abyss","","","","","","","","","","","","","","abyss::addressing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abyss::boot","","","","","","","","","","","","","","","","","","","","","","","","","","","","abyss::dev","","","","","","","","","","","","","abyss::dev::mmio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abyss::dev::pci","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abyss::dev::pci::virtio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abyss::dev::pci::virtio::block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abyss::dev::pci::virtio::pci","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abyss::dev::pci::virtio::virt_queueabyss::dev::x86_64","","","abyss::dev::x86_64::apic","","","","","","","","","","","abyss::dev::x86_64::serial","","","","","","","","","","","abyss::dev::x86_64::timer","","abyss::interrupt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abyss::spin_lock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abyss::xabyss::x86_64::interruptabyss::x86_64::intrinsics","","abyss::x86_64::msr","","","","","","","","","","abyss::x86_64::pio","","","","","","","","","","","","","","","","","","","abyss::x86_64::segmentationabyss::x86_64::table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abyss::x86_64::tss","","","","","","","","","","","","","","","","","","","",""],"d":["Maximum number of CPU this kernel can support.","Memory abstraction.","Booting sequence","Print msg if debug build","Devices.","Display an information message.","Interrupt","Kernel print utilities.","Make mmio register groups.","Prints out the message.","Prints out the message with a newline.","SMP supported spinlock.","Display a warning message.","x86_64 specific","Mask for page offset.","Shift amount to get page index.","Page size.","Physical address","Virtual address","PA with address 0.","","","","","Get mutable reference of T underlying the Va.","Get reference of T underlying the Va.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Cast into physical address.","Cast into usize.","Cast into usize.","Cast into virtual address.","Create a new physical address with a check.","Create a new virtual address with a check.","","","","","","","","","","","","","","","","","A physically contigous memory region.","","","Bootup the mps.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get block device.","Calls <code>U::from(self)</code>.","Mmio interface.","Pci discovery and operations.","","","","x86_64 specific devices.","Represent the activated mmio area.","Type for accessing mmio register.","Representation of Mmio area.","Type for accessing array of mmio registers.","Activate this mmio area.","","","","","","","","","","","Clone this mmio area.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new mmio area.","Read from the register.","Read from the register.","Read value from <code>of</code>.","Get size of this mmio area.","Divides one mmio area into two at an index.","Return range of this mmio area as virtual.","","","","","","","","","","","","","","","Write to the register.","Write to the register.","Write value at <code>of</code>.","Enumeration of Base Address Register (BAR) types.","If set to 1 the device implements the pointer for a New …","Device’s capability.","This bit will be set to 1 whenever the device detects a …","Read only bits that represent the slowest time that a …","Pci device’s <code>Device Id</code> and <code>Vendor Id</code>.","Ethernet controller","If set to 1 the device can accept fast back-to-back …","Host bridge","Represents the state of the device’s INTx# signal. If …","Ide controller","BAR on IO Space.","Bar on the IO Space.","Isa bridge","This bit is only set when the following conditions are …","If set to 1 the device is capable of running at 66 MHz; …","BAR on Memory Space.","Bar on the Memory Space.","Msix message control accessor","Other bridge","Access helper for Pci Device.","Representation of PciDevice.","Enumeration of pci device class","A Enumeration of multiple types of Pci Device Headers.","Generic implementation of PciHeaderType.","Iterator for Pci Devices.","Pci to Pci bridge","This bit will be set to 1, by a master device, whenever …","This bit will be set to 1, by a master device, whenever …","This bit will be set to 1 whenever the device asserts …","This bit will be set to 1 whenever a target device …","Scsi Bus controller","Pci device status.","Type zero.","Type one.","Type two.","Unidentified class","VGA compatable controller","","","Returns the set containing all flags.","Get BAR of the device.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","Get iterator for enumerating the capabilties of device.","Get class of the device.","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Device id.","Get device and vendor information of the device.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Get iterator to enumerate the available functions of the …","Get underlying value.","","","Initialize pci devices.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Returns the complement of this set of flags.","Get accessor to read/write the vendor specific …","Access offset on the IO Space.","","read u16 from pci address.","read u32 from pci address.","read u8 from pci address.","Removes the specified flags in-place.","Scan whole pci buses.","Scan a single pci bus.","Set underlying value.","Inserts or removes the specified flags depending on the …","Get status of the device.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Get vendor id of the capability.","Vendor id.","VirtIo device drivers.","Write u16 to pci address.","Write u32 to pci address.","Write u8 to pci address.","This feature indicates that the device can be used on a …","Indicates that the guest OS has found the device and …","This feature indicates that the device accepts arbitrary …","","","","","Indicates that the device has experienced an error from …","Indicates that the guest OS knows how to drive the device.","Indicates that the driver is set up and ready to drive the …","Device Types.","","Indicates that something went wrong in the guest, and it …","Indicates that the driver has acknowledged all the …","","This feature indicates that all buffers are used by the …","","","","","","","","","If this feature has been negotiated by driver, the device …","This feature indicates that the driver passes extra data …","","This feature indicates that memory accesses by the driver …","","","","","","This feature enables the used_event and the avail_event …","Negotiating this feature indicates that the driver can use …","This feature indicates support for the packed virtqueue …","","","","This feature indicates that the device supports Single …","","","","VirtIo Device Status.","","","This indicates compliance with this specification, giving …","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","VirtIO Block device driver.","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","Device configuration layout","","Get total block count of this device.","get block size of this device.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Create new mmio area.","Flush read bio request to the disk.","","","offset of first aligned logical block","suggested minimum I/O size in blocks","optimal (suggested maximum) I/O size in blocks","of blocks per physical block (log2)","","","","","","","Get starting virtual address.","Flush write bio request to the disk.","","","Common configuration","Device specific configuration","ISR Status","Notifications","","","PCI configuration access","","","4.1.4.5 ISR status capability","2.7.23 Driver notifications","4.1.4.3 Common configuration structure layout","","","","","","","","","","","","","","","","Configuration atomicity value. The device changes this …","","The device uses this to report which feature bits it is …","The driver uses this to select which feature bits …","The driver writes the device status here (see 2.1). …","The driver writes this to accept feature bits offered by …","The driver uses this to select which feature bits …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The driver sets the Configuration Vector for MSI-X.","","Create new mmio area.","Create new mmio area.","Create new mmio area.","","The device specifies the maximum number of virtqueues …","","The driver writes the physical address of Descriptor Area …","The driver writes the physical address of Device Area …","The driver writes the physical address of Driver Area …","The driver uses this to selectively prevent the device …","The driver uses this to specify the queue vector for MSI-X.","The driver reads this to calculate the offset from start …","Queue Select. The driver selects which virtqueue the …","","Queue Size. On reset, specifies the maximum queue size …","","","","","","","","","","","","","","","","","","","","","","","16: vqn VQ number to be notified. 15: next_off Offset …","Get starting virtual address.","Get starting virtual address.","Get starting virtual address.","The buffer contains a list of buffer descriptors.","","The buffer is continuing via the next field","","","","","","The Virtqueue Descriptor Table.","","","","","","","","The buffer is device write-only (otherwise device …","Address (guest-physical)","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","The flags.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Length.","","","","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","Advanced Programmable Interrupt Controller (APIC) driver.","Serial device driver.","APIC based timer.","8259A interrupt controller","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","Returns the argument unchanged.","Initialize a serial.","Calls <code>U::from(self)</code>.","Create a new serial device interface.","","","","","Initialize the timer system.","Program the deadline timer.","X86_64 general purpose registers","An RAII implementation of an interrupt disable. When this …","Enumeration for representing interrupt state","Interrupt is off.","Interrupt is on.","","","","","","","","","Read the current interrupt state.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new InterruptGuard.","","","","","","","","","","","","","","","","","","","","","","","","","","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a …","An enumeration of possible errors associated while trying …","The lock could not be acquired at this time because the …","","","","","","","Creates a <code>SpinLock&lt;T&gt;</code>, with the <code>Default</code> value for T.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this spinlock, returning the underlying data.","Acquires a spinlock, blocking the current thread until it …","Creates a new spinlock in an unlocked state ready for use.","","","","","","","Attempts to acquire this lock.","","","","Alignment check or access control","Adjust Flag","Alignment mask.","Cache disable.","Control-flow-enforcement enable.","Carry Flag","Cr0 Register.","Cr4 Register.","Debugging extensions.","Direction Flag","Emulation.","Extension type.","Identification.","Interrupt enable.","I/O privilege level field - bit 0","I/O privilege level field - bit 1","Machine check exception.","Monitor co-processor.","Numeric error.","Nested task","Not-write through.","Overflow Flag","Os support for fxsave and fxrstor instructions.","Os support for unmasked simd floating point exceptions.","Xsave and processor extended states enable.","Physical address extension.","Performance monitoring counter enable.","Pcid enable.","Protected mode enable.","Parity Flag","Paging.","Page global enable.","Protection keys for user-mode pages enable.","Protection keys for supervisor-mode pages enable.","Page size extension.","Protected mode virtual interrupts.","Privilege Levels.","Resume","rflags.","","","","","Sign Flag","Supervisor mode access protection enable.","Supervisor mode executions protection enable.","Safer mode extensions enable.","Trap Flag","Task switched.","Time stamp disable.","User mode instruction prevention (#GP on SGDT, SIDT, SLDT, …","Virtual Interrupt","Virtual interrupt pending","Virtual-8086 mode","Virtual 8086 mode extensions.","Virtual machine extensions enable.","Write protect.","Zero Flag","Must be 1.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Read the current value.","Read the current value.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Read the current value.","Read the current value.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Interrupt.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","intrinsics of x86_64 not included in <code>core::arch::x86_64</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Model-specific register (MSR).","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","Port mapped io interface","Read the current value.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Segmentation.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Global and Local Descriptor Table.","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","Task-state segment","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Double fault Exception. Abort.","Machine Check Exception. Abort.","Interrupt 17 - Alignment Check Exception (#AC)","Interrupt 5 - Bound Range Exceeded Exception (#BR)","Interrupt 3 - Breakpoint Exception (#BP)","Interrupt 9 - Coprocessor Segment Overrun","Interrupt 1 - Debug Exception (#DB)","Interrupt 7 - Device Not Available Exception (#NM)","Interrupt 0 - Divide Error Exception (#DE)","Interrupt 8 - Double Fault Exception (#DF)","Type of exception","Exception vector enumeration of the x86_64.","Interrupt 13 - General Protection Exception (#GP)","Normal handler without error code.","Align Check Exception Handler.","Page-Fault Handler.","Handler that push SegmentSelector as Error code. General …","The unique kernel IDT.","When set, the page fault was caused by an instruction …","","X86_64’s IDT table.","Stack frame on interrupt.","Interrupt 6 - Invalid Opcode Exception (#UD)","Interrupt 10 - Invalid TSS Exception (#TS)","Interrupt 18 - Machine-Check Exception (#MC)","Must be zero.","Interrupt 2 - NonMaskableInterrupt Interrupt","Interrupt 4 - Overflow Exception (#OF)","List of error codes on page fault.","When set, the page fault was caused by a page-protection …","Interrupt 14 - Page-Fault Exception (#PF)","When set, one or more page directory entries contain …","Interrupt 11 - Segment Not Present (#NP)","Interrupt 19 - SIMD Floating-Point Exception (#XM)","Interrupt 12 - Stack Fault Exception (#SS)","","When set, the page fault was caused while CPL = 3. This …","Interrupt 32 - User Defined Interrupt0","Interrupt 33 - User Defined Interrupt1","Interrupt 42 - User Defined Interrupt10","Interrupt 132 - User Defined Interrupt100","Interrupt 133 - User Defined Interrupt101","Interrupt 134 - User Defined Interrupt102","Interrupt 135 - User Defined Interrupt103","Interrupt 136 - User Defined Interrupt104","Interrupt 137 - User Defined Interrupt105","Interrupt 138 - User Defined Interrupt106","Interrupt 139 - User Defined Interrupt107","Interrupt 140 - User Defined Interrupt108","Interrupt 141 - User Defined Interrupt109","Interrupt 43 - User Defined Interrupt11","Interrupt 142 - User Defined Interrupt110","Interrupt 143 - User Defined Interrupt111","Interrupt 144 - User Defined Interrupt112","Interrupt 145 - User Defined Interrupt113","Interrupt 146 - User Defined Interrupt114","Interrupt 147 - User Defined Interrupt115","Interrupt 148 - User Defined Interrupt116","Interrupt 149 - User Defined Interrupt117","Interrupt 150 - User Defined Interrupt118","Interrupt 151 - User Defined Interrupt119","Interrupt 44 - User Defined Interrupt12","Interrupt 152 - User Defined Interrupt120","Interrupt 153 - User Defined Interrupt121","Interrupt 154 - User Defined Interrupt122","Interrupt 155 - User Defined Interrupt123","Interrupt 156 - User Defined Interrupt124","Interrupt 157 - User Defined Interrupt125","Interrupt 158 - User Defined Interrupt126","Interrupt 159 - User Defined Interrupt127","Interrupt 160 - User Defined Interrupt128","Interrupt 161 - User Defined Interrupt129","Interrupt 45 - User Defined Interrupt13","Interrupt 162 - User Defined Interrupt130","Interrupt 163 - User Defined Interrupt131","Interrupt 164 - User Defined Interrupt132","Interrupt 165 - User Defined Interrupt133","Interrupt 166 - User Defined Interrupt134","Interrupt 167 - User Defined Interrupt135","Interrupt 168 - User Defined Interrupt136","Interrupt 169 - User Defined Interrupt137","Interrupt 170 - User Defined Interrupt138","Interrupt 171 - User Defined Interrupt139","Interrupt 46 - User Defined Interrupt14","Interrupt 172 - User Defined Interrupt140","Interrupt 173 - User Defined Interrupt141","Interrupt 174 - User Defined Interrupt142","Interrupt 175 - User Defined Interrupt143","Interrupt 176 - User Defined Interrupt144","Interrupt 177 - User Defined Interrupt145","Interrupt 178 - User Defined Interrupt146","Interrupt 179 - User Defined Interrupt147","Interrupt 180 - User Defined Interrupt148","Interrupt 181 - User Defined Interrupt149","Interrupt 47 - User Defined Interrupt15","Interrupt 182 - User Defined Interrupt150","Interrupt 183 - User Defined Interrupt151","Interrupt 184 - User Defined Interrupt152","Interrupt 185 - User Defined Interrupt153","Interrupt 186 - User Defined Interrupt154","Interrupt 187 - User Defined Interrupt155","Interrupt 188 - User Defined Interrupt156","Interrupt 189 - User Defined Interrupt157","Interrupt 190 - User Defined Interrupt158","Interrupt 191 - User Defined Interrupt159","Interrupt 48 - User Defined Interrupt16","Interrupt 192 - User Defined Interrupt160","Interrupt 193 - User Defined Interrupt161","Interrupt 194 - User Defined Interrupt162","Interrupt 195 - User Defined Interrupt163","Interrupt 196 - User Defined Interrupt164","Interrupt 197 - User Defined Interrupt165","Interrupt 198 - User Defined Interrupt166","Interrupt 199 - User Defined Interrupt167","Interrupt 200 - User Defined Interrupt168","Interrupt 201 - User Defined Interrupt169","Interrupt 49 - User Defined Interrupt17","Interrupt 202 - User Defined Interrupt170","Interrupt 203 - User Defined Interrupt171","Interrupt 204 - User Defined Interrupt172","Interrupt 205 - User Defined Interrupt173","Interrupt 206 - User Defined Interrupt174","Interrupt 207 - User Defined Interrupt175","Interrupt 208 - User Defined Interrupt176","Interrupt 209 - User Defined Interrupt177","Interrupt 210 - User Defined Interrupt178","Interrupt 211 - User Defined Interrupt179","Interrupt 50 - User Defined Interrupt18","Interrupt 212 - User Defined Interrupt180","Interrupt 213 - User Defined Interrupt181","Interrupt 214 - User Defined Interrupt182","Interrupt 215 - User Defined Interrupt183","Interrupt 216 - User Defined Interrupt184","Interrupt 217 - User Defined Interrupt185","Interrupt 218 - User Defined Interrupt186","Interrupt 219 - User Defined Interrupt187","Interrupt 220 - User Defined Interrupt188","Interrupt 221 - User Defined Interrupt189","Interrupt 51 - User Defined Interrupt19","Interrupt 222 - User Defined Interrupt190","Interrupt 223 - User Defined Interrupt191","Interrupt 224 - User Defined Interrupt192","Interrupt 225 - User Defined Interrupt193","Interrupt 226 - User Defined Interrupt194","Interrupt 227 - User Defined Interrupt195","Interrupt 228 - User Defined Interrupt196","Interrupt 229 - User Defined Interrupt197","Interrupt 230 - User Defined Interrupt198","Interrupt 231 - User Defined Interrupt199","Interrupt 34 - User Defined Interrupt2","Interrupt 52 - User Defined Interrupt20","Interrupt 232 - User Defined Interrupt200","Interrupt 233 - User Defined Interrupt201","Interrupt 234 - User Defined Interrupt202","Interrupt 235 - User Defined Interrupt203","Interrupt 236 - User Defined Interrupt204","Interrupt 237 - User Defined Interrupt205","Interrupt 238 - User Defined Interrupt206","Interrupt 239 - User Defined Interrupt207","Interrupt 240 - User Defined Interrupt208","Interrupt 241 - User Defined Interrupt209","Interrupt 53 - User Defined Interrupt21","Interrupt 242 - User Defined Interrupt210","Interrupt 243 - User Defined Interrupt211","Interrupt 244 - User Defined Interrupt212","Interrupt 245 - User Defined Interrupt213","Interrupt 246 - User Defined Interrupt214","Interrupt 247 - User Defined Interrupt215","Interrupt 248 - User Defined Interrupt216","Interrupt 249 - User Defined Interrupt217","Interrupt 250 - User Defined Interrupt218","Interrupt 251 - User Defined Interrupt219","Interrupt 54 - User Defined Interrupt22","Interrupt 252 - User Defined Interrupt220","Interrupt 253 - User Defined Interrupt221","Interrupt 254 - User Defined Interrupt222","Interrupt 255 - User Defined Interrupt223","Interrupt 55 - User Defined Interrupt23","Interrupt 56 - User Defined Interrupt24","Interrupt 57 - User Defined Interrupt25","Interrupt 58 - User Defined Interrupt26","Interrupt 59 - User Defined Interrupt27","Interrupt 60 - User Defined Interrupt28","Interrupt 61 - User Defined Interrupt29","Interrupt 35 - User Defined Interrupt3","Interrupt 62 - User Defined Interrupt30","Interrupt 63 - User Defined Interrupt31","Interrupt 64 - User Defined Interrupt32","Interrupt 65 - User Defined Interrupt33","Interrupt 66 - User Defined Interrupt34","Interrupt 67 - User Defined Interrupt35","Interrupt 68 - User Defined Interrupt36","Interrupt 69 - User Defined Interrupt37","Interrupt 70 - User Defined Interrupt38","Interrupt 71 - User Defined Interrupt39","Interrupt 36 - User Defined Interrupt4","Interrupt 72 - User Defined Interrupt40","Interrupt 73 - User Defined Interrupt41","Interrupt 74 - User Defined Interrupt42","Interrupt 75 - User Defined Interrupt43","Interrupt 76 - User Defined Interrupt44","Interrupt 77 - User Defined Interrupt45","Interrupt 78 - User Defined Interrupt46","Interrupt 79 - User Defined Interrupt47","Interrupt 80 - User Defined Interrupt48","Interrupt 81 - User Defined Interrupt49","Interrupt 37 - User Defined Interrupt5","Interrupt 82 - User Defined Interrupt50","Interrupt 83 - User Defined Interrupt51","Interrupt 84 - User Defined Interrupt52","Interrupt 85 - User Defined Interrupt53","Interrupt 86 - User Defined Interrupt54","Interrupt 87 - User Defined Interrupt55","Interrupt 88 - User Defined Interrupt56","Interrupt 89 - User Defined Interrupt57","Interrupt 90 - User Defined Interrupt58","Interrupt 91 - User Defined Interrupt59","Interrupt 38 - User Defined Interrupt6","Interrupt 92 - User Defined Interrupt60","Interrupt 93 - User Defined Interrupt61","Interrupt 94 - User Defined Interrupt62","Interrupt 95 - User Defined Interrupt63","Interrupt 96 - User Defined Interrupt64","Interrupt 97 - User Defined Interrupt65","Interrupt 98 - User Defined Interrupt66","Interrupt 99 - User Defined Interrupt67","Interrupt 100 - User Defined Interrupt68","Interrupt 101 - User Defined Interrupt69","Interrupt 39 - User Defined Interrupt7","Interrupt 102 - User Defined Interrupt70","Interrupt 103 - User Defined Interrupt71","Interrupt 104 - User Defined Interrupt72","Interrupt 105 - User Defined Interrupt73","Interrupt 106 - User Defined Interrupt74","Interrupt 107 - User Defined Interrupt75","Interrupt 108 - User Defined Interrupt76","Interrupt 109 - User Defined Interrupt77","Interrupt 110 - User Defined Interrupt78","Interrupt 111 - User Defined Interrupt79","Interrupt 40 - User Defined Interrupt8","Interrupt 112 - User Defined Interrupt80","Interrupt 113 - User Defined Interrupt81","Interrupt 114 - User Defined Interrupt82","Interrupt 115 - User Defined Interrupt83","Interrupt 116 - User Defined Interrupt84","Interrupt 117 - User Defined Interrupt85","Interrupt 118 - User Defined Interrupt86","Interrupt 119 - User Defined Interrupt87","Interrupt 120 - User Defined Interrupt88","Interrupt 121 - User Defined Interrupt89","Interrupt 41 - User Defined Interrupt9","Interrupt 122 - User Defined Interrupt90","Interrupt 123 - User Defined Interrupt91","Interrupt 124 - User Defined Interrupt92","Interrupt 125 - User Defined Interrupt93","Interrupt 126 - User Defined Interrupt94","Interrupt 127 - User Defined Interrupt95","Interrupt 128 - User Defined Interrupt96","Interrupt 129 - User Defined Interrupt97","Interrupt 130 - User Defined Interrupt98","Interrupt 131 - User Defined Interrupt99","Interrupt 20 - Virtualization Exception (#VE)","When set, the page fault was caused by a write access. …","Interrupt 16 - x87 FPU Floating-Point Error (#MF)","Interrupt 15 - Reserved.","Interrupt 21 - Reserved1.","Interrupt 30 - Reserved10.","Interrupt 31 - Reserved11.","Interrupt 22 - Reserved2.","Interrupt 23 - Reserved3.","Interrupt 24 - Reserved4.","Interrupt 25 - Reserved5.","Interrupt 26 - Reserved6.","Interrupt 27 - Reserved7.","Interrupt 28 - Reserved8.","Interrupt 29 - Reserved9.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Empty this gate entry.","Returns an empty set of flags.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Cast the ExceptionVector into usize.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Create a new ExceptionVector from usize.","Returns the complement of this set of flags.","","Removes the specified flags in-place.","","","","Set this gate entry.","Set this gate entry.","Set this gate entry.","Set this gate entry.","Set this gate entry.","Set this gate entry.","Inserts or removes the specified flags depending on the …","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Get cpuid of this core.","read current cr3.","Model specific register.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Read the current value.","","","","Write to the msr.","A Port-mapped io.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new port mapped io interface.","Read u16 from port.","Read u32 from port.","Read multiple u32s from port.","Read u8 from port.","","","","","Write u16 to port.","Write u32 to port.","Write u8 to port.","Accessed.","Accessed.","Available for use by system software","Available for use by system software","64-bit Call Gate","Data or Code","Data or Code","Code Segment.","Default operation size (0 = 16-bit segment; 1 = 32-bit …","Data Segment.","Expand_down/Conforming.","Expand_down/Conforming.","Extra Segment.","Extra Segment (E -&gt; F).","Granularity","Granularity","Extra Segment (F -&gt; G).","64-bit Interrupt Gate","Segment selector for Kernel Code.","Segment selector for Kernel Data.","Kernel code segment (KC).","Kernel data segment (KD).","64-bit code segment (IA-32e mode only)","Null segment.","Segment present","Segment present","Descriptor type  (0 = system; 1 = code or data).","A unique kernel segment table.","Types of segment.","X86_64’s access permission of segment.","X86_64’s access permission of 64bit segment.","X86_64’s Segment Descriptor.","X86_64’s 64bit Segment Descriptor.","X86_64’s Segment Register","X86_64’s segment selector.","A table for segment descriptors.","Stack Segment.","Available 64-bit TSS","Busy 64-bit TSS","64-bit Trap Gate","Task State Segment.","Task-state-struct segment (TSS).","Segment selector for User Code.","Segment selector for User Data.","User code segment (UC).","User data segment (UD).","Writable/Readable.","Writable/Readable.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Get current tss address.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Get dpl of the SegmentSelector.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","Get index of the SegmentSelector.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get segment selector from the <code>Segment</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Load the segment selector into the segment register.","Load this table into global descriptor table and segment …","Create a new segment.","Create a new segment.","Create a new SegmentSelector from the index and dpl.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Create a null segment.","Create a null segment.","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Update the tss.","Global descriptor table.","Table of interrupt descriptors.","Local descriptor table.","X86_64’s system table register.","","Interrupt 17 - Alignment Check Exception (#AC)","","","","","","","","","Interrupt 5 - Bound Range Exceeded Exception (#BR)","Interrupt 3 - Breakpoint Exception (#BP)","Interrupt 9 - Coprocessor Segment Overrun","Interrupt 1 - Debug Exception (#DB)","Interrupt 7 - Device Not Available Exception (#NM)","Interrupt 0 - Divide Error Exception (#DE)","Interrupt 8 - Double Fault Exception (#DF)","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Interrupt 13 - General Protection Exception (#GP)","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Interrupt 6 - Invalid Opcode Exception (#UD)","Interrupt 10 - Invalid TSS Exception (#TS)","Kill the LDT into zero.","","Load the system table register into CPU.","Interrupt 18 - Machine-Check Exception (#MC)","Create a system table register from given table.","Interrupt 2 - NMI Interrupt","Interrupt 4 - Overflow Exception (#OF)","Interrupt 14 - Page-Fault Exception (#PF)","Interrupt 11 - Segment Not Present (#NP)","Interrupt 19 - SIMD Floating-Point Exception (#XM)","","Interrupt 12 - Stack Fault Exception (#SS)","","","","","","","","","","","","","Interrupt 32 ~ 255 - User Defined Interrupt 0 ~ 223","Interrupt 20 - Virtualization Exception (#VE)","Interrupt 16 - x87 FPU Floating-Point Error (#MF)","64bit task state segment.","","","Create a empty TaskStateSegment.","Fill the segment descriptor.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,3,1,3,3,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,1,3,3,1,3,1,3,3,1,3,1,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,0,0,12,0,12,13,12,13,12,12,12,12,13,12,13,12,13,13,13,13,12,12,13,12,13,12,13,12,0,15,15,15,15,0,15,0,0,15,15,15,0,0,0,0,0,17,20,21,17,18,20,21,17,18,20,21,17,20,21,20,21,17,18,20,21,17,18,20,21,17,18,17,20,21,18,17,17,18,20,21,20,21,17,18,20,21,17,18,20,21,17,18,20,21,18,0,29,0,29,29,0,33,29,33,29,33,0,30,33,29,29,0,30,0,33,0,0,0,0,0,0,33,29,29,29,29,33,0,32,32,32,33,33,25,28,29,25,29,29,29,29,29,29,29,40,38,39,37,28,30,29,25,34,27,32,35,33,40,38,39,37,28,30,29,25,34,27,32,35,33,25,32,29,25,34,32,29,25,34,32,29,29,29,35,32,29,29,29,29,37,28,30,29,29,29,29,29,25,34,27,32,35,33,40,38,39,37,28,30,29,25,34,27,32,35,33,29,29,29,29,34,38,32,29,0,29,29,29,40,38,39,37,28,30,29,25,34,27,32,35,33,39,29,29,39,29,40,37,29,27,27,27,29,0,0,38,29,25,29,29,29,29,25,34,32,29,40,38,39,37,28,30,29,25,34,27,32,35,33,30,30,40,38,39,37,28,30,29,25,34,27,32,35,33,28,40,38,39,37,28,30,29,25,34,27,32,35,33,29,40,35,0,27,27,27,44,43,44,50,50,50,45,43,43,43,0,50,43,43,50,44,50,50,50,0,50,50,50,50,44,44,50,44,0,50,45,0,0,44,44,44,50,50,50,44,50,50,50,0,50,50,44,0,0,0,0,50,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,108,43,44,45,43,44,45,43,44,45,0,49,54,55,50,43,44,45,49,54,55,50,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,49,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,50,43,43,43,43,43,44,44,44,44,44,45,45,45,45,45,49,54,55,50,43,44,45,43,44,45,108,43,44,45,43,44,45,43,44,45,49,49,43,44,45,49,43,44,45,43,44,45,43,44,45,49,54,55,50,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,0,54,54,55,43,44,45,43,44,45,55,43,44,45,43,44,45,43,44,45,43,44,45,43,44,45,49,49,54,55,50,50,43,44,45,50,49,54,55,50,43,44,45,49,54,55,50,43,44,45,43,44,45,0,0,0,57,16,16,16,57,16,57,57,57,16,57,16,57,57,57,16,16,57,57,57,57,57,57,16,57,57,57,57,57,57,16,57,16,57,16,57,57,16,57,57,60,60,60,60,0,0,60,0,60,0,0,0,51,109,51,60,59,58,62,109,51,60,59,58,62,51,58,59,51,59,59,59,59,59,60,51,60,109,51,60,59,58,62,59,51,51,109,51,60,59,58,62,51,59,51,59,58,62,51,59,51,59,59,59,59,59,59,59,51,59,51,51,59,109,51,60,59,58,62,0,109,51,60,59,58,62,109,51,60,59,58,62,62,59,58,62,63,0,63,61,61,0,0,0,0,0,0,0,0,0,0,0,63,65,63,52,63,63,63,63,63,63,63,69,67,71,70,110,68,66,61,52,64,63,65,69,67,71,70,110,68,66,61,52,64,63,65,63,63,63,63,63,52,63,63,63,63,64,65,63,63,63,63,63,65,69,67,71,70,110,68,66,61,52,64,63,65,63,63,63,63,63,52,66,67,68,66,67,68,66,67,70,66,63,63,63,69,67,71,70,110,68,66,61,52,64,63,65,63,63,65,67,70,66,63,63,64,64,63,63,52,52,63,63,70,63,63,63,69,67,71,70,110,68,66,61,52,64,63,65,69,67,71,70,110,68,66,61,52,64,63,65,69,67,71,70,110,68,66,61,52,64,63,65,63,52,0,0,0,0,111,111,0,111,0,111,0,111,111,111,0,72,72,72,0,72,72,72,72,72,72,0,0,0,0,0,75,75,76,75,74,76,75,74,74,74,75,74,76,75,74,75,74,76,75,74,76,75,74,76,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,76,75,74,76,75,74,76,75,74,0,0,0,80,80,79,53,80,79,53,79,53,53,80,79,53,80,79,53,79,79,79,80,79,53,80,79,53,79,80,79,53,81,81,82,82,83,81,0,0,83,81,82,82,81,81,81,81,83,82,82,81,82,81,83,83,83,83,83,83,82,81,82,83,83,83,83,83,0,81,0,84,84,84,84,81,83,83,83,81,82,83,83,81,81,81,83,83,82,81,81,81,82,83,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,84,81,82,83,84,81,82,83,84,81,82,83,84,81,82,83,81,82,83,81,82,83,81,82,83,82,83,81,82,83,81,82,83,84,81,82,83,81,82,83,84,81,81,81,81,81,82,82,82,82,82,83,83,83,83,83,84,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,0,81,82,83,81,82,83,84,81,82,83,0,81,82,83,81,82,83,0,81,82,83,81,82,83,0,81,81,82,83,0,81,82,83,81,82,83,81,82,83,81,82,83,0,84,81,82,83,81,82,83,84,81,82,83,84,81,82,83,0,84,81,82,83,81,82,83,0,0,86,86,86,86,86,86,86,86,0,0,86,0,0,0,0,0,85,92,0,0,86,86,86,0,86,86,0,85,86,85,86,86,86,92,85,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,85,86,86,86,86,86,86,86,86,86,86,86,86,86,85,85,85,85,85,85,85,85,92,112,86,87,88,85,92,112,86,87,88,85,86,87,88,85,86,87,88,85,85,85,85,87,85,88,85,86,85,85,86,87,85,85,85,85,85,92,112,86,87,88,85,85,85,85,85,85,85,85,85,92,112,86,87,88,85,86,85,85,86,85,85,85,87,87,87,88,88,88,88,88,88,85,87,85,85,85,86,87,88,85,85,92,112,86,87,88,85,92,112,86,87,88,85,92,112,86,87,88,85,85,0,0,0,113,113,113,113,113,113,113,113,113,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,98,99,98,99,99,98,99,104,98,104,98,99,104,104,98,99,104,99,102,102,102,102,98,102,98,99,98,0,0,0,0,0,0,0,0,0,104,99,99,99,104,102,102,102,102,102,98,99,98,99,98,99,98,99,98,99,98,99,98,99,98,99,98,99,104,105,98,100,99,101,91,102,104,105,98,100,99,101,91,102,98,100,99,101,91,102,98,100,99,101,91,102,98,99,98,99,98,99,105,98,99,91,98,99,98,99,91,98,99,98,98,98,98,98,99,99,99,99,99,91,102,104,105,98,100,99,101,91,102,98,99,98,99,98,99,98,99,98,99,91,98,99,98,99,98,99,104,105,98,100,99,101,91,102,102,98,99,98,99,104,105,100,101,91,98,99,100,101,98,99,98,99,98,99,98,99,98,99,98,99,98,100,99,101,91,102,98,99,104,105,98,100,99,101,91,102,104,105,98,100,99,101,91,102,104,105,98,100,99,101,91,102,98,99,105,0,0,0,0,107,106,114,115,106,107,114,115,106,107,106,106,106,106,106,106,106,106,114,115,106,107,106,114,115,106,107,106,106,114,106,107,106,107,106,106,106,106,106,107,106,114,115,106,107,114,115,106,107,114,115,106,107,106,106,106,0,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2]],[[3,2]],[[1,2]],[[3,2]],[3,4],[3,4],[[1,2],1],[[3,2],3],[[1,2]],[[3,2]],[[1,2],1],[[3,2],3],[[1,2]],[[3,2]],[[]],[[]],[[]],[[]],[1,1],[3,3],[[]],[[]],[[1,1],5],[[3,3],5],[[1,1],6],[[3,3],6],[[1,7],8],[[1,7],8],[[3,7],8],[[3,7],8],[[]],[[]],[[]],[[]],[3,1],[1,2],[3,2],[1,3],[2,[[4,[1]]]],[2,[[4,[3]]]],[[1,1],[[4,[5]]]],[[3,3],[[4,[5]]]],[[1,2]],[[3,2]],[[1,2]],[[3,2]],[[]],[[]],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],0,0,0,[[]],[[]],[[]],[[]],[[]],[12,12],[[]],[[12,12],6],[[12,7],8],[[13,7],8],[[]],[[]],[[]],[[]],[13,14],0,0,[[]],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],0,0,[[]],[[]],[[15,7],8],[[]],[2,[[4,[16]]]],[[]],0,0,[[],10],[[],10],[[],11],0,0,0,0,0,[17,18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[20,[19]]],[[20,[19]]]],[[[21,[19]]],[[21,[19]]]],[17,17],[[]],[[]],[[[20,[22]],7],8],[[[21,[22]],7],8],[[17,7],8],[[18,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[23,[1]]],17],[20],[[21,2]],[[18,2],24],[17,2],[[17,2]],[18],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[20],[[21,2]],[[18,2,24]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[25,26],27],[28,17],[[],29],[[25,26],[[4,[30]]]],[[29,29],29],[[29,29]],[[29,29],29],[[29,29]],[29,31],[[29,29],29],[[29,29]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[32,33],[29,29],[25,25],[34,34],[32,32],[[]],[[]],[[]],[[]],[[29,29],5],[29,29],[[29,29],6],0,[32,35],[[29,29],29],[[],29],[[29,29],6],[[29,36]],[[37,7],8],[[28,7],8],[[30,7],8],[[29,7],8],[[29,7],8],[[29,7],8],[[29,7],8],[[29,7],8],[[25,7],8],[[34,7],8],[[27,7],8],[[32,7],8],[[35,7],8],[[33,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,[[4,[29]]]],[31,29],[31,29],[36,29],0,0,[32,[[4,[26]]]],[29],[[]],[[29,29]],[[29,29],29],[[29,29],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[29,6],[29,6],[39,4],[29,29],[[40,26],27],[37,[[4,[41]]]],[[29,29],[[4,[5]]]],[27,31],[27,42],[27,26],[[29,29]],[[],39],[26,39],0,[[29,29,6]],[25,29],[[29,29],29],[[29,29]],[[29,29],29],[[]],[[]],[[]],[[]],[[29,29]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[30,[[4,[37]]]],[30,[[4,[28]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[28,2,2],[[4,[17]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[29,29],29],[40,26],0,0,[[27,31]],[[27,42]],[[27,26]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],43],[[],44],[[],45],[[43,43],43],[[44,44],44],[[45,45],45],[[43,43]],[[44,44]],[[45,45]],[[43,43],43],[[44,44],44],[[45,45],45],[[43,43]],[[44,44]],[[45,45]],[[],46],[43,26],[44,46],[45,42],[[43,43],43],[[44,44],44],[[45,45],45],[[43,43]],[[44,44]],[[45,45]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,43],[44,44],[45,45],[[]],[[]],[[]],[[43,43],5],[[44,44],5],[[45,45],5],[43,43],[44,44],[45,45],[[[49,[[0,[47,48]]]],31]],[[43,43],6],[[44,44],6],[[45,45],6],[[43,43],43],[[44,44],44],[[45,45],45],[[],43],[[],44],[[],45],[[43,43],6],[[44,44],6],[[45,45],6],[[43,36]],[[44,36]],[[45,36]],[[50,7],8],[[43,7],8],[[43,7],8],[[43,7],8],[[43,7],8],[[43,7],8],[[44,7],8],[[44,7],8],[[44,7],8],[[44,7],8],[[44,7],8],[[45,7],8],[[45,7],8],[[45,7],8],[[45,7],8],[[45,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26,[[4,[43]]]],[46,[[4,[44]]]],[42,[[4,[45]]]],[46],[26,43],[46,44],[42,45],[26,43],[46,44],[42,45],[36,43],[36,44],[36,45],[[[51,[[0,[47,48]]]]],[[49,[[0,[47,48]]]]]],[[[49,[[0,[47,48]]]],31],[[4,[[53,[52]]]]]],[43],[44],[45],[[[49,[[0,[47,48]]]],44],10],[[43,43]],[[44,44]],[[45,45]],[[43,43],43],[[44,44],44],[[45,45],45],[[43,43],6],[[44,44],6],[[45,45],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,6],[44,6],[45,6],[43,6],[44,6],[45,6],[43,43],[44,44],[45,45],[[43,43],[[4,[5]]]],[[44,44],[[4,[5]]]],[[45,45],[[4,[5]]]],0,[[[54,[[0,[47,48]]]]],[[55,[[0,[47,48]]]]]],[[[54,[[0,[47,48]]]]],31],[[[55,[[0,[47,48]]]]],10],[[43,43]],[[44,44]],[[45,45]],[[43,43,6]],[[44,44,6]],[[45,45,6]],[[[55,[[0,[47,48]]]],31],[[10,[[55,[[0,[47,48]]]]]]]],[[43,43],43],[[44,44],44],[[45,45],45],[[43,43]],[[44,44]],[[45,45]],[[43,43],43],[[44,44],44],[[45,45],45],[[]],[[]],[[]],[[43,43]],[[44,44]],[[45,45]],0,[[],10],[[],10],[[],10],[42,[[10,[50,[56,[50]]]]]],[[],10],[[],10],[[],10],[[],10],[[],[[10,[50,[56,[50]]]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[43,43],43],[[44,44],44],[[45,45],45],0,0,0,[57,[[20,[31]]]],[16,2],[16,2],[[]],[[]],[[]],[[]],[57,[[20,[46]]]],[57,[[20,[42]]]],[[]],[[]],[32,[[10,[16]]]],[57,[[20,[31]]]],[57,[[20,[26]]]],[57,[[20,[26]]]],[16,10],[[]],[[]],[57,[[20,[42]]]],[57,[[20,[42]]]],[57,[[20,[42]]]],[57,[[20,[42]]]],[17,57],[[16,14],10],[57,[[20,[42]]]],[57,[[20,[42]]]],[57,[[20,[26]]]],[57,[[20,[31]]]],[57,[[20,[42]]]],[57,[[20,[26]]]],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[57,3],[[16,14],10],[57,[[20,[26]]]],[57,[[20,[26]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[58,[[20,[45]]]],[59,[[20,[26]]]],[[[51,[[0,[47,48]]]]]],[59,[[20,[42]]]],[59,[[20,[42]]]],[59,[[20,[43]]]],[59,[[20,[42]]]],[59,[[20,[42]]]],[[60,60],6],0,[[60,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[59,46],[[[51,[[0,[47,48]]]]],46],[[[51,[[0,[47,48]]]]],61],[[]],[[]],[[]],[[]],[[]],[[]],0,[59,[[20,[31]]]],[25,[[51,[[0,[47,48]]]]]],[17,59],[17,58],[17,62],0,[59,[[20,[31]]]],0,[59,[[20,[46]]]],[59,[[20,[46]]]],[59,[[20,[46]]]],[59,[[20,[31]]]],[59,[[20,[31]]]],[59,[[20,[31]]]],[59,[[20,[31]]]],[[[51,[[0,[47,48]]]]],31],[59,[[20,[31]]]],[[[51,[[0,[47,48]]]],52]],[[[51,[[0,[47,48]]]],31]],[[59,46]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[25,4],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[62,[[20,[31]]]],[59,3],[58,3],[62,3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],63],0,[[63,63],63],[[63,63]],[[63,63],63],[[63,63]],[63,31],[[63,63],63],[[63,63]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[63,63],[[]],[[63,63],5],[63,63],[[63,63],6],0,[[63,63],63],[[],63],[[63,63],6],[[63,36]],[64,2],0,[[63,7],8],[[63,7],8],[[63,7],8],[[63,7],8],[[63,7],8],[[65,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,[[4,[63]]]],[31,63],[31,63],[36,63],[63],0,[66,31],[[67,2]],[[68,2]],[[66,2]],[[67,2]],[[68,2]],[[66,2]],[67,69],[70,71],[66,68],[[63,63]],[[63,63],63],[[63,63],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[63,6],[63,6],0,[2,67],[[2,6],70],[2,66],[63,63],[[63,63],[[4,[5]]]],[64],[64],[[63,63]],[[63,63,6]],[52,64],[52,31],[[63,63],63],[[63,63]],[[70,31]],[[63,63],63],[[]],[[63,63]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[63,63],63],0,0,0,0,0,[[]],[[]],[[]],[[]],[2,[[10,[15]]]],[[]],[[2,42]],[[],10],[[],10],[[],11],0,[[]],[[]],[[]],[[]],[[]],[[],72],[[],10],[[],10],[[],11],[[72,73],8],[2,[[10,[15]]]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[74,74],[[]],[[],75],[[],74],[76],[[75,75],6],0,[[75,7],8],[[74,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[],76],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],[[79,[[0,[77,78]]]]]],[[[53,[77]]]],[[[53,[77]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[79,[77]]],77],[[[79,[77]]],[[53,[77]]]],[[],79],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[[79,[77]]],[[10,[[53,[77]],80]]]],[[],11],[[],11],[[],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],81],[[],82],[[],83],[82],[83],[[81,81],81],[[82,82],82],[[83,83],83],[[81,81]],[[82,82]],[[83,83]],[[81,81],81],[[82,82],82],[[83,83],83],[[81,81]],[[82,82]],[[83,83]],[81,46],[82,46],[83,46],[[81,81],81],[[82,82],82],[[83,83],83],[[81,81]],[[82,82]],[[83,83]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[84,84],[81,81],[82,82],[83,83],[[]],[[]],[[]],[[]],[[81,81],5],[[82,82],5],[[83,83],5],[81,81],[82,82],[83,83],[[81,81],6],[[82,82],6],[[83,83],6],[[],82],[[],83],[[81,81],81],[[82,82],82],[[83,83],83],[[],81],[[],82],[[],83],[[84,84],6],[[81,81],6],[[82,82],6],[[83,83],6],[[81,36]],[[82,36]],[[83,36]],[[84,7],8],[[81,7],8],[[81,7],8],[[81,7],8],[[81,7],8],[[81,7],8],[[82,7],8],[[82,7],8],[[82,7],8],[[82,7],8],[[82,7],8],[[83,7],8],[[83,7],8],[[83,7],8],[[83,7],8],[[83,7],8],[[]],[[]],[[]],[[]],[46,[[4,[81]]]],[46,[[4,[82]]]],[46,[[4,[83]]]],[46,81],[46,82],[46,83],[46,81],[46,82],[46,83],[36,81],[36,82],[36,83],[81],[82],[83],[[81,81]],[[82,82]],[[83,83]],0,[[81,81],81],[[82,82],82],[[83,83],83],[[81,81],6],[[82,82],6],[[83,83],6],[[]],[[]],[[]],[[]],0,[81,6],[82,6],[83,6],[81,6],[82,6],[83,6],0,[81,81],[82,82],[83,83],[[81,81],[[4,[5]]]],[[82,82],[[4,[5]]]],[[83,83],[[4,[5]]]],0,[[],81],[[81,81]],[[82,82]],[[83,83]],0,[[81,81,6]],[[82,82,6]],[[83,83,6]],[[81,81],81],[[82,82],82],[[83,83],83],[[81,81]],[[82,82]],[[83,83]],[[81,81],81],[[82,82],82],[[83,83],83],0,[[]],[[]],[[]],[[]],[[81,81]],[[82,82]],[[83,83]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,[[],11],[[],11],[[],11],[[],11],[[81,81],81],[[82,82],82],[[83,83],83],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],85],[[85,85],85],[[85,85]],[[85,85],85],[[85,85]],[85,46],[[85,85],85],[[85,85]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[86,86],[87,87],[[[88,[19]]],[[88,[19]]]],[85,85],[[]],[[]],[[]],[[]],[[85,85],5],[85,85],[[85,85],6],0,[[85,85],85],[[],88],[[],85],[[86,86],6],[[85,85],6],[[85,36]],[[86,7],8],[[87,7],[[10,[89]]]],[[85,7],8],[[85,7],8],[[85,7],8],[[85,7],8],[[85,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[46,[[4,[85]]]],[46,85],[46,85],[36,85],[85],[[85,85]],[[85,85],85],[[85,85],6],[[]],[[]],[[]],[[]],[[]],[[]],[86,2],[85,6],[85,6],[2,[[4,[86]]]],[85,85],[[85,85],[[4,[5]]]],[[85,85]],0,0,0,[[[88,[90]],91,92,90]],[[[88,[93]],91,92,93]],[[[88,[94]],91,92,94]],[[[88,[95]],91,92,95]],[[[88,[96]],91,92,96]],[[[88,[97]],91,92,97]],[[85,85,6]],0,[[85,85],85],[[85,85]],[[85,85],85],[[]],[[]],[[]],[[]],[[85,85]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[85,85],85],[[],2],[[],2],0,[[]],[[]],[[]],[[]],[[],46],[[],10],[[],10],[[],11],[46],0,[[]],[[]],[41,41],[[]],[[]],[[]],[31,41],[41,31],[41,42],[[41,42,42]],[41,26],[[]],[[],10],[[],10],[[],11],[[41,31]],[[41,42]],[[41,26]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],98],[[],99],[[98,98],98],[[99,99],99],[[98,98]],[[99,99]],[[98,98],98],[[99,99],99],[[98,98]],[[99,99]],[98,46],[99,46],[[98,98],98],[[99,99],99],[[98,98]],[[99,99]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[98,98],[100,100],[99,99],[101,101],[91,91],[102,102],[[]],[[]],[[]],[[]],[[]],[[]],[[98,98],5],[[99,99],5],[98,98],[99,99],[[98,98],6],[[99,99],6],[[],103],[[98,98],98],[[99,99],99],[91,84],[[],98],[[],99],[[98,98],6],[[99,99],6],[[91,91],6],[[98,36]],[[99,36]],[[98,7],8],[[98,7],8],[[98,7],8],[[98,7],8],[[98,7],8],[[99,7],8],[[99,7],8],[[99,7],8],[[99,7],8],[[99,7],8],[[91,7],[[10,[89]]]],[[102,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[46,[[4,[98]]]],[46,[[4,[99]]]],[46,98],[46,99],[46,98],[46,99],[36,98],[36,99],[98],[99],[91,31],[[98,98]],[[99,99]],[[98,98],98],[[99,99],99],[[98,98],6],[[99,99],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[102,91],[98,6],[99,6],[98,6],[99,6],[[104,91]],[105],[[46,46,98,84],100],[[46,46,99,84],101],[[31,84],91],[98,98],[99,99],[[],100],[[],101],[[98,98],[[4,[5]]]],[[99,99],[[4,[5]]]],[[98,98]],[[99,99]],[[98,98,6]],[[99,99,6]],[[98,98],98],[[99,99],99],[[98,98]],[[99,99]],[[98,98],98],[[99,99],99],[[]],[[]],[[]],[[]],[[]],[[]],[[98,98]],[[99,99]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[98,98],98],[[99,99],99],[2],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],106],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],0,0,[[]],[106],[107],0,[[],107],0,0,0,0,0,0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[],11],[[],11],0,0,0,0,[[]],[[]],[[],103],[[103,101]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],10],[[],10],[[],11]],"p":[[3,"Pa"],[15,"usize"],[3,"Va"],[4,"Option"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"Region"],[3,"Regions"],[8,"Iterator"],[3,"DeviceError"],[3,"VirtIoBlock"],[3,"MmioArea"],[3,"ActiveMmioArea"],[8,"Clone"],[3,"MmioAccessor"],[3,"MmioArrayAccessor"],[8,"Debug"],[3,"Range"],[8,"Copy"],[3,"PciHeader"],[15,"u8"],[3,"PciAccessor"],[3,"MemorySpace"],[3,"Status"],[4,"Bar"],[15,"u16"],[4,"PciDeviceHeader"],[4,"PciDeviceClass"],[3,"PciDevice"],[3,"DeviceVendor"],[8,"IntoIterator"],[3,"IoSpace"],[3,"MessageControl"],[3,"PciIterator"],[3,"Capability"],[3,"Pio"],[15,"u32"],[3,"Status"],[3,"VirtIoFeaturesCommon"],[3,"IsrCfg"],[15,"u64"],[8,"Send"],[8,"Sync"],[3,"VirtIoDevice"],[4,"DeviceType"],[3,"PciTransport"],[3,"VirtQueue"],[3,"SpinLockGuard"],[3,"QueueScope"],[3,"QueueBuilder"],[3,"TryFromPrimitiveError"],[3,"VirtIoBlockCfg"],[3,"VirtIoIsrCfg"],[3,"VirtIoPciCommonCfg"],[4,"PciCapabilityType"],[4,"Kick"],[3,"VirtIoNotifyCfg"],[3,"VirtqDescFlags"],[3,"VirtqSglBuilder"],[3,"VirtqDesc"],[3,"VirtqUsedContainer"],[3,"VirtqDescContainer"],[3,"VirtqUsed"],[3,"VirtqDescs"],[3,"VirtqAvailContainer"],[3,"VirtqAvail"],[3,"Serial"],[15,"str"],[3,"GeneralPurposeRegisters"],[4,"InterruptState"],[3,"InterruptGuard"],[8,"Sized"],[8,"Default"],[3,"SpinLock"],[4,"TryLockError"],[3,"Rflags"],[3,"Cr0"],[3,"Cr4"],[4,"PrivilegeLevel"],[3,"PFErrorCode"],[4,"ExceptionVector"],[3,"InterruptStackFrame"],[3,"InterruptGateDescriptor"],[3,"Error"],[6,"HandlerAlignCheck"],[3,"SegmentSelector"],[4,"ExceptionType"],[6,"AbortMachineCheck"],[6,"HandlerPageFault"],[6,"HandlerWithSegmentSelectorErrorCode"],[6,"Handler"],[6,"AbortDoubleFault"],[3,"SegmentAccess"],[3,"SegmentAccess64"],[3,"SegmentDescriptor"],[3,"SegmentDescriptor64"],[4,"Segment"],[3,"TaskStateSegment"],[4,"SegmentRegister"],[3,"SegmentTable"],[3,"InterruptDescriptorTable"],[3,"SystemTableRegister"],[8,"VirtIoDeviceFeature"],[3,"NotifyCfgTriple"],[3,"VirtqUsedElem"],[3,"_8259A"],[3,"MustbeZero"],[3,"Msr"],[3,"LocalDescriptorTable"],[3,"GlobalDescriptorTable"]]},\
"addr2line":{"doc":"This crate provides a cross-platform library and binary …","t":[3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,5,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Context","Frame","FrameIter","FunctionName","Location","LocationRangeIter","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","column","demangle","demangle","demangle_auto","dw_die_offset","dwarf","file","find_dwarf_unit","find_frames","find_location","find_location_range","from","from","from","from","from","from","from_dwarf","from_sections","function","into","into","into","into","into","into","into_iter","language","line","location","name","next","next","raw_name","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["addr2line","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The state necessary to perform address to line translation.","A function frame.","An iterator over function frames.","A function name.","A source location.","Iterator over <code>Location</code>s in a range of addresses, returned …","","","","","","","","","","","","","The column number.","Demangle a symbol name using the demangling scheme for the …","The name of this function after demangling (if applicable).","Apply ‘best effort’ demangling of a symbol name.","The DWARF unit offset corresponding to the DIE of the …","The dwarf sections associated with this <code>Context</code>.","The file name.","Find the DWARF unit corresponding to the given virtual …","Return an iterator for the function frames corresponding …","Find the source file and line corresponding to the given …","Return source file and lines for a range of addresses. For …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Construct a new <code>Context</code> from an existing <code>gimli::Dwarf</code> …","Construct a new <code>Context</code> from DWARF sections.","The name of the function.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The language of the compilation unit containing this …","The line number.","The source location corresponding to this frame.","The name of the function.","","Advances the iterator and returns the next frame.","The raw name of this function before demangling.","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,10,16,14,27,6,15,10,16,14,27,6,15,15,0,6,0,27,10,15,10,10,10,10,10,16,14,27,6,15,10,10,27,10,16,14,27,6,15,16,6,15,27,6,16,14,6,10,16,14,27,6,15,10,16,14,27,6,15,10,16,14,27,6,15],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[1,2],[[4,[3]]]],[[[6,[5]]],[[9,[[7,[1]],8]]]],[[[7,[1]],[4,[2]]],[[7,[1]]]],0,[[[10,[5]]],11],0,[[[10,[5]],12],[[4,[13]]]],[[[10,[5]],12],[[9,[[14,[5]],8]]]],[[[10,[5]],12],[[9,[[4,[15]],8]]]],[[[10,[5]],12,12],[[9,[[16,[5]],8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[5]]],[[9,[[10,[5]],8]]]],[[[17,[5]],[18,[5]],[19,[5]],[20,[5]],[21,[5]],[22,[5]],[23,[5]],[24,[5]],[25,[5]],[26,[5]],5],[[9,[[10,[5]],8]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[16,4],[14,[[9,[[4,[27]],8]]]],[[[6,[5]]],[[9,[[7,[1]],8]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28]],"p":[[15,"str"],[3,"DwLang"],[3,"String"],[4,"Option"],[8,"Reader"],[3,"FunctionName"],[4,"Cow"],[4,"Error"],[4,"Result"],[3,"Context"],[3,"Dwarf"],[15,"u64"],[3,"Unit"],[3,"FrameIter"],[3,"Location"],[3,"LocationRangeIter"],[3,"DebugAbbrev"],[3,"DebugAddr"],[3,"DebugAranges"],[3,"DebugInfo"],[3,"DebugLine"],[3,"DebugLineStr"],[3,"DebugRanges"],[3,"DebugRngLists"],[3,"DebugStr"],[3,"DebugStrOffsets"],[3,"Frame"],[3,"TypeId"]]},\
"ahash":{"doc":"AHash is a hashing algorithm is intended to be a high …","t":[3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AHasher","CallHasher","RandomState","borrow","borrow","borrow_mut","borrow_mut","build_hasher","clone","clone","clone_into","clone_into","default","default","finish","fmt","fmt","from","from","generate_with","get_hash","into","into","new","new_with_keys","set_random_source","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_seed","with_seeds","write","write_u128","write_u16","write_u32","write_u64","write_u8","write_usize"],"q":["ahash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A <code>Hasher</code> for hashing an arbitrary stream of bytes.","Provides a way to get an optimized hasher for a given data …","Provides a Hasher factory. This is typically used (e.g. by …","","","","","Constructs a new AHasher with keys based on this …","","","","","Constructs a new AHasher with fixed keys. If <code>std</code> is …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Allows for supplying seeds, but each time it is called the …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Use randomly generated keys","Creates a new hasher keyed to the provided key.","Provides an optional way to manually supply a source of …","","","","","","","","","Allows for explicitly setting a seed to used.","Allows for explicitly setting the seeds to used.","","","","","","",""],"i":[0,0,0,2,1,2,1,1,2,1,2,1,2,1,2,2,1,2,1,1,16,2,1,1,2,1,2,1,2,1,2,1,2,1,1,1,2,2,2,2,2,2,2],"f":[0,0,0,[[]],[[]],[[]],[[]],[1,2],[2,2],[1,1],[[]],[[]],[[],2],[[],1],[2,3],[[2,4],5],[[1,4],5],[[]],[[]],[[3,3,3,3],1],[[],3],[[]],[[]],[[],1],[[6,6],2],[[[0,[0,7,8]]],[[10,[9]]]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[12,1],[[3,3,3,3],1],[2],[[2,6]],[[2,13]],[[2,14]],[[2,3]],[[2,15]],[[2,12]]],"p":[[3,"RandomState"],[3,"AHasher"],[15,"u64"],[3,"Formatter"],[6,"Result"],[15,"u128"],[8,"Send"],[8,"Sync"],[15,"bool"],[4,"Result"],[3,"TypeId"],[15,"usize"],[15,"u16"],[15,"u32"],[15,"u8"],[8,"CallHasher"]]},\
"bitflags":{"doc":"A typesafe bitmask flag generator useful for sets of …","t":[14],"n":["bitflags"],"q":["bitflags"],"d":["The macro used to generate the flag structures."],"i":[0],"f":[0],"p":[]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":[14],"n":["cfg_if"],"q":["cfg_if"],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":[0],"p":[]},\
"crossbeam_queue":{"doc":"Concurrent queues.","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ArrayQueue","SegQueue","borrow","borrow","borrow_mut","borrow_mut","capacity","default","drop","drop","fmt","fmt","force_push","from","from","into","into","into_iter","into_iter","is_empty","is_empty","is_full","len","len","new","new","pop","pop","push","push","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["crossbeam_queue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A bounded multi-producer multi-consumer queue.","An unbounded multi-producer multi-consumer queue.","","","","","Returns the capacity of the queue.","","","","","","Pushes an element into the queue, replacing the oldest …","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if the queue is empty.","Returns <code>true</code> if the queue is empty.","Returns <code>true</code> if the queue is full.","Returns the number of elements in the queue.","Returns the number of elements in the queue.","Creates a new bounded queue with the given capacity.","Creates a new unbounded queue.","Attempts to pop an element from the queue.","Pops an element from the queue.","Attempts to push an element into the queue.","Pushes an element into the queue.","","","","","",""],"i":[0,0,1,3,1,3,1,3,1,3,1,3,1,1,3,1,3,1,3,1,3,1,1,3,1,3,1,3,1,3,1,3,1,3,1,3],"f":[0,0,[[]],[[]],[[]],[[]],[1,2],[[],3],[1],[3],[[1,4],5],[[3,4],5],[1,6],[[]],[[]],[[]],[[]],[1],[3],[1,7],[3,7],[1,7],[1,2],[3,2],[2,1],[[],3],[1,6],[3,6],[1,8],[3],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9]],"p":[[3,"ArrayQueue"],[15,"usize"],[3,"SegQueue"],[3,"Formatter"],[6,"Result"],[4,"Option"],[15,"bool"],[4,"Result"],[3,"TypeId"]]},\
"crossbeam_utils":{"doc":"Miscellaneous tools for concurrent programming.","t":[3,3,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,16,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11],"n":["Backoff","CachePadded","atomic","borrow","borrow","borrow_mut","borrow_mut","clone","default","default","deref","deref_mut","eq","fmt","fmt","from","from","from","from","hash","into","into","into_inner","is_completed","new","new","reset","snooze","spin","try_from","try_from","try_into","try_into","type_id","type_id","AtomicCell","AtomicConsume","Val","as_ptr","borrow","borrow_mut","compare_and_swap","compare_exchange","default","drop","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_add","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_and","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_max","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_min","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_nand","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_or","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_sub","fetch_update","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fetch_xor","fmt","from","from","from","into","into_inner","is_lock_free","load","load_consume","new","store","swap","take","try_from","try_into","type_id"],"q":["crossbeam_utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crossbeam_utils::atomic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Performs exponential backoff in spin loops.","Pads and aligns a value to the length of a cache line.","Atomic types.","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the inner value.","Returns <code>true</code> if exponential backoff has completed and …","Creates a new <code>Backoff</code>.","Pads and aligns a value to the length of a cache line.","Resets the <code>Backoff</code>.","Backs off in a blocking loop.","Backs off in a lock-free loop.","","","","","","","A thread-safe mutable memory location.","Trait which allows reading from primitive atomic types …","Type returned by <code>load_consume</code>.","Returns a raw pointer to the underlying data in this …","","","If the current value equals <code>current</code>, stores <code>new</code> into the …","If the current value equals <code>current</code>, stores <code>new</code> into the …","","","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Increments the current value by <code>val</code> and returns the …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies logical “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Applies bitwise “and” to the current value and returns …","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the maximum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Compares and sets the minimum of the current value and <code>val</code>,","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies logical “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “nand” to the current value and …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies logical “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Applies bitwise “or” to the current value and returns …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Decrements the current value by <code>val</code> and returns the …","Fetches the value, and applies a function to it that …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies logical “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","Applies bitwise “xor” to the current value and returns …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Consumes the atomic and returns the contained value.","Returns <code>true</code> if operations on values of this type are …","Loads a value from the atomic cell.","Loads a value from the atomic using a “consume” memory …","Creates a new atomic cell initialized with <code>val</code>.","Stores <code>val</code> into the atomic cell.","Stores <code>val</code> into the atomic cell and returns the previous …","Takes the value of the atomic cell, leaving …","","",""],"i":[0,0,0,3,2,3,2,2,3,2,2,2,2,3,2,3,2,2,2,2,3,2,2,3,3,2,3,3,3,3,2,3,2,3,2,0,0,29,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,29,14,14,14,14,14,14,14],"f":[0,0,0,[[]],[[]],[[]],[[]],[[[2,[1]]],[[2,[1]]]],[[],3],[[],[[2,[4]]]],[2],[2],[[[2,[5]],2],6],[[3,7],8],[[[2,[9]],7],8],[[]],[[],2],[10],[[]],[[[2,[11]]]],[[]],[[]],[2],[3,6],[[],3],[[],2],[3],[3],[3],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],0,0,0,[14],[[]],[[]],[[[14,[[0,[15,16]]]],[0,[15,16]],[0,[15,16]]],[[0,[15,16]]]],[[[14,[[0,[15,16]]]],[0,[15,16]],[0,[15,16]]],[[12,[[0,[15,16]],[0,[15,16]]]]]],[[],[[14,[4]]]],[14],[[[14,[17]],17],17],[[[14,[18]],18],18],[[[14,[19]],19],19],[[[14,[20]],20],20],[[[14,[21]],21],21],[[[14,[22]],22],22],[[[14,[23]],23],23],[[[14,[24]],24],24],[[[14,[25]],25],25],[[[14,[26]],26],26],[[[14,[27]],27],27],[[[14,[28]],28],28],[[[14,[28]],28],28],[[[14,[24]],24],24],[[[14,[19]],19],19],[[[14,[6]],6],6],[[[14,[27]],27],27],[[[14,[18]],18],18],[[[14,[21]],21],21],[[[14,[25]],25],25],[[[14,[22]],22],22],[[[14,[17]],17],17],[[[14,[20]],20],20],[[[14,[26]],26],26],[[[14,[23]],23],23],[[[14,[24]],24],24],[[[14,[19]],19],19],[[[14,[26]],26],26],[[[14,[22]],22],22],[[[14,[25]],25],25],[[[14,[20]],20],20],[[[14,[23]],23],23],[[[14,[18]],18],18],[[[14,[27]],27],27],[[[14,[17]],17],17],[[[14,[21]],21],21],[[[14,[28]],28],28],[[[14,[22]],22],22],[[[14,[25]],25],25],[[[14,[19]],19],19],[[[14,[24]],24],24],[[[14,[28]],28],28],[[[14,[21]],21],21],[[[14,[23]],23],23],[[[14,[17]],17],17],[[[14,[20]],20],20],[[[14,[27]],27],27],[[[14,[18]],18],18],[[[14,[26]],26],26],[[[14,[17]],17],17],[[[14,[28]],28],28],[[[14,[23]],23],23],[[[14,[26]],26],26],[[[14,[20]],20],20],[[[14,[24]],24],24],[[[14,[18]],18],18],[[[14,[25]],25],25],[[[14,[22]],22],22],[[[14,[6]],6],6],[[[14,[21]],21],21],[[[14,[27]],27],27],[[[14,[19]],19],19],[[[14,[28]],28],28],[[[14,[23]],23],23],[[[14,[19]],19],19],[[[14,[6]],6],6],[[[14,[27]],27],27],[[[14,[24]],24],24],[[[14,[26]],26],26],[[[14,[17]],17],17],[[[14,[18]],18],18],[[[14,[25]],25],25],[[[14,[22]],22],22],[[[14,[20]],20],20],[[[14,[21]],21],21],[[[14,[20]],20],20],[[[14,[25]],25],25],[[[14,[27]],27],27],[[[14,[23]],23],23],[[[14,[18]],18],18],[[[14,[26]],26],26],[[[14,[19]],19],19],[[[14,[24]],24],24],[[[14,[17]],17],17],[[[14,[21]],21],21],[[[14,[22]],22],22],[[[14,[28]],28],28],[[[14,[[0,[15,16]]]]],[[12,[[0,[15,16]],[0,[15,16]]]]]],[[[14,[18]],18],18],[[[14,[24]],24],24],[[[14,[6]],6],6],[[[14,[19]],19],19],[[[14,[27]],27],27],[[[14,[17]],17],17],[[[14,[21]],21],21],[[[14,[25]],25],25],[[[14,[20]],20],20],[[[14,[23]],23],23],[[[14,[28]],28],28],[[[14,[22]],22],22],[[[14,[26]],26],26],[[[14,[[0,[15,9]]]],7],8],[[],14],[[]],[10],[[]],[14],[[],6],[[[14,[15]]],15],[[]],[[],14],[14],[14],[[[14,[4]]],4],[[],12],[[],12],[[],13]],"p":[[8,"Clone"],[3,"CachePadded"],[3,"Backoff"],[8,"Default"],[8,"PartialEq"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[15,"never"],[8,"Hash"],[4,"Result"],[3,"TypeId"],[3,"AtomicCell"],[8,"Copy"],[8,"Eq"],[15,"u16"],[15,"i64"],[15,"u64"],[15,"i32"],[15,"i128"],[15,"u32"],[15,"u128"],[15,"isize"],[15,"usize"],[15,"i8"],[15,"u8"],[15,"i16"],[8,"AtomicConsume"]]},\
"gimli":{"doc":"<code>gimli</code> is a library for reading and writing the DWARF …","tn":["A0","A0","A1","A1","A2","A2","A3","A3","A4","A4","A5","A5","A6","A6","A7","A7","AArch64","ACC0","ACC1","ACC2","ACC3","ACC4","ACC5","ACC6","ACC7","Arm","Big","BigEndian","CS","CS","CloneStableDeref","D0","D1","D10","D11","D12","D13","D14","D15","D16","D17","D18","D19","D2","D20","D21","D22","D23","D24","D25","D26","D27","D28","D29","D3","D30","D31","D4","D5","D6","D7","D8","D9","DS","DS","DebugAbbrev","DebugAbbrevOffset","DebugAddr","DebugAddrBase","DebugAddrIndex","DebugAranges","DebugArangesOffset","DebugCuIndex","DebugFrame","DebugFrameOffset","DebugInfo","DebugInfoOffset","DebugInfoOffset","DebugLine","DebugLineOffset","DebugLineStr","DebugLineStrOffset","DebugLoc","DebugLocLists","DebugLocListsBase","DebugLocListsIndex","DebugMacinfo","DebugMacinfoOffset","DebugMacro","DebugMacroOffset","DebugPubNames","DebugPubTypes","DebugRanges","DebugRngLists","DebugRngListsBase","DebugRngListsIndex","DebugStr","DebugStrOffset","DebugStrOffsets","DebugStrOffsetsBase","DebugStrOffsetsIndex","DebugTuIndex","DebugTypeSignature","DebugTypes","DebugTypesOffset","DebugTypesOffset","Dwarf32","Dwarf64","DwarfFileType","Dwo","DwoId","EAX","EBP","EBX","ECX","EDI","EDX","ES","ES","ESI","ESP","EhFrame","EhFrameHdr","EhFrameOffset","Encoding","Endianity","F0","F0","F1","F1","F10","F10","F11","F11","F12","F12","F13","F13","F14","F14","F15","F15","F16","F16","F17","F17","F18","F18","F19","F19","F2","F2","F20","F20","F21","F21","F22","F22","F23","F23","F24","F24","F25","F25","F26","F26","F27","F27","F28","F28","F29","F29","F3","F3","F30","F30","F31","F31","F4","F4","F5","F5","F6","F6","F7","F7","F8","F8","F9","F9","FA0","FA0","FA1","FA1","FA2","FA2","FA3","FA3","FA4","FA4","FA5","FA5","FA6","FA6","FA7","FA7","FCC0","FCC1","FCC2","FCC3","FCC4","FCC5","FCC6","FCC7","FCW","FP","FS","FS","FS0","FS0","FS1","FS1","FS10","FS11","FS2","FS2","FS3","FS3","FS4","FS4","FS5","FS5","FS6","FS6","FS7","FS7","FS8","FS9","FSW","FS_BASE","FS_BASE","FT0","FT0","FT1","FT1","FT10","FT10","FT11","FT11","FT12","FT13","FT14","FT15","FT2","FT2","FT3","FT3","FT4","FT4","FT5","FT5","FT6","FT6","FT7","FT7","FT8","FT8","FT9","FT9","Format","GP","GS","GS","GS_BASE","GS_BASE","K0","K1","K2","K3","K4","K5","K6","K7","LDTR","LDTR","LR","LineEncoding","Little","LittleEndian","LocationListsOffset","LoongArch","MM0","MM0","MM1","MM1","MM2","MM2","MM3","MM3","MM4","MM4","MM5","MM5","MM6","MM6","MM7","MM7","MXCSR","MXCSR","Main","NativeEndian","PC","R0","R0","R1","R1","R10","R10","R10","R10_FIQ","R10_USR","R11","R11","R11","R11_FIQ","R11_USR","R12","R12","R12","R12_FIQ","R12_USR","R13","R13","R13","R13_ABT","R13_FIQ","R13_IRQ","R13_SVC","R13_UND","R13_USR","R14","R14","R14","R14_ABT","R14_FIQ","R14_IRQ","R14_SVC","R14_UND","R14_USR","R15","R15","R15","R16","R17","R18","R19","R2","R2","R20","R21","R22","R23","R24","R25","R26","R27","R28","R29","R3","R3","R30","R31","R4","R4","R5","R5","R6","R6","R7","R7","R8","R8","R8","R8_FIQ","R8_USR","R9","R9","R9","R9_FIQ","R9_USR","RA","RA","RA","RA","RAX","RBP","RBX","RCX","RDI","RDX","RFLAGS","RSI","RSP","RangeListsOffset","RawRangeListsOffset","Register","RiscV","RunTimeEndian","S0","S0","S0","S1","S1","S1","S10","S10","S11","S11","S12","S13","S14","S15","S16","S17","S18","S19","S2","S2","S2","S20","S21","S22","S23","S24","S25","S26","S27","S28","S29","S3","S3","S3","S30","S31","S4","S4","S4","S5","S5","S5","S6","S6","S6","S7","S7","S7","S8","S8","S8","S9","S9","SP","SP","SP","SP","SPSR","SPSR_ABT","SPSR_FIQ","SPSR_IRQ","SPSR_SVC","SPSR_UND","SS","SS","ST0","ST0","ST1","ST1","ST2","ST2","ST3","ST3","ST4","ST4","ST5","ST5","ST6","ST6","ST7","ST7","SectionId","StableDeref","T0","T0","T1","T1","T2","T2","T3","T3","T4","T4","T5","T5","T6","T6","T7","T8","TP","TP","TR","TR","UnitSectionOffset","V0","V1","V10","V11","V12","V13","V14","V15","V16","V17","V18","V19","V2","V20","V21","V22","V23","V24","V25","V26","V27","V28","V29","V3","V30","V31","V4","V5","V6","V7","V8","V9","WC0","WC1","WC2","WC3","WC4","WC5","WC6","WC7","WCGR0","WCGR1","WCGR2","WCGR3","WCGR4","WCGR5","WCGR6","WCGR7","WR0","WR1","WR10","WR11","WR12","WR13","WR14","WR15","WR2","WR3","WR4","WR5","WR6","WR7","WR8","WR9","X0","X0","X1","X1","X10","X10","X11","X11","X12","X12","X13","X13","X14","X14","X15","X15","X16","X16","X17","X17","X18","X18","X19","X19","X2","X2","X20","X20","X21","X21","X22","X22","X23","X23","X24","X24","X25","X25","X26","X26","X27","X27","X28","X28","X29","X29","X3","X3","X30","X30","X31","X4","X4","X5","X5","X6","X6","X7","X7","X8","X8","X86","X86_64","X9","X9","XMM0","XMM0","XMM1","XMM1","XMM10","XMM11","XMM12","XMM13","XMM14","XMM15","XMM16","XMM17","XMM18","XMM19","XMM2","XMM2","XMM20","XMM21","XMM22","XMM23","XMM24","XMM25","XMM26","XMM27","XMM28","XMM29","XMM3","XMM3","XMM30","XMM31","XMM4","XMM4","XMM5","XMM5","XMM6","XMM6","XMM7","XMM7","XMM8","XMM9","ZERO","ZERO","address_size","as_debug_info_offset","as_debug_types_offset","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","constants","default","default","default","default","default","default_for_encoding_and_file","default_for_encoding_and_file","default_for_encoding_and_file","default_is_stmt","dwo_name","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","initial_length_size","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_big_endian","is_big_endian","is_big_endian","is_big_endian","is_little_endian","is_little_endian","leb128","line_base","line_range","maximum_operations_per_instruction","minimum_instruction_length","name","name_to_register","name_to_register","name_to_register","name_to_register","name_to_register","name_to_register","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","read","read_f32","read_f32","read_f64","read_f64","read_i16","read_i16","read_i32","read_i32","read_i64","read_i64","read_u16","read_u16","read_u32","read_u32","read_u64","read_u64","read_uint","read_uint","register_name","register_name","register_name","register_name","register_name","register_name","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_unit_offset","to_unit_offset","to_unit_offset","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","word_size","write_u16","write_u16","write_u32","write_u32","write_u64","write_u64","xcoff_name","DW_ACCESS_private","DW_ACCESS_protected","DW_ACCESS_public","DW_ADDR_none","DW_ATE_ASCII","DW_ATE_UCS","DW_ATE_UTF","DW_ATE_address","DW_ATE_boolean","DW_ATE_complex_float","DW_ATE_decimal_float","DW_ATE_edited","DW_ATE_float","DW_ATE_hi_user","DW_ATE_imaginary_float","DW_ATE_lo_user","DW_ATE_numeric_string","DW_ATE_packed_decimal","DW_ATE_signed","DW_ATE_signed_char","DW_ATE_signed_fixed","DW_ATE_unsigned","DW_ATE_unsigned_char","DW_ATE_unsigned_fixed","DW_AT_ALTIUM_loclist","DW_AT_APPLE_block","DW_AT_APPLE_flags","DW_AT_APPLE_isa","DW_AT_APPLE_major_runtime_vers","DW_AT_APPLE_objc_complete_type","DW_AT_APPLE_omit_frame_ptr","DW_AT_APPLE_optimized","DW_AT_APPLE_property","DW_AT_APPLE_property_attribute","DW_AT_APPLE_property_getter","DW_AT_APPLE_property_name","DW_AT_APPLE_property_setter","DW_AT_APPLE_runtime_class","DW_AT_BORLAND_Delphi_ABI","DW_AT_BORLAND_Delphi_anonymous_method","DW_AT_BORLAND_Delphi_class","DW_AT_BORLAND_Delphi_constructor","DW_AT_BORLAND_Delphi_destructor","DW_AT_BORLAND_Delphi_frameptr","DW_AT_BORLAND_Delphi_interface","DW_AT_BORLAND_Delphi_metaclass","DW_AT_BORLAND_Delphi_record","DW_AT_BORLAND_Delphi_return","DW_AT_BORLAND_Delphi_unit","DW_AT_BORLAND_closure","DW_AT_BORLAND_property_default","DW_AT_BORLAND_property_implements","DW_AT_BORLAND_property_index","DW_AT_BORLAND_property_read","DW_AT_BORLAND_property_write","DW_AT_GNAT_descriptive_type","DW_AT_GNU_addr_base","DW_AT_GNU_all_call_sites","DW_AT_GNU_all_source_call_sites","DW_AT_GNU_all_tail_call_sites","DW_AT_GNU_bias","DW_AT_GNU_call_site_data_value","DW_AT_GNU_call_site_target","DW_AT_GNU_call_site_target_clobbered","DW_AT_GNU_call_site_value","DW_AT_GNU_denominator","DW_AT_GNU_discriminator","DW_AT_GNU_dwo_id","DW_AT_GNU_dwo_name","DW_AT_GNU_entry_view","DW_AT_GNU_exclusive_locks_required","DW_AT_GNU_guarded","DW_AT_GNU_guarded_by","DW_AT_GNU_locks_excluded","DW_AT_GNU_locviews","DW_AT_GNU_macros","DW_AT_GNU_numerator","DW_AT_GNU_odr_signature","DW_AT_GNU_pt_guarded","DW_AT_GNU_pt_guarded_by","DW_AT_GNU_pubnames","DW_AT_GNU_pubtypes","DW_AT_GNU_ranges_base","DW_AT_GNU_shared_locks_required","DW_AT_GNU_tail_call","DW_AT_GNU_template_name","DW_AT_GNU_vector","DW_AT_INTEL_other_endian","DW_AT_LLVM_config_macros","DW_AT_LLVM_include_path","DW_AT_LLVM_isysroot","DW_AT_MIPS_abstract_name","DW_AT_MIPS_allocatable_dopetype","DW_AT_MIPS_assumed_shape_dopetype","DW_AT_MIPS_assumed_size","DW_AT_MIPS_clone_origin","DW_AT_MIPS_epilog_begin","DW_AT_MIPS_fde","DW_AT_MIPS_has_inlines","DW_AT_MIPS_linkage_name","DW_AT_MIPS_loop_begin","DW_AT_MIPS_loop_unroll_factor","DW_AT_MIPS_ptr_dopetype","DW_AT_MIPS_software_pipeline_depth","DW_AT_MIPS_stride","DW_AT_MIPS_stride_byte","DW_AT_MIPS_stride_elem","DW_AT_MIPS_tail_loop_begin","DW_AT_PGI_lbase","DW_AT_PGI_lstride","DW_AT_PGI_soffset","DW_AT_SUN_alignment","DW_AT_SUN_amd64_parmdump","DW_AT_SUN_browser_file","DW_AT_SUN_c_vla","DW_AT_SUN_cf_kind","DW_AT_SUN_command_line","DW_AT_SUN_compile_options","DW_AT_SUN_count_guarantee","DW_AT_SUN_dtor_length","DW_AT_SUN_dtor_start","DW_AT_SUN_dtor_state_deltas","DW_AT_SUN_dtor_state_final","DW_AT_SUN_dtor_state_initial","DW_AT_SUN_f90_allocatable","DW_AT_SUN_f90_assumed_shape_array","DW_AT_SUN_f90_pointer","DW_AT_SUN_f90_use_only","DW_AT_SUN_fortran_based","DW_AT_SUN_fortran_main_alias","DW_AT_SUN_func_offset","DW_AT_SUN_func_offsets","DW_AT_SUN_hwcprof_signature","DW_AT_SUN_import_by_lname","DW_AT_SUN_import_by_name","DW_AT_SUN_is_omp_child_func","DW_AT_SUN_language","DW_AT_SUN_link_name","DW_AT_SUN_memop_signature","DW_AT_SUN_memop_type_ref","DW_AT_SUN_namelist_spec","DW_AT_SUN_obj_dir","DW_AT_SUN_obj_file","DW_AT_SUN_omp_child_func","DW_AT_SUN_omp_tpriv_addr","DW_AT_SUN_original_name","DW_AT_SUN_part_link_name","DW_AT_SUN_pass_by_ref","DW_AT_SUN_pass_with_const","DW_AT_SUN_profile_id","DW_AT_SUN_return_value_ptr","DW_AT_SUN_return_with_const","DW_AT_SUN_template","DW_AT_SUN_vbase","DW_AT_SUN_vtable","DW_AT_SUN_vtable_abi","DW_AT_SUN_vtable_index","DW_AT_abstract_origin","DW_AT_accessibility","DW_AT_addr_base","DW_AT_address_class","DW_AT_alignment","DW_AT_allocated","DW_AT_artificial","DW_AT_associated","DW_AT_base_types","DW_AT_binary_scale","DW_AT_bit_offset","DW_AT_bit_size","DW_AT_bit_stride","DW_AT_body_begin","DW_AT_body_end","DW_AT_byte_size","DW_AT_byte_stride","DW_AT_call_all_calls","DW_AT_call_all_source_calls","DW_AT_call_all_tail_calls","DW_AT_call_column","DW_AT_call_data_location","DW_AT_call_data_value","DW_AT_call_file","DW_AT_call_line","DW_AT_call_origin","DW_AT_call_parameter","DW_AT_call_pc","DW_AT_call_return_pc","DW_AT_call_tail_call","DW_AT_call_target","DW_AT_call_target_clobbered","DW_AT_call_value","DW_AT_calling_convention","DW_AT_common_reference","DW_AT_comp_dir","DW_AT_const_expr","DW_AT_const_value","DW_AT_containing_type","DW_AT_count","DW_AT_data_bit_offset","DW_AT_data_location","DW_AT_data_member_location","DW_AT_decimal_scale","DW_AT_decimal_sign","DW_AT_decl_column","DW_AT_decl_file","DW_AT_decl_line","DW_AT_declaration","DW_AT_default_value","DW_AT_defaulted","DW_AT_deleted","DW_AT_description","DW_AT_digit_count","DW_AT_discr","DW_AT_discr_list","DW_AT_discr_value","DW_AT_dwo_name","DW_AT_elemental","DW_AT_encoding","DW_AT_endianity","DW_AT_entry_pc","DW_AT_enum_class","DW_AT_explicit","DW_AT_export_symbols","DW_AT_extension","DW_AT_external","DW_AT_frame_base","DW_AT_friend","DW_AT_hi_user","DW_AT_high_pc","DW_AT_identifier_case","DW_AT_import","DW_AT_inline","DW_AT_is_optional","DW_AT_language","DW_AT_linkage_name","DW_AT_lo_user","DW_AT_location","DW_AT_loclists_base","DW_AT_low_pc","DW_AT_lower_bound","DW_AT_mac_info","DW_AT_macro_info","DW_AT_macros","DW_AT_main_subprogram","DW_AT_mutable","DW_AT_name","DW_AT_namelist_item","DW_AT_noreturn","DW_AT_null","DW_AT_object_pointer","DW_AT_ordering","DW_AT_picture_string","DW_AT_priority","DW_AT_producer","DW_AT_prototyped","DW_AT_pure","DW_AT_ranges","DW_AT_rank","DW_AT_recursive","DW_AT_reference","DW_AT_return_addr","DW_AT_rnglists_base","DW_AT_rvalue_reference","DW_AT_segment","DW_AT_sf_names","DW_AT_sibling","DW_AT_signature","DW_AT_small","DW_AT_specification","DW_AT_src_coords","DW_AT_src_info","DW_AT_start_scope","DW_AT_static_link","DW_AT_stmt_list","DW_AT_str_offsets_base","DW_AT_string_length","DW_AT_string_length_bit_size","DW_AT_string_length_byte_size","DW_AT_threads_scaled","DW_AT_trampoline","DW_AT_type","DW_AT_upc_threads_scaled","DW_AT_upper_bound","DW_AT_use_GNAT_descriptive_type","DW_AT_use_UTF8","DW_AT_use_location","DW_AT_variable_parameter","DW_AT_virtuality","DW_AT_visibility","DW_AT_vtable_elem_location","DW_CC_hi_user","DW_CC_lo_user","DW_CC_nocall","DW_CC_normal","DW_CC_pass_by_reference","DW_CC_pass_by_value","DW_CC_program","DW_CFA_GNU_args_size","DW_CFA_GNU_negative_offset_extended","DW_CFA_GNU_window_save","DW_CFA_MIPS_advance_loc8","DW_CFA_advance_loc","DW_CFA_advance_loc1","DW_CFA_advance_loc2","DW_CFA_advance_loc4","DW_CFA_def_cfa","DW_CFA_def_cfa_expression","DW_CFA_def_cfa_offset","DW_CFA_def_cfa_offset_sf","DW_CFA_def_cfa_register","DW_CFA_def_cfa_sf","DW_CFA_expression","DW_CFA_hi_user","DW_CFA_lo_user","DW_CFA_nop","DW_CFA_offset","DW_CFA_offset_extended","DW_CFA_offset_extended_sf","DW_CFA_register","DW_CFA_remember_state","DW_CFA_restore","DW_CFA_restore_extended","DW_CFA_restore_state","DW_CFA_same_value","DW_CFA_set_loc","DW_CFA_undefined","DW_CFA_val_expression","DW_CFA_val_offset","DW_CFA_val_offset_sf","DW_CHILDREN_no","DW_CHILDREN_yes","DW_DEFAULTED_in_class","DW_DEFAULTED_no","DW_DEFAULTED_out_of_class","DW_DSC_label","DW_DSC_range","DW_DS_leading_overpunch","DW_DS_leading_separate","DW_DS_trailing_overpunch","DW_DS_trailing_separate","DW_DS_unsigned","DW_EH_PE_absptr","DW_EH_PE_aligned","DW_EH_PE_datarel","DW_EH_PE_funcrel","DW_EH_PE_indirect","DW_EH_PE_omit","DW_EH_PE_pcrel","DW_EH_PE_sdata2","DW_EH_PE_sdata4","DW_EH_PE_sdata8","DW_EH_PE_sleb128","DW_EH_PE_textrel","DW_EH_PE_udata2","DW_EH_PE_udata4","DW_EH_PE_udata8","DW_EH_PE_uleb128","DW_END_big","DW_END_default","DW_END_hi_user","DW_END_little","DW_END_lo_user","DW_FORM_GNU_addr_index","DW_FORM_GNU_ref_alt","DW_FORM_GNU_str_index","DW_FORM_GNU_strp_alt","DW_FORM_addr","DW_FORM_addrx","DW_FORM_addrx1","DW_FORM_addrx2","DW_FORM_addrx3","DW_FORM_addrx4","DW_FORM_block","DW_FORM_block1","DW_FORM_block2","DW_FORM_block4","DW_FORM_data1","DW_FORM_data16","DW_FORM_data2","DW_FORM_data4","DW_FORM_data8","DW_FORM_exprloc","DW_FORM_flag","DW_FORM_flag_present","DW_FORM_implicit_const","DW_FORM_indirect","DW_FORM_line_strp","DW_FORM_loclistx","DW_FORM_null","DW_FORM_ref1","DW_FORM_ref2","DW_FORM_ref4","DW_FORM_ref8","DW_FORM_ref_addr","DW_FORM_ref_sig8","DW_FORM_ref_sup4","DW_FORM_ref_sup8","DW_FORM_ref_udata","DW_FORM_rnglistx","DW_FORM_sdata","DW_FORM_sec_offset","DW_FORM_string","DW_FORM_strp","DW_FORM_strp_sup","DW_FORM_strx","DW_FORM_strx1","DW_FORM_strx2","DW_FORM_strx3","DW_FORM_strx4","DW_FORM_udata","DW_IDX_compile_unit","DW_IDX_die_offset","DW_IDX_hi_user","DW_IDX_lo_user","DW_IDX_parent","DW_IDX_type_hash","DW_IDX_type_unit","DW_ID_case_insensitive","DW_ID_case_sensitive","DW_ID_down_case","DW_ID_up_case","DW_INL_declared_inlined","DW_INL_declared_not_inlined","DW_INL_inlined","DW_INL_not_inlined","DW_LANG_ALTIUM_Assembler","DW_LANG_Ada2005","DW_LANG_Ada2012","DW_LANG_Ada83","DW_LANG_Ada95","DW_LANG_BLISS","DW_LANG_BORLAND_Delphi","DW_LANG_C","DW_LANG_C11","DW_LANG_C17","DW_LANG_C89","DW_LANG_C99","DW_LANG_C_plus_plus","DW_LANG_C_plus_plus_03","DW_LANG_C_plus_plus_11","DW_LANG_C_plus_plus_14","DW_LANG_C_plus_plus_17","DW_LANG_C_plus_plus_20","DW_LANG_Cobol74","DW_LANG_Cobol85","DW_LANG_Crystal","DW_LANG_D","DW_LANG_Dylan","DW_LANG_Fortran03","DW_LANG_Fortran08","DW_LANG_Fortran18","DW_LANG_Fortran77","DW_LANG_Fortran90","DW_LANG_Fortran95","DW_LANG_GOOGLE_RenderScript","DW_LANG_Go","DW_LANG_Haskell","DW_LANG_Java","DW_LANG_Julia","DW_LANG_Kotlin","DW_LANG_Mips_Assembler","DW_LANG_Modula2","DW_LANG_Modula3","DW_LANG_OCaml","DW_LANG_ObjC","DW_LANG_ObjC_plus_plus","DW_LANG_OpenCL","DW_LANG_PLI","DW_LANG_Pascal83","DW_LANG_Python","DW_LANG_RenderScript","DW_LANG_Rust","DW_LANG_SUN_Assembler","DW_LANG_Swift","DW_LANG_UPC","DW_LANG_Zig","DW_LANG_hi_user","DW_LANG_lo_user","DW_LLE_GNU_view_pair","DW_LLE_base_address","DW_LLE_base_addressx","DW_LLE_default_location","DW_LLE_end_of_list","DW_LLE_offset_pair","DW_LLE_start_end","DW_LLE_start_length","DW_LLE_startx_endx","DW_LLE_startx_length","DW_LNCT_MD5","DW_LNCT_directory_index","DW_LNCT_hi_user","DW_LNCT_lo_user","DW_LNCT_path","DW_LNCT_size","DW_LNCT_timestamp","DW_LNE_define_file","DW_LNE_end_sequence","DW_LNE_hi_user","DW_LNE_lo_user","DW_LNE_set_address","DW_LNE_set_discriminator","DW_LNS_advance_line","DW_LNS_advance_pc","DW_LNS_const_add_pc","DW_LNS_copy","DW_LNS_fixed_advance_pc","DW_LNS_negate_stmt","DW_LNS_set_basic_block","DW_LNS_set_column","DW_LNS_set_epilogue_begin","DW_LNS_set_file","DW_LNS_set_isa","DW_LNS_set_prologue_end","DW_MACRO_define","DW_MACRO_define_strp","DW_MACRO_define_strx","DW_MACRO_define_sup","DW_MACRO_end_file","DW_MACRO_hi_user","DW_MACRO_import","DW_MACRO_import_sup","DW_MACRO_lo_user","DW_MACRO_start_file","DW_MACRO_undef","DW_MACRO_undef_strp","DW_MACRO_undef_strx","DW_MACRO_undef_sup","DW_OP_GNU_addr_index","DW_OP_GNU_const_index","DW_OP_GNU_const_type","DW_OP_GNU_convert","DW_OP_GNU_deref_type","DW_OP_GNU_entry_value","DW_OP_GNU_implicit_pointer","DW_OP_GNU_parameter_ref","DW_OP_GNU_push_tls_address","DW_OP_GNU_regval_type","DW_OP_GNU_reinterpret","DW_OP_WASM_location","DW_OP_abs","DW_OP_addr","DW_OP_addrx","DW_OP_and","DW_OP_bit_piece","DW_OP_bra","DW_OP_breg0","DW_OP_breg1","DW_OP_breg10","DW_OP_breg11","DW_OP_breg12","DW_OP_breg13","DW_OP_breg14","DW_OP_breg15","DW_OP_breg16","DW_OP_breg17","DW_OP_breg18","DW_OP_breg19","DW_OP_breg2","DW_OP_breg20","DW_OP_breg21","DW_OP_breg22","DW_OP_breg23","DW_OP_breg24","DW_OP_breg25","DW_OP_breg26","DW_OP_breg27","DW_OP_breg28","DW_OP_breg29","DW_OP_breg3","DW_OP_breg30","DW_OP_breg31","DW_OP_breg4","DW_OP_breg5","DW_OP_breg6","DW_OP_breg7","DW_OP_breg8","DW_OP_breg9","DW_OP_bregx","DW_OP_call2","DW_OP_call4","DW_OP_call_frame_cfa","DW_OP_call_ref","DW_OP_const1s","DW_OP_const1u","DW_OP_const2s","DW_OP_const2u","DW_OP_const4s","DW_OP_const4u","DW_OP_const8s","DW_OP_const8u","DW_OP_const_type","DW_OP_consts","DW_OP_constu","DW_OP_constx","DW_OP_convert","DW_OP_deref","DW_OP_deref_size","DW_OP_deref_type","DW_OP_div","DW_OP_drop","DW_OP_dup","DW_OP_entry_value","DW_OP_eq","DW_OP_fbreg","DW_OP_form_tls_address","DW_OP_ge","DW_OP_gt","DW_OP_implicit_pointer","DW_OP_implicit_value","DW_OP_le","DW_OP_lit0","DW_OP_lit1","DW_OP_lit10","DW_OP_lit11","DW_OP_lit12","DW_OP_lit13","DW_OP_lit14","DW_OP_lit15","DW_OP_lit16","DW_OP_lit17","DW_OP_lit18","DW_OP_lit19","DW_OP_lit2","DW_OP_lit20","DW_OP_lit21","DW_OP_lit22","DW_OP_lit23","DW_OP_lit24","DW_OP_lit25","DW_OP_lit26","DW_OP_lit27","DW_OP_lit28","DW_OP_lit29","DW_OP_lit3","DW_OP_lit30","DW_OP_lit31","DW_OP_lit4","DW_OP_lit5","DW_OP_lit6","DW_OP_lit7","DW_OP_lit8","DW_OP_lit9","DW_OP_lt","DW_OP_minus","DW_OP_mod","DW_OP_mul","DW_OP_ne","DW_OP_neg","DW_OP_nop","DW_OP_not","DW_OP_or","DW_OP_over","DW_OP_pick","DW_OP_piece","DW_OP_plus","DW_OP_plus_uconst","DW_OP_push_object_address","DW_OP_reg0","DW_OP_reg1","DW_OP_reg10","DW_OP_reg11","DW_OP_reg12","DW_OP_reg13","DW_OP_reg14","DW_OP_reg15","DW_OP_reg16","DW_OP_reg17","DW_OP_reg18","DW_OP_reg19","DW_OP_reg2","DW_OP_reg20","DW_OP_reg21","DW_OP_reg22","DW_OP_reg23","DW_OP_reg24","DW_OP_reg25","DW_OP_reg26","DW_OP_reg27","DW_OP_reg28","DW_OP_reg29","DW_OP_reg3","DW_OP_reg30","DW_OP_reg31","DW_OP_reg4","DW_OP_reg5","DW_OP_reg6","DW_OP_reg7","DW_OP_reg8","DW_OP_reg9","DW_OP_regval_type","DW_OP_regx","DW_OP_reinterpret","DW_OP_rot","DW_OP_shl","DW_OP_shr","DW_OP_shra","DW_OP_skip","DW_OP_stack_value","DW_OP_swap","DW_OP_xderef","DW_OP_xderef_size","DW_OP_xderef_type","DW_OP_xor","DW_ORD_col_major","DW_ORD_row_major","DW_RLE_base_address","DW_RLE_base_addressx","DW_RLE_end_of_list","DW_RLE_offset_pair","DW_RLE_start_end","DW_RLE_start_length","DW_RLE_startx_endx","DW_RLE_startx_length","DW_SECT_ABBREV","DW_SECT_INFO","DW_SECT_LINE","DW_SECT_LOCLISTS","DW_SECT_MACRO","DW_SECT_RNGLISTS","DW_SECT_STR_OFFSETS","DW_SECT_V2_ABBREV","DW_SECT_V2_INFO","DW_SECT_V2_LINE","DW_SECT_V2_LOC","DW_SECT_V2_MACINFO","DW_SECT_V2_MACRO","DW_SECT_V2_STR_OFFSETS","DW_SECT_V2_TYPES","DW_TAG_ALTIUM_circ_type","DW_TAG_ALTIUM_mwa_circ_type","DW_TAG_ALTIUM_rev_carry_type","DW_TAG_ALTIUM_rom","DW_TAG_APPLE_property","DW_TAG_BORLAND_Delphi_dynamic_array","DW_TAG_BORLAND_Delphi_set","DW_TAG_BORLAND_Delphi_string","DW_TAG_BORLAND_Delphi_variant","DW_TAG_BORLAND_property","DW_TAG_GNU_BINCL","DW_TAG_GNU_EINCL","DW_TAG_GNU_call_site","DW_TAG_GNU_call_site_parameter","DW_TAG_GNU_formal_parameter_pack","DW_TAG_GNU_template_parameter_pack","DW_TAG_GNU_template_template_param","DW_TAG_HP_Bliss_field","DW_TAG_HP_Bliss_field_set","DW_TAG_HP_array_descriptor","DW_TAG_MIPS_loop","DW_TAG_PGI_interface_block","DW_TAG_PGI_kanji_type","DW_TAG_SUN_class_template","DW_TAG_SUN_codeflags","DW_TAG_SUN_dtor","DW_TAG_SUN_dtor_info","DW_TAG_SUN_f90_interface","DW_TAG_SUN_fortran_vax_structure","DW_TAG_SUN_function_template","DW_TAG_SUN_indirect_inheritance","DW_TAG_SUN_memop_info","DW_TAG_SUN_omp_child_func","DW_TAG_SUN_rtti_descriptor","DW_TAG_SUN_struct_template","DW_TAG_SUN_union_template","DW_TAG_access_declaration","DW_TAG_array_type","DW_TAG_atomic_type","DW_TAG_base_type","DW_TAG_call_site","DW_TAG_call_site_parameter","DW_TAG_catch_block","DW_TAG_class_template","DW_TAG_class_type","DW_TAG_coarray_type","DW_TAG_common_block","DW_TAG_common_inclusion","DW_TAG_compile_unit","DW_TAG_condition","DW_TAG_const_type","DW_TAG_constant","DW_TAG_dwarf_procedure","DW_TAG_dynamic_type","DW_TAG_entry_point","DW_TAG_enumeration_type","DW_TAG_enumerator","DW_TAG_file_type","DW_TAG_formal_parameter","DW_TAG_format_label","DW_TAG_friend","DW_TAG_function_template","DW_TAG_generic_subrange","DW_TAG_hi_user","DW_TAG_immutable_type","DW_TAG_imported_declaration","DW_TAG_imported_module","DW_TAG_imported_unit","DW_TAG_inheritance","DW_TAG_inlined_subroutine","DW_TAG_interface_type","DW_TAG_label","DW_TAG_lexical_block","DW_TAG_lo_user","DW_TAG_member","DW_TAG_module","DW_TAG_namelist","DW_TAG_namelist_item","DW_TAG_namespace","DW_TAG_null","DW_TAG_packed_type","DW_TAG_partial_unit","DW_TAG_pointer_type","DW_TAG_ptr_to_member_type","DW_TAG_reference_type","DW_TAG_restrict_type","DW_TAG_rvalue_reference_type","DW_TAG_set_type","DW_TAG_shared_type","DW_TAG_skeleton_unit","DW_TAG_string_type","DW_TAG_structure_type","DW_TAG_subprogram","DW_TAG_subrange_type","DW_TAG_subroutine_type","DW_TAG_template_alias","DW_TAG_template_type_parameter","DW_TAG_template_value_parameter","DW_TAG_thrown_type","DW_TAG_try_block","DW_TAG_type_unit","DW_TAG_typedef","DW_TAG_union_type","DW_TAG_unspecified_parameters","DW_TAG_unspecified_type","DW_TAG_upc_relaxed_type","DW_TAG_upc_shared_type","DW_TAG_upc_strict_type","DW_TAG_variable","DW_TAG_variant","DW_TAG_variant_part","DW_TAG_volatile_type","DW_TAG_with_stmt","DW_UT_compile","DW_UT_hi_user","DW_UT_lo_user","DW_UT_partial","DW_UT_skeleton","DW_UT_split_compile","DW_UT_split_type","DW_UT_type","DW_VIRTUALITY_none","DW_VIRTUALITY_pure_virtual","DW_VIRTUALITY_virtual","DW_VIS_exported","DW_VIS_local","DW_VIS_qualified","DwAccess","DwAddr","DwAt","DwAte","DwCc","DwCfa","DwChildren","DwDefaulted","DwDs","DwDsc","DwEhPe","DwEnd","DwForm","DwId","DwIdx","DwInl","DwLang","DwLle","DwLnct","DwLne","DwLns","DwMacro","DwOp","DwOrd","DwRle","DwSect","DwSectV2","DwTag","DwUt","DwVirtuality","DwVis","application","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","default_lower_bound","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_absent","is_indirect","is_valid_encoding","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","static_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","read","signed","skip","u16","unsigned","Abbreviation","AbbreviationTagZero","Abbreviations","AbbreviationsCache","Abs","Accessibility","Addr","Address","Address","AddressClass","AddressIndex","AddressOrOffsetPair","AddressOrOffsetPair","AdvanceLine","AdvanceLoc","AdvancePc","And","ArangeEntry","ArangeEntryIter","ArangeHeader","ArangeHeaderIter","Architectural","ArgsSize","ArrayLike","Attribute","AttributeFormZero","AttributeSpecification","AttributeValue","AttrsIter","Augmentation","BadBranchTarget","BadHasChildren","BadLength","BadSignedLeb128","BadUnsignedLeb128","BadUtf8","BaseAddress","BaseAddress","BaseAddresses","BaseAddressx","BaseAddressx","Block","Bra","Bytes","Call","CallFrameCFA","CallFrameInstruction","CallFrameInstructionIter","CallingConvention","CannotParseOmitPointerEncoding","CfaRule","CfiEntriesIter","CfiInstructionInInvalidContext","Cie","CieOrFde","Column","ColumnType","CommonInformationEntry","Compilation","Complete","CompleteLineNumberProgram","CompleteLineProgram","ConstAddPc","ConstantIndex","Convert","Copy","Data1","Data2","Data4","Data8","DataRelativePointerButDataBaseIsUndefined","DebugAbbrev","DebugAddr","DebugAddrBase","DebugAddrIndex","DebugAranges","DebugCuIndex","DebugFrame","DebugInfo","DebugInfoRef","DebugInfoRef","DebugInfoRefSup","DebugInfoUnitHeadersIter","DebugLine","DebugLineRef","DebugLineStr","DebugLineStrRef","DebugLoc","DebugLocLists","DebugLocListsBase","DebugLocListsIndex","DebugMacinfoRef","DebugMacroRef","DebugPubNames","DebugPubTypes","DebugRanges","DebugRngLists","DebugRngListsBase","DebugRngListsIndex","DebugStr","DebugStrOffsets","DebugStrOffsetsBase","DebugStrOffsetsIndex","DebugStrRef","DebugStrRefSup","DebugTuIndex","DebugTypes","DebugTypesRef","DebugTypesUnitHeadersIter","DebuggingInformationEntry","DecimalSign","DefCfa","DefCfaExpression","DefCfaOffset","DefCfaOffsetSf","DefCfaRegister","DefCfaSf","DefaultLocation","DefineFile","Deref","DieReference","Direct","Div","DivisionByZero","Drop","DuplicateAbbreviationCode","DuplicateArange","Dwarf","DwarfPackage","DwoId","EhFrame","EhFrameHdr","EhHdrTable","EhHdrTableIter","Empty","Encoding","EndSequence","Endian","EndianArcSlice","EndianBuf","EndianRcSlice","EndianReader","EndianSlice","Endianity","EntriesCursor","EntriesRaw","EntriesTree","EntriesTreeIter","EntriesTreeNode","EntryValue","Eq","Error","Evaluation","EvaluationResult","EvaluationStorage","ExpectedStringAttributeValue","ExpectedZero","Expression","Expression","Expression","Expression","ExpressionStack","Exprloc","F32","F32","F64","F64","Fde","FileEntry","FileEntryFormat","FileIndex","FixedAddPc","Flag","FrameDescriptionEntry","FrameOffset","FuncRelativePointerInBadContext","Ge","Generic","Generic","Gt","I16","I16","I32","I32","I64","I64","I8","I8","IdentifierCase","ImplicitPointer","ImplicitPointer","ImplicitValue","IncompleteLineNumberProgram","IncompleteLineProgram","Indirect","Inline","IntegralTypeRequired","InvalidAddressRange","InvalidExpression","InvalidExpressionTerminator","InvalidImplicitConst","InvalidIndexRow","InvalidIndexSectionCount","InvalidIndexSlotCount","InvalidLocationAddressRange","InvalidPiece","InvalidPushObjectAddress","InvalidShiftExpression","Io","Item","Language","Le","LeftEdge","LineInstruction","LineInstructions","LineNumberProgram","LineNumberProgramHeader","LineNumberRow","LineNumberSequence","LineProgram","LineProgramHeader","LineRangeZero","LineRow","LineRows","LineSequence","LocListIter","Location","LocationListEntry","LocationLists","LocationListsRef","Lt","MaximumOperationsPerInstructionZero","MinimumInstructionLengthZero","Minus","MissingFileEntryFormatPath","MissingUnitDie","Mod","Mul","Ne","Neg","NegateStatement","NoEntryAtGivenOffset","NoUnwindInfoForAddress","Nop","Nop","Not","NotCieId","NotCiePointer","NotEnoughStackItems","NotFdePointer","Offset","Offset","Offset","Offset","OffsetExtendedSf","OffsetOutOfBounds","OffsetPair","OffsetPair","Opcode","OpcodeBaseZero","OpcodesIter","Operation","OperationIter","Or","Ordering","ParameterRef","ParsedEhFrameHdr","Partial","PartialFrameDescriptionEntry","PcRelativePointerButSectionBaseIsUndefined","Pick","Piece","Piece","Plus","PlusConstant","Pointer","PopWithEmptyStack","PubNamesEntry","PubNamesEntryIter","PubTypesEntry","PubTypesEntryIter","PushObjectAddress","Range","RangeIter","RangeLists","RangeListsRef","RawLocListEntry","RawLocListIter","RawRngListEntry","RawRngListIter","Reader","ReaderOffset","ReaderOffsetId","Register","Register","Register","Register","RegisterAndOffset","RegisterOffset","RegisterRule","RegisterRuleIter","Reinterpret","RememberState","RequiresAtLocation","RequiresBaseType","RequiresCallFrameCfa","RequiresEntryValue","RequiresFrameBase","RequiresIndexedAddress","RequiresMemory","RequiresParameterRef","RequiresRegister","RequiresRelocatedAddress","RequiresTls","Restore","RestoreState","Result","Result","RngListIter","Rot","Rules","SameValue","SameValue","Sdata","SecOffset","Section","SectionBaseAddresses","SetAddress","SetBasicBlock","SetColumn","SetDiscriminator","SetEpilogueBegin","SetFile","SetIsa","SetLoc","SetPrologueEnd","Shl","Shr","Shra","SignedConstant","Skeleton","Skip","Special","SplitCompilation","SplitType","Stack","Stack","StackFull","StackValue","StartEnd","StartEnd","StartLength","StartLength","StartxEndx","StartxEndx","StartxLength","StartxLength","StateMachine","StoreOnHeap","String","Swap","TLS","TextRelativePointerButTextBaseIsUndefined","TooManyIterations","TooManyRegisterRules","Type","TypeMismatch","TypedLiteral","U16","U16","U32","U32","U64","U64","U8","U8","Udata","Undefined","Undefined","UnexpectedEof","UnexpectedNull","Unit","UnitHeader","UnitIndex","UnitIndexSection","UnitIndexSectionIterator","UnitOffset","UnitRef","UnitRef","UnitType","UnknownAbbreviation","UnknownAugmentation","UnknownCallFrameInstruction","UnknownExtended","UnknownExtendedOpcode","UnknownForm","UnknownIndexSection","UnknownPointerEncoding","UnknownReservedLength","UnknownStandard0","UnknownStandard1","UnknownStandardN","UnknownStandardOpcode","UnknownVersion","UnsignedConstant","UnsupportedAddressIndex","UnsupportedAddressSize","UnsupportedAttributeForm","UnsupportedEvaluation","UnsupportedFieldSize","UnsupportedOffset","UnsupportedOffsetSize","UnsupportedPointerEncoding","UnsupportedRegister","UnsupportedSegmentSize","UnsupportedTypeOperation","UnsupportedUnitType","UnwindContext","UnwindContextStorage","UnwindOffset","UnwindSection","UnwindTable","UnwindTableRow","ValExpression","ValExpression","ValOffset","ValOffset","ValOffsetSf","Value","Value","ValueType","VariableLengthSearchTable","Virtuality","Visibility","WasmGlobal","WasmLocal","WasmStack","Xor","abbreviations","abbreviations","abbreviations","abbreviations","abbreviations_cache","abs","add","add_file","add_file","add_file","addr_base","address","address","address","address_size","address_size","address_size","and","as_result","attr","attr_address","attr_locations","attr_locations_offset","attr_ranges","attr_ranges_offset","attr_string","attr_value","attr_value_raw","attributes","attrs","augmentation","basic_block","begin","bit_offset","bit_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","cfa","checked_sub","children","cie","cie_from_offset","cie_from_offset","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","code","code","code_alignment_factor","column","comp_dir","contains","contains","content_type","convert","copy_relocated_attributes","cu_index","cu_sections","current","data","data","data_alignment_factor","debug_abbrev","debug_abbrev","debug_abbrev_offset","debug_addr","debug_aranges","debug_info","debug_info","debug_info_offset","debug_line","debug_line","debug_line_str","debug_loc","debug_loclists","debug_ranges","debug_rnglists","debug_rnglists","debug_str","debug_str","debug_str_offsets","debug_str_offsets","debug_types","debug_types","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_is_stmt","deref","deref","description","die_offset","die_offset","die_ranges","directory","directory","directory_entry_format","directory_index","discriminator","div","dwo_id","dwo_name","dwo_section_name","dwp_range","eh_frame","eh_frame_hdr","eh_frame_ptr","empty","empty","empty","empty","encoding","encoding","encoding","encoding","encoding","end","end","end_address","end_sequence","endian","endian","endian","entries","entries","entries","entries","entries","entries_at_offset","entries_at_offset","entries_raw","entries_raw","entries_tree","entries_tree","entry","entry","entry","entry_len","entry_len","epilogue_begin","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","evaluate","evaluation","execute","exprloc_value","exprloc_value","fde_address_encoding","fde_for_address","fde_for_address","fde_for_address","fde_from_offset","fde_from_offset","file","file","file_has_md5","file_has_size","file_has_timestamp","file_index","file_name_entry_format","file_names","file_type","find","find","find","find","find","find_cu","find_tu","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","form","form","format","format","format_error","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_encoding","from_entry","from_i16","from_u16","from_u32","from_u64","from_u64","from_u8","ge","get","get","get_address","get_offset","get_offset","get_str","get_str","get_str_offset","gt","has_children","has_children","has_lsda","hash","hash","hash","hash","hash","hash","header","header","header","header","header","header","header","header","header_from_offset","header_length","header_size","headers","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","implicit_const_value","include_directories","index","index","index","index","index","index","initial_address","instructions","instructions","instructions","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_current_row","into_iter","into_iter","into_u64","is_empty","is_empty","is_empty","is_empty","is_empty","is_signal_trampoline","is_signal_trampoline","is_stmt","isa","items","items","iter","le","len","len","len","len","length","length","length_including_self","line","line_base","line_encoding","line_program","line_range","line_string","load","load","load","load_sup","location","locations","locations","locations","locations_dwo","locations_offset","loclists_base","lookup","lookup_offset_id","lookup_offset_id","lookup_offset_id","lookup_offset_id","lookup_offset_id","lookup_offset_id","lookup_offset_id","low_pc","lsda","lsda_encoding","lt","make_dwo","maximum_operations_per_instruction","md5","minimum_instruction_length","mul","name","name","name","name","name","ne","neg","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_in","new_in","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next_depth","next_dfs","next_entry","next_instruction","next_offset","next_row","next_row","next_sibling","not","nth","offset","offset","offset","offset","offset","offset","offset","offset_from","offset_from","offset_from","offset_from","offset_from","offset_id","offset_id","offset_id","offset_value","offset_value","op_index","opcode_base","operations","or","parse","parse","parse","parse","partial_cmp","partial_cmp","partial_cmp","partial_fde_from_offset","partial_fde_from_offset","path_name","personality","personality","personality_with_encoding","pointer_to_offset","program","prologue_end","range","range","range","range","range","range_from","range_from","range_from","range_to","range_to","range_to","ranges","ranges","ranges","ranges_offset","ranges_offset_from_raw","raw_locations","raw_locations","raw_locations_dwo","raw_program_buf","raw_ranges","raw_ranges","raw_value","read_abbreviation","read_address","read_address","read_attribute","read_f32","read_f32","read_f64","read_f64","read_i16","read_i16","read_i32","read_i32","read_i64","read_i64","read_i8","read_i8","read_initial_length","read_initial_length","read_length","read_length","read_null_terminated_slice","read_null_terminated_slice","read_offset","read_offset","read_sized_offset","read_sized_offset","read_sleb128","read_sleb128","read_slice","read_slice","read_slice","read_u16","read_u16","read_u32","read_u32","read_u64","read_u64","read_u8","read_u8","read_u8_array","read_u8_array","read_uint","read_uint","read_uleb128","read_uleb128","read_uleb128_u16","read_uleb128_u16","read_uleb128_u32","read_uleb128_u32","read_word","read_word","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","reader","register","registers","reinterpret","rem","reset","result","resume_from","resume_with_at_location","resume_with_base_type","resume_with_call_frame_cfa","resume_with_entry_value","resume_with_frame_base","resume_with_indexed_address","resume_with_memory","resume_with_parameter_ref","resume_with_register","resume_with_relocated_address","resume_with_tls","return_address_register","rnglists_base","root","rows","rows","saved_args_size","sdata_value","sdata_value","section","section","section_count","section_name","sections","sections","segment","segment_size","sequences","set_address_size","set_address_size","set_debug_ranges","set_eh_frame","set_eh_frame_hdr","set_got","set_initial_value","set_max_iterations","set_object_address","set_segment_size","set_text","shl","shr","shra","size","size","size","size_in_bits","size_of_header","skip","skip","skip","skip_attributes","skip_leb128","skip_leb128","slice","slot_count","split","split","split","split_at","standard_opcode_lengths","start","start_address","str_offsets_base","string","string_offset","string_value","string_value","string_value_sup","string_value_sup","sub","sup","sup","table","tag","tag","text","timestamp","to_debug_info_offset","to_debug_types_offset","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_slice","to_slice","to_slice","to_string","to_string","to_string","to_string","to_string","to_string","to_string_lossy","to_string_lossy","to_string_lossy","to_string_lossy","to_u64","to_unit_section_offset","truncate","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tu_index","tu_sections","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_units","u16_value","u16_value","u8_value","u8_value","udata_value","udata_value","unit","unit_count","unit_header_offset","unit_header_offset","unit_length","unit_length","unit_ranges","units","units","units","unwind_info_for_address","unwind_info_for_address","unwind_info_for_address","unwind_info_for_address","value","value_type","version","version","version","version","wrapping_add","xcoff_section_name","xor","address","delta","dest_register","expression","expression","expression","factored_offset","factored_offset","factored_offset","factored_offset","factored_offset","factored_offset","offset","offset","register","register","register","register","register","register","register","register","register","register","register","register","size","src_register","offset","register","address","base_type","base_type","index","register","relocate","size","space","address","byte_offset","register","value","value","value","address","base_type","base_type","base_type","base_type","base_type","bit_offset","byte_offset","data","expression","index","index","index","index","index","index","offset","offset","offset","offset","register","register","size","size_in_bits","space","target","target","value","value","value","value","value","addr","addr","begin","begin","begin","begin","begin","begin","data","data","data","data","data","data","data","end","end","end","end","length","length","addr","addr","begin","begin","begin","begin","begin","begin","end","end","end","end","length","length","type_offset","type_offset","type_signature","type_signature"],"q":["gimligimli::constantsgimli::leb128","gimli::leb128::read","","","","gimli::readgimli::read::CallFrameInstruction","","","","","","","","","","","","","","","","","","","","","","","","","","","","gimli::read::CfaRule","","gimli::read::EvaluationResult","","","","","","","","gimli::read::Location","","","","","","gimli::read::Operation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gimli::read::RawLocListEntry","","","","","","","","","","","","","","","","","","","","","gimli::read::RawRngListEntry","","","","","","","","","","","","","","gimli::read::UnitType","","",""],"d":["","","","","","","","","","","","","","","","","ARM 64-bit (AArch64) architecture specific definitions.","","","","","","","","","ARM architecture specific definitions.","Big endian byte order.","Big endian byte order.","","","An unsafe marker trait for types where clones deref to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>.debug_abbrev</code> section.","An offset into the <code>.debug_abbrev</code> section.","The <code>.debug_addr</code> section.","An offset to a set of entries in the <code>.debug_addr</code> section.","An index into a set of addresses in the <code>.debug_addr</code> …","The <code>.debug_aranges</code> section.","An offset into the <code>.debug_aranges</code> section.","The <code>.debug_cu_index</code> section.","The <code>.debug_frame</code> section.","An offset into the <code>.debug_frame</code> section.","The <code>.debug_info</code> section.","An offset into the <code>.debug_info</code> section.","An offset into the <code>.debug_info</code> section.","The <code>.debug_line</code> section.","An offset into the <code>.debug_line</code> section.","The <code>.debug_line_str</code> section.","An offset into the <code>.debug_line_str</code> section.","The <code>.debug_loc</code> section.","The <code>.debug_loclists</code> section.","An offset to a set of location list offsets in the …","An index into a set of location list offsets in the …","The <code>.debug_macinfo</code> section.","An offset into the <code>.debug_macinfo</code> section.","The <code>.debug_macro</code> section.","An offset into the <code>.debug_macro</code> section.","The <code>.debug_pubnames</code> section.","The <code>.debug_pubtypes</code> section.","The <code>.debug_ranges</code> section.","The <code>.debug_rnglists</code> section.","An offset to a set of range list offsets in the …","An index into a set of range list offsets in the …","The <code>.debug_str</code> section.","An offset into the <code>.debug_str</code> section.","The <code>.debug_str_offsets</code> section.","An offset to a set of entries in the <code>.debug_str_offsets</code> …","An index into a set of entries in the <code>.debug_str_offsets</code> …","The <code>.debug_tu_index</code> section.","A type signature as used in the <code>.debug_types</code> section.","The <code>.debug_types</code> section.","An offset into the <code>.debug_types</code> section.","An offset into the <code>.debug_types</code> section.","32-bit DWARF","64-bit DWARF","The “type” of file with DWARF debugging information. …","A .dwo split DWARF file.","An optionally-provided implementation-defined compilation …","","","","","","","","","","","The <code>.eh_frame</code> section.","The <code>.eh_frame_hdr</code> section.","An offset into the <code>.eh_frame</code> section.","Encoding parameters that are commonly used for multiple …","A trait describing the endianity of some buffer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the format of a compilation unit is 32- or 64-bit.","","","","","","","","","","","","","","","","","Encoding parameters for a line number program.","Little endian byte order.","Little endian byte order.","An offset into either the <code>.debug_loc</code> section or the …","LoongArch architecture specific definitions.","","","","","","","","","","","","","","","","","","","A normal executable or object file.","The native endianity for the target platform.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An offset into either the <code>.debug_ranges</code> section or the …","An offset into either the <code>.debug_ranges</code> section or the …","A DWARF register number.","RISC-V architecture specific definitions.","Byte order that is selectable at runtime.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An identifier for a DWARF section.","An unsafe marker trait for types that deref to a stable …","","","","","","","","","","","","","","","","","","","","","An offset into the <code>.debug_info</code> or <code>.debug_types</code> sections.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Intel i386 architecture specific definitions.","AMD64 architecture specific definitions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The size of an address.","Returns the <code>DebugInfoOffset</code> inside, or <code>None</code> otherwise.","Returns the <code>DebugTypesOffset</code> inside, or <code>None</code> otherwiseonstant definitions.","","","","","","Returns a <code>DebugLocListsBase</code> with the default value of …","Returns a <code>DebugRngListsBase</code> with the default value of …","Returns a <code>DebugStrOffsetsBase</code> with the default value of …","The initial value of the <code>is_stmt</code> register.","Returns the ELF section name for this kind, when found in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the DWARF format is 32- or 64-bit.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Return the serialized size of an initial length field for …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return true for big endian byte order.","","","","Return true for little endian byte order.","Return true for little endian byte order.","Read and write DWARF’s “Little Endian Base 128” …","The minimum value which a special opcode can add to the …","The range of values which a special opcode can add to the …","The maximum number of individual operations that may be …","The size in bytes of the smallest target machine …","Returns the ELF section name for this kind.","Converts a register name into a register number.","Converts a register name into a register number.","Converts a register name into a register number.","Converts a register name into a register number.","Converts a register name into a register number.","Converts a register name into a register number.","","","","","","Read DWARF debugging information.","Reads a 32 bit floating point number from <code>buf</code>.","Reads a 32 bit floating point number from <code>buf</code>.","Reads a 32 bit floating point number from <code>buf</code>.","Reads a 32 bit floating point number from <code>buf</code>.","Reads a signed 16 bit integer from <code>buf</code>.","Reads a signed 16 bit integer from <code>buf</code>.","Reads a signed 32 bit integer from <code>buf</code>.","Reads a signed 32 bit integer from <code>buf</code>.","Reads a signed 64 bit integer from <code>buf</code>.","Reads a signed 64 bit integer from <code>buf</code>.","Reads an unsigned 16 bit integer from <code>buf</code>.","Reads an unsigned 16 bit integer from <code>buf</code>.","Reads an unsigned 32 bit integer from <code>buf</code>.","Reads an unsigned 32 bit integer from <code>buf</code>.","Reads an unsigned 64 bit integer from <code>buf</code>.","Reads an unsigned 64 bit integer from <code>buf</code>.","Read an unsigned n-bytes integer u64.","Read an unsigned n-bytes integer u64.","The name of a register, or <code>None</code> if the register number is …","The name of a register, or <code>None</code> if the register number is …","The name of a register, or <code>None</code> if the register number is …","The name of a register, or <code>None</code> if the register number is …","The name of a register, or <code>None</code> if the register number is …","The name of a register, or <code>None</code> if the register number is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert an offset to be relative to the start of the given …","Convert an offset to be relative to the start of the given …","Convert an offset to be relative to the start of the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The DWARF version of the header.","Return the natural word size for the format","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.","Returns the XCOFF section name for this kindhe encodings of the constants used in the …","The encodings of the constants used in the …","The attribute encodings for DIE attributes.","The encodings of the constants used in the <code>DW_AT_encoding</code> …","The encodings of the constants used in the …","The opcode for a call frame instruction.","The child determination encodings for DIE attributes.","The encodings of the constants used in the <code>DW_AT_defaulted</code> …","The encodings of the constants used in the …","The encodings of the constants used in the <code>DW_AT_discr_list</code>…","Pointer encoding used by <code>.eh_frame</code>.","The encodings of the constants used in the <code>DW_AT_endianity</code> …","The attribute form encodings for DIE attributes.","The encodings of the constants used in the …","Name index attribute encodings.","The encodings of the constants used in the <code>DW_AT_inline</code> …","The encodings of the constants used in the <code>DW_AT_language</code> …","The encodings of the constants used in location list …","The encodings for the line number header entry formats.","The encodings for the extended opcodes for line number …","The encodings for the standard opcodes for line number …","The encodings for macro information entry types.","The encodings for DWARF expression operations.","The encodings of the constants used in the <code>DW_AT_ordering</code> …","Range list entry encoding values.","The section type field in a <code>.dwp</code> unit index.","The section type field in a <code>.dwp</code> unit index with version 2.","The tag encodings for DIE attributes.","The unit type field in a unit header.","The encodings of the constants used in the <code>DW_AT_virtuality</code>…","The encodings of the constants used in the <code>DW_AT_visibility</code>…","Get the pointer encoding’s application.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the default DW_AT_lower_bound for this language.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the pointer encoding’s format.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is this encoding the absent pointer encoding?","Is this coding indirect? If so, its encoded value is the …","Is this a known, valid pointer encodingmodule for reading signed and unsigned integers that …","Read a signed LEB128 number from the given <code>Reader</code> and …","Read bytes until the LEB128 continuation bit is not set.","Read an LEB128 u16 from the given <code>Reader</code> and return it or …","Read an unsigned LEB128 number from the given <code>Reader</code> and …","An abbreviation describes the shape of a …","An abbreviation declared that its tag is zero, but zero is …","A set of type abbreviations.","A cache of previously parsed <code>Abbreviations</code>.","Take the absolute value of the top of the stack.","The value of a <code>DW_AT_accessibility</code> attribute.","“Refers to some location in the address space of the …","Relocate the address if needed, and push it on the stack.","The piece is found in memory.","The value of a <code>DW_AT_address_class</code> attribute.","Read the address at the given index in `.debug_addr, …","A location from DWARF version &lt;= 4.","A range from DWARF version &lt;= 4.","“The DW_LNS_advance_line opcode takes a single signed …","The <code>AdvanceLoc</code> instruction is used for all of …","“The DW_LNS_advance_pc opcode takes a single unsigned …","Bitwise <code>and</code> of the top two values on the stack.","A single parsed arange.","An iterator over the aranges from a <code>.debug_aranges</code> section.","A header for a set of entries in the <code>.debug_arange</code> section.","An iterator over the headers of a <code>.debug_aranges</code> section.","“The rule is defined externally to this specification by …","DW_CFA_GNU_args_size","Marker trait for types that can be used as backing storage …","An attribute in a <code>DebuggingInformationEntry</code>, consisting of …","An attribute specification declared that its form is zero, …","The description of an attribute in an abbreviated type. It …","The value of an attribute in a <code>DebuggingInformationEntry</code>.","An iterator over a particular entry’s attributes.","We support the z-style augmentation defined by <code>.eh_frame</code>.","Invalid branch target for a DW_OP_bra or DW_OP_skip.","The abbreviation’s has-children byte was not one of …","The specified length is impossible.","An error parsing a signed LEB128 value.","An error parsing an unsigned LEB128 value.","Found an invalid UTF-8 string.","DW_LLE_base_address","DW_RLE_base_address","Optional base addresses for the relative <code>DW_EH_PE_*</code> …","DW_LLE_base_addressx","DW_RLE_base_addressx","A slice of an arbitrary number of bytes.","Branch to the target location if the top of stack is …","The piece is represented by some constant bytes.","Evaluate a DWARF expression as a subroutine.  The …","Compute the call frame CFA and push it on the stack.","A parsed call frame instruction.","A lazy iterator parsing call frame instructions.","The value of a <code>DW_AT_calling_convention</code> attribute.","Cannot parse a pointer with a <code>DW_EH_PE_omit</code> encoding.","The canonical frame address (CFA) recovery rules.","An iterator over CIE and FDE entries in a <code>.debug_frame</code> or …","Encountered a call frame instruction in a context in which …","This CFI entry is a <code>CommonInformationEntry</code>.","Either a <code>CommonInformationEntry</code> (CIE) or a …","A column number, whose range begins at 1.","The type of column that a row is referring to.","A Common Information Entry holds information that is …","In DWARF5, a unit with type <code>DW_UT_compile</code>. In previous …","The <code>Evaluation</code> is complete, and <code>Evaluation::result()</code> can …","Deprecated. <code>CompleteLineNumberProgram</code> has been renamed to …","A line number program that has previously been run to …","The DW_LNS_const_add_pc opcode takes no operands. It …","Read the address at the given index in `.debug_addr, and …","Pop the top stack entry, convert it to a different type, …","“<code>LineInstruction::Copy</code> appends a row to the matrix using …","A one byte constant data value. How to interpret the byte …","A two byte constant data value. How to interpret the bytes …","A four byte constant data value. How to interpret the …","An eight byte constant data value. How to interpret the …","Found a data relative pointer, but the data base is …","The <code>DebugAbbrev</code> struct represents the abbreviations …","The raw contents of the <code>.debug_addr</code> section.","An offset to a set of addresses in the <code>.debug_addr</code> section.","An index into a set of addresses in the <code>.debug_addr</code> …","The <code>DebugAranges</code> struct represents the DWARF address range …","The data in the <code>.debug_cu_index</code> section of a <code>.dwp</code> file.","<code>DebugFrame</code> contains the <code>.debug_frame</code> section’s frame …","The <code>DebugInfo</code> struct represents the DWARF debugging …","A section-relative reference.","An offset into the current <code>.debug_info</code> section, but …","An offset into the <code>.debug_info</code> section of the …","An iterator over the units of a .debug_info section.","The <code>DebugLine</code> struct contains the source location to …","An offset into the <code>.debug_line</code> section.","The <code>DebugLineStr</code> struct represents the DWARF strings found …","An offset into the <code>.debug_line_str</code> section.","The raw contents of the <code>.debug_loc</code> section.","The <code>DebugLocLists</code> struct represents the DWARF data found …","An offset to a set of offsets in the <code>.debug_loclists</code> …","An index into a set of offsets in the <code>.debug_loclists</code> …","An offset into the <code>.debug_macinfo</code> section.","An offset into the <code>.debug_macro</code> section.","The <code>DebugPubNames</code> struct represents the DWARF public names …","The <code>DebugPubTypes</code> struct represents the DWARF public types …","The raw contents of the <code>.debug_ranges</code> section.","The <code>DebugRngLists</code> struct represents the contents of the …","An offset to a set of offsets in the <code>.debug_rnglists</code> …","An index into a set of offsets in the <code>.debug_rnglists</code> …","The <code>DebugStr</code> struct represents the DWARF strings found in …","The raw contents of the <code>.debug_str_offsets</code> section.","An offset to a set of entries in the <code>.debug_str_offsets</code> …","An index into a set of entries in the <code>.debug_str_offsets</code> …","An offset into the <code>.debug_str</code> section.","An offset into the <code>.debug_str</code> section of the supplementary …","The data in the <code>.debug_tu_index</code> section of a <code>.dwp</code> file.","The <code>DebugTypes</code> struct represents the DWARF type information","A type signature.","An iterator over the type-units of this <code>.debug_types</code> …","A Debugging Information Entry (DIE).","The value of a <code>DW_AT_decimal_sign</code> attribute.","DW_CFA_def_cfaThe DW_CFA_def_cfa instruction takes two …","DW_CFA_def_cfa_expressionThe DW_CFA_def_cfa_expression …","DW_CFA_def_cfa_offsetThe DW_CFA_def_cfa_offset instruction …","DW_CFA_def_cfa_offset_sfThe DW_CFA_def_cfa_offset_sf …","DW_CFA_def_cfa_registerThe DW_CFA_def_cfa_register …","DW_CFA_def_cfa_sfThe DW_CFA_def_cfa_sf instruction takes …","DW_LLE_default_location","Defines a new source file in the line number program and …","Dereference the topmost value of the stack.","A reference to a DIE, either relative to the current CU or …","This value is the decoded pointer value.","Divide the top two values on the stack.","Division or modulus by zero when evaluating an expression.","Drop an item from the stack.","Found an abbreviation code that has already been used.","Found a duplicate arange.","All of the commonly used DWARF sections, and other common …","The sections from a <code>.dwp</code> file.","An implementation-defined identifier uniquely identifying …","<code>EhFrame</code> contains the frame unwinding information needed …","<code>EhFrameHdr</code> contains the information about the <code>.eh_frame_hdr</code>…","The CFI binary search table that is an optional part of …","An iterator for <code>.eh_frame_hdr</code> section’s binary search …","The piece is empty.  Ordinarily this means the piece has …","The value of a <code>DW_AT_encoding</code> attribute.","<code>LineInstruction::EndSequence</code> sets the end_sequence …","The endianity of bytes that are read.","An atomically reference counted, thread-safe slice of …","<code>EndianBuf</code> has been renamed to <code>EndianSlice</code>. For ease of …","A reference counted, non-thread-safe slice of bytes and …","An easy way to define a custom <code>Reader</code> implementation with …","A <code>&amp;[u8]</code> slice with endianity metadata.","The value of a <code>DW_AT_endianity</code> attribute.","A cursor into the Debugging Information Entries tree for a …","A raw reader of the data that defines the Debugging …","The state information for a tree view of the Debugging …","An iterator that allows traversal of the children of an …","A node in the Debugging Information Entry tree.","Evaluate an expression at the entry to the current …","Compare the top two stack values for equality.","An error that occurred when parsing.","A DWARF expression evaluator.","The state of an <code>Evaluation</code> after evaluating a DWARF …","Specification of what storage should be used for <code>Evaluation</code>…","Expected an attribute value to be a string form.","Expected a zero, found something else.","The bytecode for a DWARF expression or location …","The CFA is obtained by evaluating this <code>Reader</code> as a DWARF …","“The previous value of this register is located at the …","DW_CFA_expressionThe DW_CFA_expression instruction takes …","The storage used for the expression stack.","“The information bytes contain a DWARF expression (see …","32-bit floating point type.","A 32-bit floating point value.","64-bit floating point type.","A 64-bit floating point value.","This CFI entry is a <code>FrameDescriptionEntry</code>, however fully …","An entry in the <code>LineProgramHeader</code>’s <code>file_names</code> set.","The format of a component of an include directory or file …","An index into the filename entries from the line number …","The DW_LNS_fixed_advance_pc opcode takes a single uhalf …","A boolean that indicates presence or absence of the …","A <code>FrameDescriptionEntry</code> is a set of CFA instructions for …","Compute the frame base (using <code>DW_AT_frame_base</code>), add the …","Found a function relative pointer in a context that does …","Compare the top two stack values using <code>&gt;=</code>.","The generic type, which is address-sized and of …","A generic value, which is address-sized and of unspecified …","Compare the top two stack values using <code>&gt;</code>.","Signed 16-bit integer type.","A signed 16-bit integer value.","Signed 32-bit integer type.","A signed 32-bit integer value.","Signed 64-bit integer type.","A signed 64-bit integer value.","Signed 8-bit integer type.","A signed 8-bit integer value.","The value of a <code>DW_AT_identifier_case</code> attribute.","The object is a pointer to a value which has no actual …","The piece is a pointer to a value which has no actual …","The object has no location, but has a known constant value.","Deprecated. <code>IncompleteLineNumberProgram</code> has been renamed …","A line number program that has not been run to completion.","This value is <em>not</em> the pointer value, but points to the …","The value of a <code>DW_AT_inline</code> attribute.","An expression operation required an integral type but saw a","The end of an address range was before the beginning.","An unrecognized operation was found while parsing a DWARF …","An expression-terminating operation was followed by …","<code>DW_FORM_implicit_const</code> used in an invalid context.","Invalid hash row in <code>.dwp</code> index.","Invalid section count in <code>.dwp</code> index.","Invalid slot count in <code>.dwp</code> index.","The end offset of a loc list entry was before the …","The expression had a piece followed by an expression …","DW_OP_push_object_address used but no address passed in.","The shift value in an expression must be a non-negative …","An I/O error occurred while reading.","Type of the elements being stored.","The value of a <code>DW_AT_language</code> attribute.","Compare the top two stack values using <code>&lt;=</code>.","The <code>LeftEdge</code> means that the statement begins at the start …","A parsed line number program instruction.","An iterator yielding parsed instructions.","Deprecated. <code>LineNumberProgram</code> has been renamed to …","Deprecated. <code>LineNumberProgramHeader</code> has been renamed to …","Deprecated. <code>LineNumberRow</code> has been renamed to <code>LineRow</code>.","Deprecated. <code>LineNumberSequence</code> has been renamed to …","A <code>LineProgram</code> provides access to a <code>LineProgramHeader</code> and a …","A header for a line number program in the <code>.debug_line</code> …","The line range must not be zero.","A row in the line number program’s resulting matrix.","Executes a <code>LineProgram</code> to iterate over the rows in the …","A sequence within a line number program.  A sequence, as …","An iterator over a location list.","A single location of a piece of the result of a DWARF …","A location list entry from the <code>.debug_loc</code> or …","The DWARF data found in <code>.debug_loc</code> and <code>.debug_loclists</code> …","An offset into either the <code>.debug_loc</code> section or the …","Compare the top two stack values using <code>&lt;</code>.","The maximum operations per instruction must not be zero.","The minimum instruction length must not be zero.","Subtract the top two values on the stack.","Missing DW_LNCT_path in file entry format.","A compilation unit or type unit is missing its top level …","Modulus of the top two values on the stack.","Multiply the top two values on the stack.","Compare the top two stack values using <code>!=</code>.","Negate the top of the stack.","“The DW_LNS_negate_stmt opcode takes no operands. It …","Did not find an entry at the given offset.","Do not have unwind info for the given address.","DW_CFA_nopThe DW_CFA_nop instruction has no operands and …","No operation.","Bitwise <code>not</code> of the top of the stack.","Expected to find the CIE ID, but found something else.","Expected to find a pointer to a CIE, but found the CIE ID …","Not enough items on the stack when evaluating an …","Expected to find a pointer to an FDE, but found a CIE …","“The previous value of this register is saved at the …","The <code>Offset</code> instruction represents both <code>DW_CFA_offset</code> and …","The offset type associated with this CFI section. Either …","The type used for offsets and lengths.","DW_CFA_offset_extended_sfThe DW_CFA_offset_extended_sf …","The given offset is out of bounds.","DW_LLE_offset_pair","DW_RLE_offset_pair","Deprecated. <code>Opcode</code> has been renamed to <code>LineInstruction</code>.","The opcode base must not be zero.","Deprecated. <code>OpcodesIter</code> has been renamed to …","A single decoded DWARF expression operation.","An iterator for the operations in an expression.","Bitwise <code>or</code> of the top two values on the stack.","The value of a <code>DW_AT_ordering</code> attribute.","This represents a parameter that was optimized out.","<code>ParsedEhFrameHdr</code> contains the parsed information from the …","A unit with type <code>DW_UT_partial</code>. The root DIE of this unit …","A partially parsed <code>FrameDescriptionEntry</code>.","Found a PC relative pointer, but the section base is …","Pick an item from the stack and push it on top of the …","The description of a single piece of the result of a DWARF …","Terminate a piece.","Add the top two values on the stack.","Add a constant to the topmost value on the stack.","A decoded pointer.","When evaluating call frame instructions, found a …","A single parsed pubname.","An iterator over the pubnames from a <code>.debug_pubnames</code> …","A single parsed pubtype.","An iterator over the pubtypes from a <code>.debug_pubtypes</code> …","Push the object address on the stack.","An address range from the <code>.debug_ranges</code>, <code>.debug_rnglists</code>, …","An iterator for the address ranges of a …","The DWARF data found in <code>.debug_ranges</code> and <code>.debug_rnglists</code> …","An offset into the <code>.debug_ranges</code> section.","A raw entry in .debug_loclists.","A raw iterator over a location list.","A raw entry in .debug_rnglists","A raw iterator over an address range list.","A trait for reading the data from a DWARF section.","A trait for offsets with a DWARF section.","An identifier for an offset within a section reader.","“The previous value of this register is stored in …","DW_CFA_registerThe DW_CFA_register instruction takes two …","Indicate that this piece’s location is in the given …","The piece is found in a register.","The CFA is given offset from the given register’s value.","Find the value of the given register, add the offset, and …","An entry in the abstract CFI table that describes how to …","An unordered iterator for register rules.","Pop the top stack entry, reinterpret the bits in its value …","DW_CFA_remember_stateThe DW_CFA_remember_state instruction …","The <code>Evaluation</code> needs the DWARF expression at the given …","The <code>Evaluation</code> needs the <code>ValueType</code> for the base type DIE at","The <code>Evaluation</code> needs the CFA to proceed further.  Once the …","The <code>Evaluation</code> needs the value produced by evaluating a …","The <code>Evaluation</code> needs the frame base address to proceed …","The <code>Evaluation</code> needs an address from the <code>.debug_addr</code> …","The <code>Evaluation</code> needs a value from memory to proceed …","The <code>Evaluation</code> needs the value of the parameter at the …","The <code>Evaluation</code> needs a value from a register to proceed …","The <code>Evaluation</code> needs an address to be relocated to proceed …","The <code>Evaluation</code> needs a value from TLS to proceed further.  …","The <code>Restore</code> instruction represents both <code>DW_CFA_restore</code> and …","DW_CFA_restore_stateThe DW_CFA_restore_state instruction …","The result of a parse.","The storage used for the results.","An iterator over an address range list.","Rotate the top three stack items.","The storage used for register rules in a unwind table row.","This register has not been modified from the previous …","DW_CFA_same_valueThe DW_CFA_same_value instruction takes a …","A signed integer constant.","An offset into another section. Which section this is an …","A convenience trait for loading DWARF sections from object …","Optional base addresses for the relative <code>DW_EH_PE_*</code> …","The DW_LNE_set_address opcode takes a single relocatable …","“The DW_LNS_set_basic_block opcode takes no operands. It …","“The DW_LNS_set_column opcode takes a single unsigned …","“The DW_LNE_set_discriminator opcode takes a single …","“<code>LineInstruction::SetEpilogueBegin</code> sets the …","“The DW_LNS_set_file opcode takes a single unsigned …","“The DW_LNS_set_isa opcode takes a single unsigned …","DW_CFA_set_locThe DW_CFA_set_loc instruction takes a …","“<code>LineInstruction::SetPrologueEnd</code> sets the prologue_end …","Logical left shift of the 2nd value on the stack by the …","Right shift of the 2nd value on the stack by the number of …","Arithmetic left shift of the 2nd value on the stack by the …","Push a signed constant value on the stack.  This handles …","A unit with type <code>DW_UT_skeleton</code>. The enclosed dwo_id can …","Unconditional branch to the target location.","6.2.5.1 Special Opcodes","A unit with type <code>DW_UT_split_compile</code>. The enclosed dwo_id …","A unit with type <code>DW_UT_split_type</code>. A split type unit is …","The storage used for unwind table row stack.","The storage used for the evaluation stack.","Attempted to push onto the CFI or evaluation stack, but it …","The object has no location, but its value is at the top of …","DW_LLE_start_end","DW_RLE_start_end","DW_LLE_start_length","DW_RLE_start_length","DW_LLE_startx_endx","DW_RLE_startx_endx","DW_LLE_startx_length","DW_RLE_startx_length","Deprecated. <code>StateMachine</code> has been renamed to <code>LineRows</code>.","Indicates that storage should be allocated on heap.","A slice of bytes representing a string. Does not include a …","Swap the top two stack items.","Compute the address of a thread-local variable and push it …","Found a <code>.text</code> relative pointer, but the <code>.text</code> base is …","Too many iterations to compute the expression.","The CFI program defined more register rules than we have …","In DWARF5, a unit with type <code>DW_UT_type</code>. In DWARF4, any …","An expression operation used mismatching types.","Interpret the value bytes as a constant of a given type, …","Unsigned 16-bit integer type.","An unsigned 16-bit integer value.","Unsigned 32-bit integer type.","An unsigned 32-bit integer value.","Unsigned 64-bit integer type.","An unsigned 64-bit integer value.","Unsigned 8-bit integer type.","An unsigned 8-bit integer value.","An unsigned integer constant.","A register that has this rule has no recoverable value in …","DW_CFA_undefinedThe DW_CFA_undefined instruction takes a …","Hit the end of input before it was expected.","Read a null entry before it was expected.","All of the commonly used information for a unit in the …","The common fields for the headers of compilation units and …","The partially parsed index from a <code>DebugCuIndex</code> or …","Information about a unit’s contribution to a section in …","An iterator over the section offsets and sizes for a row …","An offset into the current compilation or type unit.","A CU-relative reference.","An offset into the current compilation unit.","This enum specifies the type of the unit and any type …","Found a record with an unknown abbreviation code.","Found an unknown CFI augmentation.","An unknown DW_CFA_* instruction.","An unknown extended opcode and the slice of its unparsed …","Found an unknown extended opcode.","Found an unknown <code>DW_FORM_*</code> type.","Unknown section type in <code>.dwp</code> index.","The given pointer encoding is either unknown or invalid.","Found an unknown reserved length value.","An unknown standard opcode with zero operands.","An unknown standard opcode with one operand.","An unknown standard opcode with multiple operands.","Found an unknown standard opcode.","Found an unknown DWARF version.","Push an unsigned constant value on the stack.  This …","Ranges using AddressIndex are not supported yet.","The specified address size is not supported.","A DIE attribute used an unsupported form.","An unsupported operation was found while evaluating a …","The specified field size is not supported.","An offset value was larger than the maximum supported …","The specified offset size is not supported.","We do not support the given pointer encoding yet.","Registers larger than <code>u16</code> are not supported.","Nonzero segment selector sizes aren’t supported yet.","An expression operation used types that are not supported.","The <code>DW_UT_*</code> value for this unit is not supported yet.","Common context needed when evaluating the call frame …","Specification of what storage should be used for …","An offset into an <code>UnwindSection</code>.","A section holding unwind information: either <code>.debug_frame</code> …","The <code>UnwindTable</code> iteratively evaluates a …","A row in the virtual unwind table that describes how to …","“The previous value of this register is the value …","DW_CFA_val_expressionThe DW_CFA_val_expression instruction …","“The previous value of this register is the value CFA+N …","DW_CFA_val_offsetThe DW_CFA_val_offset instruction takes …","DW_CFA_val_offset_sfThe DW_CFA_val_offset_sf instruction …","The value of an entry on the DWARF stack.","The piece has no location but its value is known.","The type of an entry on the DWARF stack.","The <code>.eh_frame_hdr</code> binary search table claims to be …","The value of a <code>DW_AT_virtuality</code> attribute.","The value of a <code>DW_AT_visibility</code> attribute.","The index of a global.","The index of a local in the currently executing function.","The index of an item on the operand stack.","Bitwise <code>xor</code> of the top two values on the stack.","Parse the abbreviations for a compilation unit.","Parse the abbreviations at the given <code>offset</code> within this …","Parse this unit’s abbreviations.","The parsed abbreviations for the unit.","A cache of previously parsed abbreviations for units in …","Perform an absolute value operation.","Perform an addition operation.","Add a file to the file table if necessary.","","","The <code>DW_AT_addr_base</code> attribute of the unit. Defaults to 0.","Return the address at the given index.","Return the beginning address of this arange.","“The program-counter value corresponding to a machine …","The size of addresses (in bytes) in this CIE.","Get the size in bytes of a target machine address.","The size of addresses (in bytes) in this compilation unit.","Perform a bitwise and operation.","Get the result of this <code>Evaluation</code>.","Find the first attribute in this entry which has the given …","Try to return an attribute value as an address.","Try to return an attribute value as a location list entry …","Try to return an attribute value as a location list offset.","Try to return an attribute value as a range list entry …","Try to return an attribute value as a range list offset.","Return an attribute value as a string slice.","Find the first attribute in this entry which has the given …","Find the first attribute in this entry which has the given …","Get this abbreviation’s attributes.","Iterate over this entry’s set of attributes.","Get the augmentation data, if any exists.","“A boolean indicating that the current instruction is …","The beginning address of the range.","If given, the bit offset of the piece within the location. …","The size in bits of a value for this type.","","Create a <code>DebugAddr</code> section that references the data in <code>self</code>…","","","","","","","","","","","","","","","","","","","","","","","","Create a <code>Dwarf</code> structure that references the data in <code>self</code>.","","","","","","","","","Create a <code>DebugAbbrev</code> section that references the data in …","","","","","Create a <code>DebugAranges</code> section that references the data in …","","","","","","","","","","","","Create a <code>DebugLine</code> section that references the data in <code>self</code>…","","","","","","","","","","","","","","Create a <code>LocationLists</code> that references the data in <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","Create a <code>RangeLists</code> that references the data in <code>self</code>.","","","","","","Create a <code>DebugStr</code> section that references the data in <code>self</code>.","","Create a <code>DebugStrOffsets</code> section that references the data …","Create a <code>DebugLineStr</code> section that references the data in …","","","Create a <code>DebugInfo</code> section that references the data in <code>self</code>…","","","","","","","","","","","","","","","Create a <code>DebugTypes</code> section that references the data in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a reference to the raw bytes underlying this reader.","Get the canonical frame address (CFA) recovery rule for …","Checked subtraction. Computes <code>self - other</code>.","Create an iterator for the children of the current entry.","Get a reference to this FDE’s CIE.","Parse the <code>CommonInformationEntry</code> at the given offset.","Parse the <code>CommonInformationEntry</code> at the given offsetet this abbreviation’s code.","Get this entry’s code.","A constant that is factored out of all advance location …","“An unsigned integer indicating a column number within a …","The <code>DW_AT_comp_dir</code> attribute of the unit.","Return <code>true</code> if the given address is within this FDE, <code>false</code> …","Return <code>true</code> if the given <code>address</code> is within this row’s …","The type of information that is represented by the …","Convert a <code>Value</code> to the given <code>value_type</code>.","Copy attributes that are subject to relocation from …","The compilation unit index in the <code>.debug_cu_index</code> section.","Return the section contributions of the compilation unit …","Get a reference to the entry that the cursor is currently …","The base address for data relative pointers.","The data containing a single location description.","A constant that is factored out of certain offset …","The <code>.debug_abbrev</code> section.","The <code>.debug_abbrev.dwo</code> section.","The offset into the <code>.debug_abbrev</code> section for this …","The <code>.debug_addr</code> section.","The <code>.debug_aranges</code> section.","The <code>.debug_info</code> section.","The <code>.debug_info.dwo</code> section.","Return the offset into the .debug_info section for this …","The <code>.debug_line</code> section.","The <code>.debug_line.dwo</code> section.","The <code>.debug_line_str</code> section.","The <code>.debug_loc.dwo</code> section.","The <code>.debug_loclists.dwo</code> section.","Return the <code>.debug_ranges</code> section.","Return the <code>.debug_rnglists</code> section.","The <code>.debug_rnglists.dwo</code> section.","The <code>.debug_str</code> section.","The <code>.debug_str.dwo</code> section.","The <code>.debug_str_offsets</code> section.","The <code>.debug_str_offsets.dwo</code> section.","The <code>.debug_types</code> section.","The <code>.debug_types.dwo</code> section.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the default value of the <code>is_stmt</code> register for this …","","","A short description of the error.","Returns the offset into the compilation unit for the …","Returns the offset into the compilation unit for the …","Return an iterator for the address ranges of a …","The include directory with the given directory index.","Get this file’s directory.","Get the format of a directory entry.","An unsigned LEB128 number representing the directory index …","“An unsigned integer identifying the block to which the …","Perform a division operation.","The DWO ID of a skeleton unit or split compilation unit.","Find the dwo name (if any) for this unit, automatically …","Returns the ELF section name (if any) for this type when …","Returns the subrange of the section that is the …","The base addresses to use for pointers in the <code>.eh_frame</code> …","The base addresses to use for pointers in the <code>.eh_frame_hdr</code>…","Returns the address of the binary’s <code>.eh_frame</code> section.","Set the number of bytes remaining to zero.","","","An empty section.","Return the encoding parameters for this CIE.","Return the encoding parameters for this unit.","Return the encoding parameters for this set of entries.","Return the encoding parameters for this header’s line …","Return the encoding parameters for this unit.","The first address that is <em>not</em> covered by this sequence …","The first address past the end of the range.","Get the end PC address where this row’s register rules …","“A boolean indicating that the current address is that …","Return the endianity of bytes that are read.","","","Iterate over the <code>CommonInformationEntry</code>s and …","Iterate over the <code>CommonInformationEntry</code>s and …","Navigate this unit’s <code>DebuggingInformationEntry</code>s.","Return the arange entries in this set.","Navigate this unit’s <code>DebuggingInformationEntry</code>s.","Navigate this unit’s <code>DebuggingInformationEntry</code>s starting …","Navigate this compilation unit’s …","Read the raw data that defines the Debugging Information …","Read the raw data that defines the Debugging Information …","Navigate this unit’s <code>DebuggingInformationEntry</code>s as a tree","Navigate this unit’s <code>DebuggingInformationEntry</code>s as a tree","Read the <code>DebuggingInformationEntry</code> at the given offset.","Read the <code>DebuggingInformationEntry</code> at the given offset.","Returns the current entry in the tree.","A constant that gives the number of bytes of the CIE …","A constant that gives the number of bytes of the header and","“A boolean indicating that the current address is one …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Perform the <code>==</code> relational operation.","","","","Evaluate a DWARF expression.  This method should only ever …","Create an evaluation for this expression.","Execute the given instruction, and return true if a new …","Try to convert this attribute’s value to an expression …","Try to convert this attribute’s value to an expression …","Return the encoding of the addresses for this CIE’s FDEs.","Find the <code>FrameDescriptionEntry</code> for the given address.","Find the <code>FrameDescriptionEntry</code> for the given address.","Returns a parsed FDE for the given address, or …","Parse the <code>FrameDescriptionEntry</code> at the given offset.","Parse the <code>FrameDescriptionEntry</code> at the given offset.","The source file corresponding to the current machine …","The source file with the given file index.","Return true if the file name entry format contains an MD5 …","Return true if the file entries may have valid sizes.","Return true if the file entries may have valid timestamps.","“An unsigned integer indicating the identity of the …","Get the format of a file name entry.","Get the list of source files that appear in this header’…","The type of this file.","Find the index of the first occurence of the given byte. …","Find the first occurence of a byte in the slice, and …","","","Find <code>id</code> in the index hash table, and return the row index.","Find the compilation unit with the given DWO identifier …","Find the type unit with the given type signature and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the attribute’s form.","The encoding form of the component value.","Whether this line program is encoded in 64- or 32-bit …","Whether this compilation unit is encoded in 64- or 32-bit …","Returns a string representation of the given error.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Construct a <code>ValueType</code> from the attributes of a base type …","Construct a <code>ValueType</code> from a base type DIE.","Convert an i16 to an offset.","Convert a u16 to an offset.","Convert a u32 to an offset.","Convert a u64 to an offset.","Create a <code>Value</code> with the given <code>value_type</code> from a <code>u64</code> value.","Convert a u8 to an offset.","Perform the <code>&gt;=</code> relational operation.","Parse the abbreviations at the given offset.","Get the abbreviation associated with the given code.","Returns the address at the given <code>base</code> and <code>index</code>.","Returns the <code>.debug_loclists</code> offset at the given <code>base</code> and …","Returns the <code>.debug_rnglists</code> offset at the given <code>base</code> and …","Lookup a string from the <code>.debug_str</code> section by …","Lookup a string from the <code>.debug_line_str</code> section by …","Returns the <code>.debug_str</code> offset at the given <code>base</code> and <code>index</code>.","Perform the <code>&gt;</code> relational operation.","Return true if this abbreviation’s type has children, …","Return true if this entry’s type can have children, …","True if this CIE’s FDEs have a LSDA.","","","","","","","Get a reference to the held <code>LineProgramHeader</code>.","Get the header at the given offset.","Get a reference to the header for this state machine’s …","Retrieve the <code>LineProgramHeader</code> for this program.","","","Retrieve the <code>LineProgramHeader</code> for this program.","The header of the unit.","Get the UnitHeader located at offset from this .debug_info …","Get the length of the encoded line number program header, …","The serialized size of the header for this compilation …","Iterate the sets of entries in the <code>.debug_aranges</code> section.","Returns the section id for this type.","","","","","","","","","","","","","","","","","","","","","Get the attribute’s implicit const value.","Get the set of include directories for this header’s …","","","","","Parse the index header.","Parse the index header.","The first address for which this entry has unwind …","Iterate over this CIE’s initial instructions.","Iterate over this FDE’s instructions.","Iterate over the instructions in this header’s line …","Convert an <code>UnwindOffset&lt;T&gt;</code> into a <code>T</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the current row with the lifetime of the context.","","","Convert an offset to a u64.","Return true if the number of bytes remaining is zero.","Return true if the number of bytes remaining is zero.","","Return true if the piece is empty.","Return true if there is no more input.","True if this CIE’s FDEs are trampolines for signal …","Return true if this FDE’s function is a trampoline for a …","“A boolean indicating that the current instruction is a …","Tag for the current instruction set architecture.","Iterate the pubnames in the <code>.debug_pubnames</code> section.","Iterate the pubtypes in the <code>.debug_pubtypes</code> section.","Return an iterator that can walk the <code>.eh_frame_hdr</code> table.","Perform the `&lt;= relational operation.","Return the number of bytes remaining.","The number of bytes of instructions that this entry has …","","","Return the length of this set of entries, including the …","Return the length of this arange.","Get the length of the debugging info for this compilation …","“An unsigned integer indicating a source line number. …","Get the line base for this header’s line program.","Get the line encoding parameters for this header’s line …","The line number program of the unit.","Get the line range for this header’s line program.","Return the string at the given offset in <code>.debug_line_str</code>.","Try to load the section using the given loader function.","Try to load the DWARF sections using the given loader …","Try to load the <code>.dwp</code> sections using the given loader …","Load the DWARF sections from the supplementary object file.","Where this piece is to be found.","Iterate over the <code>LocationListEntry</code>s starting at the given …","Iterate over the <code>LocationListEntry</code>s starting at the given …","The location lists in the <code>.debug_loc</code> and <code>.debug_loclists</code> …","Similar to <code>locations</code>, but with special handling for .dwo …","Return the location list offset at the given index.","The <code>DW_AT_loclists_base</code> attribute of the unit. Defaults to …","<em>Probably</em> returns a pointer to the FDE for the given …","Return the offset corresponding to the given <code>id</code> if it is …","Returns the <code>Reader</code> for this section.","Call <code>Reader::lookup_offset_id</code> for each section, and return …","","","Call <code>Reader::lookup_offset_id</code> for each section, and return …","Call <code>Reader::lookup_offset_id</code> for each section, and return …","The <code>DW_AT_low_pc</code> attribute of the unit. Defaults to 0.","The address of this FDE’s language-specific data area …","Return the encoding of the LSDA address for this CIE’s …","Perform the `&lt; relational operation.","Assuming <code>self</code> was loaded from a .dwo, take the appropriate …","Get the maximum number of operations each instruction in …","A 16-byte MD5 digest of the file contents.","Get the minimum instruction length any instruction in this …","Perform a multiplication operation.","Get the attribute’s name.","Returns the name this entry refers to.","Returns the name of the type this entry refers to.","Get this attribute’s name.","The <code>DW_AT_name</code> attribute of the unit.","Perform the `!= relational operation.","Perform a negation operation.","Construct a new <code>DebugFrame</code> instance from the data in the …","Constructs a new <code>EhFrameHdr</code> instance from the data in the …","Construct a new <code>EhFrame</code> instance from the data in the …","Construct a new call frame unwinding context.","Construct a new <code>UnwindTable</code> for the given …","Construct a new <code>Unit</code> from the given unit header.","Construct a new <code>EndianSlice</code> with the given slice and …","Construct a new <code>EndianReader</code> with the given bytes.","Construct a new <code>DebugAbbrev</code> instance from the data in the …","Create an empty abbreviations cache.","Construct a new <code>AttributeSpecification</code> from the given name …","Construct a new <code>DebugAranges</code> instance from the data in the …","Construct a new <code>DebugCuIndex</code> instance from the data in the …","Construct a new <code>DebugTuIndex</code> instance from the data in the …","Construct a new <code>DebugLine</code> instance from the data in the …","Create a line number row in the initial state for the …","Construct a new <code>DebugLoc</code> instance from the data in the …","Construct a new <code>DebugLocLists</code> instance from the data in …","Construct a new <code>LocationLists</code> instance from the data in …","Create a new DWARF expression evaluator.","Construct a new <code>DebugPubNames</code> instance from the data in …","Construct a new <code>DebugPubTypes</code> instance from the data in …","Construct a new <code>DebugRanges</code> instance from the data in the …","Construct a new <code>DebugRngLists</code> instance from the data in the","Construct a new <code>RangeLists</code> instance from the data in the …","Construct a new <code>DebugStr</code> instance from the data in the …","Construct a new <code>DebugLineStr</code> instance from the data in the …","Construct a new <code>DebugInfo</code> instance from the data in the …","Construct a new <code>UnitHeader</code>.","Construct a new <code>DebuggingInformationEntry</code>.","Construct a new <code>DebugTypes</code> instance from the data in the …","Construct a new call frame unwinding context.","Create a new DWARF expression evaluator.","Yield the next entry in the <code>EhHdrTableIter</code>.","Advance the iterator to the next entry.","","Parse the next call frame instruction.","Advance the iterator to the next range.","Advance the iterator to the next header.","Advance the iterator and return the next arange.","","Advance the iterator to the next location.","Advance the iterator to the next location.","Read the next operation in an expression.","Advance the iterator and return the next pubname.","Advance the iterator and return the next pubtype.","Advance the iterator to the next range.","Advance the iterator to the next range.","Advance the iterator to the next unit header.","Advance the iterator and return the next attribute.","Returns an <code>EntriesTreeNode</code> for the next child entry.","Advance the iterator to the next type unit header.","Return the depth of the next entry.","Move the cursor to the next DIE in the tree in DFS order.","Move the cursor to the next DIE in the tree.","Advance the iterator and return the next instruction.","Return the unit offset at which the reader will read next.","Evaluate call frame instructions until the next row of the …","Parse and execute the next instructions in the line number …","Move the cursor to the next sibling DIE of the current one.","Perform a bitwise not operation.","Yield the nth entry in the <code>EhHdrTableIter</code>","Get the offset of this entry from the start of its …","Get the offset of this entry from the start of its …","Return the offset of this header within the <code>.debug_aranges</code> …","Return the offset of the line number program header in the …","Get the offset of this unit within its section.","Get this entry’s offset.","The base offset of the unit’s contribution to the …","Return the offset of this reader’s data relative to the …","Return the offset of the start of the slice relative to …","","","Return the current byte offset of the iterator.","Return an identifier for the current reader offset.","","","Try to convert this attribute’s value to an offset.","Try to convert this attribute’s value to an offset.","An unsigned integer representing the index of an operation …","Get opcode base for this header’s line program.","Return an iterator for the operations in the expression.","Perform a bitwise or operation.","Parses this <code>EhFrameHdr</code> to a <code>ParsedEhFrameHdr</code>.","Fully parse this FDE.","Parse a single DWARF expression operation.","Read a <code>Value</code> with the given <code>value_type</code> from a <code>Reader</code>.","","","","Parse the <code>PartialFrameDescriptionEntry</code> at the given offset.","Parse the <code>PartialFrameDescriptionEntry</code> at the given offset.","A slice containing the full or relative path name of a …","Return the address of the personality routine handler for …","Return the address of the FDE’s function’s personality …","Return the encoding and address of the personality routine …","Convert a <code>Pointer</code> to a section offset.","Parse the line number program whose header is at the given …","“A boolean indicating that the current address is one …","Take the given <code>start..end</code> range of the underlying slice …","Take the given <code>start..end</code> range of the underlying buffer …","Return the range.","Get the underlying bytes for the supplied range.","The address range that this location is valid for.","Take the given <code>start..</code> range of the underlying slice and …","Take the given <code>start..</code> range of the underlying buffer and …","Get the underlying bytes for the supplied range.","Take the given <code>..end</code> range of the underlying slice and …","Take the given <code>..end</code> range of the underlying buffer and …","Get the underlying bytes for the supplied range.","Iterate over the <code>RangeListEntry</code>s starting at the given …","Iterate over the <code>Range</code> list entries starting at the given …","The range lists in the <code>.debug_ranges</code> and <code>.debug_rnglists</code> …","Return the range list offset at the given index.","Return the range list offset for the given raw offset.","Iterate over the raw <code>LocationListEntry</code>s starting at the …","Iterate over the raw <code>LocationListEntry</code>s starting at the …","Similar to <code>raw_locations</code>, but with special handling for …","Get the raw, un-parsed <code>EndianSlice</code> containing this header…","Iterate over the <code>RawRngListEntry</code>ies starting at the given …","Iterate over the <code>RawRngListEntry</code>ies starting at the given …","Get this attribute’s raw value.","Read an abbreviation code and lookup the corresponding …","Read an address-sized integer, and return it as a <code>u64</code>.","Read an address-sized integer, and return it as a <code>u64</code>.","Read an attribute.","Read a f32.","Read a f32.","Read a f64.","Read a f64.","Read an i16.","Read an i16.","Read an i32.","Read an i32.","Read an i64.","Read an i64.","Read an i8.","Read an i8.","Read an initial length field.","Read an initial length field.","Parse a word-sized section length according to the DWARF …","Parse a word-sized section length according to the DWARF …","Read a null-terminated slice, and return it (excluding the …","Read a null-terminated slice, and return it (excluding the …","Parse a word-sized section offset according to the DWARF …","Parse a word-sized section offset according to the DWARF …","Parse a section offset of the given size.","Parse a section offset of the given size.","Read a signed LEB128 encoded integer.","Read a signed LEB128 encoded integer.","Read exactly <code>buf.len()</code> bytes into <code>buf</code>.","","","Read a u16.","Read a u16.","Read a u32.","Read a u32.","Read a u64.","Read a u64.","Read a u8.","Read a u8.","Read a u8 array.","Read a u8 array.","Read an unsigned n-bytes integer u64.","Read an unsigned n-bytes integer u64.","Read an unsigned LEB128 encoded integer.","Read an unsigned LEB128 encoded integer.","Read an unsigned LEB128 encoded u16.","Read an unsigned LEB128 encoded u16.","Read an unsigned LEB128 encoded u32.","Read an unsigned LEB128 encoded u32.","Parse a word-sized integer according to the DWARF format.","Parse a word-sized integer according to the DWARF format.","Returns the <code>Reader</code> for this section.","","","","","","","","","","","","","","","","","","","","","Get the register recovery rule for the given register …","Iterate over all defined register <code>(number, rule)</code> pairs.","Reinterpret the bits in a <code>Value</code> as the given <code>value_type</code>.","Perform a remainder operation.","Perform any reset that was required after copying the …","Get the result of this <code>Evaluation</code>.","Construct a new <code>LineRows</code> for executing the subset of the …","Resume the <code>Evaluation</code> with the provided <code>bytes</code>.  This will …","Resume the <code>Evaluation</code> with the provided <code>base_type</code>.  This …","Resume the <code>Evaluation</code> with the provided <code>cfa</code>.  This will …","Resume the <code>Evaluation</code> with the provided <code>entry_value</code>.  This …","Resume the <code>Evaluation</code> with the provided <code>frame_base</code>.  This …","Resume the <code>Evaluation</code> with the provided indexed <code>address</code>.  …","Resume the <code>Evaluation</code> with the provided memory <code>value</code>.  …","Resume the <code>Evaluation</code> with the provided <code>parameter_value</code>.  …","Resume the <code>Evaluation</code> with the provided <code>register</code> value.  …","Resume the <code>Evaluation</code> with the provided relocated <code>address</code>. …","Resume the <code>Evaluation</code> with the provided <code>value</code>.  This will …","An unsigned … constant that indicates which column in …","The <code>DW_AT_rnglists_base</code> attribute of the unit. Defaults to …","Returns the root node of the tree.","Return the table of unwind information for this FDE.","Construct a new <code>LineRows</code> for executing this program to …","Returns the amount of args currently on the stack.","Try to convert this attribute’s value to a signed …","Try to convert this attribute’s value to a signed …","The address of the section containing the pointer.","The section kind.","Return the number of sections.","Returns the ELF section name for this type.","Return the section contributions of a unit.","Return the section offsets and sizes for the given row …","Return the segment selector of this arange.","Return the segment size for this set of entries.","Execute the line number program, completing the …","Set the size of a target address in bytes.","Set the size of a target address in bytes.","Replace the <code>.debug_ranges</code> section.","Set the <code>.eh_frame</code> section base address.","Set the <code>.eh_frame_hdr</code> section base address.","Set the <code>.got</code> section base address.","Set an initial value to be pushed on the DWARF expression …","Set the maximum number of iterations to be allowed by the …","Set the enclosing object’s address, as used by …","Set the size of a segment selector in bytes.","Set the <code>.text</code> section base address.","Perform a shift left operation.","Perform a logical shift right operation.","Perform an arithmetic shift right operation.","Return the size of the attribute, in bytes.","The size of the file in bytes, or 0 if not available.","The size of the unit’s contribution to the section.","If given, the size of the piece in bits.  If <code>None</code>, there …","Return the serialized size of the common unit header for …","Discard the specified number of bytes.","","","Skip all the attributes of an abbreviation.","Skip a LEB128 encoded integer.","Skip a LEB128 encoded integer.","Return a reference to the raw slice.","Return the number of slots.","Split a reader in two.","","","Split the slice in two at the given index, resulting in …","An array of <code>u8</code> that specifies the number of LEB128 …","The first address that is covered by this sequence within …","Get the starting PC address that this row applies to.","The <code>DW_AT_str_offsets_base</code> attribute of the unit. Defaults …","Return the string at the given offset in <code>.debug_str</code>.","Return the string offset at the given index.","Try to return this attribute’s value as a string slice.","Try to return this attribute’s value as a string slice.","Try to return this attribute’s value as a string slice.","Try to return this attribute’s value as a string slice.","Perform a subtraction operation.","Return a reference to the DWARF sections for supplementary …","The DWARF sections for a supplementary object file.","Retrieves the CFI binary search table, if there is one.","Get this abbreviation’s tag.","Get this entry’s <code>DW_TAG_whatever</code> tag.","The base address for text relative pointers. This is …","The implementation-defined time of last modification of …","Convert an offset to be relative to the start of the …","Convert an offset to be relative to the start of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return all remaining data as a clone-on-write slice.","","","Convert all remaining data to a clone-on-write string.","","Converts the slice to a string using <code>str::from_utf8</code>.","","","","Convert all remaining data to a clone-on-write string, …","Converts the slice to a string, including invalid …","","","Convert a <code>Value</code> to a <code>u64</code>.","Convert an offset to be relative to the start of the …","Set the number of bytes remaining to the specified lengthhe type unit index in the <code>.debug_tu_index</code> section.","Return the section contributions of the compilation unit …","Get the UnitType of this unit.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterate the type-unit headers in the <code>.debug_types</code> section.","Try to convert this attribute’s value to a u16.","Try to convert this attribute’s value to a u16.","Try to convert this attribute’s value to a u8.","Try to convert this attribute’s value to a u8.","Try to convert this attribute’s value to an unsigned …","Try to convert this attribute’s value to an unsigned …","Construct a new <code>Unit</code> from the given unit header.","Return the number of units.","Returns the offset into the .debug_info section for the …","Returns the offset into the .debug_info section for the …","Return the length of the line number program and header, …","Get the length of the debugging info for this compilation …","Return an iterator for the address ranges of a <code>Unit</code>.","Iterate the unit headers in the <code>.debug_info</code> section.","Iterate the units in this <code>.debug_info</code> section.","Iterate the type-units in this <code>.debug_types</code> section.","Find the frame unwind information for the given address.","Find the frame unwind information for the given address.","Returns the frame unwind information for the given address,","Find the frame unwind information for the given address.","Get this attribute’s normalized value.","Return the <code>ValueType</code> corresponding to this <code>Value</code>.","A version number (see Section 7.23). This number is …","Return the version.","Get the version of this header’s line program.","Get the DWARF version of the debugging info for this …","Wrapping (modular) addition. Computes <code>self + other</code>.","Returns the XCOFF section name (if any) for this type when …","Perform a bitwise exclusive-or operation.","The target address.","The delta to be added to the current address.","The number of the register whose rule is being changed.","The DWARF expression.","The DWARF expression.","The DWARF expression.","The factored offset.","The factored offset.","The factored offset.","The factored offset.","The factored offset.","The factored offset.","The non-factored offset.","The non-factored offset.","The target register’s number.","The target register’s number.","The target register’s number.","The target register’s number.","The target register’s number.","The target register’s number.","The target register’s number.","The target register’s number.","The target register’s number.","The target register’s number.","The target register’s number.","The register to be reset.","The size of the arguments which have been pushed onto the …","The number of the register where the other register’s …","The offset from the register’s base value.","The register containing the base value.","The address of the value required.","The DIE of the base type or 0 to indicate the generic type","The DIE of the base type or 0 to indicate the generic type","The index of the address in the <code>.debug_addr</code> section, …","The register number.","Whether the address also needs to be relocated.","The size of the value required. This is guaranteed to be …","If not <code>None</code>, a target-specific address space value.","The address.","The byte offset into the value that the implicit pointer …","The register number.","The value.","The value.","The <code>.debug_info</code> offset of the value that this is an …","The offset to add.","The DIE of the base type or 0 to indicate the generic type","The DIE of the base type or 0 to indicate the generic type","The DIE of the base type.","The DIE of the base type.","The DIE of the base type.","The bit offset of this piece.  If <code>None</code>, then this piece …","The byte offset into the value that the implicit pointer …","The implicit value to use.","The expression to be evaluated.","The index, from the top of the stack, of the item to copy.","The index of the address in <code>.debug_addr</code>.","The index of the address in <code>.debug_addr</code>.","The index of the local.","The index of the global.","The index of the stack item. 0 is the bottom of the …","The offset to add.","The offset to add.","The DIE to use.","The DIE to use.","The register number.","The register number.","The size of the data to dereference.","The size of this piece in bits.","True if the dereference operation takes an address space …","The relative offset to the target bytecode.","The relative offset to the target bytecode.","The value to add.","The value to push.","The value to push.","The <code>.debug_info</code> offset of the value that this is an …","The value bytes.","base address","base address","Start of range. May be an address or an offset.","start of range","start of range","start of range","start of range","start of range","expression","expression","expression","expression","expression","expression","expression","End of range. May be an address or an offset.","end of range","end of range","end of range","length of range","length of range","base address","base address","Start of range. May be an address or an offset.","start of range","start of range","start of range","start of range","start of range","End of range. May be an address or an offset.","end of range","end of range","end of range","length of range","length of range","The offset within this type unit where the type is defined.","The offset within this type unit where the type is defined.","The unique type signature for this type unit.","The unique type signature for this type unit."],"i":[36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,0,34,34,34,34,34,34,34,34,0,40,0,38,39,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,38,39,31,0,31,0,0,31,0,31,31,0,31,0,1,31,0,31,0,31,31,0,0,31,0,31,0,31,31,31,31,0,0,31,0,31,0,0,31,0,31,0,1,5,5,0,33,0,38,38,38,38,38,38,38,39,38,38,31,31,0,0,0,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,36,36,36,36,36,36,36,39,36,38,39,36,37,36,37,37,37,36,37,36,37,36,37,36,37,36,37,36,37,37,37,39,38,39,36,37,36,37,36,37,36,37,36,36,36,36,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,0,37,38,39,38,39,39,39,39,39,39,39,39,39,38,39,34,0,40,0,0,0,38,39,38,39,38,39,38,39,38,39,38,39,38,39,38,39,38,39,33,0,34,34,36,34,36,34,36,39,34,34,34,36,39,34,34,34,36,39,34,34,34,36,39,34,34,34,34,34,34,34,36,39,34,34,34,34,34,34,34,36,39,36,36,36,36,34,36,36,36,36,36,36,36,36,36,36,36,34,36,36,36,34,36,34,36,34,36,34,36,34,36,39,34,34,34,36,39,34,34,36,37,38,39,39,39,39,39,39,39,39,39,39,0,0,0,0,0,34,36,37,34,36,37,34,37,34,37,34,34,34,34,34,34,34,34,34,36,37,34,34,34,34,34,34,34,34,34,34,34,36,37,34,34,34,36,37,34,36,37,34,36,37,34,36,37,34,36,37,34,37,34,35,36,37,34,34,34,34,34,34,38,39,38,39,38,39,38,39,38,39,38,39,38,39,38,39,38,39,0,0,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,36,36,37,38,39,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,35,37,35,37,35,37,35,37,35,37,35,37,35,37,35,37,35,37,35,37,35,37,35,37,35,37,35,37,35,37,35,37,35,37,35,37,35,37,35,37,35,37,35,37,35,37,35,37,35,37,37,35,37,35,37,35,37,35,37,35,37,0,0,35,37,38,39,38,39,39,39,39,39,39,39,39,39,39,39,38,39,39,39,39,39,39,39,39,39,39,39,38,39,39,39,38,39,38,39,38,39,38,39,39,39,36,37,6,1,1,5,6,7,8,10,11,12,13,2,14,15,16,17,18,19,20,21,22,23,24,25,26,27,4,28,29,30,1,31,32,33,34,35,36,37,38,39,40,41,42,5,6,7,8,10,11,12,13,2,14,15,16,17,18,19,20,21,22,23,24,25,26,27,4,28,29,30,1,31,32,33,34,35,36,37,38,39,40,41,42,5,6,7,8,10,11,12,13,2,14,15,16,17,18,19,20,21,22,23,24,25,26,27,4,28,29,30,1,31,32,33,34,35,36,37,38,39,40,41,42,5,6,7,8,10,11,12,13,2,14,15,16,17,18,19,20,21,22,23,24,25,26,27,4,28,29,30,1,31,32,33,34,35,36,37,38,39,40,41,42,8,2,4,1,31,0,7,33,40,41,42,17,23,26,7,31,5,6,7,8,10,11,12,13,2,14,15,16,17,18,19,20,21,22,23,24,25,26,27,4,28,29,30,1,31,32,33,40,41,42,5,6,7,8,10,11,12,13,2,14,15,16,17,18,19,20,21,22,23,24,25,26,27,4,28,29,30,1,31,32,33,34,35,36,37,38,39,40,41,42,6,5,6,7,8,10,11,12,13,2,14,15,16,17,18,19,20,21,22,23,24,25,26,27,4,28,29,29,29,30,30,30,1,1,1,31,32,33,34,35,36,37,38,39,40,41,42,5,6,7,8,10,2,16,19,20,21,22,4,28,29,30,1,31,32,40,41,42,5,5,6,7,8,10,11,12,13,2,14,15,16,17,18,19,20,21,22,23,24,25,26,27,4,28,29,29,30,30,1,31,32,33,34,35,36,37,38,39,40,41,42,223,40,41,42,223,223,0,7,7,7,7,31,34,35,36,37,38,39,8,2,4,1,31,0,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,34,35,36,37,38,39,5,6,7,8,10,11,12,13,2,14,15,16,17,18,19,20,21,22,23,24,25,26,27,4,28,29,30,1,31,32,33,34,35,36,37,38,39,40,41,42,2,4,1,5,6,7,8,10,11,12,13,2,14,15,16,17,18,19,20,21,22,23,24,25,26,27,4,28,29,30,1,31,32,33,34,35,36,37,38,39,40,41,42,5,6,7,8,10,11,12,13,2,14,15,16,17,18,19,20,21,22,23,24,25,26,27,4,28,29,30,1,31,32,33,34,35,36,37,38,39,40,41,42,5,6,7,8,10,11,12,13,2,14,15,16,17,18,19,20,21,22,23,24,25,26,27,4,28,29,30,1,31,32,33,34,35,36,37,38,39,40,41,42,6,5,223,223,223,223,223,223,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,69,85,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,69,69,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,69,69,69,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,69,0,0,0,0,0,0,205,0,0,183,121,121,183,184,121,183,180,196,173,158,173,183,0,0,0,0,157,158,0,0,205,0,0,0,0,205,205,205,205,205,205,180,196,0,180,196,121,183,184,183,183,0,0,121,205,0,0,205,153,0,175,0,0,199,210,0,0,173,183,183,173,121,121,121,121,205,0,0,121,121,0,0,0,0,182,121,121,0,0,121,0,121,0,0,121,121,121,121,0,0,0,0,121,121,0,0,121,121,121,121,0,0,121,0,0,121,158,158,158,158,158,158,180,173,183,0,160,183,205,183,205,205,0,0,121,0,0,0,0,184,121,173,104,0,0,0,0,0,121,0,0,0,0,0,183,183,0,0,0,0,205,205,0,141,157,158,117,121,127,109,127,109,153,0,0,121,173,121,0,183,205,183,127,109,183,127,109,127,109,127,109,127,109,121,183,184,183,0,0,160,121,205,205,205,205,205,205,205,205,205,205,205,205,205,224,121,183,175,0,0,0,0,0,0,0,0,205,0,0,0,0,0,0,0,121,183,205,205,183,205,205,183,183,183,183,173,205,205,158,183,183,205,205,205,205,157,158,225,104,158,205,180,196,0,205,0,0,0,183,121,183,0,199,0,205,183,0,183,183,183,0,205,0,0,0,0,183,0,0,0,121,0,0,0,0,0,0,0,157,158,183,184,141,183,0,0,183,158,210,210,210,210,210,210,210,210,210,210,210,158,158,0,117,0,183,139,157,158,121,121,0,0,173,173,173,173,173,173,173,158,173,183,183,183,183,199,183,173,199,199,139,117,205,183,180,196,180,196,180,196,180,196,0,0,121,183,183,205,205,205,199,205,183,127,109,127,109,127,109,127,109,121,157,158,205,205,0,0,0,0,0,0,182,121,0,205,205,205,173,205,205,205,205,205,173,173,173,205,205,183,205,205,205,205,205,205,205,205,205,205,205,205,0,0,0,0,0,0,157,158,157,158,158,0,184,0,205,121,121,183,183,183,183,105,108,64,66,105,109,109,226,111,112,66,105,113,114,115,116,64,109,118,119,105,105,105,105,105,105,119,119,124,119,115,114,197,185,127,128,128,146,147,148,211,149,150,145,151,152,153,126,115,154,144,155,212,156,140,141,157,158,159,160,105,105,206,66,208,161,138,162,108,108,209,106,124,163,129,129,164,165,166,113,167,168,169,170,171,130,130,172,173,174,114,175,176,116,111,112,110,177,178,179,131,131,213,180,122,181,182,183,184,185,210,186,187,118,188,189,190,191,192,193,194,195,132,132,214,196,123,197,133,133,134,134,135,135,65,136,136,198,199,64,119,121,120,125,200,201,202,142,143,137,137,203,127,109,204,205,128,146,147,148,211,149,150,145,151,152,153,126,115,154,144,155,212,156,140,141,157,158,159,160,105,206,66,208,161,138,162,108,209,106,124,163,129,164,165,166,113,167,168,169,170,171,130,172,173,174,114,175,176,116,111,112,110,177,178,179,131,213,180,122,181,182,183,184,185,210,186,187,118,188,189,190,191,192,193,194,195,132,214,196,123,197,133,134,135,65,136,198,199,64,119,121,120,125,200,201,202,142,143,137,203,127,109,204,205,138,140,63,142,144,225,225,128,146,147,148,149,150,145,151,152,153,126,115,154,144,155,156,140,141,157,158,159,160,161,138,162,108,106,124,163,129,164,165,166,113,167,168,169,170,171,130,172,173,174,114,175,176,116,111,112,110,177,178,179,131,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,132,196,197,133,134,135,65,136,198,199,64,119,121,120,125,200,201,202,137,203,127,109,204,205,128,146,147,148,149,150,145,151,152,153,126,115,154,144,155,156,140,141,157,158,159,160,161,138,162,108,106,124,163,129,164,165,166,113,167,168,169,170,171,130,172,173,174,114,175,176,116,111,112,110,177,178,179,131,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,132,196,197,133,134,135,65,136,198,199,64,119,121,120,125,200,201,202,137,203,127,109,204,205,113,175,65,124,119,115,114,66,144,140,177,109,66,206,206,201,151,181,115,105,206,64,105,105,105,206,165,105,206,105,206,206,132,132,206,105,206,105,206,105,206,128,145,151,126,155,140,141,160,105,208,161,108,209,106,129,167,168,130,178,179,131,194,195,132,133,134,135,136,137,116,161,138,205,188,191,105,116,110,116,110,114,109,66,66,227,227,145,145,148,104,161,138,206,115,66,165,116,64,176,197,140,114,104,161,138,225,225,66,165,64,66,64,66,64,66,64,66,64,142,115,144,114,146,147,150,145,151,153,126,115,154,144,155,140,141,157,158,160,161,138,162,124,163,165,113,171,173,114,175,116,111,112,110,177,181,182,183,184,185,210,186,197,65,199,64,121,120,127,109,109,204,205,118,186,114,121,120,115,225,225,149,225,225,114,116,116,116,116,114,116,116,105,104,161,161,138,169,206,206,128,146,147,148,211,149,150,145,151,152,153,126,115,154,144,155,212,156,140,141,157,158,159,160,105,206,66,208,161,138,162,108,209,106,124,163,129,164,165,166,113,167,168,169,170,171,130,172,173,173,174,114,175,176,116,111,112,110,177,178,179,131,213,180,122,181,182,183,184,185,210,186,187,118,188,189,190,191,192,193,194,195,132,214,196,123,197,133,134,135,65,136,198,199,64,119,121,120,125,200,201,202,142,143,137,203,127,109,204,205,205,163,177,116,64,105,128,128,128,146,146,146,147,147,147,148,211,149,150,150,150,145,151,152,153,126,115,154,144,155,212,156,140,141,157,158,159,160,105,206,66,208,161,138,162,108,108,108,209,106,124,163,129,129,129,164,165,166,113,167,167,167,168,168,168,169,170,171,130,130,130,172,173,174,114,175,176,116,111,112,110,177,178,178,178,179,179,179,131,213,180,122,181,182,183,184,185,210,186,187,118,188,189,189,189,190,191,192,192,192,193,194,194,194,195,195,195,132,214,196,123,197,133,133,133,134,134,134,135,135,135,65,136,136,136,198,199,64,119,121,120,125,200,201,202,142,143,137,137,137,203,127,109,204,205,127,127,63,63,63,63,109,63,109,209,106,128,131,132,133,135,134,109,124,119,115,161,138,181,186,197,65,226,129,172,111,111,112,112,66,136,116,64,129,227,128,146,147,150,108,129,167,168,130,178,179,189,192,194,195,133,134,135,136,137,163,116,161,161,138,138,167,168,144,115,144,116,228,128,146,147,148,211,149,150,145,151,152,153,126,115,154,144,155,212,156,140,141,157,158,159,160,105,206,66,208,161,138,162,108,209,106,124,163,129,164,165,166,113,167,168,169,170,171,130,172,173,174,114,175,176,116,111,112,110,177,178,179,131,213,180,122,181,182,183,184,185,210,186,187,118,188,189,190,191,192,193,194,195,132,214,196,123,197,133,134,135,65,136,198,199,64,119,121,120,125,200,201,202,142,143,137,203,127,109,204,205,212,156,170,63,104,104,161,184,200,115,144,114,114,189,192,149,109,104,144,161,138,165,113,64,114,116,116,66,116,105,227,105,206,105,185,105,131,105,131,105,66,149,104,227,105,161,138,131,132,66,144,115,109,105,116,110,116,109,163,188,191,120,66,109,109,146,147,150,155,212,66,161,138,108,209,163,129,167,168,130,114,178,179,131,118,189,192,194,195,132,133,135,136,64,119,137,155,118,211,152,156,159,208,164,166,170,213,122,187,190,193,214,123,198,125,143,203,200,201,201,174,200,212,172,201,109,211,115,144,165,116,64,119,171,104,161,161,138,187,104,161,138,121,120,114,116,186,109,147,154,183,109,113,175,65,225,225,110,115,144,115,149,130,114,161,138,113,64,181,161,138,64,161,138,64,105,132,105,105,105,105,131,131,116,105,132,120,200,104,104,200,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,161,138,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,227,128,146,147,150,108,129,167,168,130,178,179,189,192,194,195,133,134,135,136,137,140,140,109,109,114,118,112,118,118,118,118,118,118,118,118,118,118,118,115,66,202,144,111,140,121,120,151,171,169,227,206,169,113,165,111,146,150,132,145,145,145,118,118,118,146,145,109,109,109,163,110,171,185,64,104,161,138,200,104,104,161,169,104,161,138,161,116,176,140,66,105,105,121,120,121,120,109,105,105,148,124,119,151,110,65,65,128,146,147,148,149,150,145,151,152,153,126,115,154,144,155,156,140,141,157,158,159,160,161,138,162,108,106,124,163,129,164,165,166,113,167,168,169,170,171,130,172,173,174,114,175,176,116,111,112,110,177,178,179,131,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,132,196,197,133,134,135,65,136,198,199,64,119,121,120,125,200,201,202,137,203,127,109,204,205,104,161,138,104,161,161,138,173,205,104,161,161,138,109,65,104,161,138,128,146,147,148,211,149,150,145,151,152,153,126,115,154,144,155,212,156,140,141,157,158,159,160,105,206,66,208,161,138,162,108,209,106,124,163,129,164,165,166,113,167,168,169,170,171,130,172,173,174,114,175,176,116,111,112,110,177,178,179,131,213,180,122,181,182,183,184,185,210,186,187,118,188,189,190,191,192,193,194,195,132,214,196,123,197,133,134,135,65,136,198,199,64,119,121,120,125,200,201,202,142,143,137,203,127,109,204,205,128,146,147,148,211,149,150,145,151,152,153,126,115,154,144,155,212,156,140,141,157,158,159,160,105,206,66,208,161,138,162,108,209,106,124,163,129,164,165,166,113,167,168,169,170,171,130,172,173,174,114,175,176,116,111,112,110,177,178,179,131,213,180,122,181,182,183,184,185,210,186,187,118,188,189,190,191,192,193,194,195,132,214,196,123,197,133,134,135,65,136,198,199,64,119,121,120,125,200,201,202,142,143,137,203,127,109,204,205,206,206,64,128,146,147,148,211,149,150,145,151,152,153,126,115,154,144,155,212,156,140,141,157,158,159,160,105,206,66,208,161,138,162,108,209,106,124,163,129,164,165,166,113,167,168,169,170,171,130,172,173,174,114,175,176,116,111,112,110,177,178,179,131,213,180,122,181,182,183,184,185,210,186,187,118,188,189,190,191,192,193,194,195,132,214,196,123,197,133,134,135,65,136,198,199,64,119,121,120,125,200,201,202,142,143,137,203,127,109,204,205,105,121,120,121,120,121,120,105,169,188,191,116,64,105,105,136,137,225,225,149,144,120,109,115,169,116,64,63,227,109,229,230,231,232,233,234,235,236,237,238,239,240,241,242,241,235,243,244,245,237,238,239,240,233,234,246,247,231,248,248,249,249,250,251,250,251,249,249,252,253,254,255,256,253,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,259,273,274,275,276,259,258,263,258,277,278,279,280,281,264,260,282,283,284,285,286,287,288,289,284,285,286,287,290,288,289,284,285,287,288,286,289,291,292,293,294,295,296,297,298,293,294,296,297,295,298,299,300,299,300],"fp":[[4,"UnitSectionOffset"],[3,"DebugInfoOffset"],[4,"Option"],[3,"DebugTypesOffset"],[4,"Format"],[3,"Encoding"],[3,"LineEncoding"],[3,"Register"],[8,"Clone"],[3,"DebugAbbrevOffset"],[3,"DebugAddrBase"],[3,"DebugAddrIndex"],[3,"DebugArangesOffset"],[3,"DebugLineOffset"],[3,"DebugLineStrOffset"],[3,"LocationListsOffset"],[3,"DebugLocListsBase"],[3,"DebugLocListsIndex"],[3,"DebugMacinfoOffset"],[3,"DebugMacroOffset"],[3,"RawRangeListsOffset"],[3,"RangeListsOffset"],[3,"DebugRngListsBase"],[3,"DebugRngListsIndex"],[3,"DebugStrOffset"],[3,"DebugStrOffsetsBase"],[3,"DebugStrOffsetsIndex"],[3,"DebugTypeSignature"],[3,"DebugFrameOffset"],[3,"EhFrameOffset"],[4,"SectionId"],[3,"DwoId"],[4,"DwarfFileType"],[3,"Arm"],[3,"AArch64"],[3,"LoongArch"],[3,"RiscV"],[3,"X86"],[3,"X86_64"],[4,"RunTimeEndian"],[3,"LittleEndian"],[3,"BigEndian"],[4,"Ordering"],[8,"Ord"],[15,"str"],[15,"bool"],[8,"PartialEq"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[15,"never"],[8,"Hash"],[15,"u8"],[8,"PartialOrd"],[15,"f32"],[15,"f64"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"u16"],[15,"u32"],[15,"u64"],[8,"ReaderOffset"],[3,"UnitHeader"],[3,"UnitOffset"],[3,"Unit"],[4,"Result"],[3,"TypeId"],[3,"DwEhPe"],[3,"DwSect"],[3,"DwSectV2"],[3,"DwUt"],[3,"DwCfa"],[3,"DwChildren"],[3,"DwTag"],[3,"DwAt"],[3,"DwForm"],[3,"DwAte"],[3,"DwLle"],[3,"DwDs"],[3,"DwEnd"],[3,"DwAccess"],[3,"DwVis"],[3,"DwVirtuality"],[3,"DwLang"],[3,"DwAddr"],[3,"DwId"],[3,"DwCc"],[3,"DwInl"],[3,"DwOrd"],[3,"DwDsc"],[3,"DwIdx"],[3,"DwDefaulted"],[3,"DwLns"],[3,"DwLne"],[3,"DwLnct"],[3,"DwMacro"],[3,"DwRle"],[3,"DwOp"],[15,"usize"],[3,"Error"],[3,"String"],[6,"Result"],[8,"Reader"],[3,"Dwarf"],[3,"Abbreviations"],[3,"Arc"],[3,"DebugAbbrev"],[4,"Value"],[3,"FileEntry"],[3,"IncompleteLineProgram"],[3,"CompleteLineProgram"],[3,"ArangeEntry"],[3,"LineRow"],[3,"CommonInformationEntry"],[3,"LineProgramHeader"],[8,"EvaluationStorage"],[3,"Evaluation"],[3,"DebuggingInformationEntry"],[3,"Attribute"],[4,"AttributeValue"],[3,"LocListIter"],[3,"RngListIter"],[3,"Abbreviation"],[3,"AttrsIter"],[3,"Augmentation"],[4,"ValueType"],[3,"DebugAddr"],[3,"DebugAranges"],[3,"DebugLine"],[3,"LocationLists"],[3,"RangeLists"],[3,"DebugStr"],[3,"DebugStrOffsets"],[3,"DebugLineStr"],[3,"DebugInfo"],[3,"DebugTypes"],[3,"EndianReader"],[8,"UnwindContextStorage"],[3,"UnwindTableRow"],[4,"CfaRule"],[3,"EntriesTreeNode"],[3,"EntriesTreeIter"],[3,"FrameDescriptionEntry"],[3,"BaseAddresses"],[3,"DebugFrame"],[3,"EhFrameHdr"],[3,"ParsedEhFrameHdr"],[3,"EhHdrTable"],[3,"EhFrame"],[3,"SectionBaseAddresses"],[3,"CfiEntriesIter"],[4,"CieOrFde"],[3,"PartialFrameDescriptionEntry"],[3,"UnwindContext"],[3,"RegisterRuleIter"],[4,"RegisterRule"],[4,"CallFrameInstruction"],[3,"CallFrameInstructionIter"],[4,"Pointer"],[3,"EndianSlice"],[3,"ReaderOffsetId"],[3,"AttributeSpecification"],[3,"ArangeHeaderIter"],[3,"ArangeHeader"],[3,"ArangeEntryIter"],[3,"DebugCuIndex"],[3,"DebugTuIndex"],[3,"UnitIndex"],[3,"UnitIndexSectionIterator"],[3,"UnitIndexSection"],[3,"LineRows"],[4,"LineInstruction"],[3,"LineInstructions"],[4,"ColumnType"],[3,"LineSequence"],[3,"FileEntryFormat"],[3,"DebugLoc"],[3,"DebugLocLists"],[4,"RawLocListEntry"],[3,"LocationListEntry"],[4,"DieReference"],[4,"Operation"],[4,"Location"],[3,"Piece"],[3,"Expression"],[3,"OperationIter"],[3,"PubNamesEntry"],[3,"DebugPubNames"],[3,"PubNamesEntryIter"],[3,"PubTypesEntry"],[3,"DebugPubTypes"],[3,"PubTypesEntryIter"],[3,"DebugRanges"],[3,"DebugRngLists"],[4,"RawRngListEntry"],[3,"Range"],[3,"DebugInfoUnitHeadersIter"],[4,"UnitType"],[3,"EntriesRaw"],[3,"EntriesCursor"],[3,"EntriesTree"],[3,"DebugTypesUnitHeadersIter"],[3,"StoreOnHeap"],[4,"Error"],[3,"DwarfPackage"],[8,"Default"],[3,"RangeIter"],[3,"AbbreviationsCache"],[4,"EvaluationResult"],[3,"EhHdrTableIter"],[3,"UnwindTable"],[3,"RawLocListIter"],[3,"RawRngListIter"],[3,"RangeFrom"],[3,"NonZeroU64"],[15,"i8"],[15,"isize"],[3,"Range"],[3,"RangeTo"],[3,"Vec"],[4,"Cow"],[8,"Endianity"],[8,"ArrayLike"],[8,"UnwindSection"],[8,"LineProgram"],[8,"Section"],[8,"UnwindOffset"],[13,"SetLoc"],[13,"AdvanceLoc"],[13,"Register"],[13,"DefCfaExpression"],[13,"Expression"],[13,"ValExpression"],[13,"DefCfaSf"],[13,"DefCfaOffsetSf"],[13,"Offset"],[13,"OffsetExtendedSf"],[13,"ValOffset"],[13,"ValOffsetSf"],[13,"DefCfa"],[13,"DefCfaOffset"],[13,"DefCfaRegister"],[13,"Undefined"],[13,"SameValue"],[13,"Restore"],[13,"ArgsSize"],[13,"RegisterAndOffset"],[13,"RequiresMemory"],[13,"RequiresRegister"],[13,"RequiresIndexedAddress"],[13,"Address"],[13,"ImplicitPointer"],[13,"Register"],[13,"Value"],[13,"Bytes"],[13,"Address"],[13,"Deref"],[13,"RegisterOffset"],[13,"TypedLiteral"],[13,"Convert"],[13,"Reinterpret"],[13,"Piece"],[13,"ImplicitPointer"],[13,"ImplicitValue"],[13,"EntryValue"],[13,"Pick"],[13,"AddressIndex"],[13,"ConstantIndex"],[13,"WasmLocal"],[13,"WasmGlobal"],[13,"WasmStack"],[13,"FrameOffset"],[13,"Call"],[13,"ParameterRef"],[13,"Register"],[13,"Bra"],[13,"Skip"],[13,"PlusConstant"],[13,"UnsignedConstant"],[13,"SignedConstant"],[13,"BaseAddress"],[13,"BaseAddressx"],[13,"AddressOrOffsetPair"],[13,"StartxEndx"],[13,"StartxLength"],[13,"OffsetPair"],[13,"StartEnd"],[13,"StartLength"],[13,"DefaultLocation"],[13,"BaseAddress"],[13,"BaseAddressx"],[13,"AddressOrOffsetPair"],[13,"StartxEndx"],[13,"StartxLength"],[13,"OffsetPair"],[13,"StartEnd"],[13,"StartLength"],[13,"Type"],[13,"SplitType"]]},\
"hashbrown":{"doc":"This crate is a Rust port of Google’s high-performance …","t":[13,13,3,3,4,11,11,11,11,11,11,11,0,0,11,11,11,11,11,12,6,3,3,4,4,3,3,3,3,3,3,3,13,13,13,3,3,3,3,3,4,3,3,13,13,13,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,3,3,3,4,3,3,3,3,13,3,3,3,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AllocError","CapacityOverflow","HashMap","HashSet","TryReserveError","borrow","borrow_mut","clone","clone_into","eq","fmt","from","hash_map","hash_set","into","to_owned","try_from","try_into","type_id","layout","DefaultHashBuilder","Drain","DrainFilter","Entry","EntryRef","HashMap","IntoIter","IntoKeys","IntoValues","Iter","IterMut","Keys","Occupied","Occupied","Occupied","OccupiedEntry","OccupiedEntryRef","OccupiedError","RawEntryBuilder","RawEntryBuilderMut","RawEntryMut","RawOccupiedEntryMut","RawVacantEntryMut","Vacant","Vacant","Vacant","VacantEntry","VacantEntryRef","Values","ValuesMut","allocator","and_modify","and_modify","and_modify","and_replace_entry_with","and_replace_entry_with","and_replace_entry_with","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","contains_key","default","drain","drain_filter","drop","entry","entry","entry_ref","eq","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_hash","from_hash","from_iter","from_key","from_key","from_key_hashed_nocheck","from_key_hashed_nocheck","get","get","get","get","get_key_value","get_key_value","get_key_value_mut","get_key_value_mut","get_many_key_value_mut","get_many_key_value_unchecked_mut","get_many_mut","get_many_unchecked_mut","get_mut","get_mut","get_mut","get_mut","hasher","index","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert_hashed_nocheck","insert_key","insert_unique_unchecked","insert_with_hasher","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_key","into_key","into_key","into_key_value","into_keys","into_mut","into_mut","into_mut","into_values","is_empty","iter","iter_mut","key","key","key","key","key","key","key","key_mut","keys","len","len","len","len","len","len","len","len","len","len","new","new_in","next","next","next","next","next","next","next","next","next","next","or_default","or_default","or_insert","or_insert","or_insert","or_insert_with","or_insert_with","or_insert_with","or_insert_with_key","or_insert_with_key","raw_entry","raw_entry_mut","remove","remove","remove","remove","remove_entry","remove_entry","remove_entry","remove_entry","replace_entry","replace_entry","replace_entry_with","replace_entry_with","replace_entry_with","replace_key","replace_key","reserve","retain","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","values","values_mut","with_capacity","with_capacity_and_hasher","with_capacity_and_hasher_in","with_capacity_in","with_hasher","with_hasher_in","Difference","Drain","DrainFilter","Entry","HashSet","Intersection","IntoIter","Iter","Occupied","OccupiedEntry","SymmetricDifference","Union","Vacant","VacantEntry","allocator","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contains","default","difference","drain","drain_filter","drop","entry","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","get","get","get","get","get_or_insert","get_or_insert_owned","get_or_insert_with","hasher","insert","insert","insert","insert_unique_unchecked","intersection","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_value","is_disjoint","is_empty","is_subset","is_superset","iter","len","len","len","len","new","new_in","next","next","next","next","next","next","next","next","or_insert","remove","remove","replace","replace","reserve","retain","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","sub","symmetric_difference","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","with_capacity","with_capacity_and_hasher","with_capacity_and_hasher_in","with_capacity_in","with_hasher","with_hasher_in"],"q":["hashbrown","","","","","","","","","","","","","","","","","","","hashbrown::TryReserveError","hashbrown::hash_maphashbrown::hash_setd":["The memory allocator returned an error","Error due to the computed capacity exceeding the collection…","A hash map implemented with quadratic probing and SIMD …","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","The error type for <code>try_reserve</code> methods.","","","","","","","Returns the argument unchanged.","A hash map implemented with quadratic probing and SIMD …","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","Calls <code>U::from(self)</code>.","","","","","The layout of the allocation request that failed.","Default hasher for <code>HashMap</code>.","A draining iterator over the entries of a <code>HashMap</code> in …","A draining iterator over entries of a <code>HashMap</code> which don’…","A view into a single entry in a map, which may either be …","A view into a single entry in a map, which may either be …","A hash map implemented with quadratic probing and SIMD …","An owning iterator over the entries of a <code>HashMap</code> in …","An owning iterator over the keys of a <code>HashMap</code> in arbitrary …","An owning iterator over the values of a <code>HashMap</code> in …","An iterator over the entries of a <code>HashMap</code> in arbitrary …","A mutable iterator over the entries of a <code>HashMap</code> in …","An iterator over the keys of a <code>HashMap</code> in arbitrary order. …","An occupied entry.","An occupied entry.","An occupied entry.","A view into an occupied entry in a <code>HashMap</code>. It is part of …","A view into an occupied entry in a <code>HashMap</code>. It is part of …","The error returned by <code>try_insert</code> when the key already …","A builder for computing where in a <code>HashMap</code> a key-value …","A builder for computing where in a <code>HashMap</code> a key-value …","A view into a single entry in a map, which may either be …","A view into an occupied entry in a <code>HashMap</code>. It is part of …","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","A vacant entry.","A vacant entry.","A vacant entry.","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","An iterator over the values of a <code>HashMap</code> in arbitrary …","A mutable iterator over the values of a <code>HashMap</code> in …","Returns a reference to the underlying allocator.","Provides in-place mutable access to an occupied entry …","Provides in-place mutable access to an occupied entry …","Provides in-place mutable access to an occupied entry …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of elements the map can hold without …","Clears the map, removing all key-value pairs. Keeps the …","","","","","","","","","","Returns <code>true</code> if the map contains a value for the specified …","Creates an empty <code>HashMap&lt;K, V, S, A&gt;</code>, with the <code>Default</code> …","Clears the map, returning all key-value pairs as an …","Drains elements which are true under the given predicate, …","","Gets the given key’s corresponding entry in the map for …","The entry in the map that was already occupied.","Gets the given key’s corresponding entry by reference in …","","Inserts all new key-values from the iterator to existing …","Inserts all new key-values from the iterator to existing …","Inserts all new key-values from the iterator to existing …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Examples","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>RawEntryMut</code> from the given hash and matching …","Access an immutable entry by hash and matching function.","","Creates a <code>RawEntryMut</code> from the given key.","Access an immutable entry by key.","Creates a <code>RawEntryMut</code> from the given key and its hash.","Access an immutable entry by a key and its hash.","Returns a reference to the value corresponding to the key.","Gets a reference to the value in the entry.","Gets a reference to the value in the entry.","Gets a reference to the value in the entry.","Returns the key-value pair corresponding to the supplied …","Gets a reference to the key and value in the entry.","Returns the key-value pair corresponding to the supplied …","Gets a mutable reference to the key and value in the entry.","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Returns a mutable reference to the value corresponding to …","Gets a mutable reference to the value in the entry.","Gets a mutable reference to the value in the entry.","Gets a mutable reference to the value in the entry.","Returns a reference to the map’s <code>BuildHasher</code>.","Returns a reference to the value corresponding to the …","Inserts a key-value pair into the map.","Sets the value of the entry, and returns a …","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns an OccupiedEntry.","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns an …","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntryRef’s …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns the entry’s old …","Insert a key-value pair into the map without checking if …","Set the value of an entry with a custom hasher function.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a consuming iterator, that is, one that moves each …","Creates an iterator over the entries of a <code>HashMap</code> in …","Creates an iterator over the entries of a <code>HashMap</code> in …","","","","","","","","","","","Converts the entry into a mutable reference to the key in …","Take ownership of the key.","Take ownership of the key.","Converts the OccupiedEntry into a mutable reference to the …","Creates a consuming iterator visiting all the keys in …","Converts the OccupiedEntry into a mutable reference to the …","Converts the OccupiedEntry into a mutable reference to the …","Converts the OccupiedEntryRef into a mutable reference to …","Creates a consuming iterator visiting all the values in …","Returns <code>true</code> if the map contains no elements.","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all key-value pairs in arbitrary …","Gets a reference to the key in the entry.","Returns a reference to this entry’s key.","Gets a reference to the key in the entry.","Gets a reference to the key that would be used when …","Returns a reference to this entry’s key.","Gets a reference to the key in the entry.","Gets a reference to the key that would be used when …","Gets a mutable reference to the key in the entry.","An iterator visiting all keys in arbitrary order. The …","Returns the number of elements in the map.","","","","","","","","","","Creates an empty <code>HashMap</code>.","Creates an empty <code>HashMap</code> using the given allocator.","","","","","","","","","","","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting, if empty, …","Ensures a value is in the entry by inserting, if empty, …","Creates a raw immutable entry builder for the HashMap.","Creates a raw entry builder for the HashMap.","Removes a key from the map, returning the value at the key …","Takes the value out of the entry, and returns it.","Takes the value out of the entry, and returns it. Keeps …","Takes the value out of the entry, and returns it. Keeps …","Removes a key from the map, returning the stored key and …","Take the ownership of the key and value from the map.","Take the ownership of the key and value from the map. …","Take the ownership of the key and value from the map. …","Replaces the entry, returning the old key and value. The …","Replaces the entry, returning the old key and value. The …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Replaces the key in the hash map with the key used to …","Replaces the key in the hash map with the key used to …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate. …","Shrinks the capacity of the map with a lower limit. It …","Shrinks the capacity of the map as much as possible. It …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to insert a key-value pair into the map, and returns …","","","","","","","","","","","","","","","","","","","","","","","","Tries to reserve capacity for at least <code>additional</code> more …","","","","","","","","","","","","","","","","","","","","","","","","The value which was not inserted, because the entry was …","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary order.","Creates an empty <code>HashMap</code> with the specified capacity.","Creates an empty <code>HashMap</code> with the specified capacity, …","Creates an empty <code>HashMap</code> with the specified capacity, …","Creates an empty <code>HashMap</code> with the specified capacity using …","Creates an empty <code>HashMap</code> which will use the given hash …","Creates an empty <code>HashMap</code> which will use the given hash …","A lazy iterator producing elements in the difference of …","A draining iterator over the items of a <code>HashSet</code>.","A draining iterator over entries of a <code>HashSet</code> which don’…","A view into a single entry in a set, which may either be …","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","A lazy iterator producing elements in the intersection of …","An owning iterator over the items of a <code>HashSet</code>.","An iterator over the items of a <code>HashSet</code>.","An occupied entry.","A view into an occupied entry in a <code>HashSet</code>. It is part of …","A lazy iterator producing elements in the symmetric …","A lazy iterator producing elements in the union of <code>HashSet</code>…","A vacant entry.","A view into a vacant entry in a <code>HashSet</code>. It is part of the …","Returns a reference to the underlying allocator.","Returns the intersection of <code>self</code> and <code>rhs</code> as a new …","Returns the union of <code>self</code> and <code>rhs</code> as a new <code>HashSet&lt;T, S&gt;</code>.","Returns the symmetric difference of <code>self</code> and <code>rhs</code> as a new …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of elements the set can hold without …","Clears the set, removing all values.","","","","","","","","","","","","","","Returns <code>true</code> if the set contains a value.","Creates an empty <code>HashSet&lt;T, S&gt;</code> with the <code>Default</code> value for …","Visits the values representing the difference, i.e., the …","Clears the set, returning all elements in an iterator.","Drains elements which are true under the given predicate, …","","Gets the given value’s corresponding entry in the set …","","","","","","","","","","","","","","","Returns the argument unchanged.","Examples","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns a reference to the value in the set, if any, that …","Returns a reference to this entry’s value.","Gets a reference to the value in the entry.","Gets a reference to the value that would be used when …","Inserts the given <code>value</code> into the set if it is not present, …","Inserts an owned copy of the given <code>value</code> into the set if …","Inserts a value computed from <code>f</code> into the set if the given …","Returns a reference to the set’s <code>BuildHasher</code>.","Adds a value to the set.","Sets the value of the entry, and returns an OccupiedEntry.","Sets the value of the entry with the VacantEntry’s value.","Insert a value the set without checking if the value …","Visits the values representing the intersection, i.e., the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates a consuming iterator, that is, one that moves each …","","","","","","","","","Take ownership of the value.","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>. …","Returns <code>true</code> if the set contains no elements.","Returns <code>true</code> if the set is a subset of another, i.e., <code>other</code>…","Returns <code>true</code> if the set is a superset of another, i.e., …","An iterator visiting all elements in arbitrary order. The …","Returns the number of elements in the set.","","","","Creates an empty <code>HashSet</code>.","Creates an empty <code>HashSet</code>.","","","","","","","","","Ensures a value is in the entry by inserting if it was …","Removes a value from the set. Returns whether the value was","Takes the value out of the entry, and returns it. Keeps …","Adds a value to the set, replacing the existing value, if …","Replaces the entry, returning the old value. The new value …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate.","Shrinks the capacity of the set with a lower limit. It …","Shrinks the capacity of the set as much as possible. It …","","","","","","","","","Returns the difference of <code>self</code> and <code>rhs</code> as a new …","Visits the values representing the symmetric difference, …","Removes and returns the value in the set, if any, that is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to reserve capacity for at least <code>additional</code> more …","","","","","","","","","","","","","Visits the values representing the union, i.e., all the …","Creates an empty <code>HashSet</code> with the specified capacity.","Creates an empty <code>HashSet</code> with the specified capacity, using","Creates an empty <code>HashSet</code> with the specified capacity, using","Creates an empty <code>HashSet</code> with the specified capacity.","Creates a new empty hash set which will use the given …","Creates a new empty hash set which will use the given …"],"i":[1,1,0,0,0,1,1,1,1,1,1,1,0,0,1,1,1,1,1,56,0,0,0,0,0,0,0,0,0,0,0,0,9,10,12,0,0,0,0,0,0,0,0,9,10,12,0,0,0,0,8,9,10,12,9,10,12,8,14,21,22,23,24,15,16,17,18,25,26,9,27,28,29,10,30,31,12,33,34,35,8,14,21,22,23,24,15,16,17,18,25,26,9,27,28,29,10,30,31,12,33,34,35,8,8,8,14,15,16,8,8,14,15,16,8,8,8,8,18,8,35,8,8,8,8,8,8,14,21,22,23,24,15,16,17,25,26,9,27,28,29,10,30,31,12,33,34,35,35,8,8,14,21,22,23,24,15,16,17,18,25,26,9,27,28,29,10,30,31,12,33,34,35,26,29,8,26,29,26,29,8,27,30,33,8,27,8,27,8,8,8,8,8,27,30,33,8,8,8,9,27,28,10,30,31,12,33,34,28,27,8,28,8,14,21,22,23,24,15,16,17,18,25,26,9,27,28,29,10,30,31,12,33,34,35,8,8,8,14,21,22,23,24,15,16,17,18,25,27,31,34,27,8,27,30,33,8,8,8,8,27,10,30,31,12,33,34,27,8,8,14,21,22,23,24,15,16,17,25,8,8,14,21,22,23,24,15,16,17,18,25,10,12,9,10,12,9,10,12,10,12,8,8,8,27,30,33,8,27,30,33,30,33,27,30,33,30,33,8,8,8,8,14,21,22,23,24,15,16,17,18,25,8,14,15,16,35,8,14,21,22,23,24,15,16,17,18,25,26,9,27,28,29,10,30,31,12,33,34,35,8,8,14,21,22,23,24,15,16,17,18,25,26,9,27,28,29,10,30,31,12,33,34,35,8,8,14,21,22,23,24,15,16,17,18,25,26,9,27,28,29,10,30,31,12,33,34,35,35,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,50,0,0,0,50,0,42,42,42,42,42,43,51,48,49,44,45,46,47,50,52,53,42,43,51,48,49,44,45,46,47,50,52,53,42,42,42,43,44,45,46,47,42,42,43,44,45,46,47,42,42,42,42,42,49,42,42,42,42,42,43,51,48,44,45,46,47,50,52,53,42,42,42,43,51,48,49,44,45,46,47,50,52,53,42,42,50,52,53,42,42,42,42,42,50,53,42,42,42,43,51,48,49,44,45,46,47,50,52,53,42,42,43,51,48,49,44,45,46,47,53,42,42,42,42,42,42,43,51,48,42,42,43,51,48,49,44,45,46,47,50,42,52,42,52,42,42,42,42,43,51,48,49,44,45,46,47,42,42,42,42,43,44,45,46,47,42,43,51,48,49,44,45,46,47,50,52,53,42,43,51,48,49,44,45,46,47,50,52,53,42,42,43,51,48,49,44,45,46,47,50,52,53,42,42,42,42,42,42,42],"f":[0,0,0,0,0,[[]],[[]],[1,1],[[]],[[1,1],2],[[1,3],4],[[]],0,0,[[]],[[]],[[],5],[[],5],[[],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[8,[[0,[0,7]]]]]],[[[9,[[0,[0,7]]]]],[[9,[[0,[0,7]]]]]],[[[10,[[0,[0,7]]]]],[[10,[[0,[0,7]]]]]],[[[12,[11,[0,[0,7]]]]],[[12,[11,[0,[0,7]]]]]],[[[9,[[0,[0,7]]]]],[[9,[[0,[0,7]]]]]],[[[10,[[0,[0,7]]]]],[[10,[[0,[0,7]]]]]],[[[12,[11,[0,[0,7]]]]],[[12,[11,[0,[0,7]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[[0,[0,7]]]]],13],[[[8,[[0,[0,7]]]]]],[[[8,[7,7,7,[0,[0,7]]]]],[[8,[7,7,7,[0,[0,7]]]]]],[14,14],[15,15],[16,16],[[[8,[7,7,7,[0,[0,7]]]],[8,[7,7,7,[0,[0,7]]]]]],[[]],[[]],[[]],[[]],[8,2],[[],8],[[[8,[[0,[0,7]]]]],[[17,[[0,[0,7]]]]]],[[[8,[[0,[0,7]]]]],[[18,[[0,[0,7]]]]]],[18],[8,10],0,[8,12],[[8,8],2],[[8,19]],[[8,19]],[[8,19]],[[8,3],4],[[[14,[20,20]],3],4],[[21,3],4],[[[22,[20,20,[0,[0,7]]]],3],4],[[[23,[20,20,[0,[0,7]]]],3],4],[[[24,[20,[0,[0,7]]]],3],4],[[[15,[20]],3],4],[[[16,[20]],3],4],[[17,3],4],[[[25,[20]],3],4],[[[26,[[0,[0,7]]]],3],4],[[[9,[20,20,[0,[0,7]]]],3],4],[[[27,[20,20,[0,[0,7]]]],3],4],[[[28,[[0,[0,7]]]],3],4],[[[29,[[0,[0,7]]]],3],4],[[[10,[20,20,[0,[0,7]]]],3],4],[[[30,[20,20,[0,[0,7]]]],3],4],[[[31,[20,[0,[0,7]]]],3],4],[[[12,[[32,[[0,[11,20]]]],[0,[11,20]],20,[0,[0,7]]]],3],4],[[[33,[[32,[[0,[11,20]]]],[0,[11,20]],20,[0,[0,7]]]],3],4],[[[34,[[32,[[0,[11,20]]]],[0,[11,20]],[0,[0,7]]]],3],4],[[[35,[20,20,[0,[0,7]]]],3],4],[[[35,[20,20,[0,[0,7]]]],3],4],[[]],[[],[[8,[36]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[26,[[0,[0,7]]]],37],[[9,[[0,[0,7]]]]]],[[[29,[[0,[0,7]]]],37],38],[19,8],[[[26,[[0,[0,7]]]]],[[9,[[0,[0,7]]]]]],[[[29,[[0,[0,7]]]]],38],[[[26,[[0,[0,7]]]],37],[[9,[[0,[0,7]]]]]],[[[29,[[0,[0,7]]]],37],38],[8,38],[[[27,[[0,[0,7]]]]]],[[[30,[[0,[0,7]]]]]],[[[33,[11,[0,[0,7]]]]]],[8,38],[[[27,[[0,[0,7]]]]]],[8,38],[[[27,[[0,[0,7]]]]]],[8,38],[8,38],[8,38],[8,38],[8,38],[[[27,[[0,[0,7]]]]]],[[[30,[[0,[0,7]]]]]],[[[33,[11,[0,[0,7]]]]]],[[[8,[[0,[0,7]]]]]],[8],[8,38],[[[9,[[0,[0,7]]]]],[[27,[[0,[0,7]]]]]],[[[27,[[0,[0,7]]]]]],[[[28,[[0,[0,7]]]]]],[[[10,[[0,[0,7]]]]],[[30,[[0,[0,7]]]]]],[[[30,[[0,[0,7]]]]]],[[[31,[[0,[0,7]]]]]],[[[12,[11,[0,[0,7]]]]],[[33,[11,[0,[0,7]]]]]],[[[33,[11,[0,[0,7]]]]]],[[[34,[11,[0,[0,7]]]]]],[[[28,[[0,[0,7]]]],37]],[[[27,[[0,[0,7]]]]]],[8],[[[28,[[0,[0,7]]]],37]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[[0,[0,7]]]]],[[22,[[0,[0,7]]]]]],[8,14],[8,21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[27,[[0,[0,7]]]]]],[[[31,[[0,[0,7]]]]]],[[[34,[11,[0,[0,7]]]]]],[[[27,[[0,[0,7]]]]]],[[[8,[[0,[0,7]]]]],[[23,[[0,[0,7]]]]]],[[[27,[[0,[0,7]]]]]],[[[30,[[0,[0,7]]]]]],[[[33,[11,[0,[0,7]]]]]],[[[8,[[0,[0,7]]]]],[[24,[[0,[0,7]]]]]],[[[8,[[0,[0,7]]]]],2],[[[8,[[0,[0,7]]]]],14],[[[8,[[0,[0,7]]]]],21],[[[27,[[0,[0,7]]]]]],[[[10,[[0,[0,7]]]]]],[[[30,[[0,[0,7]]]]]],[[[31,[[0,[0,7]]]]]],[[[12,[11,[0,[0,7]]]]]],[[[33,[11,[0,[0,7]]]]]],[[[34,[11,[0,[0,7]]]]]],[[[27,[[0,[0,7]]]]]],[[[8,[[0,[0,7]]]]],15],[[[8,[[0,[0,7]]]]],13],[14,13],[21,13],[[[22,[[0,[0,7]]]]],13],[[[23,[[0,[0,7]]]]],13],[[[24,[[0,[0,7]]]]],13],[15,13],[16,13],[[[17,[[0,[0,7]]]]],13],[25,13],[[],[[8,[36]]]],[[[0,[0,7]]],[[8,[36,[0,[0,7]]]]]],[14,38],[21,38],[[[22,[[0,[0,7]]]]],38],[[[23,[[0,[0,7]]]]],38],[[[24,[[0,[0,7]]]]],38],[15,38],[16,38],[[[17,[[0,[0,7]]]]],38],[18,38],[25,38],[[[10,[39,[0,[0,7]]]]]],[[[12,[11,39,[0,[0,7]]]]]],[[[9,[[0,[0,7]]]]]],[[[10,[[0,[0,7]]]]]],[[[12,[11,[0,[0,7]]]]]],[[[9,[[0,[0,7]]]]]],[[[10,[[0,[0,7]]]],40]],[[[12,[11,[0,[0,7]]]],40]],[[[10,[[0,[0,7]]]],40]],[[[12,[11,[0,[0,7]]]],40]],[[[8,[[0,[0,7]]]]],[[29,[[0,[0,7]]]]]],[[[8,[[0,[0,7]]]]],[[26,[[0,[0,7]]]]]],[8,38],[[[27,[[0,[0,7]]]]]],[[[30,[[0,[0,7]]]]]],[[[33,[11,[0,[0,7]]]]]],[8,38],[[[27,[[0,[0,7]]]]]],[[[30,[[0,[0,7]]]]]],[[[33,[11,[0,[0,7]]]]]],[[[30,[[0,[0,7]]]]]],[[[33,[11,[0,[0,7]]]]]],[[[27,[[0,[0,7]]]]],[[9,[[0,[0,7]]]]]],[[[30,[[0,[0,7]]]]],[[10,[[0,[0,7]]]]]],[[[33,[11,[0,[0,7]]]]],[[12,[11,[0,[0,7]]]]]],[[[30,[[0,[0,7]]]]]],[[[33,[11,[0,[0,7]]]]]],[[8,13]],[[[8,[[0,[0,7]]]]]],[[8,13]],[8],[14],[21],[[[22,[[0,[0,7]]]]]],[[[23,[[0,[0,7]]]]]],[[[24,[[0,[0,7]]]]]],[15],[16],[[[17,[[0,[0,7]]]]]],[18],[25],[[]],[[]],[[]],[[]],[[],41],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[8,[[5,[35]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[8,13],[[5,[1]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[[[8,[[0,[0,7]]]]],16],[[[8,[[0,[0,7]]]]],25],[13,[[8,[36]]]],[13,8],[[13,[0,[0,7]]],[[8,[[0,[0,7]]]]]],[[13,[0,[0,7]]],[[8,[36,[0,[0,7]]]]]],[[],8],[[[0,[0,7]]],[[8,[[0,[0,7]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[42],[[42,42],42],[[42,42],42],[[42,42],42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[42,[[0,[0,7]]]]],13],[[[42,[[0,[0,7]]]]]],[[[42,[7,7,[0,[0,7]]]]],[[42,[7,7,[0,[0,7]]]]]],[43,43],[[[44,[[0,[0,7]]]]],[[44,[[0,[0,7]]]]]],[[[45,[[0,[0,7]]]]],[[45,[[0,[0,7]]]]]],[[[46,[[0,[0,7]]]]],[[46,[[0,[0,7]]]]]],[[[47,[[0,[0,7]]]]],[[47,[[0,[0,7]]]]]],[[[42,[7,7,[0,[0,7]]]],[42,[7,7,[0,[0,7]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[42,2],[[],42],[[42,42],45],[[[42,[[0,[0,7]]]]],[[48,[[0,[0,7]]]]]],[[[42,[[0,[0,7]]]]],[[49,[[0,[0,7]]]]]],[[[49,[[0,[0,7]]]]]],[42,50],[[42,42],2],[[42,19]],[[42,19]],[[42,3],4],[[[43,[20]],3],4],[[[51,[20,[0,[0,7]]]],3],4],[[[48,[20,[0,[0,7]]]],3],4],[[44,3],4],[[45,3],4],[[46,3],4],[[47,3],4],[[[50,[20,[0,[0,7]]]],3],4],[[[52,[20,[0,[0,7]]]],3],4],[[[53,[20,[0,[0,7]]]],3],4],[[]],[[],[[42,[36]]]],[8,42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19,42],[42,38],[[[50,[[0,[0,7]]]]]],[[[52,[[0,[0,7]]]]]],[[[53,[[0,[0,7]]]]]],[42],[42],[42],[42],[42,2],[[[50,[[0,[0,7]]]]],[[52,[[0,[0,7]]]]]],[[[53,[[0,[0,7]]]]]],[42],[[42,42],44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,43],[[[42,[[0,[0,7]]]]],[[51,[[0,[0,7]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[53,[[0,[0,7]]]]]],[[42,42],2],[[[42,[[0,[0,7]]]]],2],[[42,42],2],[[42,42],2],[[[42,[[0,[0,7]]]]],43],[[[42,[[0,[0,7]]]]],13],[43,13],[[[51,[[0,[0,7]]]]],13],[[[48,[[0,[0,7]]]]],13],[[],[[42,[36]]]],[[[0,[0,7]]],[[42,[[0,[54,55]],36,[0,[0,7]]]]]],[43,38],[[[51,[[0,[0,7]]]]],38],[[[48,[[0,[0,7]]]]],38],[[[49,[[0,[0,7]]]]],38],[44,38],[45,38],[46,38],[47,38],[[[50,[[0,[0,7]]]]]],[42,2],[[[52,[[0,[0,7]]]]]],[42,38],[[[52,[[0,[0,7]]]]]],[[42,13]],[[[42,[[0,[0,7]]]]]],[[42,13]],[42],[43],[[[51,[[0,[0,7]]]]]],[[[48,[[0,[0,7]]]]]],[[[49,[[0,[0,7]]]]]],[44],[45],[46],[47],[[42,42],42],[[42,42],46],[42,38],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[42,13],[[5,[1]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[42,42],47],[13,[[42,[36]]]],[13,[[42,[0]]]],[13,42],[[13,[0,[0,7]]],[[42,[[0,[54,55]],36,[0,[0,7]]]]]],[[],[[42,[0]]]],[[],42]],"p":[[4,"TryReserveError"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"],[8,"Clone"],[3,"HashMap"],[4,"RawEntryMut"],[4,"Entry"],[8,"Sized"],[4,"EntryRef"],[15,"usize"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,"DrainFilter"],[8,"IntoIterator"],[8,"Debug"],[3,"IterMut"],[3,"IntoIter"],[3,"IntoKeys"],[3,"IntoValues"],[3,"ValuesMut"],[3,"RawEntryBuilderMut"],[3,"RawOccupiedEntryMut"],[3,"RawVacantEntryMut"],[3,"RawEntryBuilder"],[3,"OccupiedEntry"],[3,"VacantEntry"],[8,"Borrow"],[3,"OccupiedEntryRef"],[3,"VacantEntryRef"],[3,"OccupiedError"],[6,"DefaultHashBuilder"],[15,"u64"],[4,"Option"],[8,"Default"],[8,"FnOnce"],[3,"String"],[3,"HashSet"],[3,"Iter"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"Drain"],[3,"DrainFilter"],[4,"Entry"],[3,"IntoIter"],[3,"OccupiedEntry"],[3,"VacantEntry"],[8,"Hash"],[8,"Eq"],[13,"AllocError"]]},\
"iced_x86":{"doc":"iced-x86 Latest version Documentation Minimum rustc version","tn":["AH","AL","ALTINST","AMD","AX","Aaa","Aaa","Aad","Aad_imm8","Aadd","Aadd_m32_r32","Aadd_m64_r64","Aam","Aam_imm8","Aand","Aand_m32_r32","Aand_m64_r64","Aas","Aas","Adc","Adc_AL_imm8","Adc_AX_imm16","Adc_EAX_imm32","Adc_RAX_imm32","Adc_r16_rm16","Adc_r32_rm32","Adc_r64_rm64","Adc_r8_rm8","Adc_rm16_imm16","Adc_rm16_imm8","Adc_rm16_r16","Adc_rm32_imm32","Adc_rm32_imm8","Adc_rm32_r32","Adc_rm64_imm32","Adc_rm64_imm8","Adc_rm64_r64","Adc_rm8_imm8","Adc_rm8_imm8_82","Adc_rm8_r8","Adcx","Adcx_r32_rm32","Adcx_r64_rm64","Add","Add_AL_imm8","Add_AX_imm16","Add_EAX_imm32","Add_RAX_imm32","Add_r16_rm16","Add_r32_rm32","Add_r64_rm64","Add_r8_rm8","Add_rm16_imm16","Add_rm16_imm8","Add_rm16_r16","Add_rm32_imm32","Add_rm32_imm8","Add_rm32_r32","Add_rm64_imm32","Add_rm64_imm8","Add_rm64_r64","Add_rm8_imm8","Add_rm8_imm8_82","Add_rm8_r8","Addpd","Addpd_xmm_xmmm128","Addps","Addps_xmm_xmmm128","AddressSize","Addsd","Addsd_xmm_xmmm64","Addss","Addss_xmm_xmmm32","Addsubpd","Addsubpd_xmm_xmmm128","Addsubps","Addsubps_xmm_xmmm128","Adox","Adox_r32_rm32","Adox_r64_rm64","Aesdec","Aesdec128kl","Aesdec128kl_xmm_m384","Aesdec256kl","Aesdec256kl_xmm_m512","Aesdec_xmm_xmmm128","Aesdeclast","Aesdeclast_xmm_xmmm128","Aesdecwide128kl","Aesdecwide128kl_m384","Aesdecwide256kl","Aesdecwide256kl_m512","Aesenc","Aesenc128kl","Aesenc128kl_xmm_m384","Aesenc256kl","Aesenc256kl_xmm_m512","Aesenc_xmm_xmmm128","Aesenclast","Aesenclast_xmm_xmmm128","Aesencwide128kl","Aesencwide128kl_m384","Aesencwide256kl","Aesencwide256kl_m512","Aesimc","Aesimc_xmm_xmmm128","Aeskeygenassist","Aeskeygenassist_xmm_xmmm128_imm8","Altinst","Altinst","Always","And","And_AL_imm8","And_AX_imm16","And_EAX_imm32","And_RAX_imm32","And_r16_rm16","And_r32_rm32","And_r64_rm64","And_r8_rm8","And_rm16_imm16","And_rm16_imm8","And_rm16_r16","And_rm32_imm32","And_rm32_imm8","And_rm32_r32","And_rm64_imm32","And_rm64_imm8","And_rm64_r64","And_rm8_imm8","And_rm8_imm8_82","And_rm8_r8","Andn","Andnpd","Andnpd_xmm_xmmm128","Andnps","Andnps_xmm_xmmm128","Andpd","Andpd_xmm_xmmm128","Andps","Andps_xmm_xmmm128","Aor","Aor_m32_r32","Aor_m64_r64","Arpl","Arpl_r32m16_r32","Arpl_rm16_r16","Axor","Axor_m32_r32","Axor_m64_r64","BFloat16","BH","BL","BND0","BND1","BND2","BND3","BP","BPL","BX","Bb0_reset","Bb0_reset","Bb1_reset","Bb1_reset","Bcd","Bextr","Binary","Blcfill","Blci","Blcic","Blcmsk","Blcs","Blendpd","Blendpd_xmm_xmmm128_imm8","Blendps","Blendps_xmm_xmmm128_imm8","Blendvpd","Blendvpd_xmm_xmmm128","Blendvps","Blendvps_xmm_xmmm128","Blsfill","Blsi","Blsic","Blsmsk","Blsr","Bnd","Bnd32","Bnd64","Bndcl","Bndcl_bnd_rm32","Bndcl_bnd_rm64","Bndcn","Bndcn_bnd_rm32","Bndcn_bnd_rm64","Bndcu","Bndcu_bnd_rm32","Bndcu_bnd_rm64","Bndldx","Bndldx_bnd_mib","Bndmk","Bndmk_bnd_m32","Bndmk_bnd_m64","Bndmov","Bndmov_bnd_bndm128","Bndmov_bnd_bndm64","Bndmov_bndm128_bnd","Bndmov_bndm64_bnd","Bndstx","Bndstx_mib_bnd","Bound","Bound16_WordWord","Bound32_DwordDword","Bound_r16_m1616","Bound_r32_m3232","Broadcast","Broadcast128_2xBFloat16","Broadcast128_2xFloat16","Broadcast128_2xInt16","Broadcast128_2xInt32","Broadcast128_2xUInt32","Broadcast128_Float16","Broadcast128_Float32","Broadcast128_Float64","Broadcast128_Int16","Broadcast128_Int32","Broadcast128_Int64","Broadcast128_UInt16","Broadcast128_UInt32","Broadcast128_UInt52","Broadcast128_UInt64","Broadcast256_2xBFloat16","Broadcast256_2xFloat16","Broadcast256_2xInt16","Broadcast256_2xInt32","Broadcast256_2xUInt32","Broadcast256_Float16","Broadcast256_Float32","Broadcast256_Float64","Broadcast256_Int16","Broadcast256_Int32","Broadcast256_Int64","Broadcast256_UInt16","Broadcast256_UInt32","Broadcast256_UInt52","Broadcast256_UInt64","Broadcast32_Float16","Broadcast512_2xBFloat16","Broadcast512_2xFloat16","Broadcast512_2xInt16","Broadcast512_2xInt32","Broadcast512_2xUInt32","Broadcast512_Float16","Broadcast512_Float32","Broadcast512_Float64","Broadcast512_Int16","Broadcast512_Int32","Broadcast512_Int64","Broadcast512_UInt16","Broadcast512_UInt32","Broadcast512_UInt52","Broadcast512_UInt64","Broadcast64_Float16","Broadcast64_Float32","Broadcast64_Int32","Broadcast64_UInt32","Bsf","Bsf_r16_rm16","Bsf_r32_rm32","Bsf_r64_rm64","Bsr","Bsr_r16_rm16","Bsr_r32_rm32","Bsr_r64_rm64","Bswap","Bswap_r16","Bswap_r32","Bswap_r64","Bt","Bt_rm16_imm8","Bt_rm16_r16","Bt_rm32_imm8","Bt_rm32_r32","Bt_rm64_imm8","Bt_rm64_r64","Btc","Btc_rm16_imm8","Btc_rm16_r16","Btc_rm32_imm8","Btc_rm32_r32","Btc_rm64_imm8","Btc_rm64_r64","Btr","Btr_rm16_imm8","Btr_rm16_r16","Btr_rm32_imm8","Btr_rm32_r32","Btr_rm64_imm8","Btr_rm64_r64","Bts","Bts_rm16_imm8","Bts_rm16_r16","Bts_rm32_imm8","Bts_rm32_r32","Bts_rm64_imm8","Bts_rm64_r64","Bzhi","CC_a","CC_ae","CC_b","CC_be","CC_e","CC_g","CC_ge","CC_l","CC_le","CC_ne","CC_np","CC_p","CH","CL","CL1INVMB","CMPXCHG486A","CR0","CR1","CR10","CR11","CR12","CR13","CR14","CR15","CR2","CR3","CR4","CR5","CR6","CR7","CR8","CR9","CS","CS","CX","CYRIX","CYRIX_DMI","CYRIX_SMINT_0F7E","Call","Call_m1616","Call_m1632","Call_m1664","Call_ptr1616","Call_ptr1632","Call_rel16","Call_rel32_32","Call_rel32_64","Call_rm16","Call_rm32","Call_rm64","Cbw","Cbw","Ccs_encrypt","Ccs_encrypt_16","Ccs_encrypt_32","Ccs_encrypt_64","Ccs_hash","Ccs_hash_16","Ccs_hash_32","Ccs_hash_64","Cdq","Cdq","Cdqe","Cdqe","Cl1invmb","Cl1invmb","Clac","Clac","Clc","Clc","Cld","Cld","Cldemote","Cldemote_m8","Clevict0","Clevict1","Clflush","Clflush_m8","Clflushopt","Clflushopt_m8","Clgi","Clgi","Cli","Cli","Clrssbsy","Clrssbsy_m64","Clts","Clts","Clui","Clui","Clwb","Clwb_m8","Clzero","Clzerod","Clzeroq","Clzerow","Cmc","Cmc","Cmova","Cmova_r16_rm16","Cmova_r32_rm32","Cmova_r64_rm64","Cmovae","Cmovae_r16_rm16","Cmovae_r32_rm32","Cmovae_r64_rm64","Cmovb","Cmovb_r16_rm16","Cmovb_r32_rm32","Cmovb_r64_rm64","Cmovbe","Cmovbe_r16_rm16","Cmovbe_r32_rm32","Cmovbe_r64_rm64","Cmove","Cmove_r16_rm16","Cmove_r32_rm32","Cmove_r64_rm64","Cmovg","Cmovg_r16_rm16","Cmovg_r32_rm32","Cmovg_r64_rm64","Cmovge","Cmovge_r16_rm16","Cmovge_r32_rm32","Cmovge_r64_rm64","Cmovl","Cmovl_r16_rm16","Cmovl_r32_rm32","Cmovl_r64_rm64","Cmovle","Cmovle_r16_rm16","Cmovle_r32_rm32","Cmovle_r64_rm64","Cmovne","Cmovne_r16_rm16","Cmovne_r32_rm32","Cmovne_r64_rm64","Cmovno","Cmovno_r16_rm16","Cmovno_r32_rm32","Cmovno_r64_rm64","Cmovnp","Cmovnp_r16_rm16","Cmovnp_r32_rm32","Cmovnp_r64_rm64","Cmovns","Cmovns_r16_rm16","Cmovns_r32_rm32","Cmovns_r64_rm64","Cmovo","Cmovo_r16_rm16","Cmovo_r32_rm32","Cmovo_r64_rm64","Cmovp","Cmovp_r16_rm16","Cmovp_r32_rm32","Cmovp_r64_rm64","Cmovs","Cmovs_r16_rm16","Cmovs_r32_rm32","Cmovs_r64_rm64","Cmp","Cmp_AL_imm8","Cmp_AX_imm16","Cmp_EAX_imm32","Cmp_RAX_imm32","Cmp_r16_rm16","Cmp_r32_rm32","Cmp_r64_rm64","Cmp_r8_rm8","Cmp_rm16_imm16","Cmp_rm16_imm8","Cmp_rm16_r16","Cmp_rm32_imm32","Cmp_rm32_imm8","Cmp_rm32_r32","Cmp_rm64_imm32","Cmp_rm64_imm8","Cmp_rm64_r64","Cmp_rm8_imm8","Cmp_rm8_imm8_82","Cmp_rm8_r8","Cmpbexadd","Cmpbxadd","Cmplexadd","Cmplxadd","Cmpnbexadd","Cmpnbxadd","Cmpnlexadd","Cmpnlxadd","Cmpnoxadd","Cmpnpxadd","Cmpnsxadd","Cmpnzxadd","Cmpoxadd","Cmppd","Cmppd_xmm_xmmm128_imm8","Cmpps","Cmpps_xmm_xmmm128_imm8","Cmppxadd","Cmpsb","Cmpsb_m8_m8","Cmpsd","Cmpsd_m32_m32","Cmpsd_xmm_xmmm64_imm8","Cmpsq","Cmpsq_m64_m64","Cmpss","Cmpss_xmm_xmmm32_imm8","Cmpsw","Cmpsw_m16_m16","Cmpsxadd","Cmpxchg","Cmpxchg16b","Cmpxchg16b_m128","Cmpxchg486_rm16_r16","Cmpxchg486_rm32_r32","Cmpxchg486_rm8_r8","Cmpxchg8b","Cmpxchg8b_m64","Cmpxchg_rm16_r16","Cmpxchg_rm32_r32","Cmpxchg_rm64_r64","Cmpxchg_rm8_r8","Cmpzxadd","Code","Code16","Code32","Code64","CodeSize","Comisd","Comisd_xmm_xmmm64","Comiss","Comiss_xmm_xmmm32","ConstantOffsets","Cpu_read","Cpu_read","Cpu_write","Cpu_write","Cpuid","Cpuid","Cqo","Cqo","Crc32","Crc32_r32_rm16","Crc32_r32_rm32","Crc32_r32_rm8","Crc32_r64_rm64","Crc32_r64_rm8","Cvtdq2pd","Cvtdq2pd_xmm_xmmm64","Cvtdq2ps","Cvtdq2ps_xmm_xmmm128","Cvtpd2dq","Cvtpd2dq_xmm_xmmm128","Cvtpd2pi","Cvtpd2pi_mm_xmmm128","Cvtpd2ps","Cvtpd2ps_xmm_xmmm128","Cvtpi2pd","Cvtpi2pd_xmm_mmm64","Cvtpi2ps","Cvtpi2ps_xmm_mmm64","Cvtps2dq","Cvtps2dq_xmm_xmmm128","Cvtps2pd","Cvtps2pd_xmm_xmmm64","Cvtps2pi","Cvtps2pi_mm_xmmm64","Cvtsd2si","Cvtsd2si_r32_xmmm64","Cvtsd2si_r64_xmmm64","Cvtsd2ss","Cvtsd2ss_xmm_xmmm64","Cvtsi2sd","Cvtsi2sd_xmm_rm32","Cvtsi2sd_xmm_rm64","Cvtsi2ss","Cvtsi2ss_xmm_rm32","Cvtsi2ss_xmm_rm64","Cvtss2sd","Cvtss2sd_xmm_xmmm32","Cvtss2si","Cvtss2si_r32_xmmm32","Cvtss2si_r64_xmmm32","Cvttpd2dq","Cvttpd2dq_xmm_xmmm128","Cvttpd2pi","Cvttpd2pi_mm_xmmm128","Cvttps2dq","Cvttps2dq_xmm_xmmm128","Cvttps2pi","Cvttps2pi_mm_xmmm64","Cvttsd2si","Cvttsd2si_r32_xmmm64","Cvttsd2si_r64_xmmm64","Cvttss2si","Cvttss2si_r32_xmmm32","Cvttss2si_r64_xmmm32","Cwd","Cwd","Cwde","Cwde","Cyrix_D9D7","Cyrix_D9E2","Cyrix_D9E7","Cyrix_DED8","Cyrix_DEDA","Cyrix_DEDC","Cyrix_DEDD","Cyrix_DEDE","D3NOW","D3NOW_Pavgusb_mm_mmm64","D3NOW_Pf2id_mm_mmm64","D3NOW_Pf2iw_mm_mmm64","D3NOW_Pfacc_mm_mmm64","D3NOW_Pfadd_mm_mmm64","D3NOW_Pfcmpeq_mm_mmm64","D3NOW_Pfcmpge_mm_mmm64","D3NOW_Pfcmpgt_mm_mmm64","D3NOW_Pfmax_mm_mmm64","D3NOW_Pfmin_mm_mmm64","D3NOW_Pfmul_mm_mmm64","D3NOW_Pfnacc_mm_mmm64","D3NOW_Pfpnacc_mm_mmm64","D3NOW_Pfrcp_mm_mmm64","D3NOW_Pfrcpit1_mm_mmm64","D3NOW_Pfrcpit2_mm_mmm64","D3NOW_Pfrcpv_mm_mmm64","D3NOW_Pfrsqit1_mm_mmm64","D3NOW_Pfrsqrt_mm_mmm64","D3NOW_Pfrsqrtv_mm_mmm64","D3NOW_Pfsub_mm_mmm64","D3NOW_Pfsubr_mm_mmm64","D3NOW_Pi2fd_mm_mmm64","D3NOW_Pi2fw_mm_mmm64","D3NOW_Pmulhrw_mm_mmm64","D3NOW_Pswapd_mm_mmm64","DH","DI","DIL","DL","DR0","DR1","DR10","DR11","DR12","DR13","DR14","DR15","DR2","DR3","DR4","DR5","DR6","DR7","DR8","DR9","DS","DS","DX","Daa","Daa","Das","Das","Data","Db","Dd","Dec","Dec_r16","Dec_r32","Dec_rm16","Dec_rm32","Dec_rm64","Dec_rm8","Decimal","DeclareByte","DeclareDword","DeclareQword","DeclareWord","Decoder","DecoderError","DecoderOptions","Decorator","DecoratorKind","Default","Delay","Directive","Div","Div_rm16","Div_rm32","Div_rm64","Div_rm8","Divpd","Divpd_xmm_xmmm128","Divps","Divps_xmm_xmmm128","Divsd","Divsd_xmm_xmmm64","Divss","Divss_xmm_xmmm32","Dmint","Dmint","DontUse0","DontUseFA","DontUseFB","DontUseFC","DontUseFD","DontUseFE","DontUseFF","Dppd","Dppd_xmm_xmmm128_imm8","Dpps","Dpps_xmm_xmmm128_imm8","Dq","Dw","DwordOffset","EAX","EBP","EBX","ECX","EDI","EDX","EIP","ES","ES","ESI","ESP","EVEX","EVEX_V4fmaddps_zmm_k1z_zmmp3_m128","EVEX_V4fmaddss_xmm_k1z_xmmp3_m128","EVEX_V4fnmaddps_zmm_k1z_zmmp3_m128","EVEX_V4fnmaddss_xmm_k1z_xmmp3_m128","EVEX_Vaddpd_xmm_k1z_xmm_xmmm128b64","EVEX_Vaddpd_ymm_k1z_ymm_ymmm256b64","EVEX_Vaddpd_zmm_k1z_zmm_zmmm512b64_er","EVEX_Vaddph_xmm_k1z_xmm_xmmm128b16","EVEX_Vaddph_ymm_k1z_ymm_ymmm256b16","EVEX_Vaddph_zmm_k1z_zmm_zmmm512b16_er","EVEX_Vaddps_xmm_k1z_xmm_xmmm128b32","EVEX_Vaddps_ymm_k1z_ymm_ymmm256b32","EVEX_Vaddps_zmm_k1z_zmm_zmmm512b32_er","EVEX_Vaddsd_xmm_k1z_xmm_xmmm64_er","EVEX_Vaddsh_xmm_k1z_xmm_xmmm16_er","EVEX_Vaddss_xmm_k1z_xmm_xmmm32_er","EVEX_Vaesdec_xmm_xmm_xmmm128","EVEX_Vaesdec_ymm_ymm_ymmm256","EVEX_Vaesdec_zmm_zmm_zmmm512","EVEX_Vaesdeclast_xmm_xmm_xmmm128","EVEX_Vaesdeclast_ymm_ymm_ymmm256","EVEX_Vaesdeclast_zmm_zmm_zmmm512","EVEX_Vaesenc_xmm_xmm_xmmm128","EVEX_Vaesenc_ymm_ymm_ymmm256","EVEX_Vaesenc_zmm_zmm_zmmm512","EVEX_Vaesenclast_xmm_xmm_xmmm128","EVEX_Vaesenclast_ymm_ymm_ymmm256","EVEX_Vaesenclast_zmm_zmm_zmmm512","EVEX_Valignd_xmm_k1z_xmm_xmmm128b32_imm8","EVEX_Valignd_ymm_k1z_ymm_ymmm256b32_imm8","EVEX_Valignd_zmm_k1z_zmm_zmmm512b32_imm8","EVEX_Valignq_xmm_k1z_xmm_xmmm128b64_imm8","EVEX_Valignq_ymm_k1z_ymm_ymmm256b64_imm8","EVEX_Valignq_zmm_k1z_zmm_zmmm512b64_imm8","EVEX_Vandnpd_xmm_k1z_xmm_xmmm128b64","EVEX_Vandnpd_ymm_k1z_ymm_ymmm256b64","EVEX_Vandnpd_zmm_k1z_zmm_zmmm512b64","EVEX_Vandnps_xmm_k1z_xmm_xmmm128b32","EVEX_Vandnps_ymm_k1z_ymm_ymmm256b32","EVEX_Vandnps_zmm_k1z_zmm_zmmm512b32","EVEX_Vandpd_xmm_k1z_xmm_xmmm128b64","EVEX_Vandpd_ymm_k1z_ymm_ymmm256b64","EVEX_Vandpd_zmm_k1z_zmm_zmmm512b64","EVEX_Vandps_xmm_k1z_xmm_xmmm128b32","EVEX_Vandps_ymm_k1z_ymm_ymmm256b32","EVEX_Vandps_zmm_k1z_zmm_zmmm512b32","EVEX_Vblendmpd_xmm_k1z_xmm_xmmm128b64","EVEX_Vblendmpd_ymm_k1z_ymm_ymmm256b64","EVEX_Vblendmpd_zmm_k1z_zmm_zmmm512b64","EVEX_Vblendmps_xmm_k1z_xmm_xmmm128b32","EVEX_Vblendmps_ymm_k1z_ymm_ymmm256b32","EVEX_Vblendmps_zmm_k1z_zmm_zmmm512b32","EVEX_Vbroadcastf32x2_ymm_k1z_xmmm64","EVEX_Vbroadcastf32x2_zmm_k1z_xmmm64","EVEX_Vbroadcastf32x4_ymm_k1z_m128","EVEX_Vbroadcastf32x4_zmm_k1z_m128","EVEX_Vbroadcastf32x8_zmm_k1z_m256","EVEX_Vbroadcastf64x2_ymm_k1z_m128","EVEX_Vbroadcastf64x2_zmm_k1z_m128","EVEX_Vbroadcastf64x4_zmm_k1z_m256","EVEX_Vbroadcasti32x2_xmm_k1z_xmmm64","EVEX_Vbroadcasti32x2_ymm_k1z_xmmm64","EVEX_Vbroadcasti32x2_zmm_k1z_xmmm64","EVEX_Vbroadcasti32x4_ymm_k1z_m128","EVEX_Vbroadcasti32x4_zmm_k1z_m128","EVEX_Vbroadcasti32x8_zmm_k1z_m256","EVEX_Vbroadcasti64x2_ymm_k1z_m128","EVEX_Vbroadcasti64x2_zmm_k1z_m128","EVEX_Vbroadcasti64x4_zmm_k1z_m256","EVEX_Vbroadcastsd_ymm_k1z_xmmm64","EVEX_Vbroadcastsd_zmm_k1z_xmmm64","EVEX_Vbroadcastss_xmm_k1z_xmmm32","EVEX_Vbroadcastss_ymm_k1z_xmmm32","EVEX_Vbroadcastss_zmm_k1z_xmmm32","EVEX_Vcmppd_kr_k1_xmm_xmmm128b64_imm8","EVEX_Vcmppd_kr_k1_ymm_ymmm256b64_imm8","EVEX_Vcmppd_kr_k1_zmm_zmmm512b64_imm8_sae","EVEX_Vcmpph_kr_k1_xmm_xmmm128b16_imm8","EVEX_Vcmpph_kr_k1_ymm_ymmm256b16_imm8","EVEX_Vcmpph_kr_k1_zmm_zmmm512b16_imm8_sae","EVEX_Vcmpps_kr_k1_xmm_xmmm128b32_imm8","EVEX_Vcmpps_kr_k1_ymm_ymmm256b32_imm8","EVEX_Vcmpps_kr_k1_zmm_zmmm512b32_imm8_sae","EVEX_Vcmpsd_kr_k1_xmm_xmmm64_imm8_sae","EVEX_Vcmpsh_kr_k1_xmm_xmmm16_imm8_sae","EVEX_Vcmpss_kr_k1_xmm_xmmm32_imm8_sae","EVEX_Vcomisd_xmm_xmmm64_sae","EVEX_Vcomish_xmm_xmmm16_sae","EVEX_Vcomiss_xmm_xmmm32_sae","EVEX_Vcompresspd_xmmm128_k1z_xmm","EVEX_Vcompresspd_ymmm256_k1z_ymm","EVEX_Vcompresspd_zmmm512_k1z_zmm","EVEX_Vcompressps_xmmm128_k1z_xmm","EVEX_Vcompressps_ymmm256_k1z_ymm","EVEX_Vcompressps_zmmm512_k1z_zmm","EVEX_Vcvtdq2pd_xmm_k1z_xmmm64b32","EVEX_Vcvtdq2pd_ymm_k1z_xmmm128b32","EVEX_Vcvtdq2pd_zmm_k1z_ymmm256b32_er","EVEX_Vcvtdq2ph_xmm_k1z_xmmm128b32","EVEX_Vcvtdq2ph_xmm_k1z_ymmm256b32","EVEX_Vcvtdq2ph_ymm_k1z_zmmm512b32_er","EVEX_Vcvtdq2ps_xmm_k1z_xmmm128b32","EVEX_Vcvtdq2ps_ymm_k1z_ymmm256b32","EVEX_Vcvtdq2ps_zmm_k1z_zmmm512b32_er","EVEX_Vcvtne2ps2bf16_xmm_k1z_xmm_xmmm128b32","EVEX_Vcvtne2ps2bf16_ymm_k1z_ymm_ymmm256b32","EVEX_Vcvtne2ps2bf16_zmm_k1z_zmm_zmmm512b32","EVEX_Vcvtneps2bf16_xmm_k1z_xmmm128b32","EVEX_Vcvtneps2bf16_xmm_k1z_ymmm256b32","EVEX_Vcvtneps2bf16_ymm_k1z_zmmm512b32","EVEX_Vcvtpd2dq_xmm_k1z_xmmm128b64","EVEX_Vcvtpd2dq_xmm_k1z_ymmm256b64","EVEX_Vcvtpd2dq_ymm_k1z_zmmm512b64_er","EVEX_Vcvtpd2ph_xmm_k1z_xmmm128b64","EVEX_Vcvtpd2ph_xmm_k1z_ymmm256b64","EVEX_Vcvtpd2ph_xmm_k1z_zmmm512b64_er","EVEX_Vcvtpd2ps_xmm_k1z_xmmm128b64","EVEX_Vcvtpd2ps_xmm_k1z_ymmm256b64","EVEX_Vcvtpd2ps_ymm_k1z_zmmm512b64_er","EVEX_Vcvtpd2qq_xmm_k1z_xmmm128b64","EVEX_Vcvtpd2qq_ymm_k1z_ymmm256b64","EVEX_Vcvtpd2qq_zmm_k1z_zmmm512b64_er","EVEX_Vcvtpd2udq_xmm_k1z_xmmm128b64","EVEX_Vcvtpd2udq_xmm_k1z_ymmm256b64","EVEX_Vcvtpd2udq_ymm_k1z_zmmm512b64_er","EVEX_Vcvtpd2uqq_xmm_k1z_xmmm128b64","EVEX_Vcvtpd2uqq_ymm_k1z_ymmm256b64","EVEX_Vcvtpd2uqq_zmm_k1z_zmmm512b64_er","EVEX_Vcvtph2dq_xmm_k1z_xmmm64b16","EVEX_Vcvtph2dq_ymm_k1z_xmmm128b16","EVEX_Vcvtph2dq_zmm_k1z_ymmm256b16_er","EVEX_Vcvtph2pd_xmm_k1z_xmmm32b16","EVEX_Vcvtph2pd_ymm_k1z_xmmm64b16","EVEX_Vcvtph2pd_zmm_k1z_xmmm128b16_sae","EVEX_Vcvtph2ps_xmm_k1z_xmmm64","EVEX_Vcvtph2ps_ymm_k1z_xmmm128","EVEX_Vcvtph2ps_zmm_k1z_ymmm256_sae","EVEX_Vcvtph2psx_xmm_k1z_xmmm64b16","EVEX_Vcvtph2psx_ymm_k1z_xmmm128b16","EVEX_Vcvtph2psx_zmm_k1z_ymmm256b16_sae","EVEX_Vcvtph2qq_xmm_k1z_xmmm32b16","EVEX_Vcvtph2qq_ymm_k1z_xmmm64b16","EVEX_Vcvtph2qq_zmm_k1z_xmmm128b16_er","EVEX_Vcvtph2udq_xmm_k1z_xmmm64b16","EVEX_Vcvtph2udq_ymm_k1z_xmmm128b16","EVEX_Vcvtph2udq_zmm_k1z_ymmm256b16_er","EVEX_Vcvtph2uqq_xmm_k1z_xmmm32b16","EVEX_Vcvtph2uqq_ymm_k1z_xmmm64b16","EVEX_Vcvtph2uqq_zmm_k1z_xmmm128b16_er","EVEX_Vcvtph2uw_xmm_k1z_xmmm128b16","EVEX_Vcvtph2uw_ymm_k1z_ymmm256b16","EVEX_Vcvtph2uw_zmm_k1z_zmmm512b16_er","EVEX_Vcvtph2w_xmm_k1z_xmmm128b16","EVEX_Vcvtph2w_ymm_k1z_ymmm256b16","EVEX_Vcvtph2w_zmm_k1z_zmmm512b16_er","EVEX_Vcvtps2dq_xmm_k1z_xmmm128b32","EVEX_Vcvtps2dq_ymm_k1z_ymmm256b32","EVEX_Vcvtps2dq_zmm_k1z_zmmm512b32_er","EVEX_Vcvtps2pd_xmm_k1z_xmmm64b32","EVEX_Vcvtps2pd_ymm_k1z_xmmm128b32","EVEX_Vcvtps2pd_zmm_k1z_ymmm256b32_sae","EVEX_Vcvtps2ph_xmmm128_k1z_ymm_imm8","EVEX_Vcvtps2ph_xmmm64_k1z_xmm_imm8","EVEX_Vcvtps2ph_ymmm256_k1z_zmm_imm8_sae","EVEX_Vcvtps2phx_xmm_k1z_xmmm128b32","EVEX_Vcvtps2phx_xmm_k1z_ymmm256b32","EVEX_Vcvtps2phx_ymm_k1z_zmmm512b32_er","EVEX_Vcvtps2qq_xmm_k1z_xmmm64b32","EVEX_Vcvtps2qq_ymm_k1z_xmmm128b32","EVEX_Vcvtps2qq_zmm_k1z_ymmm256b32_er","EVEX_Vcvtps2udq_xmm_k1z_xmmm128b32","EVEX_Vcvtps2udq_ymm_k1z_ymmm256b32","EVEX_Vcvtps2udq_zmm_k1z_zmmm512b32_er","EVEX_Vcvtps2uqq_xmm_k1z_xmmm64b32","EVEX_Vcvtps2uqq_ymm_k1z_xmmm128b32","EVEX_Vcvtps2uqq_zmm_k1z_ymmm256b32_er","EVEX_Vcvtqq2pd_xmm_k1z_xmmm128b64","EVEX_Vcvtqq2pd_ymm_k1z_ymmm256b64","EVEX_Vcvtqq2pd_zmm_k1z_zmmm512b64_er","EVEX_Vcvtqq2ph_xmm_k1z_xmmm128b64","EVEX_Vcvtqq2ph_xmm_k1z_ymmm256b64","EVEX_Vcvtqq2ph_xmm_k1z_zmmm512b64_er","EVEX_Vcvtqq2ps_xmm_k1z_xmmm128b64","EVEX_Vcvtqq2ps_xmm_k1z_ymmm256b64","EVEX_Vcvtqq2ps_ymm_k1z_zmmm512b64_er","EVEX_Vcvtsd2sh_xmm_k1z_xmm_xmmm64_er","EVEX_Vcvtsd2si_r32_xmmm64_er","EVEX_Vcvtsd2si_r64_xmmm64_er","EVEX_Vcvtsd2ss_xmm_k1z_xmm_xmmm64_er","EVEX_Vcvtsd2usi_r32_xmmm64_er","EVEX_Vcvtsd2usi_r64_xmmm64_er","EVEX_Vcvtsh2sd_xmm_k1z_xmm_xmmm16_sae","EVEX_Vcvtsh2si_r32_xmmm16_er","EVEX_Vcvtsh2si_r64_xmmm16_er","EVEX_Vcvtsh2ss_xmm_k1z_xmm_xmmm16_sae","EVEX_Vcvtsh2usi_r32_xmmm16_er","EVEX_Vcvtsh2usi_r64_xmmm16_er","EVEX_Vcvtsi2sd_xmm_xmm_rm32_er","EVEX_Vcvtsi2sd_xmm_xmm_rm64_er","EVEX_Vcvtsi2sh_xmm_xmm_rm32_er","EVEX_Vcvtsi2sh_xmm_xmm_rm64_er","EVEX_Vcvtsi2ss_xmm_xmm_rm32_er","EVEX_Vcvtsi2ss_xmm_xmm_rm64_er","EVEX_Vcvtss2sd_xmm_k1z_xmm_xmmm32_sae","EVEX_Vcvtss2sh_xmm_k1z_xmm_xmmm32_er","EVEX_Vcvtss2si_r32_xmmm32_er","EVEX_Vcvtss2si_r64_xmmm32_er","EVEX_Vcvtss2usi_r32_xmmm32_er","EVEX_Vcvtss2usi_r64_xmmm32_er","EVEX_Vcvttpd2dq_xmm_k1z_xmmm128b64","EVEX_Vcvttpd2dq_xmm_k1z_ymmm256b64","EVEX_Vcvttpd2dq_ymm_k1z_zmmm512b64_sae","EVEX_Vcvttpd2qq_xmm_k1z_xmmm128b64","EVEX_Vcvttpd2qq_ymm_k1z_ymmm256b64","EVEX_Vcvttpd2qq_zmm_k1z_zmmm512b64_sae","EVEX_Vcvttpd2udq_xmm_k1z_xmmm128b64","EVEX_Vcvttpd2udq_xmm_k1z_ymmm256b64","EVEX_Vcvttpd2udq_ymm_k1z_zmmm512b64_sae","EVEX_Vcvttpd2uqq_xmm_k1z_xmmm128b64","EVEX_Vcvttpd2uqq_ymm_k1z_ymmm256b64","EVEX_Vcvttpd2uqq_zmm_k1z_zmmm512b64_sae","EVEX_Vcvttph2dq_xmm_k1z_xmmm64b16","EVEX_Vcvttph2dq_ymm_k1z_xmmm128b16","EVEX_Vcvttph2dq_zmm_k1z_ymmm256b16_sae","EVEX_Vcvttph2qq_xmm_k1z_xmmm32b16","EVEX_Vcvttph2qq_ymm_k1z_xmmm64b16","EVEX_Vcvttph2qq_zmm_k1z_xmmm128b16_sae","EVEX_Vcvttph2udq_xmm_k1z_xmmm64b16","EVEX_Vcvttph2udq_ymm_k1z_xmmm128b16","EVEX_Vcvttph2udq_zmm_k1z_ymmm256b16_sae","EVEX_Vcvttph2uqq_xmm_k1z_xmmm32b16","EVEX_Vcvttph2uqq_ymm_k1z_xmmm64b16","EVEX_Vcvttph2uqq_zmm_k1z_xmmm128b16_sae","EVEX_Vcvttph2uw_xmm_k1z_xmmm128b16","EVEX_Vcvttph2uw_ymm_k1z_ymmm256b16","EVEX_Vcvttph2uw_zmm_k1z_zmmm512b16_sae","EVEX_Vcvttph2w_xmm_k1z_xmmm128b16","EVEX_Vcvttph2w_ymm_k1z_ymmm256b16","EVEX_Vcvttph2w_zmm_k1z_zmmm512b16_sae","EVEX_Vcvttps2dq_xmm_k1z_xmmm128b32","EVEX_Vcvttps2dq_ymm_k1z_ymmm256b32","EVEX_Vcvttps2dq_zmm_k1z_zmmm512b32_sae","EVEX_Vcvttps2qq_xmm_k1z_xmmm64b32","EVEX_Vcvttps2qq_ymm_k1z_xmmm128b32","EVEX_Vcvttps2qq_zmm_k1z_ymmm256b32_sae","EVEX_Vcvttps2udq_xmm_k1z_xmmm128b32","EVEX_Vcvttps2udq_ymm_k1z_ymmm256b32","EVEX_Vcvttps2udq_zmm_k1z_zmmm512b32_sae","EVEX_Vcvttps2uqq_xmm_k1z_xmmm64b32","EVEX_Vcvttps2uqq_ymm_k1z_xmmm128b32","EVEX_Vcvttps2uqq_zmm_k1z_ymmm256b32_sae","EVEX_Vcvttsd2si_r32_xmmm64_sae","EVEX_Vcvttsd2si_r64_xmmm64_sae","EVEX_Vcvttsd2usi_r32_xmmm64_sae","EVEX_Vcvttsd2usi_r64_xmmm64_sae","EVEX_Vcvttsh2si_r32_xmmm16_sae","EVEX_Vcvttsh2si_r64_xmmm16_sae","EVEX_Vcvttsh2usi_r32_xmmm16_sae","EVEX_Vcvttsh2usi_r64_xmmm16_sae","EVEX_Vcvttss2si_r32_xmmm32_sae","EVEX_Vcvttss2si_r64_xmmm32_sae","EVEX_Vcvttss2usi_r32_xmmm32_sae","EVEX_Vcvttss2usi_r64_xmmm32_sae","EVEX_Vcvtudq2pd_xmm_k1z_xmmm64b32","EVEX_Vcvtudq2pd_ymm_k1z_xmmm128b32","EVEX_Vcvtudq2pd_zmm_k1z_ymmm256b32_er","EVEX_Vcvtudq2ph_xmm_k1z_xmmm128b32","EVEX_Vcvtudq2ph_xmm_k1z_ymmm256b32","EVEX_Vcvtudq2ph_ymm_k1z_zmmm512b32_er","EVEX_Vcvtudq2ps_xmm_k1z_xmmm128b32","EVEX_Vcvtudq2ps_ymm_k1z_ymmm256b32","EVEX_Vcvtudq2ps_zmm_k1z_zmmm512b32_er","EVEX_Vcvtuqq2pd_xmm_k1z_xmmm128b64","EVEX_Vcvtuqq2pd_ymm_k1z_ymmm256b64","EVEX_Vcvtuqq2pd_zmm_k1z_zmmm512b64_er","EVEX_Vcvtuqq2ph_xmm_k1z_xmmm128b64","EVEX_Vcvtuqq2ph_xmm_k1z_ymmm256b64","EVEX_Vcvtuqq2ph_xmm_k1z_zmmm512b64_er","EVEX_Vcvtuqq2ps_xmm_k1z_xmmm128b64","EVEX_Vcvtuqq2ps_xmm_k1z_ymmm256b64","EVEX_Vcvtuqq2ps_ymm_k1z_zmmm512b64_er","EVEX_Vcvtusi2sd_xmm_xmm_rm32_er","EVEX_Vcvtusi2sd_xmm_xmm_rm64_er","EVEX_Vcvtusi2sh_xmm_xmm_rm32_er","EVEX_Vcvtusi2sh_xmm_xmm_rm64_er","EVEX_Vcvtusi2ss_xmm_xmm_rm32_er","EVEX_Vcvtusi2ss_xmm_xmm_rm64_er","EVEX_Vcvtuw2ph_xmm_k1z_xmmm128b16","EVEX_Vcvtuw2ph_ymm_k1z_ymmm256b16","EVEX_Vcvtuw2ph_zmm_k1z_zmmm512b16_er","EVEX_Vcvtw2ph_xmm_k1z_xmmm128b16","EVEX_Vcvtw2ph_ymm_k1z_ymmm256b16","EVEX_Vcvtw2ph_zmm_k1z_zmmm512b16_er","EVEX_Vdbpsadbw_xmm_k1z_xmm_xmmm128_imm8","EVEX_Vdbpsadbw_ymm_k1z_ymm_ymmm256_imm8","EVEX_Vdbpsadbw_zmm_k1z_zmm_zmmm512_imm8","EVEX_Vdivpd_xmm_k1z_xmm_xmmm128b64","EVEX_Vdivpd_ymm_k1z_ymm_ymmm256b64","EVEX_Vdivpd_zmm_k1z_zmm_zmmm512b64_er","EVEX_Vdivph_xmm_k1z_xmm_xmmm128b16","EVEX_Vdivph_ymm_k1z_ymm_ymmm256b16","EVEX_Vdivph_zmm_k1z_zmm_zmmm512b16_er","EVEX_Vdivps_xmm_k1z_xmm_xmmm128b32","EVEX_Vdivps_ymm_k1z_ymm_ymmm256b32","EVEX_Vdivps_zmm_k1z_zmm_zmmm512b32_er","EVEX_Vdivsd_xmm_k1z_xmm_xmmm64_er","EVEX_Vdivsh_xmm_k1z_xmm_xmmm16_er","EVEX_Vdivss_xmm_k1z_xmm_xmmm32_er","EVEX_Vdpbf16ps_xmm_k1z_xmm_xmmm128b32","EVEX_Vdpbf16ps_ymm_k1z_ymm_ymmm256b32","EVEX_Vdpbf16ps_zmm_k1z_zmm_zmmm512b32","EVEX_Vexp2pd_zmm_k1z_zmmm512b64_sae","EVEX_Vexp2ps_zmm_k1z_zmmm512b32_sae","EVEX_Vexpandpd_xmm_k1z_xmmm128","EVEX_Vexpandpd_ymm_k1z_ymmm256","EVEX_Vexpandpd_zmm_k1z_zmmm512","EVEX_Vexpandps_xmm_k1z_xmmm128","EVEX_Vexpandps_ymm_k1z_ymmm256","EVEX_Vexpandps_zmm_k1z_zmmm512","EVEX_Vextractf32x4_xmmm128_k1z_ymm_imm8","EVEX_Vextractf32x4_xmmm128_k1z_zmm_imm8","EVEX_Vextractf32x8_ymmm256_k1z_zmm_imm8","EVEX_Vextractf64x2_xmmm128_k1z_ymm_imm8","EVEX_Vextractf64x2_xmmm128_k1z_zmm_imm8","EVEX_Vextractf64x4_ymmm256_k1z_zmm_imm8","EVEX_Vextracti32x4_xmmm128_k1z_ymm_imm8","EVEX_Vextracti32x4_xmmm128_k1z_zmm_imm8","EVEX_Vextracti32x8_ymmm256_k1z_zmm_imm8","EVEX_Vextracti64x2_xmmm128_k1z_ymm_imm8","EVEX_Vextracti64x2_xmmm128_k1z_zmm_imm8","EVEX_Vextracti64x4_ymmm256_k1z_zmm_imm8","EVEX_Vextractps_r64m32_xmm_imm8","EVEX_Vextractps_rm32_xmm_imm8","EVEX_Vfcmaddcph_xmm_k1z_xmm_xmmm128b32","EVEX_Vfcmaddcph_ymm_k1z_ymm_ymmm256b32","EVEX_Vfcmaddcph_zmm_k1z_zmm_zmmm512b32_er","EVEX_Vfcmaddcsh_xmm_k1z_xmm_xmmm32_er","EVEX_Vfcmulcph_xmm_k1z_xmm_xmmm128b32","EVEX_Vfcmulcph_ymm_k1z_ymm_ymmm256b32","EVEX_Vfcmulcph_zmm_k1z_zmm_zmmm512b32_er","EVEX_Vfcmulcsh_xmm_k1z_xmm_xmmm32_er","EVEX_Vfixupimmpd_xmm_k1z_xmm_xmmm128b64_imm8","EVEX_Vfixupimmpd_ymm_k1z_ymm_ymmm256b64_imm8","EVEX_Vfixupimmpd_zmm_k1z_zmm_zmmm512b64_imm8_sae","EVEX_Vfixupimmps_xmm_k1z_xmm_xmmm128b32_imm8","EVEX_Vfixupimmps_ymm_k1z_ymm_ymmm256b32_imm8","EVEX_Vfixupimmps_zmm_k1z_zmm_zmmm512b32_imm8_sae","EVEX_Vfixupimmsd_xmm_k1z_xmm_xmmm64_imm8_sae","EVEX_Vfixupimmss_xmm_k1z_xmm_xmmm32_imm8_sae","EVEX_Vfmadd132pd_xmm_k1z_xmm_xmmm128b64","EVEX_Vfmadd132pd_ymm_k1z_ymm_ymmm256b64","EVEX_Vfmadd132pd_zmm_k1z_zmm_zmmm512b64_er","EVEX_Vfmadd132ph_xmm_k1z_xmm_xmmm128b16","EVEX_Vfmadd132ph_ymm_k1z_ymm_ymmm256b16","EVEX_Vfmadd132ph_zmm_k1z_zmm_zmmm512b16_er","EVEX_Vfmadd132ps_xmm_k1z_xmm_xmmm128b32","EVEX_Vfmadd132ps_ymm_k1z_ymm_ymmm256b32","EVEX_Vfmadd132ps_zmm_k1z_zmm_zmmm512b32_er","EVEX_Vfmadd132sd_xmm_k1z_xmm_xmmm64_er","EVEX_Vfmadd132sh_xmm_k1z_xmm_xmmm16_er","EVEX_Vfmadd132ss_xmm_k1z_xmm_xmmm32_er","EVEX_Vfmadd213pd_xmm_k1z_xmm_xmmm128b64","EVEX_Vfmadd213pd_ymm_k1z_ymm_ymmm256b64","EVEX_Vfmadd213pd_zmm_k1z_zmm_zmmm512b64_er","EVEX_Vfmadd213ph_xmm_k1z_xmm_xmmm128b16","EVEX_Vfmadd213ph_ymm_k1z_ymm_ymmm256b16","EVEX_Vfmadd213ph_zmm_k1z_zmm_zmmm512b16_er","EVEX_Vfmadd213ps_xmm_k1z_xmm_xmmm128b32","EVEX_Vfmadd213ps_ymm_k1z_ymm_ymmm256b32","EVEX_Vfmadd213ps_zmm_k1z_zmm_zmmm512b32_er","EVEX_Vfmadd213sd_xmm_k1z_xmm_xmmm64_er","EVEX_Vfmadd213sh_xmm_k1z_xmm_xmmm16_er","EVEX_Vfmadd213ss_xmm_k1z_xmm_xmmm32_er","EVEX_Vfmadd231pd_xmm_k1z_xmm_xmmm128b64","EVEX_Vfmadd231pd_ymm_k1z_ymm_ymmm256b64","EVEX_Vfmadd231pd_zmm_k1z_zmm_zmmm512b64_er","EVEX_Vfmadd231ph_xmm_k1z_xmm_xmmm128b16","EVEX_Vfmadd231ph_ymm_k1z_ymm_ymmm256b16","EVEX_Vfmadd231ph_zmm_k1z_zmm_zmmm512b16_er","EVEX_Vfmadd231ps_xmm_k1z_xmm_xmmm128b32","EVEX_Vfmadd231ps_ymm_k1z_ymm_ymmm256b32","EVEX_Vfmadd231ps_zmm_k1z_zmm_zmmm512b32_er","EVEX_Vfmadd231sd_xmm_k1z_xmm_xmmm64_er","EVEX_Vfmadd231sh_xmm_k1z_xmm_xmmm16_er","EVEX_Vfmadd231ss_xmm_k1z_xmm_xmmm32_er","EVEX_Vfmaddcph_xmm_k1z_xmm_xmmm128b32","EVEX_Vfmaddcph_ymm_k1z_ymm_ymmm256b32","EVEX_Vfmaddcph_zmm_k1z_zmm_zmmm512b32_er","EVEX_Vfmaddcsh_xmm_k1z_xmm_xmmm32_er","EVEX_Vfmaddsub132pd_xmm_k1z_xmm_xmmm128b64","EVEX_Vfmaddsub132pd_ymm_k1z_ymm_ymmm256b64","EVEX_Vfmaddsub132pd_zmm_k1z_zmm_zmmm512b64_er","EVEX_Vfmaddsub132ph_xmm_k1z_xmm_xmmm128b16","EVEX_Vfmaddsub132ph_ymm_k1z_ymm_ymmm256b16","EVEX_Vfmaddsub132ph_zmm_k1z_zmm_zmmm512b16_er","EVEX_Vfmaddsub132ps_xmm_k1z_xmm_xmmm128b32","EVEX_Vfmaddsub132ps_ymm_k1z_ymm_ymmm256b32","EVEX_Vfmaddsub132ps_zmm_k1z_zmm_zmmm512b32_er","EVEX_Vfmaddsub213pd_xmm_k1z_xmm_xmmm128b64","EVEX_Vfmaddsub213pd_ymm_k1z_ymm_ymmm256b64","EVEX_Vfmaddsub213pd_zmm_k1z_zmm_zmmm512b64_er","EVEX_Vfmaddsub213ph_xmm_k1z_xmm_xmmm128b16","EVEX_Vfmaddsub213ph_ymm_k1z_ymm_ymmm256b16","EVEX_Vfmaddsub213ph_zmm_k1z_zmm_zmmm512b16_er","EVEX_Vfmaddsub213ps_xmm_k1z_xmm_xmmm128b32","EVEX_Vfmaddsub213ps_ymm_k1z_ymm_ymmm256b32","EVEX_Vfmaddsub213ps_zmm_k1z_zmm_zmmm512b32_er","EVEX_Vfmaddsub231pd_xmm_k1z_xmm_xmmm128b64","EVEX_Vfmaddsub231pd_ymm_k1z_ymm_ymmm256b64","EVEX_Vfmaddsub231pd_zmm_k1z_zmm_zmmm512b64_er","EVEX_Vfmaddsub231ph_xmm_k1z_xmm_xmmm128b16","EVEX_Vfmaddsub231ph_ymm_k1z_ymm_ymmm256b16","EVEX_Vfmaddsub231ph_zmm_k1z_zmm_zmmm512b16_er","EVEX_Vfmaddsub231ps_xmm_k1z_xmm_xmmm128b32","EVEX_Vfmaddsub231ps_ymm_k1z_ymm_ymmm256b32","EVEX_Vfmaddsub231ps_zmm_k1z_zmm_zmmm512b32_er","EVEX_Vfmsub132pd_xmm_k1z_xmm_xmmm128b64","EVEX_Vfmsub132pd_ymm_k1z_ymm_ymmm256b64","EVEX_Vfmsub132pd_zmm_k1z_zmm_zmmm512b64_er","EVEX_Vfmsub132ph_xmm_k1z_xmm_xmmm128b16","EVEX_Vfmsub132ph_ymm_k1z_ymm_ymmm256b16","EVEX_Vfmsub132ph_zmm_k1z_zmm_zmmm512b16_er","EVEX_Vfmsub132ps_xmm_k1z_xmm_xmmm128b32","EVEX_Vfmsub132ps_ymm_k1z_ymm_ymmm256b32","EVEX_Vfmsub132ps_zmm_k1z_zmm_zmmm512b32_er","EVEX_Vfmsub132sd_xmm_k1z_xmm_xmmm64_er","EVEX_Vfmsub132sh_xmm_k1z_xmm_xmmm16_er","EVEX_Vfmsub132ss_xmm_k1z_xmm_xmmm32_er","EVEX_Vfmsub213pd_xmm_k1z_xmm_xmmm128b64","EVEX_Vfmsub213pd_ymm_k1z_ymm_ymmm256b64","EVEX_Vfmsub213pd_zmm_k1z_zmm_zmmm512b64_er","EVEX_Vfmsub213ph_xmm_k1z_xmm_xmmm128b16","EVEX_Vfmsub213ph_ymm_k1z_ymm_ymmm256b16","EVEX_Vfmsub213ph_zmm_k1z_zmm_zmmm512b16_er","EVEX_Vfmsub213ps_xmm_k1z_xmm_xmmm128b32","EVEX_Vfmsub213ps_ymm_k1z_ymm_ymmm256b32","EVEX_Vfmsub213ps_zmm_k1z_zmm_zmmm512b32_er","EVEX_Vfmsub213sd_xmm_k1z_xmm_xmmm64_er","EVEX_Vfmsub213sh_xmm_k1z_xmm_xmmm16_er","EVEX_Vfmsub213ss_xmm_k1z_xmm_xmmm32_er","EVEX_Vfmsub231pd_xmm_k1z_xmm_xmmm128b64","EVEX_Vfmsub231pd_ymm_k1z_ymm_ymmm256b64","EVEX_Vfmsub231pd_zmm_k1z_zmm_zmmm512b64_er","EVEX_Vfmsub231ph_xmm_k1z_xmm_xmmm128b16","EVEX_Vfmsub231ph_ymm_k1z_ymm_ymmm256b16","EVEX_Vfmsub231ph_zmm_k1z_zmm_zmmm512b16_er","EVEX_Vfmsub231ps_xmm_k1z_xmm_xmmm128b32","EVEX_Vfmsub231ps_ymm_k1z_ymm_ymmm256b32","EVEX_Vfmsub231ps_zmm_k1z_zmm_zmmm512b32_er","EVEX_Vfmsub231sd_xmm_k1z_xmm_xmmm64_er","EVEX_Vfmsub231sh_xmm_k1z_xmm_xmmm16_er","EVEX_Vfmsub231ss_xmm_k1z_xmm_xmmm32_er","EVEX_Vfmsubadd132pd_xmm_k1z_xmm_xmmm128b64","EVEX_Vfmsubadd132pd_ymm_k1z_ymm_ymmm256b64","EVEX_Vfmsubadd132pd_zmm_k1z_zmm_zmmm512b64_er","EVEX_Vfmsubadd132ph_xmm_k1z_xmm_xmmm128b16","EVEX_Vfmsubadd132ph_ymm_k1z_ymm_ymmm256b16","EVEX_Vfmsubadd132ph_zmm_k1z_zmm_zmmm512b16_er","EVEX_Vfmsubadd132ps_xmm_k1z_xmm_xmmm128b32","EVEX_Vfmsubadd132ps_ymm_k1z_ymm_ymmm256b32","EVEX_Vfmsubadd132ps_zmm_k1z_zmm_zmmm512b32_er","EVEX_Vfmsubadd213pd_xmm_k1z_xmm_xmmm128b64","EVEX_Vfmsubadd213pd_ymm_k1z_ymm_ymmm256b64","EVEX_Vfmsubadd213pd_zmm_k1z_zmm_zmmm512b64_er","EVEX_Vfmsubadd213ph_xmm_k1z_xmm_xmmm128b16","EVEX_Vfmsubadd213ph_ymm_k1z_ymm_ymmm256b16","EVEX_Vfmsubadd213ph_zmm_k1z_zmm_zmmm512b16_er","EVEX_Vfmsubadd213ps_xmm_k1z_xmm_xmmm128b32","EVEX_Vfmsubadd213ps_ymm_k1z_ymm_ymmm256b32","EVEX_Vfmsubadd213ps_zmm_k1z_zmm_zmmm512b32_er","EVEX_Vfmsubadd231pd_xmm_k1z_xmm_xmmm128b64","EVEX_Vfmsubadd231pd_ymm_k1z_ymm_ymmm256b64","EVEX_Vfmsubadd231pd_zmm_k1z_zmm_zmmm512b64_er","EVEX_Vfmsubadd231ph_xmm_k1z_xmm_xmmm128b16","EVEX_Vfmsubadd231ph_ymm_k1z_ymm_ymmm256b16","EVEX_Vfmsubadd231ph_zmm_k1z_zmm_zmmm512b16_er","EVEX_Vfmsubadd231ps_xmm_k1z_xmm_xmmm128b32","EVEX_Vfmsubadd231ps_ymm_k1z_ymm_ymmm256b32","EVEX_Vfmsubadd231ps_zmm_k1z_zmm_zmmm512b32_er","EVEX_Vfmulcph_xmm_k1z_xmm_xmmm128b32","EVEX_Vfmulcph_ymm_k1z_ymm_ymmm256b32","EVEX_Vfmulcph_zmm_k1z_zmm_zmmm512b32_er","EVEX_Vfmulcsh_xmm_k1z_xmm_xmmm32_er","EVEX_Vfnmadd132pd_xmm_k1z_xmm_xmmm128b64","EVEX_Vfnmadd132pd_ymm_k1z_ymm_ymmm256b64","EVEX_Vfnmadd132pd_zmm_k1z_zmm_zmmm512b64_er","EVEX_Vfnmadd132ph_xmm_k1z_xmm_xmmm128b16","EVEX_Vfnmadd132ph_ymm_k1z_ymm_ymmm256b16","EVEX_Vfnmadd132ph_zmm_k1z_zmm_zmmm512b16_er","EVEX_Vfnmadd132ps_xmm_k1z_xmm_xmmm128b32","EVEX_Vfnmadd132ps_ymm_k1z_ymm_ymmm256b32","EVEX_Vfnmadd132ps_zmm_k1z_zmm_zmmm512b32_er","EVEX_Vfnmadd132sd_xmm_k1z_xmm_xmmm64_er","EVEX_Vfnmadd132sh_xmm_k1z_xmm_xmmm16_er","EVEX_Vfnmadd132ss_xmm_k1z_xmm_xmmm32_er","EVEX_Vfnmadd213pd_xmm_k1z_xmm_xmmm128b64","EVEX_Vfnmadd213pd_ymm_k1z_ymm_ymmm256b64","EVEX_Vfnmadd213pd_zmm_k1z_zmm_zmmm512b64_er","EVEX_Vfnmadd213ph_xmm_k1z_xmm_xmmm128b16","EVEX_Vfnmadd213ph_ymm_k1z_ymm_ymmm256b16","EVEX_Vfnmadd213ph_zmm_k1z_zmm_zmmm512b16_er","EVEX_Vfnmadd213ps_xmm_k1z_xmm_xmmm128b32","EVEX_Vfnmadd213ps_ymm_k1z_ymm_ymmm256b32","EVEX_Vfnmadd213ps_zmm_k1z_zmm_zmmm512b32_er","EVEX_Vfnmadd213sd_xmm_k1z_xmm_xmmm64_er","EVEX_Vfnmadd213sh_xmm_k1z_xmm_xmmm16_er","EVEX_Vfnmadd213ss_xmm_k1z_xmm_xmmm32_er","EVEX_Vfnmadd231pd_xmm_k1z_xmm_xmmm128b64","EVEX_Vfnmadd231pd_ymm_k1z_ymm_ymmm256b64","EVEX_Vfnmadd231pd_zmm_k1z_zmm_zmmm512b64_er","EVEX_Vfnmadd231ph_xmm_k1z_xmm_xmmm128b16","EVEX_Vfnmadd231ph_ymm_k1z_ymm_ymmm256b16","EVEX_Vfnmadd231ph_zmm_k1z_zmm_zmmm512b16_er","EVEX_Vfnmadd231ps_xmm_k1z_xmm_xmmm128b32","EVEX_Vfnmadd231ps_ymm_k1z_ymm_ymmm256b32","EVEX_Vfnmadd231ps_zmm_k1z_zmm_zmmm512b32_er","EVEX_Vfnmadd231sd_xmm_k1z_xmm_xmmm64_er","EVEX_Vfnmadd231sh_xmm_k1z_xmm_xmmm16_er","EVEX_Vfnmadd231ss_xmm_k1z_xmm_xmmm32_er","EVEX_Vfnmsub132pd_xmm_k1z_xmm_xmmm128b64","EVEX_Vfnmsub132pd_ymm_k1z_ymm_ymmm256b64","EVEX_Vfnmsub132pd_zmm_k1z_zmm_zmmm512b64_er","EVEX_Vfnmsub132ph_xmm_k1z_xmm_xmmm128b16","EVEX_Vfnmsub132ph_ymm_k1z_ymm_ymmm256b16","EVEX_Vfnmsub132ph_zmm_k1z_zmm_zmmm512b16_er","EVEX_Vfnmsub132ps_xmm_k1z_xmm_xmmm128b32","EVEX_Vfnmsub132ps_ymm_k1z_ymm_ymmm256b32","EVEX_Vfnmsub132ps_zmm_k1z_zmm_zmmm512b32_er","EVEX_Vfnmsub132sd_xmm_k1z_xmm_xmmm64_er","EVEX_Vfnmsub132sh_xmm_k1z_xmm_xmmm16_er","EVEX_Vfnmsub132ss_xmm_k1z_xmm_xmmm32_er","EVEX_Vfnmsub213pd_xmm_k1z_xmm_xmmm128b64","EVEX_Vfnmsub213pd_ymm_k1z_ymm_ymmm256b64","EVEX_Vfnmsub213pd_zmm_k1z_zmm_zmmm512b64_er","EVEX_Vfnmsub213ph_xmm_k1z_xmm_xmmm128b16","EVEX_Vfnmsub213ph_ymm_k1z_ymm_ymmm256b16","EVEX_Vfnmsub213ph_zmm_k1z_zmm_zmmm512b16_er","EVEX_Vfnmsub213ps_xmm_k1z_xmm_xmmm128b32","EVEX_Vfnmsub213ps_ymm_k1z_ymm_ymmm256b32","EVEX_Vfnmsub213ps_zmm_k1z_zmm_zmmm512b32_er","EVEX_Vfnmsub213sd_xmm_k1z_xmm_xmmm64_er","EVEX_Vfnmsub213sh_xmm_k1z_xmm_xmmm16_er","EVEX_Vfnmsub213ss_xmm_k1z_xmm_xmmm32_er","EVEX_Vfnmsub231pd_xmm_k1z_xmm_xmmm128b64","EVEX_Vfnmsub231pd_ymm_k1z_ymm_ymmm256b64","EVEX_Vfnmsub231pd_zmm_k1z_zmm_zmmm512b64_er","EVEX_Vfnmsub231ph_xmm_k1z_xmm_xmmm128b16","EVEX_Vfnmsub231ph_ymm_k1z_ymm_ymmm256b16","EVEX_Vfnmsub231ph_zmm_k1z_zmm_zmmm512b16_er","EVEX_Vfnmsub231ps_xmm_k1z_xmm_xmmm128b32","EVEX_Vfnmsub231ps_ymm_k1z_ymm_ymmm256b32","EVEX_Vfnmsub231ps_zmm_k1z_zmm_zmmm512b32_er","EVEX_Vfnmsub231sd_xmm_k1z_xmm_xmmm64_er","EVEX_Vfnmsub231sh_xmm_k1z_xmm_xmmm16_er","EVEX_Vfnmsub231ss_xmm_k1z_xmm_xmmm32_er","EVEX_Vfpclasspd_kr_k1_xmmm128b64_imm8","EVEX_Vfpclasspd_kr_k1_ymmm256b64_imm8","EVEX_Vfpclasspd_kr_k1_zmmm512b64_imm8","EVEX_Vfpclassph_kr_k1_xmmm128b16_imm8","EVEX_Vfpclassph_kr_k1_ymmm256b16_imm8","EVEX_Vfpclassph_kr_k1_zmmm512b16_imm8","EVEX_Vfpclassps_kr_k1_xmmm128b32_imm8","EVEX_Vfpclassps_kr_k1_ymmm256b32_imm8","EVEX_Vfpclassps_kr_k1_zmmm512b32_imm8","EVEX_Vfpclasssd_kr_k1_xmmm64_imm8","EVEX_Vfpclasssh_kr_k1_xmmm16_imm8","EVEX_Vfpclassss_kr_k1_xmmm32_imm8","EVEX_Vgatherdpd_xmm_k1_vm32x","EVEX_Vgatherdpd_ymm_k1_vm32x","EVEX_Vgatherdpd_zmm_k1_vm32y","EVEX_Vgatherdps_xmm_k1_vm32x","EVEX_Vgatherdps_ymm_k1_vm32y","EVEX_Vgatherdps_zmm_k1_vm32z","EVEX_Vgatherpf0dpd_vm32y_k1","EVEX_Vgatherpf0dps_vm32z_k1","EVEX_Vgatherpf0qpd_vm64z_k1","EVEX_Vgatherpf0qps_vm64z_k1","EVEX_Vgatherpf1dpd_vm32y_k1","EVEX_Vgatherpf1dps_vm32z_k1","EVEX_Vgatherpf1qpd_vm64z_k1","EVEX_Vgatherpf1qps_vm64z_k1","EVEX_Vgatherqpd_xmm_k1_vm64x","EVEX_Vgatherqpd_ymm_k1_vm64y","EVEX_Vgatherqpd_zmm_k1_vm64z","EVEX_Vgatherqps_xmm_k1_vm64x","EVEX_Vgatherqps_xmm_k1_vm64y","EVEX_Vgatherqps_ymm_k1_vm64z","EVEX_Vgetexppd_xmm_k1z_xmmm128b64","EVEX_Vgetexppd_ymm_k1z_ymmm256b64","EVEX_Vgetexppd_zmm_k1z_zmmm512b64_sae","EVEX_Vgetexpph_xmm_k1z_xmmm128b16","EVEX_Vgetexpph_ymm_k1z_ymmm256b16","EVEX_Vgetexpph_zmm_k1z_zmmm512b16_sae","EVEX_Vgetexpps_xmm_k1z_xmmm128b32","EVEX_Vgetexpps_ymm_k1z_ymmm256b32","EVEX_Vgetexpps_zmm_k1z_zmmm512b32_sae","EVEX_Vgetexpsd_xmm_k1z_xmm_xmmm64_sae","EVEX_Vgetexpsh_xmm_k1z_xmm_xmmm16_sae","EVEX_Vgetexpss_xmm_k1z_xmm_xmmm32_sae","EVEX_Vgetmantpd_xmm_k1z_xmmm128b64_imm8","EVEX_Vgetmantpd_ymm_k1z_ymmm256b64_imm8","EVEX_Vgetmantpd_zmm_k1z_zmmm512b64_imm8_sae","EVEX_Vgetmantph_xmm_k1z_xmmm128b16_imm8","EVEX_Vgetmantph_ymm_k1z_ymmm256b16_imm8","EVEX_Vgetmantph_zmm_k1z_zmmm512b16_imm8_sae","EVEX_Vgetmantps_xmm_k1z_xmmm128b32_imm8","EVEX_Vgetmantps_ymm_k1z_ymmm256b32_imm8","EVEX_Vgetmantps_zmm_k1z_zmmm512b32_imm8_sae","EVEX_Vgetmantsd_xmm_k1z_xmm_xmmm64_imm8_sae","EVEX_Vgetmantsh_xmm_k1z_xmm_xmmm16_imm8_sae","EVEX_Vgetmantss_xmm_k1z_xmm_xmmm32_imm8_sae","EVEX_Vgf2p8affineinvqb_xmm_k1z_xmm_xmmm128b64_imm8","EVEX_Vgf2p8affineinvqb_ymm_k1z_ymm_ymmm256b64_imm8","EVEX_Vgf2p8affineinvqb_zmm_k1z_zmm_zmmm512b64_imm8","EVEX_Vgf2p8affineqb_xmm_k1z_xmm_xmmm128b64_imm8","EVEX_Vgf2p8affineqb_ymm_k1z_ymm_ymmm256b64_imm8","EVEX_Vgf2p8affineqb_zmm_k1z_zmm_zmmm512b64_imm8","EVEX_Vgf2p8mulb_xmm_k1z_xmm_xmmm128","EVEX_Vgf2p8mulb_ymm_k1z_ymm_ymmm256","EVEX_Vgf2p8mulb_zmm_k1z_zmm_zmmm512","EVEX_Vinsertf32x4_ymm_k1z_ymm_xmmm128_imm8","EVEX_Vinsertf32x4_zmm_k1z_zmm_xmmm128_imm8","EVEX_Vinsertf32x8_zmm_k1z_zmm_ymmm256_imm8","EVEX_Vinsertf64x2_ymm_k1z_ymm_xmmm128_imm8","EVEX_Vinsertf64x2_zmm_k1z_zmm_xmmm128_imm8","EVEX_Vinsertf64x4_zmm_k1z_zmm_ymmm256_imm8","EVEX_Vinserti32x4_ymm_k1z_ymm_xmmm128_imm8","EVEX_Vinserti32x4_zmm_k1z_zmm_xmmm128_imm8","EVEX_Vinserti32x8_zmm_k1z_zmm_ymmm256_imm8","EVEX_Vinserti64x2_ymm_k1z_ymm_xmmm128_imm8","EVEX_Vinserti64x2_zmm_k1z_zmm_xmmm128_imm8","EVEX_Vinserti64x4_zmm_k1z_zmm_ymmm256_imm8","EVEX_Vinsertps_xmm_xmm_xmmm32_imm8","EVEX_Vmaxpd_xmm_k1z_xmm_xmmm128b64","EVEX_Vmaxpd_ymm_k1z_ymm_ymmm256b64","EVEX_Vmaxpd_zmm_k1z_zmm_zmmm512b64_sae","EVEX_Vmaxph_xmm_k1z_xmm_xmmm128b16","EVEX_Vmaxph_ymm_k1z_ymm_ymmm256b16","EVEX_Vmaxph_zmm_k1z_zmm_zmmm512b16_sae","EVEX_Vmaxps_xmm_k1z_xmm_xmmm128b32","EVEX_Vmaxps_ymm_k1z_ymm_ymmm256b32","EVEX_Vmaxps_zmm_k1z_zmm_zmmm512b32_sae","EVEX_Vmaxsd_xmm_k1z_xmm_xmmm64_sae","EVEX_Vmaxsh_xmm_k1z_xmm_xmmm16_sae","EVEX_Vmaxss_xmm_k1z_xmm_xmmm32_sae","EVEX_Vminpd_xmm_k1z_xmm_xmmm128b64","EVEX_Vminpd_ymm_k1z_ymm_ymmm256b64","EVEX_Vminpd_zmm_k1z_zmm_zmmm512b64_sae","EVEX_Vminph_xmm_k1z_xmm_xmmm128b16","EVEX_Vminph_ymm_k1z_ymm_ymmm256b16","EVEX_Vminph_zmm_k1z_zmm_zmmm512b16_sae","EVEX_Vminps_xmm_k1z_xmm_xmmm128b32","EVEX_Vminps_ymm_k1z_ymm_ymmm256b32","EVEX_Vminps_zmm_k1z_zmm_zmmm512b32_sae","EVEX_Vminsd_xmm_k1z_xmm_xmmm64_sae","EVEX_Vminsh_xmm_k1z_xmm_xmmm16_sae","EVEX_Vminss_xmm_k1z_xmm_xmmm32_sae","EVEX_Vmovapd_xmm_k1z_xmmm128","EVEX_Vmovapd_xmmm128_k1z_xmm","EVEX_Vmovapd_ymm_k1z_ymmm256","EVEX_Vmovapd_ymmm256_k1z_ymm","EVEX_Vmovapd_zmm_k1z_zmmm512","EVEX_Vmovapd_zmmm512_k1z_zmm","EVEX_Vmovaps_xmm_k1z_xmmm128","EVEX_Vmovaps_xmmm128_k1z_xmm","EVEX_Vmovaps_ymm_k1z_ymmm256","EVEX_Vmovaps_ymmm256_k1z_ymm","EVEX_Vmovaps_zmm_k1z_zmmm512","EVEX_Vmovaps_zmmm512_k1z_zmm","EVEX_Vmovd_rm32_xmm","EVEX_Vmovd_xmm_rm32","EVEX_Vmovddup_xmm_k1z_xmmm64","EVEX_Vmovddup_ymm_k1z_ymmm256","EVEX_Vmovddup_zmm_k1z_zmmm512","EVEX_Vmovdqa32_xmm_k1z_xmmm128","EVEX_Vmovdqa32_xmmm128_k1z_xmm","EVEX_Vmovdqa32_ymm_k1z_ymmm256","EVEX_Vmovdqa32_ymmm256_k1z_ymm","EVEX_Vmovdqa32_zmm_k1z_zmmm512","EVEX_Vmovdqa32_zmmm512_k1z_zmm","EVEX_Vmovdqa64_xmm_k1z_xmmm128","EVEX_Vmovdqa64_xmmm128_k1z_xmm","EVEX_Vmovdqa64_ymm_k1z_ymmm256","EVEX_Vmovdqa64_ymmm256_k1z_ymm","EVEX_Vmovdqa64_zmm_k1z_zmmm512","EVEX_Vmovdqa64_zmmm512_k1z_zmm","EVEX_Vmovdqu16_xmm_k1z_xmmm128","EVEX_Vmovdqu16_xmmm128_k1z_xmm","EVEX_Vmovdqu16_ymm_k1z_ymmm256","EVEX_Vmovdqu16_ymmm256_k1z_ymm","EVEX_Vmovdqu16_zmm_k1z_zmmm512","EVEX_Vmovdqu16_zmmm512_k1z_zmm","EVEX_Vmovdqu32_xmm_k1z_xmmm128","EVEX_Vmovdqu32_xmmm128_k1z_xmm","EVEX_Vmovdqu32_ymm_k1z_ymmm256","EVEX_Vmovdqu32_ymmm256_k1z_ymm","EVEX_Vmovdqu32_zmm_k1z_zmmm512","EVEX_Vmovdqu32_zmmm512_k1z_zmm","EVEX_Vmovdqu64_xmm_k1z_xmmm128","EVEX_Vmovdqu64_xmmm128_k1z_xmm","EVEX_Vmovdqu64_ymm_k1z_ymmm256","EVEX_Vmovdqu64_ymmm256_k1z_ymm","EVEX_Vmovdqu64_zmm_k1z_zmmm512","EVEX_Vmovdqu64_zmmm512_k1z_zmm","EVEX_Vmovdqu8_xmm_k1z_xmmm128","EVEX_Vmovdqu8_xmmm128_k1z_xmm","EVEX_Vmovdqu8_ymm_k1z_ymmm256","EVEX_Vmovdqu8_ymmm256_k1z_ymm","EVEX_Vmovdqu8_zmm_k1z_zmmm512","EVEX_Vmovdqu8_zmmm512_k1z_zmm","EVEX_Vmovhlps_xmm_xmm_xmm","EVEX_Vmovhpd_m64_xmm","EVEX_Vmovhpd_xmm_xmm_m64","EVEX_Vmovhps_m64_xmm","EVEX_Vmovhps_xmm_xmm_m64","EVEX_Vmovlhps_xmm_xmm_xmm","EVEX_Vmovlpd_m64_xmm","EVEX_Vmovlpd_xmm_xmm_m64","EVEX_Vmovlps_m64_xmm","EVEX_Vmovlps_xmm_xmm_m64","EVEX_Vmovntdq_m128_xmm","EVEX_Vmovntdq_m256_ymm","EVEX_Vmovntdq_m512_zmm","EVEX_Vmovntdqa_xmm_m128","EVEX_Vmovntdqa_ymm_m256","EVEX_Vmovntdqa_zmm_m512","EVEX_Vmovntpd_m128_xmm","EVEX_Vmovntpd_m256_ymm","EVEX_Vmovntpd_m512_zmm","EVEX_Vmovntps_m128_xmm","EVEX_Vmovntps_m256_ymm","EVEX_Vmovntps_m512_zmm","EVEX_Vmovq_rm64_xmm","EVEX_Vmovq_xmm_rm64","EVEX_Vmovq_xmm_xmmm64","EVEX_Vmovq_xmmm64_xmm","EVEX_Vmovsd_m64_k1_xmm","EVEX_Vmovsd_xmm_k1z_m64","EVEX_Vmovsd_xmm_k1z_xmm_xmm","EVEX_Vmovsd_xmm_k1z_xmm_xmm_0F11","EVEX_Vmovsh_m16_k1_xmm","EVEX_Vmovsh_xmm_k1z_m16","EVEX_Vmovsh_xmm_k1z_xmm_xmm","EVEX_Vmovsh_xmm_k1z_xmm_xmm_MAP5_11","EVEX_Vmovshdup_xmm_k1z_xmmm128","EVEX_Vmovshdup_ymm_k1z_ymmm256","EVEX_Vmovshdup_zmm_k1z_zmmm512","EVEX_Vmovsldup_xmm_k1z_xmmm128","EVEX_Vmovsldup_ymm_k1z_ymmm256","EVEX_Vmovsldup_zmm_k1z_zmmm512","EVEX_Vmovss_m32_k1_xmm","EVEX_Vmovss_xmm_k1z_m32","EVEX_Vmovss_xmm_k1z_xmm_xmm","EVEX_Vmovss_xmm_k1z_xmm_xmm_0F11","EVEX_Vmovupd_xmm_k1z_xmmm128","EVEX_Vmovupd_xmmm128_k1z_xmm","EVEX_Vmovupd_ymm_k1z_ymmm256","EVEX_Vmovupd_ymmm256_k1z_ymm","EVEX_Vmovupd_zmm_k1z_zmmm512","EVEX_Vmovupd_zmmm512_k1z_zmm","EVEX_Vmovups_xmm_k1z_xmmm128","EVEX_Vmovups_xmmm128_k1z_xmm","EVEX_Vmovups_ymm_k1z_ymmm256","EVEX_Vmovups_ymmm256_k1z_ymm","EVEX_Vmovups_zmm_k1z_zmmm512","EVEX_Vmovups_zmmm512_k1z_zmm","EVEX_Vmovw_r32m16_xmm","EVEX_Vmovw_r64m16_xmm","EVEX_Vmovw_xmm_r32m16","EVEX_Vmovw_xmm_r64m16","EVEX_Vmulpd_xmm_k1z_xmm_xmmm128b64","EVEX_Vmulpd_ymm_k1z_ymm_ymmm256b64","EVEX_Vmulpd_zmm_k1z_zmm_zmmm512b64_er","EVEX_Vmulph_xmm_k1z_xmm_xmmm128b16","EVEX_Vmulph_ymm_k1z_ymm_ymmm256b16","EVEX_Vmulph_zmm_k1z_zmm_zmmm512b16_er","EVEX_Vmulps_xmm_k1z_xmm_xmmm128b32","EVEX_Vmulps_ymm_k1z_ymm_ymmm256b32","EVEX_Vmulps_zmm_k1z_zmm_zmmm512b32_er","EVEX_Vmulsd_xmm_k1z_xmm_xmmm64_er","EVEX_Vmulsh_xmm_k1z_xmm_xmmm16_er","EVEX_Vmulss_xmm_k1z_xmm_xmmm32_er","EVEX_Vorpd_xmm_k1z_xmm_xmmm128b64","EVEX_Vorpd_ymm_k1z_ymm_ymmm256b64","EVEX_Vorpd_zmm_k1z_zmm_zmmm512b64","EVEX_Vorps_xmm_k1z_xmm_xmmm128b32","EVEX_Vorps_ymm_k1z_ymm_ymmm256b32","EVEX_Vorps_zmm_k1z_zmm_zmmm512b32","EVEX_Vp2intersectd_kp1_xmm_xmmm128b32","EVEX_Vp2intersectd_kp1_ymm_ymmm256b32","EVEX_Vp2intersectd_kp1_zmm_zmmm512b32","EVEX_Vp2intersectq_kp1_xmm_xmmm128b64","EVEX_Vp2intersectq_kp1_ymm_ymmm256b64","EVEX_Vp2intersectq_kp1_zmm_zmmm512b64","EVEX_Vp4dpwssd_zmm_k1z_zmmp3_m128","EVEX_Vp4dpwssds_zmm_k1z_zmmp3_m128","EVEX_Vpabsb_xmm_k1z_xmmm128","EVEX_Vpabsb_ymm_k1z_ymmm256","EVEX_Vpabsb_zmm_k1z_zmmm512","EVEX_Vpabsd_xmm_k1z_xmmm128b32","EVEX_Vpabsd_ymm_k1z_ymmm256b32","EVEX_Vpabsd_zmm_k1z_zmmm512b32","EVEX_Vpabsq_xmm_k1z_xmmm128b64","EVEX_Vpabsq_ymm_k1z_ymmm256b64","EVEX_Vpabsq_zmm_k1z_zmmm512b64","EVEX_Vpabsw_xmm_k1z_xmmm128","EVEX_Vpabsw_ymm_k1z_ymmm256","EVEX_Vpabsw_zmm_k1z_zmmm512","EVEX_Vpackssdw_xmm_k1z_xmm_xmmm128b32","EVEX_Vpackssdw_ymm_k1z_ymm_ymmm256b32","EVEX_Vpackssdw_zmm_k1z_zmm_zmmm512b32","EVEX_Vpacksswb_xmm_k1z_xmm_xmmm128","EVEX_Vpacksswb_ymm_k1z_ymm_ymmm256","EVEX_Vpacksswb_zmm_k1z_zmm_zmmm512","EVEX_Vpackusdw_xmm_k1z_xmm_xmmm128b32","EVEX_Vpackusdw_ymm_k1z_ymm_ymmm256b32","EVEX_Vpackusdw_zmm_k1z_zmm_zmmm512b32","EVEX_Vpackuswb_xmm_k1z_xmm_xmmm128","EVEX_Vpackuswb_ymm_k1z_ymm_ymmm256","EVEX_Vpackuswb_zmm_k1z_zmm_zmmm512","EVEX_Vpaddb_xmm_k1z_xmm_xmmm128","EVEX_Vpaddb_ymm_k1z_ymm_ymmm256","EVEX_Vpaddb_zmm_k1z_zmm_zmmm512","EVEX_Vpaddd_xmm_k1z_xmm_xmmm128b32","EVEX_Vpaddd_ymm_k1z_ymm_ymmm256b32","EVEX_Vpaddd_zmm_k1z_zmm_zmmm512b32","EVEX_Vpaddq_xmm_k1z_xmm_xmmm128b64","EVEX_Vpaddq_ymm_k1z_ymm_ymmm256b64","EVEX_Vpaddq_zmm_k1z_zmm_zmmm512b64","EVEX_Vpaddsb_xmm_k1z_xmm_xmmm128","EVEX_Vpaddsb_ymm_k1z_ymm_ymmm256","EVEX_Vpaddsb_zmm_k1z_zmm_zmmm512","EVEX_Vpaddsw_xmm_k1z_xmm_xmmm128","EVEX_Vpaddsw_ymm_k1z_ymm_ymmm256","EVEX_Vpaddsw_zmm_k1z_zmm_zmmm512","EVEX_Vpaddusb_xmm_k1z_xmm_xmmm128","EVEX_Vpaddusb_ymm_k1z_ymm_ymmm256","EVEX_Vpaddusb_zmm_k1z_zmm_zmmm512","EVEX_Vpaddusw_xmm_k1z_xmm_xmmm128","EVEX_Vpaddusw_ymm_k1z_ymm_ymmm256","EVEX_Vpaddusw_zmm_k1z_zmm_zmmm512","EVEX_Vpaddw_xmm_k1z_xmm_xmmm128","EVEX_Vpaddw_ymm_k1z_ymm_ymmm256","EVEX_Vpaddw_zmm_k1z_zmm_zmmm512","EVEX_Vpalignr_xmm_k1z_xmm_xmmm128_imm8","EVEX_Vpalignr_ymm_k1z_ymm_ymmm256_imm8","EVEX_Vpalignr_zmm_k1z_zmm_zmmm512_imm8","EVEX_Vpandd_xmm_k1z_xmm_xmmm128b32","EVEX_Vpandd_ymm_k1z_ymm_ymmm256b32","EVEX_Vpandd_zmm_k1z_zmm_zmmm512b32","EVEX_Vpandnd_xmm_k1z_xmm_xmmm128b32","EVEX_Vpandnd_ymm_k1z_ymm_ymmm256b32","EVEX_Vpandnd_zmm_k1z_zmm_zmmm512b32","EVEX_Vpandnq_xmm_k1z_xmm_xmmm128b64","EVEX_Vpandnq_ymm_k1z_ymm_ymmm256b64","EVEX_Vpandnq_zmm_k1z_zmm_zmmm512b64","EVEX_Vpandq_xmm_k1z_xmm_xmmm128b64","EVEX_Vpandq_ymm_k1z_ymm_ymmm256b64","EVEX_Vpandq_zmm_k1z_zmm_zmmm512b64","EVEX_Vpavgb_xmm_k1z_xmm_xmmm128","EVEX_Vpavgb_ymm_k1z_ymm_ymmm256","EVEX_Vpavgb_zmm_k1z_zmm_zmmm512","EVEX_Vpavgw_xmm_k1z_xmm_xmmm128","EVEX_Vpavgw_ymm_k1z_ymm_ymmm256","EVEX_Vpavgw_zmm_k1z_zmm_zmmm512","EVEX_Vpblendmb_xmm_k1z_xmm_xmmm128","EVEX_Vpblendmb_ymm_k1z_ymm_ymmm256","EVEX_Vpblendmb_zmm_k1z_zmm_zmmm512","EVEX_Vpblendmd_xmm_k1z_xmm_xmmm128b32","EVEX_Vpblendmd_ymm_k1z_ymm_ymmm256b32","EVEX_Vpblendmd_zmm_k1z_zmm_zmmm512b32","EVEX_Vpblendmq_xmm_k1z_xmm_xmmm128b64","EVEX_Vpblendmq_ymm_k1z_ymm_ymmm256b64","EVEX_Vpblendmq_zmm_k1z_zmm_zmmm512b64","EVEX_Vpblendmw_xmm_k1z_xmm_xmmm128","EVEX_Vpblendmw_ymm_k1z_ymm_ymmm256","EVEX_Vpblendmw_zmm_k1z_zmm_zmmm512","EVEX_Vpbroadcastb_xmm_k1z_r32","EVEX_Vpbroadcastb_xmm_k1z_xmmm8","EVEX_Vpbroadcastb_ymm_k1z_r32","EVEX_Vpbroadcastb_ymm_k1z_xmmm8","EVEX_Vpbroadcastb_zmm_k1z_r32","EVEX_Vpbroadcastb_zmm_k1z_xmmm8","EVEX_Vpbroadcastd_xmm_k1z_r32","EVEX_Vpbroadcastd_xmm_k1z_xmmm32","EVEX_Vpbroadcastd_ymm_k1z_r32","EVEX_Vpbroadcastd_ymm_k1z_xmmm32","EVEX_Vpbroadcastd_zmm_k1z_r32","EVEX_Vpbroadcastd_zmm_k1z_xmmm32","EVEX_Vpbroadcastmb2q_xmm_kr","EVEX_Vpbroadcastmb2q_ymm_kr","EVEX_Vpbroadcastmb2q_zmm_kr","EVEX_Vpbroadcastmw2d_xmm_kr","EVEX_Vpbroadcastmw2d_ymm_kr","EVEX_Vpbroadcastmw2d_zmm_kr","EVEX_Vpbroadcastq_xmm_k1z_r64","EVEX_Vpbroadcastq_xmm_k1z_xmmm64","EVEX_Vpbroadcastq_ymm_k1z_r64","EVEX_Vpbroadcastq_ymm_k1z_xmmm64","EVEX_Vpbroadcastq_zmm_k1z_r64","EVEX_Vpbroadcastq_zmm_k1z_xmmm64","EVEX_Vpbroadcastw_xmm_k1z_r32","EVEX_Vpbroadcastw_xmm_k1z_xmmm16","EVEX_Vpbroadcastw_ymm_k1z_r32","EVEX_Vpbroadcastw_ymm_k1z_xmmm16","EVEX_Vpbroadcastw_zmm_k1z_r32","EVEX_Vpbroadcastw_zmm_k1z_xmmm16","EVEX_Vpclmulqdq_xmm_xmm_xmmm128_imm8","EVEX_Vpclmulqdq_ymm_ymm_ymmm256_imm8","EVEX_Vpclmulqdq_zmm_zmm_zmmm512_imm8","EVEX_Vpcmpb_kr_k1_xmm_xmmm128_imm8","EVEX_Vpcmpb_kr_k1_ymm_ymmm256_imm8","EVEX_Vpcmpb_kr_k1_zmm_zmmm512_imm8","EVEX_Vpcmpd_kr_k1_xmm_xmmm128b32_imm8","EVEX_Vpcmpd_kr_k1_ymm_ymmm256b32_imm8","EVEX_Vpcmpd_kr_k1_zmm_zmmm512b32_imm8","EVEX_Vpcmpeqb_kr_k1_xmm_xmmm128","EVEX_Vpcmpeqb_kr_k1_ymm_ymmm256","EVEX_Vpcmpeqb_kr_k1_zmm_zmmm512","EVEX_Vpcmpeqd_kr_k1_xmm_xmmm128b32","EVEX_Vpcmpeqd_kr_k1_ymm_ymmm256b32","EVEX_Vpcmpeqd_kr_k1_zmm_zmmm512b32","EVEX_Vpcmpeqq_kr_k1_xmm_xmmm128b64","EVEX_Vpcmpeqq_kr_k1_ymm_ymmm256b64","EVEX_Vpcmpeqq_kr_k1_zmm_zmmm512b64","EVEX_Vpcmpeqw_kr_k1_xmm_xmmm128","EVEX_Vpcmpeqw_kr_k1_ymm_ymmm256","EVEX_Vpcmpeqw_kr_k1_zmm_zmmm512","EVEX_Vpcmpgtb_kr_k1_xmm_xmmm128","EVEX_Vpcmpgtb_kr_k1_ymm_ymmm256","EVEX_Vpcmpgtb_kr_k1_zmm_zmmm512","EVEX_Vpcmpgtd_kr_k1_xmm_xmmm128b32","EVEX_Vpcmpgtd_kr_k1_ymm_ymmm256b32","EVEX_Vpcmpgtd_kr_k1_zmm_zmmm512b32","EVEX_Vpcmpgtq_kr_k1_xmm_xmmm128b64","EVEX_Vpcmpgtq_kr_k1_ymm_ymmm256b64","EVEX_Vpcmpgtq_kr_k1_zmm_zmmm512b64","EVEX_Vpcmpgtw_kr_k1_xmm_xmmm128","EVEX_Vpcmpgtw_kr_k1_ymm_ymmm256","EVEX_Vpcmpgtw_kr_k1_zmm_zmmm512","EVEX_Vpcmpq_kr_k1_xmm_xmmm128b64_imm8","EVEX_Vpcmpq_kr_k1_ymm_ymmm256b64_imm8","EVEX_Vpcmpq_kr_k1_zmm_zmmm512b64_imm8","EVEX_Vpcmpub_kr_k1_xmm_xmmm128_imm8","EVEX_Vpcmpub_kr_k1_ymm_ymmm256_imm8","EVEX_Vpcmpub_kr_k1_zmm_zmmm512_imm8","EVEX_Vpcmpud_kr_k1_xmm_xmmm128b32_imm8","EVEX_Vpcmpud_kr_k1_ymm_ymmm256b32_imm8","EVEX_Vpcmpud_kr_k1_zmm_zmmm512b32_imm8","EVEX_Vpcmpuq_kr_k1_xmm_xmmm128b64_imm8","EVEX_Vpcmpuq_kr_k1_ymm_ymmm256b64_imm8","EVEX_Vpcmpuq_kr_k1_zmm_zmmm512b64_imm8","EVEX_Vpcmpuw_kr_k1_xmm_xmmm128_imm8","EVEX_Vpcmpuw_kr_k1_ymm_ymmm256_imm8","EVEX_Vpcmpuw_kr_k1_zmm_zmmm512_imm8","EVEX_Vpcmpw_kr_k1_xmm_xmmm128_imm8","EVEX_Vpcmpw_kr_k1_ymm_ymmm256_imm8","EVEX_Vpcmpw_kr_k1_zmm_zmmm512_imm8","EVEX_Vpcompressb_xmmm128_k1z_xmm","EVEX_Vpcompressb_ymmm256_k1z_ymm","EVEX_Vpcompressb_zmmm512_k1z_zmm","EVEX_Vpcompressd_xmmm128_k1z_xmm","EVEX_Vpcompressd_ymmm256_k1z_ymm","EVEX_Vpcompressd_zmmm512_k1z_zmm","EVEX_Vpcompressq_xmmm128_k1z_xmm","EVEX_Vpcompressq_ymmm256_k1z_ymm","EVEX_Vpcompressq_zmmm512_k1z_zmm","EVEX_Vpcompressw_xmmm128_k1z_xmm","EVEX_Vpcompressw_ymmm256_k1z_ymm","EVEX_Vpcompressw_zmmm512_k1z_zmm","EVEX_Vpconflictd_xmm_k1z_xmmm128b32","EVEX_Vpconflictd_ymm_k1z_ymmm256b32","EVEX_Vpconflictd_zmm_k1z_zmmm512b32","EVEX_Vpconflictq_xmm_k1z_xmmm128b64","EVEX_Vpconflictq_ymm_k1z_ymmm256b64","EVEX_Vpconflictq_zmm_k1z_zmmm512b64","EVEX_Vpdpbusd_xmm_k1z_xmm_xmmm128b32","EVEX_Vpdpbusd_ymm_k1z_ymm_ymmm256b32","EVEX_Vpdpbusd_zmm_k1z_zmm_zmmm512b32","EVEX_Vpdpbusds_xmm_k1z_xmm_xmmm128b32","EVEX_Vpdpbusds_ymm_k1z_ymm_ymmm256b32","EVEX_Vpdpbusds_zmm_k1z_zmm_zmmm512b32","EVEX_Vpdpwssd_xmm_k1z_xmm_xmmm128b32","EVEX_Vpdpwssd_ymm_k1z_ymm_ymmm256b32","EVEX_Vpdpwssd_zmm_k1z_zmm_zmmm512b32","EVEX_Vpdpwssds_xmm_k1z_xmm_xmmm128b32","EVEX_Vpdpwssds_ymm_k1z_ymm_ymmm256b32","EVEX_Vpdpwssds_zmm_k1z_zmm_zmmm512b32","EVEX_Vpermb_xmm_k1z_xmm_xmmm128","EVEX_Vpermb_ymm_k1z_ymm_ymmm256","EVEX_Vpermb_zmm_k1z_zmm_zmmm512","EVEX_Vpermd_ymm_k1z_ymm_ymmm256b32","EVEX_Vpermd_zmm_k1z_zmm_zmmm512b32","EVEX_Vpermi2b_xmm_k1z_xmm_xmmm128","EVEX_Vpermi2b_ymm_k1z_ymm_ymmm256","EVEX_Vpermi2b_zmm_k1z_zmm_zmmm512","EVEX_Vpermi2d_xmm_k1z_xmm_xmmm128b32","EVEX_Vpermi2d_ymm_k1z_ymm_ymmm256b32","EVEX_Vpermi2d_zmm_k1z_zmm_zmmm512b32","EVEX_Vpermi2pd_xmm_k1z_xmm_xmmm128b64","EVEX_Vpermi2pd_ymm_k1z_ymm_ymmm256b64","EVEX_Vpermi2pd_zmm_k1z_zmm_zmmm512b64","EVEX_Vpermi2ps_xmm_k1z_xmm_xmmm128b32","EVEX_Vpermi2ps_ymm_k1z_ymm_ymmm256b32","EVEX_Vpermi2ps_zmm_k1z_zmm_zmmm512b32","EVEX_Vpermi2q_xmm_k1z_xmm_xmmm128b64","EVEX_Vpermi2q_ymm_k1z_ymm_ymmm256b64","EVEX_Vpermi2q_zmm_k1z_zmm_zmmm512b64","EVEX_Vpermi2w_xmm_k1z_xmm_xmmm128","EVEX_Vpermi2w_ymm_k1z_ymm_ymmm256","EVEX_Vpermi2w_zmm_k1z_zmm_zmmm512","EVEX_Vpermilpd_xmm_k1z_xmm_xmmm128b64","EVEX_Vpermilpd_xmm_k1z_xmmm128b64_imm8","EVEX_Vpermilpd_ymm_k1z_ymm_ymmm256b64","EVEX_Vpermilpd_ymm_k1z_ymmm256b64_imm8","EVEX_Vpermilpd_zmm_k1z_zmm_zmmm512b64","EVEX_Vpermilpd_zmm_k1z_zmmm512b64_imm8","EVEX_Vpermilps_xmm_k1z_xmm_xmmm128b32","EVEX_Vpermilps_xmm_k1z_xmmm128b32_imm8","EVEX_Vpermilps_ymm_k1z_ymm_ymmm256b32","EVEX_Vpermilps_ymm_k1z_ymmm256b32_imm8","EVEX_Vpermilps_zmm_k1z_zmm_zmmm512b32","EVEX_Vpermilps_zmm_k1z_zmmm512b32_imm8","EVEX_Vpermpd_ymm_k1z_ymm_ymmm256b64","EVEX_Vpermpd_ymm_k1z_ymmm256b64_imm8","EVEX_Vpermpd_zmm_k1z_zmm_zmmm512b64","EVEX_Vpermpd_zmm_k1z_zmmm512b64_imm8","EVEX_Vpermps_ymm_k1z_ymm_ymmm256b32","EVEX_Vpermps_zmm_k1z_zmm_zmmm512b32","EVEX_Vpermq_ymm_k1z_ymm_ymmm256b64","EVEX_Vpermq_ymm_k1z_ymmm256b64_imm8","EVEX_Vpermq_zmm_k1z_zmm_zmmm512b64","EVEX_Vpermq_zmm_k1z_zmmm512b64_imm8","EVEX_Vpermt2b_xmm_k1z_xmm_xmmm128","EVEX_Vpermt2b_ymm_k1z_ymm_ymmm256","EVEX_Vpermt2b_zmm_k1z_zmm_zmmm512","EVEX_Vpermt2d_xmm_k1z_xmm_xmmm128b32","EVEX_Vpermt2d_ymm_k1z_ymm_ymmm256b32","EVEX_Vpermt2d_zmm_k1z_zmm_zmmm512b32","EVEX_Vpermt2pd_xmm_k1z_xmm_xmmm128b64","EVEX_Vpermt2pd_ymm_k1z_ymm_ymmm256b64","EVEX_Vpermt2pd_zmm_k1z_zmm_zmmm512b64","EVEX_Vpermt2ps_xmm_k1z_xmm_xmmm128b32","EVEX_Vpermt2ps_ymm_k1z_ymm_ymmm256b32","EVEX_Vpermt2ps_zmm_k1z_zmm_zmmm512b32","EVEX_Vpermt2q_xmm_k1z_xmm_xmmm128b64","EVEX_Vpermt2q_ymm_k1z_ymm_ymmm256b64","EVEX_Vpermt2q_zmm_k1z_zmm_zmmm512b64","EVEX_Vpermt2w_xmm_k1z_xmm_xmmm128","EVEX_Vpermt2w_ymm_k1z_ymm_ymmm256","EVEX_Vpermt2w_zmm_k1z_zmm_zmmm512","EVEX_Vpermw_xmm_k1z_xmm_xmmm128","EVEX_Vpermw_ymm_k1z_ymm_ymmm256","EVEX_Vpermw_zmm_k1z_zmm_zmmm512","EVEX_Vpexpandb_xmm_k1z_xmmm128","EVEX_Vpexpandb_ymm_k1z_ymmm256","EVEX_Vpexpandb_zmm_k1z_zmmm512","EVEX_Vpexpandd_xmm_k1z_xmmm128","EVEX_Vpexpandd_ymm_k1z_ymmm256","EVEX_Vpexpandd_zmm_k1z_zmmm512","EVEX_Vpexpandq_xmm_k1z_xmmm128","EVEX_Vpexpandq_ymm_k1z_ymmm256","EVEX_Vpexpandq_zmm_k1z_zmmm512","EVEX_Vpexpandw_xmm_k1z_xmmm128","EVEX_Vpexpandw_ymm_k1z_ymmm256","EVEX_Vpexpandw_zmm_k1z_zmmm512","EVEX_Vpextrb_r32m8_xmm_imm8","EVEX_Vpextrb_r64m8_xmm_imm8","EVEX_Vpextrd_rm32_xmm_imm8","EVEX_Vpextrq_rm64_xmm_imm8","EVEX_Vpextrw_r32_xmm_imm8","EVEX_Vpextrw_r32m16_xmm_imm8","EVEX_Vpextrw_r64_xmm_imm8","EVEX_Vpextrw_r64m16_xmm_imm8","EVEX_Vpgatherdd_xmm_k1_vm32x","EVEX_Vpgatherdd_ymm_k1_vm32y","EVEX_Vpgatherdd_zmm_k1_vm32z","EVEX_Vpgatherdq_xmm_k1_vm32x","EVEX_Vpgatherdq_ymm_k1_vm32x","EVEX_Vpgatherdq_zmm_k1_vm32y","EVEX_Vpgatherqd_xmm_k1_vm64x","EVEX_Vpgatherqd_xmm_k1_vm64y","EVEX_Vpgatherqd_ymm_k1_vm64z","EVEX_Vpgatherqq_xmm_k1_vm64x","EVEX_Vpgatherqq_ymm_k1_vm64y","EVEX_Vpgatherqq_zmm_k1_vm64z","EVEX_Vpinsrb_xmm_xmm_r32m8_imm8","EVEX_Vpinsrb_xmm_xmm_r64m8_imm8","EVEX_Vpinsrd_xmm_xmm_rm32_imm8","EVEX_Vpinsrq_xmm_xmm_rm64_imm8","EVEX_Vpinsrw_xmm_xmm_r32m16_imm8","EVEX_Vpinsrw_xmm_xmm_r64m16_imm8","EVEX_Vplzcntd_xmm_k1z_xmmm128b32","EVEX_Vplzcntd_ymm_k1z_ymmm256b32","EVEX_Vplzcntd_zmm_k1z_zmmm512b32","EVEX_Vplzcntq_xmm_k1z_xmmm128b64","EVEX_Vplzcntq_ymm_k1z_ymmm256b64","EVEX_Vplzcntq_zmm_k1z_zmmm512b64","EVEX_Vpmadd52huq_xmm_k1z_xmm_xmmm128b64","EVEX_Vpmadd52huq_ymm_k1z_ymm_ymmm256b64","EVEX_Vpmadd52huq_zmm_k1z_zmm_zmmm512b64","EVEX_Vpmadd52luq_xmm_k1z_xmm_xmmm128b64","EVEX_Vpmadd52luq_ymm_k1z_ymm_ymmm256b64","EVEX_Vpmadd52luq_zmm_k1z_zmm_zmmm512b64","EVEX_Vpmaddubsw_xmm_k1z_xmm_xmmm128","EVEX_Vpmaddubsw_ymm_k1z_ymm_ymmm256","EVEX_Vpmaddubsw_zmm_k1z_zmm_zmmm512","EVEX_Vpmaddwd_xmm_k1z_xmm_xmmm128","EVEX_Vpmaddwd_ymm_k1z_ymm_ymmm256","EVEX_Vpmaddwd_zmm_k1z_zmm_zmmm512","EVEX_Vpmaxsb_xmm_k1z_xmm_xmmm128","EVEX_Vpmaxsb_ymm_k1z_ymm_ymmm256","EVEX_Vpmaxsb_zmm_k1z_zmm_zmmm512","EVEX_Vpmaxsd_xmm_k1z_xmm_xmmm128b32","EVEX_Vpmaxsd_ymm_k1z_ymm_ymmm256b32","EVEX_Vpmaxsd_zmm_k1z_zmm_zmmm512b32","EVEX_Vpmaxsq_xmm_k1z_xmm_xmmm128b64","EVEX_Vpmaxsq_ymm_k1z_ymm_ymmm256b64","EVEX_Vpmaxsq_zmm_k1z_zmm_zmmm512b64","EVEX_Vpmaxsw_xmm_k1z_xmm_xmmm128","EVEX_Vpmaxsw_ymm_k1z_ymm_ymmm256","EVEX_Vpmaxsw_zmm_k1z_zmm_zmmm512","EVEX_Vpmaxub_xmm_k1z_xmm_xmmm128","EVEX_Vpmaxub_ymm_k1z_ymm_ymmm256","EVEX_Vpmaxub_zmm_k1z_zmm_zmmm512","EVEX_Vpmaxud_xmm_k1z_xmm_xmmm128b32","EVEX_Vpmaxud_ymm_k1z_ymm_ymmm256b32","EVEX_Vpmaxud_zmm_k1z_zmm_zmmm512b32","EVEX_Vpmaxuq_xmm_k1z_xmm_xmmm128b64","EVEX_Vpmaxuq_ymm_k1z_ymm_ymmm256b64","EVEX_Vpmaxuq_zmm_k1z_zmm_zmmm512b64","EVEX_Vpmaxuw_xmm_k1z_xmm_xmmm128","EVEX_Vpmaxuw_ymm_k1z_ymm_ymmm256","EVEX_Vpmaxuw_zmm_k1z_zmm_zmmm512","EVEX_Vpminsb_xmm_k1z_xmm_xmmm128","EVEX_Vpminsb_ymm_k1z_ymm_ymmm256","EVEX_Vpminsb_zmm_k1z_zmm_zmmm512","EVEX_Vpminsd_xmm_k1z_xmm_xmmm128b32","EVEX_Vpminsd_ymm_k1z_ymm_ymmm256b32","EVEX_Vpminsd_zmm_k1z_zmm_zmmm512b32","EVEX_Vpminsq_xmm_k1z_xmm_xmmm128b64","EVEX_Vpminsq_ymm_k1z_ymm_ymmm256b64","EVEX_Vpminsq_zmm_k1z_zmm_zmmm512b64","EVEX_Vpminsw_xmm_k1z_xmm_xmmm128","EVEX_Vpminsw_ymm_k1z_ymm_ymmm256","EVEX_Vpminsw_zmm_k1z_zmm_zmmm512","EVEX_Vpminub_xmm_k1z_xmm_xmmm128","EVEX_Vpminub_ymm_k1z_ymm_ymmm256","EVEX_Vpminub_zmm_k1z_zmm_zmmm512","EVEX_Vpminud_xmm_k1z_xmm_xmmm128b32","EVEX_Vpminud_ymm_k1z_ymm_ymmm256b32","EVEX_Vpminud_zmm_k1z_zmm_zmmm512b32","EVEX_Vpminuq_xmm_k1z_xmm_xmmm128b64","EVEX_Vpminuq_ymm_k1z_ymm_ymmm256b64","EVEX_Vpminuq_zmm_k1z_zmm_zmmm512b64","EVEX_Vpminuw_xmm_k1z_xmm_xmmm128","EVEX_Vpminuw_ymm_k1z_ymm_ymmm256","EVEX_Vpminuw_zmm_k1z_zmm_zmmm512","EVEX_Vpmovb2m_kr_xmm","EVEX_Vpmovb2m_kr_ymm","EVEX_Vpmovb2m_kr_zmm","EVEX_Vpmovd2m_kr_xmm","EVEX_Vpmovd2m_kr_ymm","EVEX_Vpmovd2m_kr_zmm","EVEX_Vpmovdb_xmmm128_k1z_zmm","EVEX_Vpmovdb_xmmm32_k1z_xmm","EVEX_Vpmovdb_xmmm64_k1z_ymm","EVEX_Vpmovdw_xmmm128_k1z_ymm","EVEX_Vpmovdw_xmmm64_k1z_xmm","EVEX_Vpmovdw_ymmm256_k1z_zmm","EVEX_Vpmovm2b_xmm_kr","EVEX_Vpmovm2b_ymm_kr","EVEX_Vpmovm2b_zmm_kr","EVEX_Vpmovm2d_xmm_kr","EVEX_Vpmovm2d_ymm_kr","EVEX_Vpmovm2d_zmm_kr","EVEX_Vpmovm2q_xmm_kr","EVEX_Vpmovm2q_ymm_kr","EVEX_Vpmovm2q_zmm_kr","EVEX_Vpmovm2w_xmm_kr","EVEX_Vpmovm2w_ymm_kr","EVEX_Vpmovm2w_zmm_kr","EVEX_Vpmovq2m_kr_xmm","EVEX_Vpmovq2m_kr_ymm","EVEX_Vpmovq2m_kr_zmm","EVEX_Vpmovqb_xmmm16_k1z_xmm","EVEX_Vpmovqb_xmmm32_k1z_ymm","EVEX_Vpmovqb_xmmm64_k1z_zmm","EVEX_Vpmovqd_xmmm128_k1z_ymm","EVEX_Vpmovqd_xmmm64_k1z_xmm","EVEX_Vpmovqd_ymmm256_k1z_zmm","EVEX_Vpmovqw_xmmm128_k1z_zmm","EVEX_Vpmovqw_xmmm32_k1z_xmm","EVEX_Vpmovqw_xmmm64_k1z_ymm","EVEX_Vpmovsdb_xmmm128_k1z_zmm","EVEX_Vpmovsdb_xmmm32_k1z_xmm","EVEX_Vpmovsdb_xmmm64_k1z_ymm","EVEX_Vpmovsdw_xmmm128_k1z_ymm","EVEX_Vpmovsdw_xmmm64_k1z_xmm","EVEX_Vpmovsdw_ymmm256_k1z_zmm","EVEX_Vpmovsqb_xmmm16_k1z_xmm","EVEX_Vpmovsqb_xmmm32_k1z_ymm","EVEX_Vpmovsqb_xmmm64_k1z_zmm","EVEX_Vpmovsqd_xmmm128_k1z_ymm","EVEX_Vpmovsqd_xmmm64_k1z_xmm","EVEX_Vpmovsqd_ymmm256_k1z_zmm","EVEX_Vpmovsqw_xmmm128_k1z_zmm","EVEX_Vpmovsqw_xmmm32_k1z_xmm","EVEX_Vpmovsqw_xmmm64_k1z_ymm","EVEX_Vpmovswb_xmmm128_k1z_ymm","EVEX_Vpmovswb_xmmm64_k1z_xmm","EVEX_Vpmovswb_ymmm256_k1z_zmm","EVEX_Vpmovsxbd_xmm_k1z_xmmm32","EVEX_Vpmovsxbd_ymm_k1z_xmmm64","EVEX_Vpmovsxbd_zmm_k1z_xmmm128","EVEX_Vpmovsxbq_xmm_k1z_xmmm16","EVEX_Vpmovsxbq_ymm_k1z_xmmm32","EVEX_Vpmovsxbq_zmm_k1z_xmmm64","EVEX_Vpmovsxbw_xmm_k1z_xmmm64","EVEX_Vpmovsxbw_ymm_k1z_xmmm128","EVEX_Vpmovsxbw_zmm_k1z_ymmm256","EVEX_Vpmovsxdq_xmm_k1z_xmmm64","EVEX_Vpmovsxdq_ymm_k1z_xmmm128","EVEX_Vpmovsxdq_zmm_k1z_ymmm256","EVEX_Vpmovsxwd_xmm_k1z_xmmm64","EVEX_Vpmovsxwd_ymm_k1z_xmmm128","EVEX_Vpmovsxwd_zmm_k1z_ymmm256","EVEX_Vpmovsxwq_xmm_k1z_xmmm32","EVEX_Vpmovsxwq_ymm_k1z_xmmm64","EVEX_Vpmovsxwq_zmm_k1z_xmmm128","EVEX_Vpmovusdb_xmmm128_k1z_zmm","EVEX_Vpmovusdb_xmmm32_k1z_xmm","EVEX_Vpmovusdb_xmmm64_k1z_ymm","EVEX_Vpmovusdw_xmmm128_k1z_ymm","EVEX_Vpmovusdw_xmmm64_k1z_xmm","EVEX_Vpmovusdw_ymmm256_k1z_zmm","EVEX_Vpmovusqb_xmmm16_k1z_xmm","EVEX_Vpmovusqb_xmmm32_k1z_ymm","EVEX_Vpmovusqb_xmmm64_k1z_zmm","EVEX_Vpmovusqd_xmmm128_k1z_ymm","EVEX_Vpmovusqd_xmmm64_k1z_xmm","EVEX_Vpmovusqd_ymmm256_k1z_zmm","EVEX_Vpmovusqw_xmmm128_k1z_zmm","EVEX_Vpmovusqw_xmmm32_k1z_xmm","EVEX_Vpmovusqw_xmmm64_k1z_ymm","EVEX_Vpmovuswb_xmmm128_k1z_ymm","EVEX_Vpmovuswb_xmmm64_k1z_xmm","EVEX_Vpmovuswb_ymmm256_k1z_zmm","EVEX_Vpmovw2m_kr_xmm","EVEX_Vpmovw2m_kr_ymm","EVEX_Vpmovw2m_kr_zmm","EVEX_Vpmovwb_xmmm128_k1z_ymm","EVEX_Vpmovwb_xmmm64_k1z_xmm","EVEX_Vpmovwb_ymmm256_k1z_zmm","EVEX_Vpmovzxbd_xmm_k1z_xmmm32","EVEX_Vpmovzxbd_ymm_k1z_xmmm64","EVEX_Vpmovzxbd_zmm_k1z_xmmm128","EVEX_Vpmovzxbq_xmm_k1z_xmmm16","EVEX_Vpmovzxbq_ymm_k1z_xmmm32","EVEX_Vpmovzxbq_zmm_k1z_xmmm64","EVEX_Vpmovzxbw_xmm_k1z_xmmm64","EVEX_Vpmovzxbw_ymm_k1z_xmmm128","EVEX_Vpmovzxbw_zmm_k1z_ymmm256","EVEX_Vpmovzxdq_xmm_k1z_xmmm64","EVEX_Vpmovzxdq_ymm_k1z_xmmm128","EVEX_Vpmovzxdq_zmm_k1z_ymmm256","EVEX_Vpmovzxwd_xmm_k1z_xmmm64","EVEX_Vpmovzxwd_ymm_k1z_xmmm128","EVEX_Vpmovzxwd_zmm_k1z_ymmm256","EVEX_Vpmovzxwq_xmm_k1z_xmmm32","EVEX_Vpmovzxwq_ymm_k1z_xmmm64","EVEX_Vpmovzxwq_zmm_k1z_xmmm128","EVEX_Vpmuldq_xmm_k1z_xmm_xmmm128b64","EVEX_Vpmuldq_ymm_k1z_ymm_ymmm256b64","EVEX_Vpmuldq_zmm_k1z_zmm_zmmm512b64","EVEX_Vpmulhrsw_xmm_k1z_xmm_xmmm128","EVEX_Vpmulhrsw_ymm_k1z_ymm_ymmm256","EVEX_Vpmulhrsw_zmm_k1z_zmm_zmmm512","EVEX_Vpmulhuw_xmm_k1z_xmm_xmmm128","EVEX_Vpmulhuw_ymm_k1z_ymm_ymmm256","EVEX_Vpmulhuw_zmm_k1z_zmm_zmmm512","EVEX_Vpmulhw_xmm_k1z_xmm_xmmm128","EVEX_Vpmulhw_ymm_k1z_ymm_ymmm256","EVEX_Vpmulhw_zmm_k1z_zmm_zmmm512","EVEX_Vpmulld_xmm_k1z_xmm_xmmm128b32","EVEX_Vpmulld_ymm_k1z_ymm_ymmm256b32","EVEX_Vpmulld_zmm_k1z_zmm_zmmm512b32","EVEX_Vpmullq_xmm_k1z_xmm_xmmm128b64","EVEX_Vpmullq_ymm_k1z_ymm_ymmm256b64","EVEX_Vpmullq_zmm_k1z_zmm_zmmm512b64","EVEX_Vpmullw_xmm_k1z_xmm_xmmm128","EVEX_Vpmullw_ymm_k1z_ymm_ymmm256","EVEX_Vpmullw_zmm_k1z_zmm_zmmm512","EVEX_Vpmultishiftqb_xmm_k1z_xmm_xmmm128b64","EVEX_Vpmultishiftqb_ymm_k1z_ymm_ymmm256b64","EVEX_Vpmultishiftqb_zmm_k1z_zmm_zmmm512b64","EVEX_Vpmuludq_xmm_k1z_xmm_xmmm128b64","EVEX_Vpmuludq_ymm_k1z_ymm_ymmm256b64","EVEX_Vpmuludq_zmm_k1z_zmm_zmmm512b64","EVEX_Vpopcntb_xmm_k1z_xmmm128","EVEX_Vpopcntb_ymm_k1z_ymmm256","EVEX_Vpopcntb_zmm_k1z_zmmm512","EVEX_Vpopcntd_xmm_k1z_xmmm128b32","EVEX_Vpopcntd_ymm_k1z_ymmm256b32","EVEX_Vpopcntd_zmm_k1z_zmmm512b32","EVEX_Vpopcntq_xmm_k1z_xmmm128b64","EVEX_Vpopcntq_ymm_k1z_ymmm256b64","EVEX_Vpopcntq_zmm_k1z_zmmm512b64","EVEX_Vpopcntw_xmm_k1z_xmmm128","EVEX_Vpopcntw_ymm_k1z_ymmm256","EVEX_Vpopcntw_zmm_k1z_zmmm512","EVEX_Vpord_xmm_k1z_xmm_xmmm128b32","EVEX_Vpord_ymm_k1z_ymm_ymmm256b32","EVEX_Vpord_zmm_k1z_zmm_zmmm512b32","EVEX_Vporq_xmm_k1z_xmm_xmmm128b64","EVEX_Vporq_ymm_k1z_ymm_ymmm256b64","EVEX_Vporq_zmm_k1z_zmm_zmmm512b64","EVEX_Vprold_xmm_k1z_xmmm128b32_imm8","EVEX_Vprold_ymm_k1z_ymmm256b32_imm8","EVEX_Vprold_zmm_k1z_zmmm512b32_imm8","EVEX_Vprolq_xmm_k1z_xmmm128b64_imm8","EVEX_Vprolq_ymm_k1z_ymmm256b64_imm8","EVEX_Vprolq_zmm_k1z_zmmm512b64_imm8","EVEX_Vprolvd_xmm_k1z_xmm_xmmm128b32","EVEX_Vprolvd_ymm_k1z_ymm_ymmm256b32","EVEX_Vprolvd_zmm_k1z_zmm_zmmm512b32","EVEX_Vprolvq_xmm_k1z_xmm_xmmm128b64","EVEX_Vprolvq_ymm_k1z_ymm_ymmm256b64","EVEX_Vprolvq_zmm_k1z_zmm_zmmm512b64","EVEX_Vprord_xmm_k1z_xmmm128b32_imm8","EVEX_Vprord_ymm_k1z_ymmm256b32_imm8","EVEX_Vprord_zmm_k1z_zmmm512b32_imm8","EVEX_Vprorq_xmm_k1z_xmmm128b64_imm8","EVEX_Vprorq_ymm_k1z_ymmm256b64_imm8","EVEX_Vprorq_zmm_k1z_zmmm512b64_imm8","EVEX_Vprorvd_xmm_k1z_xmm_xmmm128b32","EVEX_Vprorvd_ymm_k1z_ymm_ymmm256b32","EVEX_Vprorvd_zmm_k1z_zmm_zmmm512b32","EVEX_Vprorvq_xmm_k1z_xmm_xmmm128b64","EVEX_Vprorvq_ymm_k1z_ymm_ymmm256b64","EVEX_Vprorvq_zmm_k1z_zmm_zmmm512b64","EVEX_Vpsadbw_xmm_xmm_xmmm128","EVEX_Vpsadbw_ymm_ymm_ymmm256","EVEX_Vpsadbw_zmm_zmm_zmmm512","EVEX_Vpscatterdd_vm32x_k1_xmm","EVEX_Vpscatterdd_vm32y_k1_ymm","EVEX_Vpscatterdd_vm32z_k1_zmm","EVEX_Vpscatterdq_vm32x_k1_xmm","EVEX_Vpscatterdq_vm32x_k1_ymm","EVEX_Vpscatterdq_vm32y_k1_zmm","EVEX_Vpscatterqd_vm64x_k1_xmm","EVEX_Vpscatterqd_vm64y_k1_xmm","EVEX_Vpscatterqd_vm64z_k1_ymm","EVEX_Vpscatterqq_vm64x_k1_xmm","EVEX_Vpscatterqq_vm64y_k1_ymm","EVEX_Vpscatterqq_vm64z_k1_zmm","EVEX_Vpshldd_xmm_k1z_xmm_xmmm128b32_imm8","EVEX_Vpshldd_ymm_k1z_ymm_ymmm256b32_imm8","EVEX_Vpshldd_zmm_k1z_zmm_zmmm512b32_imm8","EVEX_Vpshldq_xmm_k1z_xmm_xmmm128b64_imm8","EVEX_Vpshldq_ymm_k1z_ymm_ymmm256b64_imm8","EVEX_Vpshldq_zmm_k1z_zmm_zmmm512b64_imm8","EVEX_Vpshldvd_xmm_k1z_xmm_xmmm128b32","EVEX_Vpshldvd_ymm_k1z_ymm_ymmm256b32","EVEX_Vpshldvd_zmm_k1z_zmm_zmmm512b32","EVEX_Vpshldvq_xmm_k1z_xmm_xmmm128b64","EVEX_Vpshldvq_ymm_k1z_ymm_ymmm256b64","EVEX_Vpshldvq_zmm_k1z_zmm_zmmm512b64","EVEX_Vpshldvw_xmm_k1z_xmm_xmmm128","EVEX_Vpshldvw_ymm_k1z_ymm_ymmm256","EVEX_Vpshldvw_zmm_k1z_zmm_zmmm512","EVEX_Vpshldw_xmm_k1z_xmm_xmmm128_imm8","EVEX_Vpshldw_ymm_k1z_ymm_ymmm256_imm8","EVEX_Vpshldw_zmm_k1z_zmm_zmmm512_imm8","EVEX_Vpshrdd_xmm_k1z_xmm_xmmm128b32_imm8","EVEX_Vpshrdd_ymm_k1z_ymm_ymmm256b32_imm8","EVEX_Vpshrdd_zmm_k1z_zmm_zmmm512b32_imm8","EVEX_Vpshrdq_xmm_k1z_xmm_xmmm128b64_imm8","EVEX_Vpshrdq_ymm_k1z_ymm_ymmm256b64_imm8","EVEX_Vpshrdq_zmm_k1z_zmm_zmmm512b64_imm8","EVEX_Vpshrdvd_xmm_k1z_xmm_xmmm128b32","EVEX_Vpshrdvd_ymm_k1z_ymm_ymmm256b32","EVEX_Vpshrdvd_zmm_k1z_zmm_zmmm512b32","EVEX_Vpshrdvq_xmm_k1z_xmm_xmmm128b64","EVEX_Vpshrdvq_ymm_k1z_ymm_ymmm256b64","EVEX_Vpshrdvq_zmm_k1z_zmm_zmmm512b64","EVEX_Vpshrdvw_xmm_k1z_xmm_xmmm128","EVEX_Vpshrdvw_ymm_k1z_ymm_ymmm256","EVEX_Vpshrdvw_zmm_k1z_zmm_zmmm512","EVEX_Vpshrdw_xmm_k1z_xmm_xmmm128_imm8","EVEX_Vpshrdw_ymm_k1z_ymm_ymmm256_imm8","EVEX_Vpshrdw_zmm_k1z_zmm_zmmm512_imm8","EVEX_Vpshufb_xmm_k1z_xmm_xmmm128","EVEX_Vpshufb_ymm_k1z_ymm_ymmm256","EVEX_Vpshufb_zmm_k1z_zmm_zmmm512","EVEX_Vpshufbitqmb_kr_k1_xmm_xmmm128","EVEX_Vpshufbitqmb_kr_k1_ymm_ymmm256","EVEX_Vpshufbitqmb_kr_k1_zmm_zmmm512","EVEX_Vpshufd_xmm_k1z_xmmm128b32_imm8","EVEX_Vpshufd_ymm_k1z_ymmm256b32_imm8","EVEX_Vpshufd_zmm_k1z_zmmm512b32_imm8","EVEX_Vpshufhw_xmm_k1z_xmmm128_imm8","EVEX_Vpshufhw_ymm_k1z_ymmm256_imm8","EVEX_Vpshufhw_zmm_k1z_zmmm512_imm8","EVEX_Vpshuflw_xmm_k1z_xmmm128_imm8","EVEX_Vpshuflw_ymm_k1z_ymmm256_imm8","EVEX_Vpshuflw_zmm_k1z_zmmm512_imm8","EVEX_Vpslld_xmm_k1z_xmm_xmmm128","EVEX_Vpslld_xmm_k1z_xmmm128b32_imm8","EVEX_Vpslld_ymm_k1z_ymm_xmmm128","EVEX_Vpslld_ymm_k1z_ymmm256b32_imm8","EVEX_Vpslld_zmm_k1z_zmm_xmmm128","EVEX_Vpslld_zmm_k1z_zmmm512b32_imm8","EVEX_Vpslldq_xmm_xmmm128_imm8","EVEX_Vpslldq_ymm_ymmm256_imm8","EVEX_Vpslldq_zmm_zmmm512_imm8","EVEX_Vpsllq_xmm_k1z_xmm_xmmm128","EVEX_Vpsllq_xmm_k1z_xmmm128b64_imm8","EVEX_Vpsllq_ymm_k1z_ymm_xmmm128","EVEX_Vpsllq_ymm_k1z_ymmm256b64_imm8","EVEX_Vpsllq_zmm_k1z_zmm_xmmm128","EVEX_Vpsllq_zmm_k1z_zmmm512b64_imm8","EVEX_Vpsllvd_xmm_k1z_xmm_xmmm128b32","EVEX_Vpsllvd_ymm_k1z_ymm_ymmm256b32","EVEX_Vpsllvd_zmm_k1z_zmm_zmmm512b32","EVEX_Vpsllvq_xmm_k1z_xmm_xmmm128b64","EVEX_Vpsllvq_ymm_k1z_ymm_ymmm256b64","EVEX_Vpsllvq_zmm_k1z_zmm_zmmm512b64","EVEX_Vpsllvw_xmm_k1z_xmm_xmmm128","EVEX_Vpsllvw_ymm_k1z_ymm_ymmm256","EVEX_Vpsllvw_zmm_k1z_zmm_zmmm512","EVEX_Vpsllw_xmm_k1z_xmm_xmmm128","EVEX_Vpsllw_xmm_k1z_xmmm128_imm8","EVEX_Vpsllw_ymm_k1z_ymm_xmmm128","EVEX_Vpsllw_ymm_k1z_ymmm256_imm8","EVEX_Vpsllw_zmm_k1z_zmm_xmmm128","EVEX_Vpsllw_zmm_k1z_zmmm512_imm8","EVEX_Vpsrad_xmm_k1z_xmm_xmmm128","EVEX_Vpsrad_xmm_k1z_xmmm128b32_imm8","EVEX_Vpsrad_ymm_k1z_ymm_xmmm128","EVEX_Vpsrad_ymm_k1z_ymmm256b32_imm8","EVEX_Vpsrad_zmm_k1z_zmm_xmmm128","EVEX_Vpsrad_zmm_k1z_zmmm512b32_imm8","EVEX_Vpsraq_xmm_k1z_xmm_xmmm128","EVEX_Vpsraq_xmm_k1z_xmmm128b64_imm8","EVEX_Vpsraq_ymm_k1z_ymm_xmmm128","EVEX_Vpsraq_ymm_k1z_ymmm256b64_imm8","EVEX_Vpsraq_zmm_k1z_zmm_xmmm128","EVEX_Vpsraq_zmm_k1z_zmmm512b64_imm8","EVEX_Vpsravd_xmm_k1z_xmm_xmmm128b32","EVEX_Vpsravd_ymm_k1z_ymm_ymmm256b32","EVEX_Vpsravd_zmm_k1z_zmm_zmmm512b32","EVEX_Vpsravq_xmm_k1z_xmm_xmmm128b64","EVEX_Vpsravq_ymm_k1z_ymm_ymmm256b64","EVEX_Vpsravq_zmm_k1z_zmm_zmmm512b64","EVEX_Vpsravw_xmm_k1z_xmm_xmmm128","EVEX_Vpsravw_ymm_k1z_ymm_ymmm256","EVEX_Vpsravw_zmm_k1z_zmm_zmmm512","EVEX_Vpsraw_xmm_k1z_xmm_xmmm128","EVEX_Vpsraw_xmm_k1z_xmmm128_imm8","EVEX_Vpsraw_ymm_k1z_ymm_xmmm128","EVEX_Vpsraw_ymm_k1z_ymmm256_imm8","EVEX_Vpsraw_zmm_k1z_zmm_xmmm128","EVEX_Vpsraw_zmm_k1z_zmmm512_imm8","EVEX_Vpsrld_xmm_k1z_xmm_xmmm128","EVEX_Vpsrld_xmm_k1z_xmmm128b32_imm8","EVEX_Vpsrld_ymm_k1z_ymm_xmmm128","EVEX_Vpsrld_ymm_k1z_ymmm256b32_imm8","EVEX_Vpsrld_zmm_k1z_zmm_xmmm128","EVEX_Vpsrld_zmm_k1z_zmmm512b32_imm8","EVEX_Vpsrldq_xmm_xmmm128_imm8","EVEX_Vpsrldq_ymm_ymmm256_imm8","EVEX_Vpsrldq_zmm_zmmm512_imm8","EVEX_Vpsrlq_xmm_k1z_xmm_xmmm128","EVEX_Vpsrlq_xmm_k1z_xmmm128b64_imm8","EVEX_Vpsrlq_ymm_k1z_ymm_xmmm128","EVEX_Vpsrlq_ymm_k1z_ymmm256b64_imm8","EVEX_Vpsrlq_zmm_k1z_zmm_xmmm128","EVEX_Vpsrlq_zmm_k1z_zmmm512b64_imm8","EVEX_Vpsrlvd_xmm_k1z_xmm_xmmm128b32","EVEX_Vpsrlvd_ymm_k1z_ymm_ymmm256b32","EVEX_Vpsrlvd_zmm_k1z_zmm_zmmm512b32","EVEX_Vpsrlvq_xmm_k1z_xmm_xmmm128b64","EVEX_Vpsrlvq_ymm_k1z_ymm_ymmm256b64","EVEX_Vpsrlvq_zmm_k1z_zmm_zmmm512b64","EVEX_Vpsrlvw_xmm_k1z_xmm_xmmm128","EVEX_Vpsrlvw_ymm_k1z_ymm_ymmm256","EVEX_Vpsrlvw_zmm_k1z_zmm_zmmm512","EVEX_Vpsrlw_xmm_k1z_xmm_xmmm128","EVEX_Vpsrlw_xmm_k1z_xmmm128_imm8","EVEX_Vpsrlw_ymm_k1z_ymm_xmmm128","EVEX_Vpsrlw_ymm_k1z_ymmm256_imm8","EVEX_Vpsrlw_zmm_k1z_zmm_xmmm128","EVEX_Vpsrlw_zmm_k1z_zmmm512_imm8","EVEX_Vpsubb_xmm_k1z_xmm_xmmm128","EVEX_Vpsubb_ymm_k1z_ymm_ymmm256","EVEX_Vpsubb_zmm_k1z_zmm_zmmm512","EVEX_Vpsubd_xmm_k1z_xmm_xmmm128b32","EVEX_Vpsubd_ymm_k1z_ymm_ymmm256b32","EVEX_Vpsubd_zmm_k1z_zmm_zmmm512b32","EVEX_Vpsubq_xmm_k1z_xmm_xmmm128b64","EVEX_Vpsubq_ymm_k1z_ymm_ymmm256b64","EVEX_Vpsubq_zmm_k1z_zmm_zmmm512b64","EVEX_Vpsubsb_xmm_k1z_xmm_xmmm128","EVEX_Vpsubsb_ymm_k1z_ymm_ymmm256","EVEX_Vpsubsb_zmm_k1z_zmm_zmmm512","EVEX_Vpsubsw_xmm_k1z_xmm_xmmm128","EVEX_Vpsubsw_ymm_k1z_ymm_ymmm256","EVEX_Vpsubsw_zmm_k1z_zmm_zmmm512","EVEX_Vpsubusb_xmm_k1z_xmm_xmmm128","EVEX_Vpsubusb_ymm_k1z_ymm_ymmm256","EVEX_Vpsubusb_zmm_k1z_zmm_zmmm512","EVEX_Vpsubusw_xmm_k1z_xmm_xmmm128","EVEX_Vpsubusw_ymm_k1z_ymm_ymmm256","EVEX_Vpsubusw_zmm_k1z_zmm_zmmm512","EVEX_Vpsubw_xmm_k1z_xmm_xmmm128","EVEX_Vpsubw_ymm_k1z_ymm_ymmm256","EVEX_Vpsubw_zmm_k1z_zmm_zmmm512","EVEX_Vpternlogd_xmm_k1z_xmm_xmmm128b32_imm8","EVEX_Vpternlogd_ymm_k1z_ymm_ymmm256b32_imm8","EVEX_Vpternlogd_zmm_k1z_zmm_zmmm512b32_imm8","EVEX_Vpternlogq_xmm_k1z_xmm_xmmm128b64_imm8","EVEX_Vpternlogq_ymm_k1z_ymm_ymmm256b64_imm8","EVEX_Vpternlogq_zmm_k1z_zmm_zmmm512b64_imm8","EVEX_Vptestmb_kr_k1_xmm_xmmm128","EVEX_Vptestmb_kr_k1_ymm_ymmm256","EVEX_Vptestmb_kr_k1_zmm_zmmm512","EVEX_Vptestmd_kr_k1_xmm_xmmm128b32","EVEX_Vptestmd_kr_k1_ymm_ymmm256b32","EVEX_Vptestmd_kr_k1_zmm_zmmm512b32","EVEX_Vptestmq_kr_k1_xmm_xmmm128b64","EVEX_Vptestmq_kr_k1_ymm_ymmm256b64","EVEX_Vptestmq_kr_k1_zmm_zmmm512b64","EVEX_Vptestmw_kr_k1_xmm_xmmm128","EVEX_Vptestmw_kr_k1_ymm_ymmm256","EVEX_Vptestmw_kr_k1_zmm_zmmm512","EVEX_Vptestnmb_kr_k1_xmm_xmmm128","EVEX_Vptestnmb_kr_k1_ymm_ymmm256","EVEX_Vptestnmb_kr_k1_zmm_zmmm512","EVEX_Vptestnmd_kr_k1_xmm_xmmm128b32","EVEX_Vptestnmd_kr_k1_ymm_ymmm256b32","EVEX_Vptestnmd_kr_k1_zmm_zmmm512b32","EVEX_Vptestnmq_kr_k1_xmm_xmmm128b64","EVEX_Vptestnmq_kr_k1_ymm_ymmm256b64","EVEX_Vptestnmq_kr_k1_zmm_zmmm512b64","EVEX_Vptestnmw_kr_k1_xmm_xmmm128","EVEX_Vptestnmw_kr_k1_ymm_ymmm256","EVEX_Vptestnmw_kr_k1_zmm_zmmm512","EVEX_Vpunpckhbw_xmm_k1z_xmm_xmmm128","EVEX_Vpunpckhbw_ymm_k1z_ymm_ymmm256","EVEX_Vpunpckhbw_zmm_k1z_zmm_zmmm512","EVEX_Vpunpckhdq_xmm_k1z_xmm_xmmm128b32","EVEX_Vpunpckhdq_ymm_k1z_ymm_ymmm256b32","EVEX_Vpunpckhdq_zmm_k1z_zmm_zmmm512b32","EVEX_Vpunpckhqdq_xmm_k1z_xmm_xmmm128b64","EVEX_Vpunpckhqdq_ymm_k1z_ymm_ymmm256b64","EVEX_Vpunpckhqdq_zmm_k1z_zmm_zmmm512b64","EVEX_Vpunpckhwd_xmm_k1z_xmm_xmmm128","EVEX_Vpunpckhwd_ymm_k1z_ymm_ymmm256","EVEX_Vpunpckhwd_zmm_k1z_zmm_zmmm512","EVEX_Vpunpcklbw_xmm_k1z_xmm_xmmm128","EVEX_Vpunpcklbw_ymm_k1z_ymm_ymmm256","EVEX_Vpunpcklbw_zmm_k1z_zmm_zmmm512","EVEX_Vpunpckldq_xmm_k1z_xmm_xmmm128b32","EVEX_Vpunpckldq_ymm_k1z_ymm_ymmm256b32","EVEX_Vpunpckldq_zmm_k1z_zmm_zmmm512b32","EVEX_Vpunpcklqdq_xmm_k1z_xmm_xmmm128b64","EVEX_Vpunpcklqdq_ymm_k1z_ymm_ymmm256b64","EVEX_Vpunpcklqdq_zmm_k1z_zmm_zmmm512b64","EVEX_Vpunpcklwd_xmm_k1z_xmm_xmmm128","EVEX_Vpunpcklwd_ymm_k1z_ymm_ymmm256","EVEX_Vpunpcklwd_zmm_k1z_zmm_zmmm512","EVEX_Vpxord_xmm_k1z_xmm_xmmm128b32","EVEX_Vpxord_ymm_k1z_ymm_ymmm256b32","EVEX_Vpxord_zmm_k1z_zmm_zmmm512b32","EVEX_Vpxorq_xmm_k1z_xmm_xmmm128b64","EVEX_Vpxorq_ymm_k1z_ymm_ymmm256b64","EVEX_Vpxorq_zmm_k1z_zmm_zmmm512b64","EVEX_Vrangepd_xmm_k1z_xmm_xmmm128b64_imm8","EVEX_Vrangepd_ymm_k1z_ymm_ymmm256b64_imm8","EVEX_Vrangepd_zmm_k1z_zmm_zmmm512b64_imm8_sae","EVEX_Vrangeps_xmm_k1z_xmm_xmmm128b32_imm8","EVEX_Vrangeps_ymm_k1z_ymm_ymmm256b32_imm8","EVEX_Vrangeps_zmm_k1z_zmm_zmmm512b32_imm8_sae","EVEX_Vrangesd_xmm_k1z_xmm_xmmm64_imm8_sae","EVEX_Vrangess_xmm_k1z_xmm_xmmm32_imm8_sae","EVEX_Vrcp14pd_xmm_k1z_xmmm128b64","EVEX_Vrcp14pd_ymm_k1z_ymmm256b64","EVEX_Vrcp14pd_zmm_k1z_zmmm512b64","EVEX_Vrcp14ps_xmm_k1z_xmmm128b32","EVEX_Vrcp14ps_ymm_k1z_ymmm256b32","EVEX_Vrcp14ps_zmm_k1z_zmmm512b32","EVEX_Vrcp14sd_xmm_k1z_xmm_xmmm64","EVEX_Vrcp14ss_xmm_k1z_xmm_xmmm32","EVEX_Vrcp28pd_zmm_k1z_zmmm512b64_sae","EVEX_Vrcp28ps_zmm_k1z_zmmm512b32_sae","EVEX_Vrcp28sd_xmm_k1z_xmm_xmmm64_sae","EVEX_Vrcp28ss_xmm_k1z_xmm_xmmm32_sae","EVEX_Vrcpph_xmm_k1z_xmmm128b16","EVEX_Vrcpph_ymm_k1z_ymmm256b16","EVEX_Vrcpph_zmm_k1z_zmmm512b16","EVEX_Vrcpsh_xmm_k1z_xmm_xmmm16","EVEX_Vreducepd_xmm_k1z_xmmm128b64_imm8","EVEX_Vreducepd_ymm_k1z_ymmm256b64_imm8","EVEX_Vreducepd_zmm_k1z_zmmm512b64_imm8_sae","EVEX_Vreduceph_xmm_k1z_xmmm128b16_imm8","EVEX_Vreduceph_ymm_k1z_ymmm256b16_imm8","EVEX_Vreduceph_zmm_k1z_zmmm512b16_imm8_sae","EVEX_Vreduceps_xmm_k1z_xmmm128b32_imm8","EVEX_Vreduceps_ymm_k1z_ymmm256b32_imm8","EVEX_Vreduceps_zmm_k1z_zmmm512b32_imm8_sae","EVEX_Vreducesd_xmm_k1z_xmm_xmmm64_imm8_sae","EVEX_Vreducesh_xmm_k1z_xmm_xmmm16_imm8_sae","EVEX_Vreducess_xmm_k1z_xmm_xmmm32_imm8_sae","EVEX_Vrndscalepd_xmm_k1z_xmmm128b64_imm8","EVEX_Vrndscalepd_ymm_k1z_ymmm256b64_imm8","EVEX_Vrndscalepd_zmm_k1z_zmmm512b64_imm8_sae","EVEX_Vrndscaleph_xmm_k1z_xmmm128b16_imm8","EVEX_Vrndscaleph_ymm_k1z_ymmm256b16_imm8","EVEX_Vrndscaleph_zmm_k1z_zmmm512b16_imm8_sae","EVEX_Vrndscaleps_xmm_k1z_xmmm128b32_imm8","EVEX_Vrndscaleps_ymm_k1z_ymmm256b32_imm8","EVEX_Vrndscaleps_zmm_k1z_zmmm512b32_imm8_sae","EVEX_Vrndscalesd_xmm_k1z_xmm_xmmm64_imm8_sae","EVEX_Vrndscalesh_xmm_k1z_xmm_xmmm16_imm8_sae","EVEX_Vrndscaless_xmm_k1z_xmm_xmmm32_imm8_sae","EVEX_Vrsqrt14pd_xmm_k1z_xmmm128b64","EVEX_Vrsqrt14pd_ymm_k1z_ymmm256b64","EVEX_Vrsqrt14pd_zmm_k1z_zmmm512b64","EVEX_Vrsqrt14ps_xmm_k1z_xmmm128b32","EVEX_Vrsqrt14ps_ymm_k1z_ymmm256b32","EVEX_Vrsqrt14ps_zmm_k1z_zmmm512b32","EVEX_Vrsqrt14sd_xmm_k1z_xmm_xmmm64","EVEX_Vrsqrt14ss_xmm_k1z_xmm_xmmm32","EVEX_Vrsqrt28pd_zmm_k1z_zmmm512b64_sae","EVEX_Vrsqrt28ps_zmm_k1z_zmmm512b32_sae","EVEX_Vrsqrt28sd_xmm_k1z_xmm_xmmm64_sae","EVEX_Vrsqrt28ss_xmm_k1z_xmm_xmmm32_sae","EVEX_Vrsqrtph_xmm_k1z_xmmm128b16","EVEX_Vrsqrtph_ymm_k1z_ymmm256b16","EVEX_Vrsqrtph_zmm_k1z_zmmm512b16","EVEX_Vrsqrtsh_xmm_k1z_xmm_xmmm16","EVEX_Vscalefpd_xmm_k1z_xmm_xmmm128b64","EVEX_Vscalefpd_ymm_k1z_ymm_ymmm256b64","EVEX_Vscalefpd_zmm_k1z_zmm_zmmm512b64_er","EVEX_Vscalefph_xmm_k1z_xmm_xmmm128b16","EVEX_Vscalefph_ymm_k1z_ymm_ymmm256b16","EVEX_Vscalefph_zmm_k1z_zmm_zmmm512b16_er","EVEX_Vscalefps_xmm_k1z_xmm_xmmm128b32","EVEX_Vscalefps_ymm_k1z_ymm_ymmm256b32","EVEX_Vscalefps_zmm_k1z_zmm_zmmm512b32_er","EVEX_Vscalefsd_xmm_k1z_xmm_xmmm64_er","EVEX_Vscalefsh_xmm_k1z_xmm_xmmm16_er","EVEX_Vscalefss_xmm_k1z_xmm_xmmm32_er","EVEX_Vscatterdpd_vm32x_k1_xmm","EVEX_Vscatterdpd_vm32x_k1_ymm","EVEX_Vscatterdpd_vm32y_k1_zmm","EVEX_Vscatterdps_vm32x_k1_xmm","EVEX_Vscatterdps_vm32y_k1_ymm","EVEX_Vscatterdps_vm32z_k1_zmm","EVEX_Vscatterpf0dpd_vm32y_k1","EVEX_Vscatterpf0dps_vm32z_k1","EVEX_Vscatterpf0qpd_vm64z_k1","EVEX_Vscatterpf0qps_vm64z_k1","EVEX_Vscatterpf1dpd_vm32y_k1","EVEX_Vscatterpf1dps_vm32z_k1","EVEX_Vscatterpf1qpd_vm64z_k1","EVEX_Vscatterpf1qps_vm64z_k1","EVEX_Vscatterqpd_vm64x_k1_xmm","EVEX_Vscatterqpd_vm64y_k1_ymm","EVEX_Vscatterqpd_vm64z_k1_zmm","EVEX_Vscatterqps_vm64x_k1_xmm","EVEX_Vscatterqps_vm64y_k1_xmm","EVEX_Vscatterqps_vm64z_k1_ymm","EVEX_Vshuff32x4_ymm_k1z_ymm_ymmm256b32_imm8","EVEX_Vshuff32x4_zmm_k1z_zmm_zmmm512b32_imm8","EVEX_Vshuff64x2_ymm_k1z_ymm_ymmm256b64_imm8","EVEX_Vshuff64x2_zmm_k1z_zmm_zmmm512b64_imm8","EVEX_Vshufi32x4_ymm_k1z_ymm_ymmm256b32_imm8","EVEX_Vshufi32x4_zmm_k1z_zmm_zmmm512b32_imm8","EVEX_Vshufi64x2_ymm_k1z_ymm_ymmm256b64_imm8","EVEX_Vshufi64x2_zmm_k1z_zmm_zmmm512b64_imm8","EVEX_Vshufpd_xmm_k1z_xmm_xmmm128b64_imm8","EVEX_Vshufpd_ymm_k1z_ymm_ymmm256b64_imm8","EVEX_Vshufpd_zmm_k1z_zmm_zmmm512b64_imm8","EVEX_Vshufps_xmm_k1z_xmm_xmmm128b32_imm8","EVEX_Vshufps_ymm_k1z_ymm_ymmm256b32_imm8","EVEX_Vshufps_zmm_k1z_zmm_zmmm512b32_imm8","EVEX_Vsqrtpd_xmm_k1z_xmmm128b64","EVEX_Vsqrtpd_ymm_k1z_ymmm256b64","EVEX_Vsqrtpd_zmm_k1z_zmmm512b64_er","EVEX_Vsqrtph_xmm_k1z_xmmm128b16","EVEX_Vsqrtph_ymm_k1z_ymmm256b16","EVEX_Vsqrtph_zmm_k1z_zmmm512b16_er","EVEX_Vsqrtps_xmm_k1z_xmmm128b32","EVEX_Vsqrtps_ymm_k1z_ymmm256b32","EVEX_Vsqrtps_zmm_k1z_zmmm512b32_er","EVEX_Vsqrtsd_xmm_k1z_xmm_xmmm64_er","EVEX_Vsqrtsh_xmm_k1z_xmm_xmmm16_er","EVEX_Vsqrtss_xmm_k1z_xmm_xmmm32_er","EVEX_Vsubpd_xmm_k1z_xmm_xmmm128b64","EVEX_Vsubpd_ymm_k1z_ymm_ymmm256b64","EVEX_Vsubpd_zmm_k1z_zmm_zmmm512b64_er","EVEX_Vsubph_xmm_k1z_xmm_xmmm128b16","EVEX_Vsubph_ymm_k1z_ymm_ymmm256b16","EVEX_Vsubph_zmm_k1z_zmm_zmmm512b16_er","EVEX_Vsubps_xmm_k1z_xmm_xmmm128b32","EVEX_Vsubps_ymm_k1z_ymm_ymmm256b32","EVEX_Vsubps_zmm_k1z_zmm_zmmm512b32_er","EVEX_Vsubsd_xmm_k1z_xmm_xmmm64_er","EVEX_Vsubsh_xmm_k1z_xmm_xmmm16_er","EVEX_Vsubss_xmm_k1z_xmm_xmmm32_er","EVEX_Vucomisd_xmm_xmmm64_sae","EVEX_Vucomish_xmm_xmmm16_sae","EVEX_Vucomiss_xmm_xmmm32_sae","EVEX_Vunpckhpd_xmm_k1z_xmm_xmmm128b64","EVEX_Vunpckhpd_ymm_k1z_ymm_ymmm256b64","EVEX_Vunpckhpd_zmm_k1z_zmm_zmmm512b64","EVEX_Vunpckhps_xmm_k1z_xmm_xmmm128b32","EVEX_Vunpckhps_ymm_k1z_ymm_ymmm256b32","EVEX_Vunpckhps_zmm_k1z_zmm_zmmm512b32","EVEX_Vunpcklpd_xmm_k1z_xmm_xmmm128b64","EVEX_Vunpcklpd_ymm_k1z_ymm_ymmm256b64","EVEX_Vunpcklpd_zmm_k1z_zmm_zmmm512b64","EVEX_Vunpcklps_xmm_k1z_xmm_xmmm128b32","EVEX_Vunpcklps_ymm_k1z_ymm_ymmm256b32","EVEX_Vunpcklps_zmm_k1z_zmm_zmmm512b32","EVEX_Vxorpd_xmm_k1z_xmm_xmmm128b64","EVEX_Vxorpd_ymm_k1z_ymm_ymmm256b64","EVEX_Vxorpd_zmm_k1z_zmm_zmmm512b64","EVEX_Vxorps_xmm_k1z_xmm_xmmm128b32","EVEX_Vxorps_ymm_k1z_ymm_ymmm256b32","EVEX_Vxorps_zmm_k1z_zmm_zmmm512b32","Emms","Emms","Encls","Encls","Enclu","Enclu","Enclv","Enclv","Encodekey128","Encodekey128_r32_r32","Encodekey256","Encodekey256_r32_r32","EncodingKind","Endbr32","Endbr32","Endbr64","Endbr64","Enqcmd","Enqcmd_r16_m512","Enqcmd_r32_m512","Enqcmd_r64_m512","Enqcmds","Enqcmds_r16_m512","Enqcmds_r32_m512","Enqcmds_r64_m512","Enter","Enterd_imm16_imm8","Enterq_imm16_imm8","Enterw_imm16_imm8","Erets","Erets","Eretu","Eretu","EvictionHint","Extractps","Extractps_r64m32_xmm_imm8","Extractps_rm32_xmm_imm8","Extrq","Extrq_xmm_imm8_imm8","Extrq_xmm_xmm","F2xm1","F2xm1","FORCE_RESERVED_NOP","FS","FS","Fabs","Fabs","Fadd","Fadd_m32fp","Fadd_m64fp","Fadd_st0_sti","Fadd_sti_st0","Faddp","Faddp_sti_st0","FarBranch16","FarBranch32","Fbld","Fbld_m80bcd","Fbstp","Fbstp_m80bcd","Fchs","Fchs","Fclex","Fclex","Fcmovb","Fcmovb_st0_sti","Fcmovbe","Fcmovbe_st0_sti","Fcmove","Fcmove_st0_sti","Fcmovnb","Fcmovnb_st0_sti","Fcmovnbe","Fcmovnbe_st0_sti","Fcmovne","Fcmovne_st0_sti","Fcmovnu","Fcmovnu_st0_sti","Fcmovu","Fcmovu_st0_sti","Fcom","Fcom_m32fp","Fcom_m64fp","Fcom_st0_sti","Fcom_st0_sti_DCD0","Fcomi","Fcomi_st0_sti","Fcomip","Fcomip_st0_sti","Fcomp","Fcomp_m32fp","Fcomp_m64fp","Fcomp_st0_sti","Fcomp_st0_sti_DCD8","Fcomp_st0_sti_DED0","Fcompp","Fcompp","Fcos","Fcos","Fdecstp","Fdecstp","Fdisi","Fdisi","Fdiv","Fdiv_m32fp","Fdiv_m64fp","Fdiv_st0_sti","Fdiv_sti_st0","Fdivp","Fdivp_sti_st0","Fdivr","Fdivr_m32fp","Fdivr_m64fp","Fdivr_st0_sti","Fdivr_sti_st0","Fdivrp","Fdivrp_sti_st0","Femms","Femms","Feni","Feni","Ffree","Ffree_sti","Ffreep","Ffreep_sti","Fiadd","Fiadd_m16int","Fiadd_m32int","Ficom","Ficom_m16int","Ficom_m32int","Ficomp","Ficomp_m16int","Ficomp_m32int","Fidiv","Fidiv_m16int","Fidiv_m32int","Fidivr","Fidivr_m16int","Fidivr_m32int","Fild","Fild_m16int","Fild_m32int","Fild_m64int","Fimul","Fimul_m16int","Fimul_m32int","Fincstp","Fincstp","Finit","Finit","Fist","Fist_m16int","Fist_m32int","Fistp","Fistp_m16int","Fistp_m32int","Fistp_m64int","Fisttp","Fisttp_m16int","Fisttp_m32int","Fisttp_m64int","Fisub","Fisub_m16int","Fisub_m32int","Fisubr","Fisubr_m16int","Fisubr_m32int","Fld","Fld1","Fld1","Fld_m32fp","Fld_m64fp","Fld_m80fp","Fld_sti","Fldcw","Fldcw_m2byte","Fldenv","Fldenv_m14byte","Fldenv_m28byte","Fldl2e","Fldl2e","Fldl2t","Fldl2t","Fldlg2","Fldlg2","Fldln2","Fldln2","Fldpi","Fldpi","Fldz","Fldz","Float128","Float16","Float32","Float64","Float80","Fmul","Fmul_m32fp","Fmul_m64fp","Fmul_st0_sti","Fmul_sti_st0","Fmulp","Fmulp_sti_st0","Fnclex","Fnclex","Fndisi","Fndisi","Fneni","Fneni","Fninit","Fninit","Fnop","Fnop","Fnsave","Fnsave_m108byte","Fnsave_m94byte","Fnsetpm","Fnsetpm","Fnstcw","Fnstcw_m2byte","Fnstdw","Fnstdw_AX","Fnstenv","Fnstenv_m14byte","Fnstenv_m28byte","Fnstsg","Fnstsg_AX","Fnstsw","Fnstsw_AX","Fnstsw_m2byte","FormatMnemonicOptions","Formatter","FormatterOperandOptions","FormatterOptions","FormatterOptionsProvider","FormatterOutput","FormatterTextKind","Fpatan","Fpatan","Fprem","Fprem","Fprem1","Fprem1","Fptan","Fptan","FpuEnv14","FpuEnv28","FpuState108","FpuState94","Frichop","Frichop","Frinear","Frinear","Frint2","Frint2","Frndint","Frndint","Frstor","Frstor_m108byte","Frstor_m94byte","Frstpm","Frstpm","Fsave","Fsave_m108byte","Fsave_m94byte","Fscale","Fscale","Fsetpm","Fsetpm","Fsin","Fsin","Fsincos","Fsincos","Fsqrt","Fsqrt","Fst","Fst_m32fp","Fst_m64fp","Fst_sti","Fstcw","Fstcw_m2byte","Fstdw","Fstdw_AX","Fstenv","Fstenv_m14byte","Fstenv_m28byte","Fstp","Fstp_m32fp","Fstp_m64fp","Fstp_m80fp","Fstp_sti","Fstp_sti_DFD0","Fstp_sti_DFD8","Fstpnce","Fstpnce_sti","Fstsg","Fstsg_AX","Fstsw","Fstsw_AX","Fstsw_m2byte","Fsub","Fsub_m32fp","Fsub_m64fp","Fsub_st0_sti","Fsub_sti_st0","Fsubp","Fsubp_sti_st0","Fsubr","Fsubr_m32fp","Fsubr_m64fp","Fsubr_st0_sti","Fsubr_sti_st0","Fsubrp","Fsubrp_sti_st0","Ftst","Ftst","Ftstp","Ftstp","Fucom","Fucom_st0_sti","Fucomi","Fucomi_st0_sti","Fucomip","Fucomip_st0_sti","Fucomp","Fucomp_st0_sti","Fucompp","Fucompp","Function","FunctionAddress","Fword10","Fword6","Fxam","Fxam","Fxch","Fxch_st0_sti","Fxch_st0_sti_DDC8","Fxch_st0_sti_DFC8","Fxrstor","Fxrstor64","Fxrstor64_m512byte","Fxrstor_m512byte","Fxsave","Fxsave64","Fxsave64_512Byte","Fxsave64_m512byte","Fxsave_512Byte","Fxsave_m512byte","Fxtract","Fxtract","Fyl2x","Fyl2x","Fyl2xp1","Fyl2xp1","GS","GS","Getsec","Getsecd","Getsecq","Getsecq","Gf2p8affineinvqb","Gf2p8affineinvqb_xmm_xmmm128_imm8","Gf2p8affineqb","Gf2p8affineqb_xmm_xmmm128_imm8","Gf2p8mulb","Gf2p8mulb_xmm_xmmm128","Haddpd","Haddpd_xmm_xmmm128","Haddps","Haddps_xmm_xmmm128","Hexadecimal","HintNotTaken","HintTaken","Hlt","Hlt","Hreset","Hreset_imm8","Hsubpd","Hsubpd_xmm_xmmm128","Hsubps","Hsubps_xmm_xmmm128","INVALID","INVALID","Ibts","Ibts_rm16_r16","Ibts_rm32_r32","IcedError","Idiv","Idiv_rm16","Idiv_rm32","Idiv_rm64","Idiv_rm8","Immediate16","Immediate32","Immediate32to64","Immediate64","Immediate8","Immediate8_2nd","Immediate8to16","Immediate8to32","Immediate8to64","Imul","Imul_r16_rm16","Imul_r16_rm16_imm16","Imul_r16_rm16_imm8","Imul_r32_rm32","Imul_r32_rm32_imm32","Imul_r32_rm32_imm8","Imul_r64_rm64","Imul_r64_rm64_imm32","Imul_r64_rm64_imm8","Imul_rm16","Imul_rm32","Imul_rm64","Imul_rm8","In","In_AL_DX","In_AL_imm8","In_AX_DX","In_AX_imm8","In_EAX_DX","In_EAX_imm8","Inc","Inc_r16","Inc_r32","Inc_rm16","Inc_rm32","Inc_rm64","Inc_rm8","Incsspd","Incsspd_r32","Incsspq","Incsspq_r64","Insb","Insb_m8_DX","Insd","Insd_m32_DX","Insertps","Insertps_xmm_xmmm32_imm8","Insertq","Insertq_xmm_xmm","Insertq_xmm_xmm_imm8_imm8","Instruction","Insw","Insw_m16_DX","Int","Int1","Int1","Int128","Int16","Int16","Int256","Int3","Int3","Int32","Int32","Int512","Int64","Int64","Int8","Int8","Int_imm8","IntelFormatter","Into","Into","InvalidInstruction","Invd","Invd","Invept","Invept_r32_m128","Invept_r64_m128","Invlpg","Invlpg_m","Invlpga","Invlpgad","Invlpgaq","Invlpgaw","Invlpgb","Invlpgbd","Invlpgbq","Invlpgbw","Invpcid","Invpcid_r32_m128","Invpcid_r64_m128","Invvpid","Invvpid_r32_m128","Invvpid_r64_m128","Iret","Iretd","Iretd","Iretq","Iretq","Iretw","JMPE","Ja","Ja_rel16","Ja_rel32_32","Ja_rel32_64","Ja_rel8_16","Ja_rel8_32","Ja_rel8_64","Jae","Jae_rel16","Jae_rel32_32","Jae_rel32_64","Jae_rel8_16","Jae_rel8_32","Jae_rel8_64","Jb","Jb_rel16","Jb_rel32_32","Jb_rel32_64","Jb_rel8_16","Jb_rel8_32","Jb_rel8_64","Jbe","Jbe_rel16","Jbe_rel32_32","Jbe_rel32_64","Jbe_rel8_16","Jbe_rel8_32","Jbe_rel8_64","Jcxz","Jcxz_rel8_16","Jcxz_rel8_32","Je","Je_rel16","Je_rel32_32","Je_rel32_64","Je_rel8_16","Je_rel8_32","Je_rel8_64","Jecxz","Jecxz_rel8_16","Jecxz_rel8_32","Jecxz_rel8_64","Jg","Jg_rel16","Jg_rel32_32","Jg_rel32_64","Jg_rel8_16","Jg_rel8_32","Jg_rel8_64","Jge","Jge_rel16","Jge_rel32_32","Jge_rel32_64","Jge_rel8_16","Jge_rel8_32","Jge_rel8_64","Jknzd","Jkzd","Jl","Jl_rel16","Jl_rel32_32","Jl_rel32_64","Jl_rel8_16","Jl_rel8_32","Jl_rel8_64","Jle","Jle_rel16","Jle_rel32_32","Jle_rel32_64","Jle_rel8_16","Jle_rel8_32","Jle_rel8_64","Jmp","Jmp_m1616","Jmp_m1632","Jmp_m1664","Jmp_ptr1616","Jmp_ptr1632","Jmp_rel16","Jmp_rel32_32","Jmp_rel32_64","Jmp_rel8_16","Jmp_rel8_32","Jmp_rel8_64","Jmp_rm16","Jmp_rm32","Jmp_rm64","Jmpe","Jmpe_disp16","Jmpe_disp32","Jmpe_rm16","Jmpe_rm32","Jne","Jne_rel16","Jne_rel32_32","Jne_rel32_64","Jne_rel8_16","Jne_rel8_32","Jne_rel8_64","Jno","Jno_rel16","Jno_rel32_32","Jno_rel32_64","Jno_rel8_16","Jno_rel8_32","Jno_rel8_64","Jnp","Jnp_rel16","Jnp_rel32_32","Jnp_rel32_64","Jnp_rel8_16","Jnp_rel8_32","Jnp_rel8_64","Jns","Jns_rel16","Jns_rel32_32","Jns_rel32_64","Jns_rel8_16","Jns_rel8_32","Jns_rel8_64","Jo","Jo_rel16","Jo_rel32_32","Jo_rel32_64","Jo_rel8_16","Jo_rel8_32","Jo_rel8_64","Jp","Jp_rel16","Jp_rel32_32","Jp_rel32_64","Jp_rel8_16","Jp_rel8_32","Jp_rel8_64","Jrcxz","Jrcxz_rel8_16","Jrcxz_rel8_64","Js","Js_rel16","Js_rel32_32","Js_rel32_64","Js_rel8_16","Js_rel8_32","Js_rel8_64","K0","K1","K2","K3","K4","K5","K6","K7","KLHandleAes128","KLHandleAes256","KNC","Kaddb","Kaddd","Kaddq","Kaddw","Kand","Kandb","Kandd","Kandn","Kandnb","Kandnd","Kandnq","Kandnr","Kandnw","Kandq","Kandw","Kconcath","Kconcatl","Kextract","Keyword","Kmerge2l1h","Kmerge2l1l","Kmov","Kmovb","Kmovd","Kmovq","Kmovw","Knot","Knotb","Knotd","Knotq","Knotw","Kor","Korb","Kord","Korq","Kortest","Kortestb","Kortestd","Kortestq","Kortestw","Korw","Kshiftlb","Kshiftld","Kshiftlq","Kshiftlw","Kshiftrb","Kshiftrd","Kshiftrq","Kshiftrw","Ktestb","Ktestd","Ktestq","Ktestw","Kunpckbw","Kunpckdq","Kunpckwd","Kxnor","Kxnorb","Kxnord","Kxnorq","Kxnorw","Kxor","Kxorb","Kxord","Kxorq","Kxorw","LOADALL286","LOADALL386","Label","LabelAddress","Lahf","Lahf","Lar","Lar_r16_rm16","Lar_r32_r32m16","Lar_r64_r64m16","Lddqu","Lddqu_xmm_m128","Ldmxcsr","Ldmxcsr_m32","Lds","Lds_r16_m1616","Lds_r32_m1632","Ldtilecfg","Lea","Lea_r16_m","Lea_r32_m","Lea_r64_m","Leave","Leaved","Leaveq","Leavew","Legacy","Les","Les_r16_m1616","Les_r32_m1632","Lfence","Lfence","Lfence_E9","Lfence_EA","Lfence_EB","Lfence_EC","Lfence_ED","Lfence_EE","Lfence_EF","Lfs","Lfs_r16_m1616","Lfs_r32_m1632","Lfs_r64_m1664","Lgdt","Lgdt_m1632","Lgdt_m1632_16","Lgdt_m1664","Lgs","Lgs_r16_m1616","Lgs_r32_m1632","Lgs_r64_m1664","Lidt","Lidt_m1632","Lidt_m1632_16","Lidt_m1664","Lkgs","Lkgs_r32m16","Lkgs_r64m16","Lkgs_rm16","Lldt","Lldt_r32m16","Lldt_r64m16","Lldt_rm16","Llwpcb","Lmsw","Lmsw_r32m16","Lmsw_r64m16","Lmsw_rm16","Loadall","Loadall286","Loadall386","Loadiwkey","Loadiwkey_xmm_xmm","Lock","Lodsb","Lodsb_AL_m8","Lodsd","Lodsd_EAX_m32","Lodsq","Lodsq_RAX_m64","Lodsw","Lodsw_AX_m16","Loop","Loop_rel8_16_CX","Loop_rel8_16_ECX","Loop_rel8_16_RCX","Loop_rel8_32_CX","Loop_rel8_32_ECX","Loop_rel8_64_ECX","Loop_rel8_64_RCX","Loope","Loope_rel8_16_CX","Loope_rel8_16_ECX","Loope_rel8_16_RCX","Loope_rel8_32_CX","Loope_rel8_32_ECX","Loope_rel8_64_ECX","Loope_rel8_64_RCX","Loopne","Loopne_rel8_16_CX","Loopne_rel8_16_ECX","Loopne_rel8_16_RCX","Loopne_rel8_32_CX","Loopne_rel8_32_ECX","Loopne_rel8_64_ECX","Loopne_rel8_64_RCX","Lsl","Lsl_r16_rm16","Lsl_r32_r32m16","Lsl_r64_r64m16","Lss","Lss_r16_m1616","Lss_r32_m1632","Lss_r64_m1664","Ltr","Ltr_r32m16","Ltr_r64m16","Ltr_rm16","Lwpins","Lwpval","Lzcnt","Lzcnt_r16_rm16","Lzcnt_r32_rm32","Lzcnt_r64_rm64","MM0","MM1","MM2","MM3","MM4","MM5","MM6","MM7","MOV_TR","MPX","MVEX","MVEX_Clevict0_m","MVEX_Clevict1_m","MVEX_Undoc_zmm_k1_mvt_512_66_0F38_W0_B0","MVEX_Undoc_zmm_k1_mvt_512_66_0F38_W0_B2","MVEX_Undoc_zmm_k1_mvt_512_66_0F38_W0_C0","MVEX_Undoc_zmm_k1_zmm_zmmmt_512_66_0F38_W0_54","MVEX_Undoc_zmm_k1_zmm_zmmmt_512_66_0F38_W0_56","MVEX_Undoc_zmm_k1_zmm_zmmmt_512_66_0F38_W0_57","MVEX_Undoc_zmm_k1_zmm_zmmmt_512_66_0F38_W0_67","MVEX_Undoc_zmm_k1_zmm_zmmmt_512_66_0F38_W0_70","MVEX_Undoc_zmm_k1_zmm_zmmmt_512_66_0F38_W0_71","MVEX_Undoc_zmm_k1_zmm_zmmmt_512_66_0F38_W0_72","MVEX_Undoc_zmm_k1_zmm_zmmmt_512_66_0F38_W0_73","MVEX_Undoc_zmm_k1_zmm_zmmmt_512_66_0F38_W0_94","MVEX_Undoc_zmm_k1_zmm_zmmmt_512_66_0F38_W0_CE","MVEX_Undoc_zmm_k1_zmm_zmmmt_512_66_0F38_W0_CF","MVEX_Undoc_zmm_k1_zmm_zmmmt_512_66_0F38_W1_94","MVEX_Undoc_zmm_k1_zmm_zmmmt_512_66_0F38_W1_CE","MVEX_Undoc_zmm_k1_zmmmt_512_0F38_W0_D2","MVEX_Undoc_zmm_k1_zmmmt_512_0F38_W0_D3","MVEX_Undoc_zmm_k1_zmmmt_512_0F38_W0_D6","MVEX_Undoc_zmm_k1_zmmmt_512_0F38_W0_D7","MVEX_Undoc_zmm_k1_zmmmt_512_66_0F38_W0_48","MVEX_Undoc_zmm_k1_zmmmt_512_66_0F38_W0_49","MVEX_Undoc_zmm_k1_zmmmt_512_66_0F38_W0_4A","MVEX_Undoc_zmm_k1_zmmmt_512_66_0F38_W0_4B","MVEX_Undoc_zmm_k1_zmmmt_512_66_0F38_W0_68","MVEX_Undoc_zmm_k1_zmmmt_512_66_0F38_W0_69","MVEX_Undoc_zmm_k1_zmmmt_512_66_0F38_W0_6A","MVEX_Undoc_zmm_k1_zmmmt_512_66_0F38_W0_6B","MVEX_Undoc_zmm_k1_zmmmt_512_66_0F38_W0_D2","MVEX_Undoc_zmm_k1_zmmmt_512_66_0F38_W0_D6","MVEX_Undoc_zmm_k1_zmmmt_imm8_512_66_0F3A_W0_D0","MVEX_Undoc_zmm_k1_zmmmt_imm8_512_66_0F3A_W0_D1","MVEX_Vaddnpd_zmm_k1_zmm_zmmmt","MVEX_Vaddnps_zmm_k1_zmm_zmmmt","MVEX_Vaddpd_zmm_k1_zmm_zmmmt","MVEX_Vaddps_zmm_k1_zmm_zmmmt","MVEX_Vaddsetsps_zmm_k1_zmm_zmmmt","MVEX_Valignd_zmm_k1_zmm_zmmmt_imm8","MVEX_Vblendmpd_zmm_k1_zmm_zmmmt","MVEX_Vblendmps_zmm_k1_zmm_zmmmt","MVEX_Vbroadcastf32x4_zmm_k1_mt","MVEX_Vbroadcastf64x4_zmm_k1_mt","MVEX_Vbroadcasti32x4_zmm_k1_mt","MVEX_Vbroadcasti64x4_zmm_k1_mt","MVEX_Vbroadcastsd_zmm_k1_mt","MVEX_Vbroadcastss_zmm_k1_mt","MVEX_Vcmppd_kr_k1_zmm_zmmmt_imm8","MVEX_Vcmpps_kr_k1_zmm_zmmmt_imm8","MVEX_Vcvtdq2pd_zmm_k1_zmmmt","MVEX_Vcvtfxpntdq2ps_zmm_k1_zmmmt_imm8","MVEX_Vcvtfxpntpd2dq_zmm_k1_zmmmt_imm8","MVEX_Vcvtfxpntpd2udq_zmm_k1_zmmmt_imm8","MVEX_Vcvtfxpntps2dq_zmm_k1_zmmmt_imm8","MVEX_Vcvtfxpntps2udq_zmm_k1_zmmmt_imm8","MVEX_Vcvtfxpntudq2ps_zmm_k1_zmmmt_imm8","MVEX_Vcvtpd2ps_zmm_k1_zmmmt","MVEX_Vcvtps2pd_zmm_k1_zmmmt","MVEX_Vcvtudq2pd_zmm_k1_zmmmt","MVEX_Vexp223ps_zmm_k1_zmmmt","MVEX_Vfixupnanpd_zmm_k1_zmm_zmmmt","MVEX_Vfixupnanps_zmm_k1_zmm_zmmmt","MVEX_Vfmadd132pd_zmm_k1_zmm_zmmmt","MVEX_Vfmadd132ps_zmm_k1_zmm_zmmmt","MVEX_Vfmadd213pd_zmm_k1_zmm_zmmmt","MVEX_Vfmadd213ps_zmm_k1_zmm_zmmmt","MVEX_Vfmadd231pd_zmm_k1_zmm_zmmmt","MVEX_Vfmadd231ps_zmm_k1_zmm_zmmmt","MVEX_Vfmadd233ps_zmm_k1_zmm_zmmmt","MVEX_Vfmsub132pd_zmm_k1_zmm_zmmmt","MVEX_Vfmsub132ps_zmm_k1_zmm_zmmmt","MVEX_Vfmsub213pd_zmm_k1_zmm_zmmmt","MVEX_Vfmsub213ps_zmm_k1_zmm_zmmmt","MVEX_Vfmsub231pd_zmm_k1_zmm_zmmmt","MVEX_Vfmsub231ps_zmm_k1_zmm_zmmmt","MVEX_Vfnmadd132pd_zmm_k1_zmm_zmmmt","MVEX_Vfnmadd132ps_zmm_k1_zmm_zmmmt","MVEX_Vfnmadd213pd_zmm_k1_zmm_zmmmt","MVEX_Vfnmadd213ps_zmm_k1_zmm_zmmmt","MVEX_Vfnmadd231pd_zmm_k1_zmm_zmmmt","MVEX_Vfnmadd231ps_zmm_k1_zmm_zmmmt","MVEX_Vfnmsub132pd_zmm_k1_zmm_zmmmt","MVEX_Vfnmsub132ps_zmm_k1_zmm_zmmmt","MVEX_Vfnmsub213pd_zmm_k1_zmm_zmmmt","MVEX_Vfnmsub213ps_zmm_k1_zmm_zmmmt","MVEX_Vfnmsub231pd_zmm_k1_zmm_zmmmt","MVEX_Vfnmsub231ps_zmm_k1_zmm_zmmmt","MVEX_Vgatherdpd_zmm_k1_mvt","MVEX_Vgatherdps_zmm_k1_mvt","MVEX_Vgatherpf0dps_mvt_k1","MVEX_Vgatherpf0hintdpd_mvt_k1","MVEX_Vgatherpf0hintdps_mvt_k1","MVEX_Vgatherpf1dps_mvt_k1","MVEX_Vgetexppd_zmm_k1_zmmmt","MVEX_Vgetexpps_zmm_k1_zmmmt","MVEX_Vgetmantpd_zmm_k1_zmmmt_imm8","MVEX_Vgetmantps_zmm_k1_zmmmt_imm8","MVEX_Vgmaxabsps_zmm_k1_zmm_zmmmt","MVEX_Vgmaxpd_zmm_k1_zmm_zmmmt","MVEX_Vgmaxps_zmm_k1_zmm_zmmmt","MVEX_Vgminpd_zmm_k1_zmm_zmmmt","MVEX_Vgminps_zmm_k1_zmm_zmmmt","MVEX_Vloadunpackhd_zmm_k1_mt","MVEX_Vloadunpackhpd_zmm_k1_mt","MVEX_Vloadunpackhps_zmm_k1_mt","MVEX_Vloadunpackhq_zmm_k1_mt","MVEX_Vloadunpackld_zmm_k1_mt","MVEX_Vloadunpacklpd_zmm_k1_mt","MVEX_Vloadunpacklps_zmm_k1_mt","MVEX_Vloadunpacklq_zmm_k1_mt","MVEX_Vlog2ps_zmm_k1_zmmmt","MVEX_Vmovapd_mt_k1_zmm","MVEX_Vmovapd_zmm_k1_zmmmt","MVEX_Vmovaps_mt_k1_zmm","MVEX_Vmovaps_zmm_k1_zmmmt","MVEX_Vmovdqa32_mt_k1_zmm","MVEX_Vmovdqa32_zmm_k1_zmmmt","MVEX_Vmovdqa64_mt_k1_zmm","MVEX_Vmovdqa64_zmm_k1_zmmmt","MVEX_Vmovnrapd_m_k1_zmm","MVEX_Vmovnraps_m_k1_zmm","MVEX_Vmovnrngoapd_m_k1_zmm","MVEX_Vmovnrngoaps_m_k1_zmm","MVEX_Vmulpd_zmm_k1_zmm_zmmmt","MVEX_Vmulps_zmm_k1_zmm_zmmmt","MVEX_Vpackstorehd_mt_k1_zmm","MVEX_Vpackstorehpd_mt_k1_zmm","MVEX_Vpackstorehps_mt_k1_zmm","MVEX_Vpackstorehq_mt_k1_zmm","MVEX_Vpackstoreld_mt_k1_zmm","MVEX_Vpackstorelpd_mt_k1_zmm","MVEX_Vpackstorelps_mt_k1_zmm","MVEX_Vpackstorelq_mt_k1_zmm","MVEX_Vpadcd_zmm_k1_kr_zmmmt","MVEX_Vpaddd_zmm_k1_zmm_zmmmt","MVEX_Vpaddsetcd_zmm_k1_kr_zmmmt","MVEX_Vpaddsetsd_zmm_k1_zmm_zmmmt","MVEX_Vpandd_zmm_k1_zmm_zmmmt","MVEX_Vpandnd_zmm_k1_zmm_zmmmt","MVEX_Vpandnq_zmm_k1_zmm_zmmmt","MVEX_Vpandq_zmm_k1_zmm_zmmmt","MVEX_Vpblendmd_zmm_k1_zmm_zmmmt","MVEX_Vpblendmq_zmm_k1_zmm_zmmmt","MVEX_Vpbroadcastd_zmm_k1_mt","MVEX_Vpbroadcastq_zmm_k1_mt","MVEX_Vpcmpd_kr_k1_zmm_zmmmt_imm8","MVEX_Vpcmpeqd_kr_k1_zmm_zmmmt","MVEX_Vpcmpgtd_kr_k1_zmm_zmmmt","MVEX_Vpcmpltd_kr_k1_zmm_zmmmt","MVEX_Vpcmpud_kr_k1_zmm_zmmmt_imm8","MVEX_Vpermd_zmm_k1_zmm_zmmmt","MVEX_Vpermf32x4_zmm_k1_zmmmt_imm8","MVEX_Vpgatherdd_zmm_k1_mvt","MVEX_Vpgatherdq_zmm_k1_mvt","MVEX_Vpmadd231d_zmm_k1_zmm_zmmmt","MVEX_Vpmadd233d_zmm_k1_zmm_zmmmt","MVEX_Vpmaxsd_zmm_k1_zmm_zmmmt","MVEX_Vpmaxud_zmm_k1_zmm_zmmmt","MVEX_Vpminsd_zmm_k1_zmm_zmmmt","MVEX_Vpminud_zmm_k1_zmm_zmmmt","MVEX_Vpmulhd_zmm_k1_zmm_zmmmt","MVEX_Vpmulhud_zmm_k1_zmm_zmmmt","MVEX_Vpmulld_zmm_k1_zmm_zmmmt","MVEX_Vpord_zmm_k1_zmm_zmmmt","MVEX_Vporq_zmm_k1_zmm_zmmmt","MVEX_Vprefetch0_m","MVEX_Vprefetch1_m","MVEX_Vprefetch2_m","MVEX_Vprefetche0_m","MVEX_Vprefetche1_m","MVEX_Vprefetche2_m","MVEX_Vprefetchenta_m","MVEX_Vprefetchnta_m","MVEX_Vpsbbd_zmm_k1_kr_zmmmt","MVEX_Vpsbbrd_zmm_k1_kr_zmmmt","MVEX_Vpscatterdd_mvt_k1_zmm","MVEX_Vpscatterdq_mvt_k1_zmm","MVEX_Vpshufd_zmm_k1_zmmmt_imm8","MVEX_Vpslld_zmm_k1_zmmmt_imm8","MVEX_Vpsllvd_zmm_k1_zmm_zmmmt","MVEX_Vpsrad_zmm_k1_zmmmt_imm8","MVEX_Vpsravd_zmm_k1_zmm_zmmmt","MVEX_Vpsrld_zmm_k1_zmmmt_imm8","MVEX_Vpsrlvd_zmm_k1_zmm_zmmmt","MVEX_Vpsubd_zmm_k1_zmm_zmmmt","MVEX_Vpsubrd_zmm_k1_zmm_zmmmt","MVEX_Vpsubrsetbd_zmm_k1_kr_zmmmt","MVEX_Vpsubsetbd_zmm_k1_kr_zmmmt","MVEX_Vptestmd_kr_k1_zmm_zmmmt","MVEX_Vpxord_zmm_k1_zmm_zmmmt","MVEX_Vpxorq_zmm_k1_zmm_zmmmt","MVEX_Vrcp23ps_zmm_k1_zmmmt","MVEX_Vrndfxpntpd_zmm_k1_zmmmt_imm8","MVEX_Vrndfxpntps_zmm_k1_zmmmt_imm8","MVEX_Vrsqrt23ps_zmm_k1_zmmmt","MVEX_Vscaleps_zmm_k1_zmm_zmmmt","MVEX_Vscatterdpd_mvt_k1_zmm","MVEX_Vscatterdps_mvt_k1_zmm","MVEX_Vscatterpf0dps_mvt_k1","MVEX_Vscatterpf0hintdpd_mvt_k1","MVEX_Vscatterpf0hintdps_mvt_k1","MVEX_Vscatterpf1dps_mvt_k1","MVEX_Vsubpd_zmm_k1_zmm_zmmmt","MVEX_Vsubps_zmm_k1_zmm_zmmmt","MVEX_Vsubrpd_zmm_k1_zmm_zmmmt","MVEX_Vsubrps_zmm_k1_zmm_zmmmt","Maskmovdqu","Maskmovdqu_rDI_xmm_xmm","Maskmovq","Maskmovq_rDI_mm_mm","Maxpd","Maxpd_xmm_xmmm128","Maxps","Maxps_xmm_xmmm128","Maxsd","Maxsd_xmm_xmmm64","Maxss","Maxss_xmm_xmmm32","Mcommit","Mcommit","Memory","MemoryESDI","MemoryESEDI","MemoryESRDI","MemorySegDI","MemorySegEDI","MemorySegESI","MemorySegRDI","MemorySegRSI","MemorySegSI","MemorySize","MemorySizeOptions","Mfence","Mfence","Mfence_F1","Mfence_F2","Mfence_F3","Mfence_F4","Mfence_F5","Mfence_F6","Mfence_F7","Minimal","Minpd","Minpd_xmm_xmmm128","Minps","Minps_xmm_xmmm128","Minsd","Minsd_xmm_xmmm64","Minss","Minss_xmm_xmmm32","Mnemonic","Mnemonic","Monitor","Monitord","Monitorq","Monitorw","Monitorx","Monitorxd","Monitorxq","Monitorxw","Montmul","Montmul_16","Montmul_32","Montmul_64","Mov","Mov_AL_moffs8","Mov_AX_moffs16","Mov_EAX_moffs32","Mov_RAX_moffs64","Mov_Sreg_r32m16","Mov_Sreg_r64m16","Mov_Sreg_rm16","Mov_cr_r32","Mov_cr_r64","Mov_dr_r32","Mov_dr_r64","Mov_moffs16_AX","Mov_moffs32_EAX","Mov_moffs64_RAX","Mov_moffs8_AL","Mov_r16_imm16","Mov_r16_rm16","Mov_r32_cr","Mov_r32_dr","Mov_r32_imm32","Mov_r32_rm32","Mov_r32_tr","Mov_r32m16_Sreg","Mov_r64_cr","Mov_r64_dr","Mov_r64_imm64","Mov_r64_rm64","Mov_r64m16_Sreg","Mov_r8_imm8","Mov_r8_rm8","Mov_rm16_Sreg","Mov_rm16_imm16","Mov_rm16_r16","Mov_rm32_imm32","Mov_rm32_r32","Mov_rm64_imm32","Mov_rm64_r64","Mov_rm8_imm8","Mov_rm8_r8","Mov_tr_r32","Movapd","Movapd_xmm_xmmm128","Movapd_xmmm128_xmm","Movaps","Movaps_xmm_xmmm128","Movaps_xmmm128_xmm","Movbe","Movbe_m16_r16","Movbe_m32_r32","Movbe_m64_r64","Movbe_r16_m16","Movbe_r32_m32","Movbe_r64_m64","Movd","Movd_mm_rm32","Movd_rm32_mm","Movd_rm32_xmm","Movd_xmm_rm32","Movddup","Movddup_xmm_xmmm64","Movdir64b","Movdir64b_r16_m512","Movdir64b_r32_m512","Movdir64b_r64_m512","Movdiri","Movdiri_m32_r32","Movdiri_m64_r64","Movdq2q","Movdq2q_mm_xmm","Movdqa","Movdqa_xmm_xmmm128","Movdqa_xmmm128_xmm","Movdqu","Movdqu_xmm_xmmm128","Movdqu_xmmm128_xmm","Movhlps","Movhlps_xmm_xmm","Movhpd","Movhpd_m64_xmm","Movhpd_xmm_m64","Movhps","Movhps_m64_xmm","Movhps_xmm_m64","Movlhps","Movlhps_xmm_xmm","Movlpd","Movlpd_m64_xmm","Movlpd_xmm_m64","Movlps","Movlps_m64_xmm","Movlps_xmm_m64","Movmskpd","Movmskpd_r32_xmm","Movmskpd_r64_xmm","Movmskps","Movmskps_r32_xmm","Movmskps_r64_xmm","Movntdq","Movntdq_m128_xmm","Movntdqa","Movntdqa_xmm_m128","Movnti","Movnti_m32_r32","Movnti_m64_r64","Movntpd","Movntpd_m128_xmm","Movntps","Movntps_m128_xmm","Movntq","Movntq_m64_mm","Movntsd","Movntsd_m64_xmm","Movntss","Movntss_m32_xmm","Movq","Movq2dq","Movq2dq_xmm_mm","Movq_mm_mmm64","Movq_mm_rm64","Movq_mmm64_mm","Movq_rm64_mm","Movq_rm64_xmm","Movq_xmm_rm64","Movq_xmm_xmmm64","Movq_xmmm64_xmm","Movsb","Movsb_m8_m8","Movsd","Movsd_m32_m32","Movsd_xmm_xmmm64","Movsd_xmmm64_xmm","Movshdup","Movshdup_xmm_xmmm128","Movsldup","Movsldup_xmm_xmmm128","Movsq","Movsq_m64_m64","Movss","Movss_xmm_xmmm32","Movss_xmmm32_xmm","Movsw","Movsw_m16_m16","Movsx","Movsx_r16_rm16","Movsx_r16_rm8","Movsx_r32_rm16","Movsx_r32_rm8","Movsx_r64_rm16","Movsx_r64_rm8","Movsxd","Movsxd_r16_rm16","Movsxd_r32_rm32","Movsxd_r64_rm32","Movupd","Movupd_xmm_xmmm128","Movupd_xmmm128_xmm","Movups","Movups_xmm_xmmm128","Movups_xmmm128_xmm","Movzx","Movzx_r16_rm16","Movzx_r16_rm8","Movzx_r32_rm16","Movzx_r32_rm8","Movzx_r64_rm16","Movzx_r64_rm8","Mpsadbw","Mpsadbw_xmm_xmmm128_imm8","Mul","Mul_rm16","Mul_rm32","Mul_rm64","Mul_rm8","Mulpd","Mulpd_xmm_xmmm128","Mulps","Mulps_xmm_xmmm128","Mulsd","Mulsd_xmm_xmmm64","Mulss","Mulss_xmm_xmmm32","Mulx","Mwait","Mwait","Mwaitx","Mwaitx","N1","N16","N16b2","N16b4","N16b8","N2","N32","N32b2","N32b4","N32b8","N4","N4b2","N64","N64b2","N64b4","N64b8","N8","N8b2","N8b4","NONE","NONE","NONE","NO_INVALID_CHECK","NO_LAHF_SAHF_64","NO_MNEMONIC","NO_MPFX_0FBC","NO_MPFX_0FBD","NO_PAUSE","NO_PREFIXES","NO_WBNOINVD","NearBranch16","NearBranch32","NearBranch64","Neg","Neg_rm16","Neg_rm32","Neg_rm64","Neg_rm8","Never","NoMoreBytes","None","None","None","Nop","Nop_rm16","Nop_rm32","Nop_rm64","Nopd","Nopq","Nopw","Not","Not_rm16","Not_rm32","Not_rm64","Not_rm8","Notrack","Number","NumberBase","NumberFormattingOptions","NumberKind","OLD_FPU","Octal","OpKind","OperandSize","Operator","Or","Or_AL_imm8","Or_AX_imm16","Or_EAX_imm32","Or_RAX_imm32","Or_r16_rm16","Or_r32_rm32","Or_r64_rm64","Or_r8_rm8","Or_rm16_imm16","Or_rm16_imm8","Or_rm16_r16","Or_rm32_imm32","Or_rm32_imm8","Or_rm32_r32","Or_rm64_imm32","Or_rm64_imm8","Or_rm64_r64","Or_rm8_imm8","Or_rm8_imm8_82","Or_rm8_r8","Orpd","Orpd_xmm_xmmm128","Orps","Orps_xmm_xmmm128","Out","Out_DX_AL","Out_DX_AX","Out_DX_EAX","Out_imm8_AL","Out_imm8_AX","Out_imm8_EAX","Outsb","Outsb_DX_m8","Outsd","Outsd_DX_m32","Outsw","Outsw_DX_m16","PCOMMIT","Pabsb","Pabsb_mm_mmm64","Pabsb_xmm_xmmm128","Pabsd","Pabsd_mm_mmm64","Pabsd_xmm_xmmm128","Pabsw","Pabsw_mm_mmm64","Pabsw_xmm_xmmm128","Packed128_2xBFloat16","Packed128_2xFloat16","Packed128_BFloat16","Packed128_Float16","Packed128_Float32","Packed128_Float64","Packed128_Int16","Packed128_Int32","Packed128_Int64","Packed128_Int8","Packed128_UInt16","Packed128_UInt32","Packed128_UInt52","Packed128_UInt64","Packed128_UInt8","Packed16_Int8","Packed16_UInt8","Packed256_2xBFloat16","Packed256_2xFloat16","Packed256_BFloat16","Packed256_Float128","Packed256_Float16","Packed256_Float32","Packed256_Float64","Packed256_Int128","Packed256_Int16","Packed256_Int32","Packed256_Int64","Packed256_Int8","Packed256_UInt128","Packed256_UInt16","Packed256_UInt32","Packed256_UInt52","Packed256_UInt64","Packed256_UInt8","Packed32_BFloat16","Packed32_Float16","Packed32_Int16","Packed32_Int8","Packed32_UInt16","Packed32_UInt8","Packed512_2xBFloat16","Packed512_2xFloat16","Packed512_Float16","Packed512_Float32","Packed512_Float64","Packed512_Int16","Packed512_Int32","Packed512_Int64","Packed512_Int8","Packed512_UInt128","Packed512_UInt16","Packed512_UInt32","Packed512_UInt52","Packed512_UInt64","Packed512_UInt8","Packed64_Float16","Packed64_Float32","Packed64_Int16","Packed64_Int32","Packed64_Int8","Packed64_UInt16","Packed64_UInt32","Packed64_UInt8","Packssdw","Packssdw_mm_mmm64","Packssdw_xmm_xmmm128","Packsswb","Packsswb_mm_mmm64","Packsswb_xmm_xmmm128","Packusdw","Packusdw_xmm_xmmm128","Packuswb","Packuswb_mm_mmm64","Packuswb_xmm_xmmm128","Paddb","Paddb_mm_mmm64","Paddb_xmm_xmmm128","Paddd","Paddd_mm_mmm64","Paddd_xmm_xmmm128","Paddq","Paddq_mm_mmm64","Paddq_xmm_xmmm128","Paddsb","Paddsb_mm_mmm64","Paddsb_xmm_xmmm128","Paddsiw","Paddsiw_mm_mmm64","Paddsw","Paddsw_mm_mmm64","Paddsw_xmm_xmmm128","Paddusb","Paddusb_mm_mmm64","Paddusb_xmm_xmmm128","Paddusw","Paddusw_mm_mmm64","Paddusw_xmm_xmmm128","Paddw","Paddw_mm_mmm64","Paddw_xmm_xmmm128","Palignr","Palignr_mm_mmm64_imm8","Palignr_xmm_xmmm128_imm8","Pand","Pand_mm_mmm64","Pand_xmm_xmmm128","Pandn","Pandn_mm_mmm64","Pandn_xmm_xmmm128","Pause","Pause","Paveb","Paveb_mm_mmm64","Pavgb","Pavgb_mm_mmm64","Pavgb_xmm_xmmm128","Pavgusb","Pavgw","Pavgw_mm_mmm64","Pavgw_xmm_xmmm128","Pblendvb","Pblendvb_xmm_xmmm128","Pblendw","Pblendw_xmm_xmmm128_imm8","Pclmulqdq","Pclmulqdq_xmm_xmmm128_imm8","Pcmpeqb","Pcmpeqb_mm_mmm64","Pcmpeqb_xmm_xmmm128","Pcmpeqd","Pcmpeqd_mm_mmm64","Pcmpeqd_xmm_xmmm128","Pcmpeqq","Pcmpeqq_xmm_xmmm128","Pcmpeqw","Pcmpeqw_mm_mmm64","Pcmpeqw_xmm_xmmm128","Pcmpestri","Pcmpestri64","Pcmpestri64_xmm_xmmm128_imm8","Pcmpestri_xmm_xmmm128_imm8","Pcmpestrm","Pcmpestrm64","Pcmpestrm64_xmm_xmmm128_imm8","Pcmpestrm_xmm_xmmm128_imm8","Pcmpgtb","Pcmpgtb_mm_mmm64","Pcmpgtb_xmm_xmmm128","Pcmpgtd","Pcmpgtd_mm_mmm64","Pcmpgtd_xmm_xmmm128","Pcmpgtq","Pcmpgtq_xmm_xmmm128","Pcmpgtw","Pcmpgtw_mm_mmm64","Pcmpgtw_xmm_xmmm128","Pcmpistri","Pcmpistri_xmm_xmmm128_imm8","Pcmpistrm","Pcmpistrm_xmm_xmmm128_imm8","Pcommit","Pcommit","Pconfig","Pconfig","Pdep","Pdistib","Pdistib_mm_m64","Pext","Pextrb","Pextrb_r32m8_xmm_imm8","Pextrb_r64m8_xmm_imm8","Pextrd","Pextrd_rm32_xmm_imm8","Pextrq","Pextrq_rm64_xmm_imm8","Pextrw","Pextrw_r32_mm_imm8","Pextrw_r32_xmm_imm8","Pextrw_r32m16_xmm_imm8","Pextrw_r64_mm_imm8","Pextrw_r64_xmm_imm8","Pextrw_r64m16_xmm_imm8","Pf2id","Pf2iw","Pfacc","Pfadd","Pfcmpeq","Pfcmpge","Pfcmpgt","Pfmax","Pfmin","Pfmul","Pfnacc","Pfpnacc","Pfrcp","Pfrcpit1","Pfrcpit2","Pfrcpv","Pfrsqit1","Pfrsqrt","Pfrsqrtv","Pfsub","Pfsubr","Phaddd","Phaddd_mm_mmm64","Phaddd_xmm_xmmm128","Phaddsw","Phaddsw_mm_mmm64","Phaddsw_xmm_xmmm128","Phaddw","Phaddw_mm_mmm64","Phaddw_xmm_xmmm128","Phminposuw","Phminposuw_xmm_xmmm128","Phsubd","Phsubd_mm_mmm64","Phsubd_xmm_xmmm128","Phsubsw","Phsubsw_mm_mmm64","Phsubsw_xmm_xmmm128","Phsubw","Phsubw_mm_mmm64","Phsubw_xmm_xmmm128","Pi2fd","Pi2fw","Pinsrb","Pinsrb_xmm_r32m8_imm8","Pinsrb_xmm_r64m8_imm8","Pinsrd","Pinsrd_xmm_rm32_imm8","Pinsrq","Pinsrq_xmm_rm64_imm8","Pinsrw","Pinsrw_mm_r32m16_imm8","Pinsrw_mm_r64m16_imm8","Pinsrw_xmm_r32m16_imm8","Pinsrw_xmm_r64m16_imm8","Pmachriw","Pmachriw_mm_m64","Pmaddubsw","Pmaddubsw_mm_mmm64","Pmaddubsw_xmm_xmmm128","Pmaddwd","Pmaddwd_mm_mmm64","Pmaddwd_xmm_xmmm128","Pmagw","Pmagw_mm_mmm64","Pmaxsb","Pmaxsb_xmm_xmmm128","Pmaxsd","Pmaxsd_xmm_xmmm128","Pmaxsw","Pmaxsw_mm_mmm64","Pmaxsw_xmm_xmmm128","Pmaxub","Pmaxub_mm_mmm64","Pmaxub_xmm_xmmm128","Pmaxud","Pmaxud_xmm_xmmm128","Pmaxuw","Pmaxuw_xmm_xmmm128","Pminsb","Pminsb_xmm_xmmm128","Pminsd","Pminsd_xmm_xmmm128","Pminsw","Pminsw_mm_mmm64","Pminsw_xmm_xmmm128","Pminub","Pminub_mm_mmm64","Pminub_xmm_xmmm128","Pminud","Pminud_xmm_xmmm128","Pminuw","Pminuw_xmm_xmmm128","Pmovmskb","Pmovmskb_r32_mm","Pmovmskb_r32_xmm","Pmovmskb_r64_mm","Pmovmskb_r64_xmm","Pmovsxbd","Pmovsxbd_xmm_xmmm32","Pmovsxbq","Pmovsxbq_xmm_xmmm16","Pmovsxbw","Pmovsxbw_xmm_xmmm64","Pmovsxdq","Pmovsxdq_xmm_xmmm64","Pmovsxwd","Pmovsxwd_xmm_xmmm64","Pmovsxwq","Pmovsxwq_xmm_xmmm32","Pmovzxbd","Pmovzxbd_xmm_xmmm32","Pmovzxbq","Pmovzxbq_xmm_xmmm16","Pmovzxbw","Pmovzxbw_xmm_xmmm64","Pmovzxdq","Pmovzxdq_xmm_xmmm64","Pmovzxwd","Pmovzxwd_xmm_xmmm64","Pmovzxwq","Pmovzxwq_xmm_xmmm32","Pmuldq","Pmuldq_xmm_xmmm128","Pmulhriw","Pmulhriw_mm_mmm64","Pmulhrsw","Pmulhrsw_mm_mmm64","Pmulhrsw_xmm_xmmm128","Pmulhrw","Pmulhrw_mm_mmm64","Pmulhuw","Pmulhuw_mm_mmm64","Pmulhuw_xmm_xmmm128","Pmulhw","Pmulhw_mm_mmm64","Pmulhw_xmm_xmmm128","Pmulld","Pmulld_xmm_xmmm128","Pmullw","Pmullw_mm_mmm64","Pmullw_xmm_xmmm128","Pmuludq","Pmuludq_mm_mmm64","Pmuludq_xmm_xmmm128","Pmvgezb","Pmvgezb_mm_m64","Pmvlzb","Pmvlzb_mm_m64","Pmvnzb","Pmvnzb_mm_m64","Pmvzb","Pmvzb_mm_m64","Pop","Pop_r16","Pop_r32","Pop_r64","Pop_rm16","Pop_rm32","Pop_rm64","Popa","Popad","Popad","Popaw","Popcnt","Popcnt_r16_rm16","Popcnt_r32_rm32","Popcnt_r64_rm64","Popd_DS","Popd_ES","Popd_FS","Popd_GS","Popd_SS","Popf","Popfd","Popfd","Popfq","Popfq","Popfw","Popq_FS","Popq_GS","Popw_CS","Popw_DS","Popw_ES","Popw_FS","Popw_GS","Popw_SS","Por","Por_mm_mmm64","Por_xmm_xmmm128","Prefetch","Prefetch_m8","Prefetchit0","Prefetchit0_m8","Prefetchit1","Prefetchit1_m8","Prefetchnta","Prefetchnta_m8","Prefetchreserved3_m8","Prefetchreserved4_m8","Prefetchreserved5_m8","Prefetchreserved6_m8","Prefetchreserved7_m8","Prefetcht0","Prefetcht0_m8","Prefetcht1","Prefetcht1_m8","Prefetcht2","Prefetcht2_m8","Prefetchw","Prefetchw_m8","Prefetchwt1","Prefetchwt1_m8","Prefix","PrefixKind","Psadbw","Psadbw_mm_mmm64","Psadbw_xmm_xmmm128","Pshufb","Pshufb_mm_mmm64","Pshufb_xmm_xmmm128","Pshufd","Pshufd_xmm_xmmm128_imm8","Pshufhw","Pshufhw_xmm_xmmm128_imm8","Pshuflw","Pshuflw_xmm_xmmm128_imm8","Pshufw","Pshufw_mm_mmm64_imm8","Psignb","Psignb_mm_mmm64","Psignb_xmm_xmmm128","Psignd","Psignd_mm_mmm64","Psignd_xmm_xmmm128","Psignw","Psignw_mm_mmm64","Psignw_xmm_xmmm128","Pslld","Pslld_mm_imm8","Pslld_mm_mmm64","Pslld_xmm_imm8","Pslld_xmm_xmmm128","Pslldq","Pslldq_xmm_imm8","Psllq","Psllq_mm_imm8","Psllq_mm_mmm64","Psllq_xmm_imm8","Psllq_xmm_xmmm128","Psllw","Psllw_mm_imm8","Psllw_mm_mmm64","Psllw_xmm_imm8","Psllw_xmm_xmmm128","Psmash","Psmash","Psrad","Psrad_mm_imm8","Psrad_mm_mmm64","Psrad_xmm_imm8","Psrad_xmm_xmmm128","Psraw","Psraw_mm_imm8","Psraw_mm_mmm64","Psraw_xmm_imm8","Psraw_xmm_xmmm128","Psrld","Psrld_mm_imm8","Psrld_mm_mmm64","Psrld_xmm_imm8","Psrld_xmm_xmmm128","Psrldq","Psrldq_xmm_imm8","Psrlq","Psrlq_mm_imm8","Psrlq_mm_mmm64","Psrlq_xmm_imm8","Psrlq_xmm_xmmm128","Psrlw","Psrlw_mm_imm8","Psrlw_mm_mmm64","Psrlw_xmm_imm8","Psrlw_xmm_xmmm128","Psubb","Psubb_mm_mmm64","Psubb_xmm_xmmm128","Psubd","Psubd_mm_mmm64","Psubd_xmm_xmmm128","Psubq","Psubq_mm_mmm64","Psubq_xmm_xmmm128","Psubsb","Psubsb_mm_mmm64","Psubsb_xmm_xmmm128","Psubsiw","Psubsiw_mm_mmm64","Psubsw","Psubsw_mm_mmm64","Psubsw_xmm_xmmm128","Psubusb","Psubusb_mm_mmm64","Psubusb_xmm_xmmm128","Psubusw","Psubusw_mm_mmm64","Psubusw_xmm_xmmm128","Psubw","Psubw_mm_mmm64","Psubw_xmm_xmmm128","Pswapd","Ptest","Ptest_xmm_xmmm128","Ptwrite","Ptwrite_rm32","Ptwrite_rm64","Punctuation","Punpckhbw","Punpckhbw_mm_mmm64","Punpckhbw_xmm_xmmm128","Punpckhdq","Punpckhdq_mm_mmm64","Punpckhdq_xmm_xmmm128","Punpckhqdq","Punpckhqdq_xmm_xmmm128","Punpckhwd","Punpckhwd_mm_mmm64","Punpckhwd_xmm_xmmm128","Punpcklbw","Punpcklbw_mm_mmm32","Punpcklbw_xmm_xmmm128","Punpckldq","Punpckldq_mm_mmm32","Punpckldq_xmm_xmmm128","Punpcklqdq","Punpcklqdq_xmm_xmmm128","Punpcklwd","Punpcklwd_mm_mmm32","Punpcklwd_xmm_xmmm128","Push","Push_imm16","Push_r16","Push_r32","Push_r64","Push_rm16","Push_rm32","Push_rm64","Pusha","Pushad","Pushad","Pushaw","Pushd_CS","Pushd_DS","Pushd_ES","Pushd_FS","Pushd_GS","Pushd_SS","Pushd_imm32","Pushd_imm8","Pushf","Pushfd","Pushfd","Pushfq","Pushfq","Pushfw","Pushq_FS","Pushq_GS","Pushq_imm32","Pushq_imm8","Pushw_CS","Pushw_DS","Pushw_ES","Pushw_FS","Pushw_GS","Pushw_SS","Pushw_imm8","Pvalidate","Pvalidated","Pvalidateq","Pvalidatew","Pxor","Pxor_mm_mmm64","Pxor_xmm_xmmm128","QwordOffset","R10","R10D","R10L","R10W","R11","R11D","R11L","R11W","R12","R12D","R12L","R12W","R13","R13D","R13L","R13W","R14","R14D","R14L","R14W","R15","R15D","R15L","R15W","R8","R8D","R8L","R8W","R9","R9D","R9L","R9W","RAX","RBP","RBX","RCX","RDI","RDX","RELATIVE","RIP","RSI","RSP","Rcl","Rcl_rm16_1","Rcl_rm16_CL","Rcl_rm16_imm8","Rcl_rm32_1","Rcl_rm32_CL","Rcl_rm32_imm8","Rcl_rm64_1","Rcl_rm64_CL","Rcl_rm64_imm8","Rcl_rm8_1","Rcl_rm8_CL","Rcl_rm8_imm8","Rcpps","Rcpps_xmm_xmmm128","Rcpss","Rcpss_xmm_xmmm32","Rcr","Rcr_rm16_1","Rcr_rm16_CL","Rcr_rm16_imm8","Rcr_rm32_1","Rcr_rm32_CL","Rcr_rm32_imm8","Rcr_rm64_1","Rcr_rm64_CL","Rcr_rm64_imm8","Rcr_rm8_1","Rcr_rm8_CL","Rcr_rm8_imm8","Rdfsbase","Rdfsbase_r32","Rdfsbase_r64","Rdgsbase","Rdgsbase_r32","Rdgsbase_r64","Rdm","Rdm","Rdmsr","Rdmsr","Rdmsrlist","Rdmsrlist","Rdpid","Rdpid_r32","Rdpid_r64","Rdpkru","Rdpkru","Rdpmc","Rdpmc","Rdpru","Rdpru","Rdrand","Rdrand_r16","Rdrand_r32","Rdrand_r64","Rdseed","Rdseed_r16","Rdseed_r32","Rdseed_r64","Rdshr","Rdshr_rm32","Rdsspd","Rdsspd_r32","Rdsspq","Rdsspq_r64","Rdtsc","Rdtsc","Rdtscp","Rdtscp","Rdudbg","Rdudbg","Register","Register","Register","Rep","Repe","Repne","Reservednop","Reservednop_rm16_r16_0F0D","Reservednop_rm16_r16_0F18","Reservednop_rm16_r16_0F19","Reservednop_rm16_r16_0F1A","Reservednop_rm16_r16_0F1B","Reservednop_rm16_r16_0F1C","Reservednop_rm16_r16_0F1D","Reservednop_rm16_r16_0F1E","Reservednop_rm16_r16_0F1F","Reservednop_rm32_r32_0F0D","Reservednop_rm32_r32_0F18","Reservednop_rm32_r32_0F19","Reservednop_rm32_r32_0F1A","Reservednop_rm32_r32_0F1B","Reservednop_rm32_r32_0F1C","Reservednop_rm32_r32_0F1D","Reservednop_rm32_r32_0F1E","Reservednop_rm32_r32_0F1F","Reservednop_rm64_r64_0F0D","Reservednop_rm64_r64_0F18","Reservednop_rm64_r64_0F19","Reservednop_rm64_r64_0F1A","Reservednop_rm64_r64_0F1B","Reservednop_rm64_r64_0F1C","Reservednop_rm64_r64_0F1D","Reservednop_rm64_r64_0F1E","Reservednop_rm64_r64_0F1F","Ret","Retf","Retfd","Retfd_imm16","Retfq","Retfq_imm16","Retfw","Retfw_imm16","Retnd","Retnd_imm16","Retnq","Retnq_imm16","Retnw","Retnw_imm16","Rmpadjust","Rmpadjust","Rmpquery","Rmpquery","Rmpupdate","Rmpupdate","Rol","Rol_rm16_1","Rol_rm16_CL","Rol_rm16_imm8","Rol_rm32_1","Rol_rm32_CL","Rol_rm32_imm8","Rol_rm64_1","Rol_rm64_CL","Rol_rm64_imm8","Rol_rm8_1","Rol_rm8_CL","Rol_rm8_imm8","Ror","Ror_rm16_1","Ror_rm16_CL","Ror_rm16_imm8","Ror_rm32_1","Ror_rm32_CL","Ror_rm32_imm8","Ror_rm64_1","Ror_rm64_CL","Ror_rm64_imm8","Ror_rm8_1","Ror_rm8_CL","Ror_rm8_imm8","Rorx","RoundDown","RoundToNearest","RoundTowardZero","RoundUp","RoundingControl","RoundingControl","Roundpd","Roundpd_xmm_xmmm128_imm8","Roundps","Roundps_xmm_xmmm128_imm8","Roundsd","Roundsd_xmm_xmmm64_imm8","Roundss","Roundss_xmm_xmmm32_imm8","Rsdc","Rsdc_Sreg_m80","Rsldt","Rsldt_m80","Rsm","Rsm","Rsqrtps","Rsqrtps_xmm_xmmm128","Rsqrtss","Rsqrtss_xmm_xmmm32","Rstorssp","Rstorssp_m64","Rsts","Rsts_m80","SI","SIGNED","SIL","SP","SPL","SS","SS","ST0","ST1","ST2","ST3","ST4","ST5","ST6","ST7","Sahf","Sahf","Sal","Sal_rm16_1","Sal_rm16_CL","Sal_rm16_imm8","Sal_rm32_1","Sal_rm32_CL","Sal_rm32_imm8","Sal_rm64_1","Sal_rm64_CL","Sal_rm64_imm8","Sal_rm8_1","Sal_rm8_CL","Sal_rm8_imm8","Salc","Salc","Sar","Sar_rm16_1","Sar_rm16_CL","Sar_rm16_imm8","Sar_rm32_1","Sar_rm32_CL","Sar_rm32_imm8","Sar_rm64_1","Sar_rm64_CL","Sar_rm64_imm8","Sar_rm8_1","Sar_rm8_CL","Sar_rm8_imm8","Sarx","Saveprevssp","Saveprevssp","Sbb","Sbb_AL_imm8","Sbb_AX_imm16","Sbb_EAX_imm32","Sbb_RAX_imm32","Sbb_r16_rm16","Sbb_r32_rm32","Sbb_r64_rm64","Sbb_r8_rm8","Sbb_rm16_imm16","Sbb_rm16_imm8","Sbb_rm16_r16","Sbb_rm32_imm32","Sbb_rm32_imm8","Sbb_rm32_r32","Sbb_rm64_imm32","Sbb_rm64_imm8","Sbb_rm64_r64","Sbb_rm8_imm8","Sbb_rm8_imm8_82","Sbb_rm8_r8","Scasb","Scasb_AL_m8","Scasd","Scasd_EAX_m32","Scasq","Scasq_RAX_m64","Scasw","Scasw_AX_m16","Seamcall","Seamcall","Seamops","Seamops","Seamret","Seamret","SegPtr16","SegPtr32","SegPtr64","SegmentDescSelector","SelectorValue","Senduipi","Senduipi_r64","Serialize","Serialize","Seta","Seta_rm8","Setae","Setae_rm8","Setb","Setb_rm8","Setbe","Setbe_rm8","Sete","Sete_rm8","Setg","Setg_rm8","Setge","Setge_rm8","Setl","Setl_rm8","Setle","Setle_rm8","Setne","Setne_rm8","Setno","Setno_rm8","Setnp","Setnp_rm8","Setns","Setns_rm8","Seto","Seto_rm8","Setp","Setp_rm8","Sets","Sets_rm8","Setssbsy","Setssbsy","Sfence","Sfence","Sfence_F9","Sfence_FA","Sfence_FB","Sfence_FC","Sfence_FD","Sfence_FE","Sfence_FF","Sgdt","Sgdt_m1632","Sgdt_m1632_16","Sgdt_m1664","Sha1msg1","Sha1msg1_xmm_xmmm128","Sha1msg2","Sha1msg2_xmm_xmmm128","Sha1nexte","Sha1nexte_xmm_xmmm128","Sha1rnds4","Sha1rnds4_xmm_xmmm128_imm8","Sha256msg1","Sha256msg1_xmm_xmmm128","Sha256msg2","Sha256msg2_xmm_xmmm128","Sha256rnds2","Sha256rnds2_xmm_xmmm128","Shl","Shl_rm16_1","Shl_rm16_CL","Shl_rm16_imm8","Shl_rm32_1","Shl_rm32_CL","Shl_rm32_imm8","Shl_rm64_1","Shl_rm64_CL","Shl_rm64_imm8","Shl_rm8_1","Shl_rm8_CL","Shl_rm8_imm8","Shld","Shld_rm16_r16_CL","Shld_rm16_r16_imm8","Shld_rm32_r32_CL","Shld_rm32_r32_imm8","Shld_rm64_r64_CL","Shld_rm64_r64_imm8","Shlx","Shr","Shr_rm16_1","Shr_rm16_CL","Shr_rm16_imm8","Shr_rm32_1","Shr_rm32_CL","Shr_rm32_imm8","Shr_rm64_1","Shr_rm64_CL","Shr_rm64_imm8","Shr_rm8_1","Shr_rm8_CL","Shr_rm8_imm8","Shrd","Shrd_rm16_r16_CL","Shrd_rm16_r16_imm8","Shrd_rm32_r32_CL","Shrd_rm32_r32_imm8","Shrd_rm64_r64_CL","Shrd_rm64_r64_imm8","Shrx","Shufpd","Shufpd_xmm_xmmm128_imm8","Shufps","Shufps_xmm_xmmm128_imm8","Sidt","Sidt_m1632","Sidt_m1632_16","Sidt_m1664","Skinit","Skinit","Sldt","Sldt_r32m16","Sldt_r64m16","Sldt_rm16","Slwpcb","Smint","Smint","Smint_0F7E","Smsw","Smsw_r32m16","Smsw_r64m16","Smsw_rm16","Spflt","Sqrtpd","Sqrtpd_xmm_xmmm128","Sqrtps","Sqrtps_xmm_xmmm128","Sqrtsd","Sqrtsd_xmm_xmmm64","Sqrtss","Sqrtss_xmm_xmmm32","Stac","Stac","Stc","Stc","Std","Std","Stgi","Stgi","Sti","Sti","Stmxcsr","Stmxcsr_m32","Storeall","Storeall","Stosb","Stosb_m8_AL","Stosd","Stosd_m32_EAX","Stosq","Stosq_m64_RAX","Stosw","Stosw_m16_AX","Str","Str","Str_r32m16","Str_r64m16","Str_rm16","String","Sttilecfg","Stui","Stui","Sub","Sub_AL_imm8","Sub_AX_imm16","Sub_EAX_imm32","Sub_RAX_imm32","Sub_r16_rm16","Sub_r32_rm32","Sub_r64_rm64","Sub_r8_rm8","Sub_rm16_imm16","Sub_rm16_imm8","Sub_rm16_r16","Sub_rm32_imm32","Sub_rm32_imm8","Sub_rm32_r32","Sub_rm64_imm32","Sub_rm64_imm8","Sub_rm64_r64","Sub_rm8_imm8","Sub_rm8_imm8_82","Sub_rm8_r8","Subpd","Subpd_xmm_xmmm128","Subps","Subps_xmm_xmmm128","Subsd","Subsd_xmm_xmmm64","Subss","Subss_xmm_xmmm32","SuppressAllExceptions","Svdc","Svdc_m80_Sreg","Svldt","Svldt_m80","Svts","Svts_m80","Swapgs","Swapgs","SwizzleMemConv","SymResString","SymResTextInfo","SymResTextPart","SymbolFlags","SymbolResolver","SymbolResult","Syscall","Syscall","Sysenter","Sysenter","Sysexit","Sysexitd","Sysexitq","Sysexitq","Sysret","Sysretd","Sysretq","Sysretq","T1mskc","TMM0","TMM1","TMM2","TMM3","TMM4","TMM5","TMM6","TMM7","TR0","TR1","TR2","TR3","TR4","TR5","TR6","TR7","Tdcall","Tdcall","Tdpbf16ps","Tdpbssd","Tdpbsud","Tdpbusd","Tdpbuud","Tdpfp16ps","Test","Test_AL_imm8","Test_AX_imm16","Test_EAX_imm32","Test_RAX_imm32","Test_rm16_imm16","Test_rm16_imm16_F7r1","Test_rm16_r16","Test_rm32_imm32","Test_rm32_imm32_F7r1","Test_rm32_r32","Test_rm64_imm32","Test_rm64_imm32_F7r1","Test_rm64_r64","Test_rm8_imm8","Test_rm8_imm8_F6r1","Test_rm8_r8","Testui","Testui","Text","Text","TextVec","Tile","Tilecfg","Tileloadd","Tileloaddt1","Tilerelease","Tilestored","Tilezero","Tlbsync","Tlbsync","Tpause","Tpause_r32","Tpause_r64","TupleType","Tzcnt","Tzcnt_r16_rm16","Tzcnt_r32_rm32","Tzcnt_r64_rm64","Tzcnti","Tzmsk","UDBG","UInt128","UInt16","UInt16","UInt256","UInt32","UInt32","UInt512","UInt52","UInt64","UInt64","UInt8","UInt8","UMOV","Ucomisd","Ucomisd_xmm_xmmm64","Ucomiss","Ucomiss_xmm_xmmm32","Ud0","Ud0","Ud0_r16_rm16","Ud0_r32_rm32","Ud0_r64_rm64","Ud1","Ud1_r16_rm16","Ud1_r32_rm32","Ud1_r64_rm64","Ud2","Ud2","Uiret","Uiret","Umonitor","Umonitor_r16","Umonitor_r32","Umonitor_r64","Umov","Umov_r16_rm16","Umov_r32_rm32","Umov_r8_rm8","Umov_rm16_r16","Umov_rm32_r32","Umov_rm8_r8","Umwait","Umwait_r32","Umwait_r64","Undoc","Unknown","Unknown","Unpckhpd","Unpckhpd_xmm_xmmm128","Unpckhps","Unpckhps_xmm_xmmm128","Unpcklpd","Unpcklpd_xmm_xmmm128","Unpcklps","Unpcklps_xmm_xmmm128","V4fmaddps","V4fmaddss","V4fnmaddps","V4fnmaddss","VEX","VEX_Andn_r32_r32_rm32","VEX_Andn_r64_r64_rm64","VEX_Bextr_r32_rm32_r32","VEX_Bextr_r64_rm64_r64","VEX_Blsi_r32_rm32","VEX_Blsi_r64_rm64","VEX_Blsmsk_r32_rm32","VEX_Blsmsk_r64_rm64","VEX_Blsr_r32_rm32","VEX_Blsr_r64_rm64","VEX_Bzhi_r32_rm32_r32","VEX_Bzhi_r64_rm64_r64","VEX_Cmpbexadd_m32_r32_r32","VEX_Cmpbexadd_m64_r64_r64","VEX_Cmpbxadd_m32_r32_r32","VEX_Cmpbxadd_m64_r64_r64","VEX_Cmplexadd_m32_r32_r32","VEX_Cmplexadd_m64_r64_r64","VEX_Cmplxadd_m32_r32_r32","VEX_Cmplxadd_m64_r64_r64","VEX_Cmpnbexadd_m32_r32_r32","VEX_Cmpnbexadd_m64_r64_r64","VEX_Cmpnbxadd_m32_r32_r32","VEX_Cmpnbxadd_m64_r64_r64","VEX_Cmpnlexadd_m32_r32_r32","VEX_Cmpnlexadd_m64_r64_r64","VEX_Cmpnlxadd_m32_r32_r32","VEX_Cmpnlxadd_m64_r64_r64","VEX_Cmpnoxadd_m32_r32_r32","VEX_Cmpnoxadd_m64_r64_r64","VEX_Cmpnpxadd_m32_r32_r32","VEX_Cmpnpxadd_m64_r64_r64","VEX_Cmpnsxadd_m32_r32_r32","VEX_Cmpnsxadd_m64_r64_r64","VEX_Cmpnzxadd_m32_r32_r32","VEX_Cmpnzxadd_m64_r64_r64","VEX_Cmpoxadd_m32_r32_r32","VEX_Cmpoxadd_m64_r64_r64","VEX_Cmppxadd_m32_r32_r32","VEX_Cmppxadd_m64_r64_r64","VEX_Cmpsxadd_m32_r32_r32","VEX_Cmpsxadd_m64_r64_r64","VEX_Cmpzxadd_m32_r32_r32","VEX_Cmpzxadd_m64_r64_r64","VEX_KNC_Clevict0_m8","VEX_KNC_Clevict1_m8","VEX_KNC_Delay_r32","VEX_KNC_Delay_r64","VEX_KNC_Jknzd_kr_rel32_64","VEX_KNC_Jknzd_kr_rel8_64","VEX_KNC_Jkzd_kr_rel32_64","VEX_KNC_Jkzd_kr_rel8_64","VEX_KNC_Kand_kr_kr","VEX_KNC_Kandn_kr_kr","VEX_KNC_Kandnr_kr_kr","VEX_KNC_Kconcath_r64_kr_kr","VEX_KNC_Kconcatl_r64_kr_kr","VEX_KNC_Kextract_kr_r64_imm8","VEX_KNC_Kmerge2l1h_kr_kr","VEX_KNC_Kmerge2l1l_kr_kr","VEX_KNC_Kmov_kr_kr","VEX_KNC_Kmov_kr_r32","VEX_KNC_Kmov_r32_kr","VEX_KNC_Knot_kr_kr","VEX_KNC_Kor_kr_kr","VEX_KNC_Kortest_kr_kr","VEX_KNC_Kxnor_kr_kr","VEX_KNC_Kxor_kr_kr","VEX_KNC_Lzcnt_r32_r32","VEX_KNC_Lzcnt_r64_r64","VEX_KNC_Popcnt_r32_r32","VEX_KNC_Popcnt_r64_r64","VEX_KNC_Spflt_r32","VEX_KNC_Spflt_r64","VEX_KNC_Tzcnt_r32_r32","VEX_KNC_Tzcnt_r64_r64","VEX_KNC_Tzcnti_r32_r32","VEX_KNC_Tzcnti_r64_r64","VEX_KNC_Undoc_r32_rm32_128_F2_0F38_W0_F0","VEX_KNC_Undoc_r32_rm32_128_F2_0F38_W0_F1","VEX_KNC_Undoc_r32_rm32_128_F3_0F38_W0_F0","VEX_KNC_Undoc_r64_rm64_128_F2_0F38_W1_F0","VEX_KNC_Undoc_r64_rm64_128_F2_0F38_W1_F1","VEX_KNC_Undoc_r64_rm64_128_F3_0F38_W1_F0","VEX_KNC_Vprefetch0_m8","VEX_KNC_Vprefetch1_m8","VEX_KNC_Vprefetch2_m8","VEX_KNC_Vprefetche0_m8","VEX_KNC_Vprefetche1_m8","VEX_KNC_Vprefetche2_m8","VEX_KNC_Vprefetchenta_m8","VEX_KNC_Vprefetchnta_m8","VEX_Kaddb_kr_kr_kr","VEX_Kaddd_kr_kr_kr","VEX_Kaddq_kr_kr_kr","VEX_Kaddw_kr_kr_kr","VEX_Kandb_kr_kr_kr","VEX_Kandd_kr_kr_kr","VEX_Kandnb_kr_kr_kr","VEX_Kandnd_kr_kr_kr","VEX_Kandnq_kr_kr_kr","VEX_Kandnw_kr_kr_kr","VEX_Kandq_kr_kr_kr","VEX_Kandw_kr_kr_kr","VEX_Kmovb_kr_km8","VEX_Kmovb_kr_r32","VEX_Kmovb_m8_kr","VEX_Kmovb_r32_kr","VEX_Kmovd_kr_km32","VEX_Kmovd_kr_r32","VEX_Kmovd_m32_kr","VEX_Kmovd_r32_kr","VEX_Kmovq_kr_km64","VEX_Kmovq_kr_r64","VEX_Kmovq_m64_kr","VEX_Kmovq_r64_kr","VEX_Kmovw_kr_km16","VEX_Kmovw_kr_r32","VEX_Kmovw_m16_kr","VEX_Kmovw_r32_kr","VEX_Knotb_kr_kr","VEX_Knotd_kr_kr","VEX_Knotq_kr_kr","VEX_Knotw_kr_kr","VEX_Korb_kr_kr_kr","VEX_Kord_kr_kr_kr","VEX_Korq_kr_kr_kr","VEX_Kortestb_kr_kr","VEX_Kortestd_kr_kr","VEX_Kortestq_kr_kr","VEX_Kortestw_kr_kr","VEX_Korw_kr_kr_kr","VEX_Kshiftlb_kr_kr_imm8","VEX_Kshiftld_kr_kr_imm8","VEX_Kshiftlq_kr_kr_imm8","VEX_Kshiftlw_kr_kr_imm8","VEX_Kshiftrb_kr_kr_imm8","VEX_Kshiftrd_kr_kr_imm8","VEX_Kshiftrq_kr_kr_imm8","VEX_Kshiftrw_kr_kr_imm8","VEX_Ktestb_kr_kr","VEX_Ktestd_kr_kr","VEX_Ktestq_kr_kr","VEX_Ktestw_kr_kr","VEX_Kunpckbw_kr_kr_kr","VEX_Kunpckdq_kr_kr_kr","VEX_Kunpckwd_kr_kr_kr","VEX_Kxnorb_kr_kr_kr","VEX_Kxnord_kr_kr_kr","VEX_Kxnorq_kr_kr_kr","VEX_Kxnorw_kr_kr_kr","VEX_Kxorb_kr_kr_kr","VEX_Kxord_kr_kr_kr","VEX_Kxorq_kr_kr_kr","VEX_Kxorw_kr_kr_kr","VEX_Ldtilecfg_m512","VEX_Mulx_r32_r32_rm32","VEX_Mulx_r64_r64_rm64","VEX_Pdep_r32_r32_rm32","VEX_Pdep_r64_r64_rm64","VEX_Pext_r32_r32_rm32","VEX_Pext_r64_r64_rm64","VEX_Rorx_r32_rm32_imm8","VEX_Rorx_r64_rm64_imm8","VEX_Sarx_r32_rm32_r32","VEX_Sarx_r64_rm64_r64","VEX_Shlx_r32_rm32_r32","VEX_Shlx_r64_rm64_r64","VEX_Shrx_r32_rm32_r32","VEX_Shrx_r64_rm64_r64","VEX_Sttilecfg_m512","VEX_Tdpbf16ps_tmm_tmm_tmm","VEX_Tdpbssd_tmm_tmm_tmm","VEX_Tdpbsud_tmm_tmm_tmm","VEX_Tdpbusd_tmm_tmm_tmm","VEX_Tdpbuud_tmm_tmm_tmm","VEX_Tdpfp16ps_tmm_tmm_tmm","VEX_Tileloadd_tmm_sibmem","VEX_Tileloaddt1_tmm_sibmem","VEX_Tilerelease","VEX_Tilestored_sibmem_tmm","VEX_Tilezero_tmm","VEX_Vaddpd_xmm_xmm_xmmm128","VEX_Vaddpd_ymm_ymm_ymmm256","VEX_Vaddps_xmm_xmm_xmmm128","VEX_Vaddps_ymm_ymm_ymmm256","VEX_Vaddsd_xmm_xmm_xmmm64","VEX_Vaddss_xmm_xmm_xmmm32","VEX_Vaddsubpd_xmm_xmm_xmmm128","VEX_Vaddsubpd_ymm_ymm_ymmm256","VEX_Vaddsubps_xmm_xmm_xmmm128","VEX_Vaddsubps_ymm_ymm_ymmm256","VEX_Vaesdec_xmm_xmm_xmmm128","VEX_Vaesdec_ymm_ymm_ymmm256","VEX_Vaesdeclast_xmm_xmm_xmmm128","VEX_Vaesdeclast_ymm_ymm_ymmm256","VEX_Vaesenc_xmm_xmm_xmmm128","VEX_Vaesenc_ymm_ymm_ymmm256","VEX_Vaesenclast_xmm_xmm_xmmm128","VEX_Vaesenclast_ymm_ymm_ymmm256","VEX_Vaesimc_xmm_xmmm128","VEX_Vaeskeygenassist_xmm_xmmm128_imm8","VEX_Vandnpd_xmm_xmm_xmmm128","VEX_Vandnpd_ymm_ymm_ymmm256","VEX_Vandnps_xmm_xmm_xmmm128","VEX_Vandnps_ymm_ymm_ymmm256","VEX_Vandpd_xmm_xmm_xmmm128","VEX_Vandpd_ymm_ymm_ymmm256","VEX_Vandps_xmm_xmm_xmmm128","VEX_Vandps_ymm_ymm_ymmm256","VEX_Vbcstnebf162ps_xmm_m16","VEX_Vbcstnebf162ps_ymm_m16","VEX_Vbcstnesh2ps_xmm_m16","VEX_Vbcstnesh2ps_ymm_m16","VEX_Vblendpd_xmm_xmm_xmmm128_imm8","VEX_Vblendpd_ymm_ymm_ymmm256_imm8","VEX_Vblendps_xmm_xmm_xmmm128_imm8","VEX_Vblendps_ymm_ymm_ymmm256_imm8","VEX_Vblendvpd_xmm_xmm_xmmm128_xmm","VEX_Vblendvpd_ymm_ymm_ymmm256_ymm","VEX_Vblendvps_xmm_xmm_xmmm128_xmm","VEX_Vblendvps_ymm_ymm_ymmm256_ymm","VEX_Vbroadcastf128_ymm_m128","VEX_Vbroadcasti128_ymm_m128","VEX_Vbroadcastsd_ymm_m64","VEX_Vbroadcastsd_ymm_xmm","VEX_Vbroadcastss_xmm_m32","VEX_Vbroadcastss_xmm_xmm","VEX_Vbroadcastss_ymm_m32","VEX_Vbroadcastss_ymm_xmm","VEX_Vcmppd_xmm_xmm_xmmm128_imm8","VEX_Vcmppd_ymm_ymm_ymmm256_imm8","VEX_Vcmpps_xmm_xmm_xmmm128_imm8","VEX_Vcmpps_ymm_ymm_ymmm256_imm8","VEX_Vcmpsd_xmm_xmm_xmmm64_imm8","VEX_Vcmpss_xmm_xmm_xmmm32_imm8","VEX_Vcomisd_xmm_xmmm64","VEX_Vcomiss_xmm_xmmm32","VEX_Vcvtdq2pd_xmm_xmmm64","VEX_Vcvtdq2pd_ymm_xmmm128","VEX_Vcvtdq2ps_xmm_xmmm128","VEX_Vcvtdq2ps_ymm_ymmm256","VEX_Vcvtneebf162ps_xmm_m128","VEX_Vcvtneebf162ps_ymm_m256","VEX_Vcvtneeph2ps_xmm_m128","VEX_Vcvtneeph2ps_ymm_m256","VEX_Vcvtneobf162ps_xmm_m128","VEX_Vcvtneobf162ps_ymm_m256","VEX_Vcvtneoph2ps_xmm_m128","VEX_Vcvtneoph2ps_ymm_m256","VEX_Vcvtneps2bf16_xmm_xmmm128","VEX_Vcvtneps2bf16_xmm_ymmm256","VEX_Vcvtpd2dq_xmm_xmmm128","VEX_Vcvtpd2dq_xmm_ymmm256","VEX_Vcvtpd2ps_xmm_xmmm128","VEX_Vcvtpd2ps_xmm_ymmm256","VEX_Vcvtph2ps_xmm_xmmm64","VEX_Vcvtph2ps_ymm_xmmm128","VEX_Vcvtps2dq_xmm_xmmm128","VEX_Vcvtps2dq_ymm_ymmm256","VEX_Vcvtps2pd_xmm_xmmm64","VEX_Vcvtps2pd_ymm_xmmm128","VEX_Vcvtps2ph_xmmm128_ymm_imm8","VEX_Vcvtps2ph_xmmm64_xmm_imm8","VEX_Vcvtsd2si_r32_xmmm64","VEX_Vcvtsd2si_r64_xmmm64","VEX_Vcvtsd2ss_xmm_xmm_xmmm64","VEX_Vcvtsi2sd_xmm_xmm_rm32","VEX_Vcvtsi2sd_xmm_xmm_rm64","VEX_Vcvtsi2ss_xmm_xmm_rm32","VEX_Vcvtsi2ss_xmm_xmm_rm64","VEX_Vcvtss2sd_xmm_xmm_xmmm32","VEX_Vcvtss2si_r32_xmmm32","VEX_Vcvtss2si_r64_xmmm32","VEX_Vcvttpd2dq_xmm_xmmm128","VEX_Vcvttpd2dq_xmm_ymmm256","VEX_Vcvttps2dq_xmm_xmmm128","VEX_Vcvttps2dq_ymm_ymmm256","VEX_Vcvttsd2si_r32_xmmm64","VEX_Vcvttsd2si_r64_xmmm64","VEX_Vcvttss2si_r32_xmmm32","VEX_Vcvttss2si_r64_xmmm32","VEX_Vdivpd_xmm_xmm_xmmm128","VEX_Vdivpd_ymm_ymm_ymmm256","VEX_Vdivps_xmm_xmm_xmmm128","VEX_Vdivps_ymm_ymm_ymmm256","VEX_Vdivsd_xmm_xmm_xmmm64","VEX_Vdivss_xmm_xmm_xmmm32","VEX_Vdppd_xmm_xmm_xmmm128_imm8","VEX_Vdpps_xmm_xmm_xmmm128_imm8","VEX_Vdpps_ymm_ymm_ymmm256_imm8","VEX_Vextractf128_xmmm128_ymm_imm8","VEX_Vextracti128_xmmm128_ymm_imm8","VEX_Vextractps_r64m32_xmm_imm8","VEX_Vextractps_rm32_xmm_imm8","VEX_Vfmadd132pd_xmm_xmm_xmmm128","VEX_Vfmadd132pd_ymm_ymm_ymmm256","VEX_Vfmadd132ps_xmm_xmm_xmmm128","VEX_Vfmadd132ps_ymm_ymm_ymmm256","VEX_Vfmadd132sd_xmm_xmm_xmmm64","VEX_Vfmadd132ss_xmm_xmm_xmmm32","VEX_Vfmadd213pd_xmm_xmm_xmmm128","VEX_Vfmadd213pd_ymm_ymm_ymmm256","VEX_Vfmadd213ps_xmm_xmm_xmmm128","VEX_Vfmadd213ps_ymm_ymm_ymmm256","VEX_Vfmadd213sd_xmm_xmm_xmmm64","VEX_Vfmadd213ss_xmm_xmm_xmmm32","VEX_Vfmadd231pd_xmm_xmm_xmmm128","VEX_Vfmadd231pd_ymm_ymm_ymmm256","VEX_Vfmadd231ps_xmm_xmm_xmmm128","VEX_Vfmadd231ps_ymm_ymm_ymmm256","VEX_Vfmadd231sd_xmm_xmm_xmmm64","VEX_Vfmadd231ss_xmm_xmm_xmmm32","VEX_Vfmaddpd_xmm_xmm_xmm_xmmm128","VEX_Vfmaddpd_xmm_xmm_xmmm128_xmm","VEX_Vfmaddpd_ymm_ymm_ymm_ymmm256","VEX_Vfmaddpd_ymm_ymm_ymmm256_ymm","VEX_Vfmaddps_xmm_xmm_xmm_xmmm128","VEX_Vfmaddps_xmm_xmm_xmmm128_xmm","VEX_Vfmaddps_ymm_ymm_ymm_ymmm256","VEX_Vfmaddps_ymm_ymm_ymmm256_ymm","VEX_Vfmaddsd_xmm_xmm_xmm_xmmm64","VEX_Vfmaddsd_xmm_xmm_xmmm64_xmm","VEX_Vfmaddss_xmm_xmm_xmm_xmmm32","VEX_Vfmaddss_xmm_xmm_xmmm32_xmm","VEX_Vfmaddsub132pd_xmm_xmm_xmmm128","VEX_Vfmaddsub132pd_ymm_ymm_ymmm256","VEX_Vfmaddsub132ps_xmm_xmm_xmmm128","VEX_Vfmaddsub132ps_ymm_ymm_ymmm256","VEX_Vfmaddsub213pd_xmm_xmm_xmmm128","VEX_Vfmaddsub213pd_ymm_ymm_ymmm256","VEX_Vfmaddsub213ps_xmm_xmm_xmmm128","VEX_Vfmaddsub213ps_ymm_ymm_ymmm256","VEX_Vfmaddsub231pd_xmm_xmm_xmmm128","VEX_Vfmaddsub231pd_ymm_ymm_ymmm256","VEX_Vfmaddsub231ps_xmm_xmm_xmmm128","VEX_Vfmaddsub231ps_ymm_ymm_ymmm256","VEX_Vfmaddsubpd_xmm_xmm_xmm_xmmm128","VEX_Vfmaddsubpd_xmm_xmm_xmmm128_xmm","VEX_Vfmaddsubpd_ymm_ymm_ymm_ymmm256","VEX_Vfmaddsubpd_ymm_ymm_ymmm256_ymm","VEX_Vfmaddsubps_xmm_xmm_xmm_xmmm128","VEX_Vfmaddsubps_xmm_xmm_xmmm128_xmm","VEX_Vfmaddsubps_ymm_ymm_ymm_ymmm256","VEX_Vfmaddsubps_ymm_ymm_ymmm256_ymm","VEX_Vfmsub132pd_xmm_xmm_xmmm128","VEX_Vfmsub132pd_ymm_ymm_ymmm256","VEX_Vfmsub132ps_xmm_xmm_xmmm128","VEX_Vfmsub132ps_ymm_ymm_ymmm256","VEX_Vfmsub132sd_xmm_xmm_xmmm64","VEX_Vfmsub132ss_xmm_xmm_xmmm32","VEX_Vfmsub213pd_xmm_xmm_xmmm128","VEX_Vfmsub213pd_ymm_ymm_ymmm256","VEX_Vfmsub213ps_xmm_xmm_xmmm128","VEX_Vfmsub213ps_ymm_ymm_ymmm256","VEX_Vfmsub213sd_xmm_xmm_xmmm64","VEX_Vfmsub213ss_xmm_xmm_xmmm32","VEX_Vfmsub231pd_xmm_xmm_xmmm128","VEX_Vfmsub231pd_ymm_ymm_ymmm256","VEX_Vfmsub231ps_xmm_xmm_xmmm128","VEX_Vfmsub231ps_ymm_ymm_ymmm256","VEX_Vfmsub231sd_xmm_xmm_xmmm64","VEX_Vfmsub231ss_xmm_xmm_xmmm32","VEX_Vfmsubadd132pd_xmm_xmm_xmmm128","VEX_Vfmsubadd132pd_ymm_ymm_ymmm256","VEX_Vfmsubadd132ps_xmm_xmm_xmmm128","VEX_Vfmsubadd132ps_ymm_ymm_ymmm256","VEX_Vfmsubadd213pd_xmm_xmm_xmmm128","VEX_Vfmsubadd213pd_ymm_ymm_ymmm256","VEX_Vfmsubadd213ps_xmm_xmm_xmmm128","VEX_Vfmsubadd213ps_ymm_ymm_ymmm256","VEX_Vfmsubadd231pd_xmm_xmm_xmmm128","VEX_Vfmsubadd231pd_ymm_ymm_ymmm256","VEX_Vfmsubadd231ps_xmm_xmm_xmmm128","VEX_Vfmsubadd231ps_ymm_ymm_ymmm256","VEX_Vfmsubaddpd_xmm_xmm_xmm_xmmm128","VEX_Vfmsubaddpd_xmm_xmm_xmmm128_xmm","VEX_Vfmsubaddpd_ymm_ymm_ymm_ymmm256","VEX_Vfmsubaddpd_ymm_ymm_ymmm256_ymm","VEX_Vfmsubaddps_xmm_xmm_xmm_xmmm128","VEX_Vfmsubaddps_xmm_xmm_xmmm128_xmm","VEX_Vfmsubaddps_ymm_ymm_ymm_ymmm256","VEX_Vfmsubaddps_ymm_ymm_ymmm256_ymm","VEX_Vfmsubpd_xmm_xmm_xmm_xmmm128","VEX_Vfmsubpd_xmm_xmm_xmmm128_xmm","VEX_Vfmsubpd_ymm_ymm_ymm_ymmm256","VEX_Vfmsubpd_ymm_ymm_ymmm256_ymm","VEX_Vfmsubps_xmm_xmm_xmm_xmmm128","VEX_Vfmsubps_xmm_xmm_xmmm128_xmm","VEX_Vfmsubps_ymm_ymm_ymm_ymmm256","VEX_Vfmsubps_ymm_ymm_ymmm256_ymm","VEX_Vfmsubsd_xmm_xmm_xmm_xmmm64","VEX_Vfmsubsd_xmm_xmm_xmmm64_xmm","VEX_Vfmsubss_xmm_xmm_xmm_xmmm32","VEX_Vfmsubss_xmm_xmm_xmmm32_xmm","VEX_Vfnmadd132pd_xmm_xmm_xmmm128","VEX_Vfnmadd132pd_ymm_ymm_ymmm256","VEX_Vfnmadd132ps_xmm_xmm_xmmm128","VEX_Vfnmadd132ps_ymm_ymm_ymmm256","VEX_Vfnmadd132sd_xmm_xmm_xmmm64","VEX_Vfnmadd132ss_xmm_xmm_xmmm32","VEX_Vfnmadd213pd_xmm_xmm_xmmm128","VEX_Vfnmadd213pd_ymm_ymm_ymmm256","VEX_Vfnmadd213ps_xmm_xmm_xmmm128","VEX_Vfnmadd213ps_ymm_ymm_ymmm256","VEX_Vfnmadd213sd_xmm_xmm_xmmm64","VEX_Vfnmadd213ss_xmm_xmm_xmmm32","VEX_Vfnmadd231pd_xmm_xmm_xmmm128","VEX_Vfnmadd231pd_ymm_ymm_ymmm256","VEX_Vfnmadd231ps_xmm_xmm_xmmm128","VEX_Vfnmadd231ps_ymm_ymm_ymmm256","VEX_Vfnmadd231sd_xmm_xmm_xmmm64","VEX_Vfnmadd231ss_xmm_xmm_xmmm32","VEX_Vfnmaddpd_xmm_xmm_xmm_xmmm128","VEX_Vfnmaddpd_xmm_xmm_xmmm128_xmm","VEX_Vfnmaddpd_ymm_ymm_ymm_ymmm256","VEX_Vfnmaddpd_ymm_ymm_ymmm256_ymm","VEX_Vfnmaddps_xmm_xmm_xmm_xmmm128","VEX_Vfnmaddps_xmm_xmm_xmmm128_xmm","VEX_Vfnmaddps_ymm_ymm_ymm_ymmm256","VEX_Vfnmaddps_ymm_ymm_ymmm256_ymm","VEX_Vfnmaddsd_xmm_xmm_xmm_xmmm64","VEX_Vfnmaddsd_xmm_xmm_xmmm64_xmm","VEX_Vfnmaddss_xmm_xmm_xmm_xmmm32","VEX_Vfnmaddss_xmm_xmm_xmmm32_xmm","VEX_Vfnmsub132pd_xmm_xmm_xmmm128","VEX_Vfnmsub132pd_ymm_ymm_ymmm256","VEX_Vfnmsub132ps_xmm_xmm_xmmm128","VEX_Vfnmsub132ps_ymm_ymm_ymmm256","VEX_Vfnmsub132sd_xmm_xmm_xmmm64","VEX_Vfnmsub132ss_xmm_xmm_xmmm32","VEX_Vfnmsub213pd_xmm_xmm_xmmm128","VEX_Vfnmsub213pd_ymm_ymm_ymmm256","VEX_Vfnmsub213ps_xmm_xmm_xmmm128","VEX_Vfnmsub213ps_ymm_ymm_ymmm256","VEX_Vfnmsub213sd_xmm_xmm_xmmm64","VEX_Vfnmsub213ss_xmm_xmm_xmmm32","VEX_Vfnmsub231pd_xmm_xmm_xmmm128","VEX_Vfnmsub231pd_ymm_ymm_ymmm256","VEX_Vfnmsub231ps_xmm_xmm_xmmm128","VEX_Vfnmsub231ps_ymm_ymm_ymmm256","VEX_Vfnmsub231sd_xmm_xmm_xmmm64","VEX_Vfnmsub231ss_xmm_xmm_xmmm32","VEX_Vfnmsubpd_xmm_xmm_xmm_xmmm128","VEX_Vfnmsubpd_xmm_xmm_xmmm128_xmm","VEX_Vfnmsubpd_ymm_ymm_ymm_ymmm256","VEX_Vfnmsubpd_ymm_ymm_ymmm256_ymm","VEX_Vfnmsubps_xmm_xmm_xmm_xmmm128","VEX_Vfnmsubps_xmm_xmm_xmmm128_xmm","VEX_Vfnmsubps_ymm_ymm_ymm_ymmm256","VEX_Vfnmsubps_ymm_ymm_ymmm256_ymm","VEX_Vfnmsubsd_xmm_xmm_xmm_xmmm64","VEX_Vfnmsubsd_xmm_xmm_xmmm64_xmm","VEX_Vfnmsubss_xmm_xmm_xmm_xmmm32","VEX_Vfnmsubss_xmm_xmm_xmmm32_xmm","VEX_Vgatherdpd_xmm_vm32x_xmm","VEX_Vgatherdpd_ymm_vm32x_ymm","VEX_Vgatherdps_xmm_vm32x_xmm","VEX_Vgatherdps_ymm_vm32y_ymm","VEX_Vgatherqpd_xmm_vm64x_xmm","VEX_Vgatherqpd_ymm_vm64y_ymm","VEX_Vgatherqps_xmm_vm64x_xmm","VEX_Vgatherqps_xmm_vm64y_xmm","VEX_Vgf2p8affineinvqb_xmm_xmm_xmmm128_imm8","VEX_Vgf2p8affineinvqb_ymm_ymm_ymmm256_imm8","VEX_Vgf2p8affineqb_xmm_xmm_xmmm128_imm8","VEX_Vgf2p8affineqb_ymm_ymm_ymmm256_imm8","VEX_Vgf2p8mulb_xmm_xmm_xmmm128","VEX_Vgf2p8mulb_ymm_ymm_ymmm256","VEX_Vhaddpd_xmm_xmm_xmmm128","VEX_Vhaddpd_ymm_ymm_ymmm256","VEX_Vhaddps_xmm_xmm_xmmm128","VEX_Vhaddps_ymm_ymm_ymmm256","VEX_Vhsubpd_xmm_xmm_xmmm128","VEX_Vhsubpd_ymm_ymm_ymmm256","VEX_Vhsubps_xmm_xmm_xmmm128","VEX_Vhsubps_ymm_ymm_ymmm256","VEX_Vinsertf128_ymm_ymm_xmmm128_imm8","VEX_Vinserti128_ymm_ymm_xmmm128_imm8","VEX_Vinsertps_xmm_xmm_xmmm32_imm8","VEX_Vlddqu_xmm_m128","VEX_Vlddqu_ymm_m256","VEX_Vldmxcsr_m32","VEX_Vmaskmovdqu_rDI_xmm_xmm","VEX_Vmaskmovpd_m128_xmm_xmm","VEX_Vmaskmovpd_m256_ymm_ymm","VEX_Vmaskmovpd_xmm_xmm_m128","VEX_Vmaskmovpd_ymm_ymm_m256","VEX_Vmaskmovps_m128_xmm_xmm","VEX_Vmaskmovps_m256_ymm_ymm","VEX_Vmaskmovps_xmm_xmm_m128","VEX_Vmaskmovps_ymm_ymm_m256","VEX_Vmaxpd_xmm_xmm_xmmm128","VEX_Vmaxpd_ymm_ymm_ymmm256","VEX_Vmaxps_xmm_xmm_xmmm128","VEX_Vmaxps_ymm_ymm_ymmm256","VEX_Vmaxsd_xmm_xmm_xmmm64","VEX_Vmaxss_xmm_xmm_xmmm32","VEX_Vminpd_xmm_xmm_xmmm128","VEX_Vminpd_ymm_ymm_ymmm256","VEX_Vminps_xmm_xmm_xmmm128","VEX_Vminps_ymm_ymm_ymmm256","VEX_Vminsd_xmm_xmm_xmmm64","VEX_Vminss_xmm_xmm_xmmm32","VEX_Vmovapd_xmm_xmmm128","VEX_Vmovapd_xmmm128_xmm","VEX_Vmovapd_ymm_ymmm256","VEX_Vmovapd_ymmm256_ymm","VEX_Vmovaps_xmm_xmmm128","VEX_Vmovaps_xmmm128_xmm","VEX_Vmovaps_ymm_ymmm256","VEX_Vmovaps_ymmm256_ymm","VEX_Vmovd_rm32_xmm","VEX_Vmovd_xmm_rm32","VEX_Vmovddup_xmm_xmmm64","VEX_Vmovddup_ymm_ymmm256","VEX_Vmovdqa_xmm_xmmm128","VEX_Vmovdqa_xmmm128_xmm","VEX_Vmovdqa_ymm_ymmm256","VEX_Vmovdqa_ymmm256_ymm","VEX_Vmovdqu_xmm_xmmm128","VEX_Vmovdqu_xmmm128_xmm","VEX_Vmovdqu_ymm_ymmm256","VEX_Vmovdqu_ymmm256_ymm","VEX_Vmovhlps_xmm_xmm_xmm","VEX_Vmovhpd_m64_xmm","VEX_Vmovhpd_xmm_xmm_m64","VEX_Vmovhps_m64_xmm","VEX_Vmovhps_xmm_xmm_m64","VEX_Vmovlhps_xmm_xmm_xmm","VEX_Vmovlpd_m64_xmm","VEX_Vmovlpd_xmm_xmm_m64","VEX_Vmovlps_m64_xmm","VEX_Vmovlps_xmm_xmm_m64","VEX_Vmovmskpd_r32_xmm","VEX_Vmovmskpd_r32_ymm","VEX_Vmovmskpd_r64_xmm","VEX_Vmovmskpd_r64_ymm","VEX_Vmovmskps_r32_xmm","VEX_Vmovmskps_r32_ymm","VEX_Vmovmskps_r64_xmm","VEX_Vmovmskps_r64_ymm","VEX_Vmovntdq_m128_xmm","VEX_Vmovntdq_m256_ymm","VEX_Vmovntdqa_xmm_m128","VEX_Vmovntdqa_ymm_m256","VEX_Vmovntpd_m128_xmm","VEX_Vmovntpd_m256_ymm","VEX_Vmovntps_m128_xmm","VEX_Vmovntps_m256_ymm","VEX_Vmovq_rm64_xmm","VEX_Vmovq_xmm_rm64","VEX_Vmovq_xmm_xmmm64","VEX_Vmovq_xmmm64_xmm","VEX_Vmovsd_m64_xmm","VEX_Vmovsd_xmm_m64","VEX_Vmovsd_xmm_xmm_xmm","VEX_Vmovsd_xmm_xmm_xmm_0F11","VEX_Vmovshdup_xmm_xmmm128","VEX_Vmovshdup_ymm_ymmm256","VEX_Vmovsldup_xmm_xmmm128","VEX_Vmovsldup_ymm_ymmm256","VEX_Vmovss_m32_xmm","VEX_Vmovss_xmm_m32","VEX_Vmovss_xmm_xmm_xmm","VEX_Vmovss_xmm_xmm_xmm_0F11","VEX_Vmovupd_xmm_xmmm128","VEX_Vmovupd_xmmm128_xmm","VEX_Vmovupd_ymm_ymmm256","VEX_Vmovupd_ymmm256_ymm","VEX_Vmovups_xmm_xmmm128","VEX_Vmovups_xmmm128_xmm","VEX_Vmovups_ymm_ymmm256","VEX_Vmovups_ymmm256_ymm","VEX_Vmpsadbw_xmm_xmm_xmmm128_imm8","VEX_Vmpsadbw_ymm_ymm_ymmm256_imm8","VEX_Vmulpd_xmm_xmm_xmmm128","VEX_Vmulpd_ymm_ymm_ymmm256","VEX_Vmulps_xmm_xmm_xmmm128","VEX_Vmulps_ymm_ymm_ymmm256","VEX_Vmulsd_xmm_xmm_xmmm64","VEX_Vmulss_xmm_xmm_xmmm32","VEX_Vorpd_xmm_xmm_xmmm128","VEX_Vorpd_ymm_ymm_ymmm256","VEX_Vorps_xmm_xmm_xmmm128","VEX_Vorps_ymm_ymm_ymmm256","VEX_Vpabsb_xmm_xmmm128","VEX_Vpabsb_ymm_ymmm256","VEX_Vpabsd_xmm_xmmm128","VEX_Vpabsd_ymm_ymmm256","VEX_Vpabsw_xmm_xmmm128","VEX_Vpabsw_ymm_ymmm256","VEX_Vpackssdw_xmm_xmm_xmmm128","VEX_Vpackssdw_ymm_ymm_ymmm256","VEX_Vpacksswb_xmm_xmm_xmmm128","VEX_Vpacksswb_ymm_ymm_ymmm256","VEX_Vpackusdw_xmm_xmm_xmmm128","VEX_Vpackusdw_ymm_ymm_ymmm256","VEX_Vpackuswb_xmm_xmm_xmmm128","VEX_Vpackuswb_ymm_ymm_ymmm256","VEX_Vpaddb_xmm_xmm_xmmm128","VEX_Vpaddb_ymm_ymm_ymmm256","VEX_Vpaddd_xmm_xmm_xmmm128","VEX_Vpaddd_ymm_ymm_ymmm256","VEX_Vpaddq_xmm_xmm_xmmm128","VEX_Vpaddq_ymm_ymm_ymmm256","VEX_Vpaddsb_xmm_xmm_xmmm128","VEX_Vpaddsb_ymm_ymm_ymmm256","VEX_Vpaddsw_xmm_xmm_xmmm128","VEX_Vpaddsw_ymm_ymm_ymmm256","VEX_Vpaddusb_xmm_xmm_xmmm128","VEX_Vpaddusb_ymm_ymm_ymmm256","VEX_Vpaddusw_xmm_xmm_xmmm128","VEX_Vpaddusw_ymm_ymm_ymmm256","VEX_Vpaddw_xmm_xmm_xmmm128","VEX_Vpaddw_ymm_ymm_ymmm256","VEX_Vpalignr_xmm_xmm_xmmm128_imm8","VEX_Vpalignr_ymm_ymm_ymmm256_imm8","VEX_Vpand_xmm_xmm_xmmm128","VEX_Vpand_ymm_ymm_ymmm256","VEX_Vpandn_xmm_xmm_xmmm128","VEX_Vpandn_ymm_ymm_ymmm256","VEX_Vpavgb_xmm_xmm_xmmm128","VEX_Vpavgb_ymm_ymm_ymmm256","VEX_Vpavgw_xmm_xmm_xmmm128","VEX_Vpavgw_ymm_ymm_ymmm256","VEX_Vpblendd_xmm_xmm_xmmm128_imm8","VEX_Vpblendd_ymm_ymm_ymmm256_imm8","VEX_Vpblendvb_xmm_xmm_xmmm128_xmm","VEX_Vpblendvb_ymm_ymm_ymmm256_ymm","VEX_Vpblendw_xmm_xmm_xmmm128_imm8","VEX_Vpblendw_ymm_ymm_ymmm256_imm8","VEX_Vpbroadcastb_xmm_xmmm8","VEX_Vpbroadcastb_ymm_xmmm8","VEX_Vpbroadcastd_xmm_xmmm32","VEX_Vpbroadcastd_ymm_xmmm32","VEX_Vpbroadcastq_xmm_xmmm64","VEX_Vpbroadcastq_ymm_xmmm64","VEX_Vpbroadcastw_xmm_xmmm16","VEX_Vpbroadcastw_ymm_xmmm16","VEX_Vpclmulqdq_xmm_xmm_xmmm128_imm8","VEX_Vpclmulqdq_ymm_ymm_ymmm256_imm8","VEX_Vpcmpeqb_xmm_xmm_xmmm128","VEX_Vpcmpeqb_ymm_ymm_ymmm256","VEX_Vpcmpeqd_xmm_xmm_xmmm128","VEX_Vpcmpeqd_ymm_ymm_ymmm256","VEX_Vpcmpeqq_xmm_xmm_xmmm128","VEX_Vpcmpeqq_ymm_ymm_ymmm256","VEX_Vpcmpeqw_xmm_xmm_xmmm128","VEX_Vpcmpeqw_ymm_ymm_ymmm256","VEX_Vpcmpestri64_xmm_xmmm128_imm8","VEX_Vpcmpestri_xmm_xmmm128_imm8","VEX_Vpcmpestrm64_xmm_xmmm128_imm8","VEX_Vpcmpestrm_xmm_xmmm128_imm8","VEX_Vpcmpgtb_xmm_xmm_xmmm128","VEX_Vpcmpgtb_ymm_ymm_ymmm256","VEX_Vpcmpgtd_xmm_xmm_xmmm128","VEX_Vpcmpgtd_ymm_ymm_ymmm256","VEX_Vpcmpgtq_xmm_xmm_xmmm128","VEX_Vpcmpgtq_ymm_ymm_ymmm256","VEX_Vpcmpgtw_xmm_xmm_xmmm128","VEX_Vpcmpgtw_ymm_ymm_ymmm256","VEX_Vpcmpistri_xmm_xmmm128_imm8","VEX_Vpcmpistrm_xmm_xmmm128_imm8","VEX_Vpdpbssd_xmm_xmm_xmmm128","VEX_Vpdpbssd_ymm_ymm_ymmm256","VEX_Vpdpbssds_xmm_xmm_xmmm128","VEX_Vpdpbssds_ymm_ymm_ymmm256","VEX_Vpdpbsud_xmm_xmm_xmmm128","VEX_Vpdpbsud_ymm_ymm_ymmm256","VEX_Vpdpbsuds_xmm_xmm_xmmm128","VEX_Vpdpbsuds_ymm_ymm_ymmm256","VEX_Vpdpbusd_xmm_xmm_xmmm128","VEX_Vpdpbusd_ymm_ymm_ymmm256","VEX_Vpdpbusds_xmm_xmm_xmmm128","VEX_Vpdpbusds_ymm_ymm_ymmm256","VEX_Vpdpbuud_xmm_xmm_xmmm128","VEX_Vpdpbuud_ymm_ymm_ymmm256","VEX_Vpdpbuuds_xmm_xmm_xmmm128","VEX_Vpdpbuuds_ymm_ymm_ymmm256","VEX_Vpdpwssd_xmm_xmm_xmmm128","VEX_Vpdpwssd_ymm_ymm_ymmm256","VEX_Vpdpwssds_xmm_xmm_xmmm128","VEX_Vpdpwssds_ymm_ymm_ymmm256","VEX_Vperm2f128_ymm_ymm_ymmm256_imm8","VEX_Vperm2i128_ymm_ymm_ymmm256_imm8","VEX_Vpermd_ymm_ymm_ymmm256","VEX_Vpermil2pd_xmm_xmm_xmm_xmmm128_imm4","VEX_Vpermil2pd_xmm_xmm_xmmm128_xmm_imm4","VEX_Vpermil2pd_ymm_ymm_ymm_ymmm256_imm4","VEX_Vpermil2pd_ymm_ymm_ymmm256_ymm_imm4","VEX_Vpermil2ps_xmm_xmm_xmm_xmmm128_imm4","VEX_Vpermil2ps_xmm_xmm_xmmm128_xmm_imm4","VEX_Vpermil2ps_ymm_ymm_ymm_ymmm256_imm4","VEX_Vpermil2ps_ymm_ymm_ymmm256_ymm_imm4","VEX_Vpermilpd_xmm_xmm_xmmm128","VEX_Vpermilpd_xmm_xmmm128_imm8","VEX_Vpermilpd_ymm_ymm_ymmm256","VEX_Vpermilpd_ymm_ymmm256_imm8","VEX_Vpermilps_xmm_xmm_xmmm128","VEX_Vpermilps_xmm_xmmm128_imm8","VEX_Vpermilps_ymm_ymm_ymmm256","VEX_Vpermilps_ymm_ymmm256_imm8","VEX_Vpermpd_ymm_ymmm256_imm8","VEX_Vpermps_ymm_ymm_ymmm256","VEX_Vpermq_ymm_ymmm256_imm8","VEX_Vpextrb_r32m8_xmm_imm8","VEX_Vpextrb_r64m8_xmm_imm8","VEX_Vpextrd_rm32_xmm_imm8","VEX_Vpextrq_rm64_xmm_imm8","VEX_Vpextrw_r32_xmm_imm8","VEX_Vpextrw_r32m16_xmm_imm8","VEX_Vpextrw_r64_xmm_imm8","VEX_Vpextrw_r64m16_xmm_imm8","VEX_Vpgatherdd_xmm_vm32x_xmm","VEX_Vpgatherdd_ymm_vm32y_ymm","VEX_Vpgatherdq_xmm_vm32x_xmm","VEX_Vpgatherdq_ymm_vm32x_ymm","VEX_Vpgatherqd_xmm_vm64x_xmm","VEX_Vpgatherqd_xmm_vm64y_xmm","VEX_Vpgatherqq_xmm_vm64x_xmm","VEX_Vpgatherqq_ymm_vm64y_ymm","VEX_Vphaddd_xmm_xmm_xmmm128","VEX_Vphaddd_ymm_ymm_ymmm256","VEX_Vphaddsw_xmm_xmm_xmmm128","VEX_Vphaddsw_ymm_ymm_ymmm256","VEX_Vphaddw_xmm_xmm_xmmm128","VEX_Vphaddw_ymm_ymm_ymmm256","VEX_Vphminposuw_xmm_xmmm128","VEX_Vphsubd_xmm_xmm_xmmm128","VEX_Vphsubd_ymm_ymm_ymmm256","VEX_Vphsubsw_xmm_xmm_xmmm128","VEX_Vphsubsw_ymm_ymm_ymmm256","VEX_Vphsubw_xmm_xmm_xmmm128","VEX_Vphsubw_ymm_ymm_ymmm256","VEX_Vpinsrb_xmm_xmm_r32m8_imm8","VEX_Vpinsrb_xmm_xmm_r64m8_imm8","VEX_Vpinsrd_xmm_xmm_rm32_imm8","VEX_Vpinsrq_xmm_xmm_rm64_imm8","VEX_Vpinsrw_xmm_xmm_r32m16_imm8","VEX_Vpinsrw_xmm_xmm_r64m16_imm8","VEX_Vpmadd52huq_xmm_xmm_xmmm128","VEX_Vpmadd52huq_ymm_ymm_ymmm256","VEX_Vpmadd52luq_xmm_xmm_xmmm128","VEX_Vpmadd52luq_ymm_ymm_ymmm256","VEX_Vpmaddubsw_xmm_xmm_xmmm128","VEX_Vpmaddubsw_ymm_ymm_ymmm256","VEX_Vpmaddwd_xmm_xmm_xmmm128","VEX_Vpmaddwd_ymm_ymm_ymmm256","VEX_Vpmaskmovd_m128_xmm_xmm","VEX_Vpmaskmovd_m256_ymm_ymm","VEX_Vpmaskmovd_xmm_xmm_m128","VEX_Vpmaskmovd_ymm_ymm_m256","VEX_Vpmaskmovq_m128_xmm_xmm","VEX_Vpmaskmovq_m256_ymm_ymm","VEX_Vpmaskmovq_xmm_xmm_m128","VEX_Vpmaskmovq_ymm_ymm_m256","VEX_Vpmaxsb_xmm_xmm_xmmm128","VEX_Vpmaxsb_ymm_ymm_ymmm256","VEX_Vpmaxsd_xmm_xmm_xmmm128","VEX_Vpmaxsd_ymm_ymm_ymmm256","VEX_Vpmaxsw_xmm_xmm_xmmm128","VEX_Vpmaxsw_ymm_ymm_ymmm256","VEX_Vpmaxub_xmm_xmm_xmmm128","VEX_Vpmaxub_ymm_ymm_ymmm256","VEX_Vpmaxud_xmm_xmm_xmmm128","VEX_Vpmaxud_ymm_ymm_ymmm256","VEX_Vpmaxuw_xmm_xmm_xmmm128","VEX_Vpmaxuw_ymm_ymm_ymmm256","VEX_Vpminsb_xmm_xmm_xmmm128","VEX_Vpminsb_ymm_ymm_ymmm256","VEX_Vpminsd_xmm_xmm_xmmm128","VEX_Vpminsd_ymm_ymm_ymmm256","VEX_Vpminsw_xmm_xmm_xmmm128","VEX_Vpminsw_ymm_ymm_ymmm256","VEX_Vpminub_xmm_xmm_xmmm128","VEX_Vpminub_ymm_ymm_ymmm256","VEX_Vpminud_xmm_xmm_xmmm128","VEX_Vpminud_ymm_ymm_ymmm256","VEX_Vpminuw_xmm_xmm_xmmm128","VEX_Vpminuw_ymm_ymm_ymmm256","VEX_Vpmovmskb_r32_xmm","VEX_Vpmovmskb_r32_ymm","VEX_Vpmovmskb_r64_xmm","VEX_Vpmovmskb_r64_ymm","VEX_Vpmovsxbd_xmm_xmmm32","VEX_Vpmovsxbd_ymm_xmmm64","VEX_Vpmovsxbq_xmm_xmmm16","VEX_Vpmovsxbq_ymm_xmmm32","VEX_Vpmovsxbw_xmm_xmmm64","VEX_Vpmovsxbw_ymm_xmmm128","VEX_Vpmovsxdq_xmm_xmmm64","VEX_Vpmovsxdq_ymm_xmmm128","VEX_Vpmovsxwd_xmm_xmmm64","VEX_Vpmovsxwd_ymm_xmmm128","VEX_Vpmovsxwq_xmm_xmmm32","VEX_Vpmovsxwq_ymm_xmmm64","VEX_Vpmovzxbd_xmm_xmmm32","VEX_Vpmovzxbd_ymm_xmmm64","VEX_Vpmovzxbq_xmm_xmmm16","VEX_Vpmovzxbq_ymm_xmmm32","VEX_Vpmovzxbw_xmm_xmmm64","VEX_Vpmovzxbw_ymm_xmmm128","VEX_Vpmovzxdq_xmm_xmmm64","VEX_Vpmovzxdq_ymm_xmmm128","VEX_Vpmovzxwd_xmm_xmmm64","VEX_Vpmovzxwd_ymm_xmmm128","VEX_Vpmovzxwq_xmm_xmmm32","VEX_Vpmovzxwq_ymm_xmmm64","VEX_Vpmuldq_xmm_xmm_xmmm128","VEX_Vpmuldq_ymm_ymm_ymmm256","VEX_Vpmulhrsw_xmm_xmm_xmmm128","VEX_Vpmulhrsw_ymm_ymm_ymmm256","VEX_Vpmulhuw_xmm_xmm_xmmm128","VEX_Vpmulhuw_ymm_ymm_ymmm256","VEX_Vpmulhw_xmm_xmm_xmmm128","VEX_Vpmulhw_ymm_ymm_ymmm256","VEX_Vpmulld_xmm_xmm_xmmm128","VEX_Vpmulld_ymm_ymm_ymmm256","VEX_Vpmullw_xmm_xmm_xmmm128","VEX_Vpmullw_ymm_ymm_ymmm256","VEX_Vpmuludq_xmm_xmm_xmmm128","VEX_Vpmuludq_ymm_ymm_ymmm256","VEX_Vpor_xmm_xmm_xmmm128","VEX_Vpor_ymm_ymm_ymmm256","VEX_Vpsadbw_xmm_xmm_xmmm128","VEX_Vpsadbw_ymm_ymm_ymmm256","VEX_Vpshufb_xmm_xmm_xmmm128","VEX_Vpshufb_ymm_ymm_ymmm256","VEX_Vpshufd_xmm_xmmm128_imm8","VEX_Vpshufd_ymm_ymmm256_imm8","VEX_Vpshufhw_xmm_xmmm128_imm8","VEX_Vpshufhw_ymm_ymmm256_imm8","VEX_Vpshuflw_xmm_xmmm128_imm8","VEX_Vpshuflw_ymm_ymmm256_imm8","VEX_Vpsignb_xmm_xmm_xmmm128","VEX_Vpsignb_ymm_ymm_ymmm256","VEX_Vpsignd_xmm_xmm_xmmm128","VEX_Vpsignd_ymm_ymm_ymmm256","VEX_Vpsignw_xmm_xmm_xmmm128","VEX_Vpsignw_ymm_ymm_ymmm256","VEX_Vpslld_xmm_xmm_imm8","VEX_Vpslld_xmm_xmm_xmmm128","VEX_Vpslld_ymm_ymm_imm8","VEX_Vpslld_ymm_ymm_xmmm128","VEX_Vpslldq_xmm_xmm_imm8","VEX_Vpslldq_ymm_ymm_imm8","VEX_Vpsllq_xmm_xmm_imm8","VEX_Vpsllq_xmm_xmm_xmmm128","VEX_Vpsllq_ymm_ymm_imm8","VEX_Vpsllq_ymm_ymm_xmmm128","VEX_Vpsllvd_xmm_xmm_xmmm128","VEX_Vpsllvd_ymm_ymm_ymmm256","VEX_Vpsllvq_xmm_xmm_xmmm128","VEX_Vpsllvq_ymm_ymm_ymmm256","VEX_Vpsllw_xmm_xmm_imm8","VEX_Vpsllw_xmm_xmm_xmmm128","VEX_Vpsllw_ymm_ymm_imm8","VEX_Vpsllw_ymm_ymm_xmmm128","VEX_Vpsrad_xmm_xmm_imm8","VEX_Vpsrad_xmm_xmm_xmmm128","VEX_Vpsrad_ymm_ymm_imm8","VEX_Vpsrad_ymm_ymm_xmmm128","VEX_Vpsravd_xmm_xmm_xmmm128","VEX_Vpsravd_ymm_ymm_ymmm256","VEX_Vpsraw_xmm_xmm_imm8","VEX_Vpsraw_xmm_xmm_xmmm128","VEX_Vpsraw_ymm_ymm_imm8","VEX_Vpsraw_ymm_ymm_xmmm128","VEX_Vpsrld_xmm_xmm_imm8","VEX_Vpsrld_xmm_xmm_xmmm128","VEX_Vpsrld_ymm_ymm_imm8","VEX_Vpsrld_ymm_ymm_xmmm128","VEX_Vpsrldq_xmm_xmm_imm8","VEX_Vpsrldq_ymm_ymm_imm8","VEX_Vpsrlq_xmm_xmm_imm8","VEX_Vpsrlq_xmm_xmm_xmmm128","VEX_Vpsrlq_ymm_ymm_imm8","VEX_Vpsrlq_ymm_ymm_xmmm128","VEX_Vpsrlvd_xmm_xmm_xmmm128","VEX_Vpsrlvd_ymm_ymm_ymmm256","VEX_Vpsrlvq_xmm_xmm_xmmm128","VEX_Vpsrlvq_ymm_ymm_ymmm256","VEX_Vpsrlw_xmm_xmm_imm8","VEX_Vpsrlw_xmm_xmm_xmmm128","VEX_Vpsrlw_ymm_ymm_imm8","VEX_Vpsrlw_ymm_ymm_xmmm128","VEX_Vpsubb_xmm_xmm_xmmm128","VEX_Vpsubb_ymm_ymm_ymmm256","VEX_Vpsubd_xmm_xmm_xmmm128","VEX_Vpsubd_ymm_ymm_ymmm256","VEX_Vpsubq_xmm_xmm_xmmm128","VEX_Vpsubq_ymm_ymm_ymmm256","VEX_Vpsubsb_xmm_xmm_xmmm128","VEX_Vpsubsb_ymm_ymm_ymmm256","VEX_Vpsubsw_xmm_xmm_xmmm128","VEX_Vpsubsw_ymm_ymm_ymmm256","VEX_Vpsubusb_xmm_xmm_xmmm128","VEX_Vpsubusb_ymm_ymm_ymmm256","VEX_Vpsubusw_xmm_xmm_xmmm128","VEX_Vpsubusw_ymm_ymm_ymmm256","VEX_Vpsubw_xmm_xmm_xmmm128","VEX_Vpsubw_ymm_ymm_ymmm256","VEX_Vptest_xmm_xmmm128","VEX_Vptest_ymm_ymmm256","VEX_Vpunpckhbw_xmm_xmm_xmmm128","VEX_Vpunpckhbw_ymm_ymm_ymmm256","VEX_Vpunpckhdq_xmm_xmm_xmmm128","VEX_Vpunpckhdq_ymm_ymm_ymmm256","VEX_Vpunpckhqdq_xmm_xmm_xmmm128","VEX_Vpunpckhqdq_ymm_ymm_ymmm256","VEX_Vpunpckhwd_xmm_xmm_xmmm128","VEX_Vpunpckhwd_ymm_ymm_ymmm256","VEX_Vpunpcklbw_xmm_xmm_xmmm128","VEX_Vpunpcklbw_ymm_ymm_ymmm256","VEX_Vpunpckldq_xmm_xmm_xmmm128","VEX_Vpunpckldq_ymm_ymm_ymmm256","VEX_Vpunpcklqdq_xmm_xmm_xmmm128","VEX_Vpunpcklqdq_ymm_ymm_ymmm256","VEX_Vpunpcklwd_xmm_xmm_xmmm128","VEX_Vpunpcklwd_ymm_ymm_ymmm256","VEX_Vpxor_xmm_xmm_xmmm128","VEX_Vpxor_ymm_ymm_ymmm256","VEX_Vrcpps_xmm_xmmm128","VEX_Vrcpps_ymm_ymmm256","VEX_Vrcpss_xmm_xmm_xmmm32","VEX_Vroundpd_xmm_xmmm128_imm8","VEX_Vroundpd_ymm_ymmm256_imm8","VEX_Vroundps_xmm_xmmm128_imm8","VEX_Vroundps_ymm_ymmm256_imm8","VEX_Vroundsd_xmm_xmm_xmmm64_imm8","VEX_Vroundss_xmm_xmm_xmmm32_imm8","VEX_Vrsqrtps_xmm_xmmm128","VEX_Vrsqrtps_ymm_ymmm256","VEX_Vrsqrtss_xmm_xmm_xmmm32","VEX_Vshufpd_xmm_xmm_xmmm128_imm8","VEX_Vshufpd_ymm_ymm_ymmm256_imm8","VEX_Vshufps_xmm_xmm_xmmm128_imm8","VEX_Vshufps_ymm_ymm_ymmm256_imm8","VEX_Vsqrtpd_xmm_xmmm128","VEX_Vsqrtpd_ymm_ymmm256","VEX_Vsqrtps_xmm_xmmm128","VEX_Vsqrtps_ymm_ymmm256","VEX_Vsqrtsd_xmm_xmm_xmmm64","VEX_Vsqrtss_xmm_xmm_xmmm32","VEX_Vstmxcsr_m32","VEX_Vsubpd_xmm_xmm_xmmm128","VEX_Vsubpd_ymm_ymm_ymmm256","VEX_Vsubps_xmm_xmm_xmmm128","VEX_Vsubps_ymm_ymm_ymmm256","VEX_Vsubsd_xmm_xmm_xmmm64","VEX_Vsubss_xmm_xmm_xmmm32","VEX_Vtestpd_xmm_xmmm128","VEX_Vtestpd_ymm_ymmm256","VEX_Vtestps_xmm_xmmm128","VEX_Vtestps_ymm_ymmm256","VEX_Vucomisd_xmm_xmmm64","VEX_Vucomiss_xmm_xmmm32","VEX_Vunpckhpd_xmm_xmm_xmmm128","VEX_Vunpckhpd_ymm_ymm_ymmm256","VEX_Vunpckhps_xmm_xmm_xmmm128","VEX_Vunpckhps_ymm_ymm_ymmm256","VEX_Vunpcklpd_xmm_xmm_xmmm128","VEX_Vunpcklpd_ymm_ymm_ymmm256","VEX_Vunpcklps_xmm_xmm_xmmm128","VEX_Vunpcklps_ymm_ymm_ymmm256","VEX_Vxorpd_xmm_xmm_xmmm128","VEX_Vxorpd_ymm_ymm_ymmm256","VEX_Vxorps_xmm_xmm_xmmm128","VEX_Vxorps_ymm_ymm_ymmm256","VEX_Vzeroall","VEX_Vzeroupper","Vaddnpd","Vaddnps","Vaddpd","Vaddph","Vaddps","Vaddsd","Vaddsetsps","Vaddsh","Vaddss","Vaddsubpd","Vaddsubps","Vaesdec","Vaesdeclast","Vaesenc","Vaesenclast","Vaesimc","Vaeskeygenassist","Valignd","Valignq","Vandnpd","Vandnps","Vandpd","Vandps","Vbcstnebf162ps","Vbcstnesh2ps","Vblendmpd","Vblendmps","Vblendpd","Vblendps","Vblendvpd","Vblendvps","Vbroadcastf128","Vbroadcastf32x2","Vbroadcastf32x4","Vbroadcastf32x8","Vbroadcastf64x2","Vbroadcastf64x4","Vbroadcasti128","Vbroadcasti32x2","Vbroadcasti32x4","Vbroadcasti32x8","Vbroadcasti64x2","Vbroadcasti64x4","Vbroadcastsd","Vbroadcastss","Vcmppd","Vcmpph","Vcmpps","Vcmpsd","Vcmpsh","Vcmpss","Vcomisd","Vcomish","Vcomiss","Vcompresspd","Vcompressps","Vcvtdq2pd","Vcvtdq2ph","Vcvtdq2ps","Vcvtfxpntdq2ps","Vcvtfxpntpd2dq","Vcvtfxpntpd2udq","Vcvtfxpntps2dq","Vcvtfxpntps2udq","Vcvtfxpntudq2ps","Vcvtne2ps2bf16","Vcvtneebf162ps","Vcvtneeph2ps","Vcvtneobf162ps","Vcvtneoph2ps","Vcvtneps2bf16","Vcvtpd2dq","Vcvtpd2ph","Vcvtpd2ps","Vcvtpd2qq","Vcvtpd2udq","Vcvtpd2uqq","Vcvtph2dq","Vcvtph2pd","Vcvtph2ps","Vcvtph2psx","Vcvtph2qq","Vcvtph2udq","Vcvtph2uqq","Vcvtph2uw","Vcvtph2w","Vcvtps2dq","Vcvtps2pd","Vcvtps2ph","Vcvtps2phx","Vcvtps2qq","Vcvtps2udq","Vcvtps2uqq","Vcvtqq2pd","Vcvtqq2ph","Vcvtqq2ps","Vcvtsd2sh","Vcvtsd2si","Vcvtsd2ss","Vcvtsd2usi","Vcvtsh2sd","Vcvtsh2si","Vcvtsh2ss","Vcvtsh2usi","Vcvtsi2sd","Vcvtsi2sh","Vcvtsi2ss","Vcvtss2sd","Vcvtss2sh","Vcvtss2si","Vcvtss2usi","Vcvttpd2dq","Vcvttpd2qq","Vcvttpd2udq","Vcvttpd2uqq","Vcvttph2dq","Vcvttph2qq","Vcvttph2udq","Vcvttph2uqq","Vcvttph2uw","Vcvttph2w","Vcvttps2dq","Vcvttps2qq","Vcvttps2udq","Vcvttps2uqq","Vcvttsd2si","Vcvttsd2usi","Vcvttsh2si","Vcvttsh2usi","Vcvttss2si","Vcvttss2usi","Vcvtudq2pd","Vcvtudq2ph","Vcvtudq2ps","Vcvtuqq2pd","Vcvtuqq2ph","Vcvtuqq2ps","Vcvtusi2sd","Vcvtusi2sh","Vcvtusi2ss","Vcvtuw2ph","Vcvtw2ph","Vdbpsadbw","Vdivpd","Vdivph","Vdivps","Vdivsd","Vdivsh","Vdivss","Vdpbf16ps","Vdppd","Vdpps","Verr","Verr_r32m16","Verr_r64m16","Verr_rm16","Verw","Verw_r32m16","Verw_r64m16","Verw_rm16","Vexp223ps","Vexp2pd","Vexp2ps","Vexpandpd","Vexpandps","Vextractf128","Vextractf32x4","Vextractf32x8","Vextractf64x2","Vextractf64x4","Vextracti128","Vextracti32x4","Vextracti32x8","Vextracti64x2","Vextracti64x4","Vextractps","Vfcmaddcph","Vfcmaddcsh","Vfcmulcph","Vfcmulcsh","Vfixupimmpd","Vfixupimmps","Vfixupimmsd","Vfixupimmss","Vfixupnanpd","Vfixupnanps","Vfmadd132pd","Vfmadd132ph","Vfmadd132ps","Vfmadd132sd","Vfmadd132sh","Vfmadd132ss","Vfmadd213pd","Vfmadd213ph","Vfmadd213ps","Vfmadd213sd","Vfmadd213sh","Vfmadd213ss","Vfmadd231pd","Vfmadd231ph","Vfmadd231ps","Vfmadd231sd","Vfmadd231sh","Vfmadd231ss","Vfmadd233ps","Vfmaddcph","Vfmaddcsh","Vfmaddpd","Vfmaddps","Vfmaddsd","Vfmaddss","Vfmaddsub132pd","Vfmaddsub132ph","Vfmaddsub132ps","Vfmaddsub213pd","Vfmaddsub213ph","Vfmaddsub213ps","Vfmaddsub231pd","Vfmaddsub231ph","Vfmaddsub231ps","Vfmaddsubpd","Vfmaddsubps","Vfmsub132pd","Vfmsub132ph","Vfmsub132ps","Vfmsub132sd","Vfmsub132sh","Vfmsub132ss","Vfmsub213pd","Vfmsub213ph","Vfmsub213ps","Vfmsub213sd","Vfmsub213sh","Vfmsub213ss","Vfmsub231pd","Vfmsub231ph","Vfmsub231ps","Vfmsub231sd","Vfmsub231sh","Vfmsub231ss","Vfmsubadd132pd","Vfmsubadd132ph","Vfmsubadd132ps","Vfmsubadd213pd","Vfmsubadd213ph","Vfmsubadd213ps","Vfmsubadd231pd","Vfmsubadd231ph","Vfmsubadd231ps","Vfmsubaddpd","Vfmsubaddps","Vfmsubpd","Vfmsubps","Vfmsubsd","Vfmsubss","Vfmulcph","Vfmulcsh","Vfnmadd132pd","Vfnmadd132ph","Vfnmadd132ps","Vfnmadd132sd","Vfnmadd132sh","Vfnmadd132ss","Vfnmadd213pd","Vfnmadd213ph","Vfnmadd213ps","Vfnmadd213sd","Vfnmadd213sh","Vfnmadd213ss","Vfnmadd231pd","Vfnmadd231ph","Vfnmadd231ps","Vfnmadd231sd","Vfnmadd231sh","Vfnmadd231ss","Vfnmaddpd","Vfnmaddps","Vfnmaddsd","Vfnmaddss","Vfnmsub132pd","Vfnmsub132ph","Vfnmsub132ps","Vfnmsub132sd","Vfnmsub132sh","Vfnmsub132ss","Vfnmsub213pd","Vfnmsub213ph","Vfnmsub213ps","Vfnmsub213sd","Vfnmsub213sh","Vfnmsub213ss","Vfnmsub231pd","Vfnmsub231ph","Vfnmsub231ps","Vfnmsub231sd","Vfnmsub231sh","Vfnmsub231ss","Vfnmsubpd","Vfnmsubps","Vfnmsubsd","Vfnmsubss","Vfpclasspd","Vfpclassph","Vfpclassps","Vfpclasssd","Vfpclasssh","Vfpclassss","Vfrczpd","Vfrczps","Vfrczsd","Vfrczss","Vgatherdpd","Vgatherdps","Vgatherpf0dpd","Vgatherpf0dps","Vgatherpf0hintdpd","Vgatherpf0hintdps","Vgatherpf0qpd","Vgatherpf0qps","Vgatherpf1dpd","Vgatherpf1dps","Vgatherpf1qpd","Vgatherpf1qps","Vgatherqpd","Vgatherqps","Vgetexppd","Vgetexpph","Vgetexpps","Vgetexpsd","Vgetexpsh","Vgetexpss","Vgetmantpd","Vgetmantph","Vgetmantps","Vgetmantsd","Vgetmantsh","Vgetmantss","Vgf2p8affineinvqb","Vgf2p8affineqb","Vgf2p8mulb","Vgmaxabsps","Vgmaxpd","Vgmaxps","Vgminpd","Vgminps","Vhaddpd","Vhaddps","Vhsubpd","Vhsubps","Via_undoc_F30FA6F0_16","Via_undoc_F30FA6F0_32","Via_undoc_F30FA6F0_64","Via_undoc_F30FA6F8_16","Via_undoc_F30FA6F8_32","Via_undoc_F30FA6F8_64","Vinsertf128","Vinsertf32x4","Vinsertf32x8","Vinsertf64x2","Vinsertf64x4","Vinserti128","Vinserti32x4","Vinserti32x8","Vinserti64x2","Vinserti64x4","Vinsertps","Vlddqu","Vldmxcsr","Vloadunpackhd","Vloadunpackhpd","Vloadunpackhps","Vloadunpackhq","Vloadunpackld","Vloadunpacklpd","Vloadunpacklps","Vloadunpacklq","Vlog2ps","Vmaskmovdqu","Vmaskmovpd","Vmaskmovps","Vmaxpd","Vmaxph","Vmaxps","Vmaxsd","Vmaxsh","Vmaxss","Vmcall","Vmcall","Vmclear","Vmclear_m64","Vmfunc","Vmfunc","Vmgexit","Vmgexit","Vmgexit_F2","Vminpd","Vminph","Vminps","Vminsd","Vminsh","Vminss","Vmlaunch","Vmlaunch","Vmload","Vmloadd","Vmloadq","Vmloadw","Vmmcall","Vmmcall","Vmovapd","Vmovaps","Vmovd","Vmovddup","Vmovdqa","Vmovdqa32","Vmovdqa64","Vmovdqu","Vmovdqu16","Vmovdqu32","Vmovdqu64","Vmovdqu8","Vmovhlps","Vmovhpd","Vmovhps","Vmovlhps","Vmovlpd","Vmovlps","Vmovmskpd","Vmovmskps","Vmovnrapd","Vmovnraps","Vmovnrngoapd","Vmovnrngoaps","Vmovntdq","Vmovntdqa","Vmovntpd","Vmovntps","Vmovq","Vmovsd","Vmovsh","Vmovshdup","Vmovsldup","Vmovss","Vmovupd","Vmovups","Vmovw","Vmpsadbw","Vmptrld","Vmptrld_m64","Vmptrst","Vmptrst_m64","Vmread","Vmread_rm32_r32","Vmread_rm64_r64","Vmresume","Vmresume","Vmrun","Vmrund","Vmrunq","Vmrunw","Vmsave","Vmsaved","Vmsaveq","Vmsavew","Vmulpd","Vmulph","Vmulps","Vmulsd","Vmulsh","Vmulss","Vmwrite","Vmwrite_r32_rm32","Vmwrite_r64_rm64","Vmxoff","Vmxoff","Vmxon","Vmxon_m64","Vorpd","Vorps","Vp2intersectd","Vp2intersectq","Vp4dpwssd","Vp4dpwssds","Vpabsb","Vpabsd","Vpabsq","Vpabsw","Vpackssdw","Vpacksswb","Vpackstorehd","Vpackstorehpd","Vpackstorehps","Vpackstorehq","Vpackstoreld","Vpackstorelpd","Vpackstorelps","Vpackstorelq","Vpackusdw","Vpackuswb","Vpadcd","Vpaddb","Vpaddd","Vpaddq","Vpaddsb","Vpaddsetcd","Vpaddsetsd","Vpaddsw","Vpaddusb","Vpaddusw","Vpaddw","Vpalignr","Vpand","Vpandd","Vpandn","Vpandnd","Vpandnq","Vpandq","Vpavgb","Vpavgw","Vpblendd","Vpblendmb","Vpblendmd","Vpblendmq","Vpblendmw","Vpblendvb","Vpblendw","Vpbroadcastb","Vpbroadcastd","Vpbroadcastmb2q","Vpbroadcastmw2d","Vpbroadcastq","Vpbroadcastw","Vpclmulqdq","Vpcmov","Vpcmpb","Vpcmpd","Vpcmpeqb","Vpcmpeqd","Vpcmpeqq","Vpcmpeqw","Vpcmpestri","Vpcmpestri64","Vpcmpestrm","Vpcmpestrm64","Vpcmpgtb","Vpcmpgtd","Vpcmpgtq","Vpcmpgtw","Vpcmpistri","Vpcmpistrm","Vpcmpltd","Vpcmpq","Vpcmpub","Vpcmpud","Vpcmpuq","Vpcmpuw","Vpcmpw","Vpcomb","Vpcomd","Vpcompressb","Vpcompressd","Vpcompressq","Vpcompressw","Vpcomq","Vpcomub","Vpcomud","Vpcomuq","Vpcomuw","Vpcomw","Vpconflictd","Vpconflictq","Vpdpbssd","Vpdpbssds","Vpdpbsud","Vpdpbsuds","Vpdpbusd","Vpdpbusds","Vpdpbuud","Vpdpbuuds","Vpdpwssd","Vpdpwssds","Vperm2f128","Vperm2i128","Vpermb","Vpermd","Vpermf32x4","Vpermi2b","Vpermi2d","Vpermi2pd","Vpermi2ps","Vpermi2q","Vpermi2w","Vpermil2pd","Vpermil2ps","Vpermilpd","Vpermilps","Vpermpd","Vpermps","Vpermq","Vpermt2b","Vpermt2d","Vpermt2pd","Vpermt2ps","Vpermt2q","Vpermt2w","Vpermw","Vpexpandb","Vpexpandd","Vpexpandq","Vpexpandw","Vpextrb","Vpextrd","Vpextrq","Vpextrw","Vpgatherdd","Vpgatherdq","Vpgatherqd","Vpgatherqq","Vphaddbd","Vphaddbq","Vphaddbw","Vphaddd","Vphadddq","Vphaddsw","Vphaddubd","Vphaddubq","Vphaddubw","Vphaddudq","Vphadduwd","Vphadduwq","Vphaddw","Vphaddwd","Vphaddwq","Vphminposuw","Vphsubbw","Vphsubd","Vphsubdq","Vphsubsw","Vphsubw","Vphsubwd","Vpinsrb","Vpinsrd","Vpinsrq","Vpinsrw","Vplzcntd","Vplzcntq","Vpmacsdd","Vpmacsdqh","Vpmacsdql","Vpmacssdd","Vpmacssdqh","Vpmacssdql","Vpmacsswd","Vpmacssww","Vpmacswd","Vpmacsww","Vpmadcsswd","Vpmadcswd","Vpmadd231d","Vpmadd233d","Vpmadd52huq","Vpmadd52luq","Vpmaddubsw","Vpmaddwd","Vpmaskmovd","Vpmaskmovq","Vpmaxsb","Vpmaxsd","Vpmaxsq","Vpmaxsw","Vpmaxub","Vpmaxud","Vpmaxuq","Vpmaxuw","Vpminsb","Vpminsd","Vpminsq","Vpminsw","Vpminub","Vpminud","Vpminuq","Vpminuw","Vpmovb2m","Vpmovd2m","Vpmovdb","Vpmovdw","Vpmovm2b","Vpmovm2d","Vpmovm2q","Vpmovm2w","Vpmovmskb","Vpmovq2m","Vpmovqb","Vpmovqd","Vpmovqw","Vpmovsdb","Vpmovsdw","Vpmovsqb","Vpmovsqd","Vpmovsqw","Vpmovswb","Vpmovsxbd","Vpmovsxbq","Vpmovsxbw","Vpmovsxdq","Vpmovsxwd","Vpmovsxwq","Vpmovusdb","Vpmovusdw","Vpmovusqb","Vpmovusqd","Vpmovusqw","Vpmovuswb","Vpmovw2m","Vpmovwb","Vpmovzxbd","Vpmovzxbq","Vpmovzxbw","Vpmovzxdq","Vpmovzxwd","Vpmovzxwq","Vpmuldq","Vpmulhd","Vpmulhrsw","Vpmulhud","Vpmulhuw","Vpmulhw","Vpmulld","Vpmullq","Vpmullw","Vpmultishiftqb","Vpmuludq","Vpopcntb","Vpopcntd","Vpopcntq","Vpopcntw","Vpor","Vpord","Vporq","Vpperm","Vprefetch0","Vprefetch1","Vprefetch2","Vprefetche0","Vprefetche1","Vprefetche2","Vprefetchenta","Vprefetchnta","Vprold","Vprolq","Vprolvd","Vprolvq","Vprord","Vprorq","Vprorvd","Vprorvq","Vprotb","Vprotd","Vprotq","Vprotw","Vpsadbw","Vpsbbd","Vpsbbrd","Vpscatterdd","Vpscatterdq","Vpscatterqd","Vpscatterqq","Vpshab","Vpshad","Vpshaq","Vpshaw","Vpshlb","Vpshld","Vpshldd","Vpshldq","Vpshldvd","Vpshldvq","Vpshldvw","Vpshldw","Vpshlq","Vpshlw","Vpshrdd","Vpshrdq","Vpshrdvd","Vpshrdvq","Vpshrdvw","Vpshrdw","Vpshufb","Vpshufbitqmb","Vpshufd","Vpshufhw","Vpshuflw","Vpsignb","Vpsignd","Vpsignw","Vpslld","Vpslldq","Vpsllq","Vpsllvd","Vpsllvq","Vpsllvw","Vpsllw","Vpsrad","Vpsraq","Vpsravd","Vpsravq","Vpsravw","Vpsraw","Vpsrld","Vpsrldq","Vpsrlq","Vpsrlvd","Vpsrlvq","Vpsrlvw","Vpsrlw","Vpsubb","Vpsubd","Vpsubq","Vpsubrd","Vpsubrsetbd","Vpsubsb","Vpsubsetbd","Vpsubsw","Vpsubusb","Vpsubusw","Vpsubw","Vpternlogd","Vpternlogq","Vptest","Vptestmb","Vptestmd","Vptestmq","Vptestmw","Vptestnmb","Vptestnmd","Vptestnmq","Vptestnmw","Vpunpckhbw","Vpunpckhdq","Vpunpckhqdq","Vpunpckhwd","Vpunpcklbw","Vpunpckldq","Vpunpcklqdq","Vpunpcklwd","Vpxor","Vpxord","Vpxorq","Vrangepd","Vrangeps","Vrangesd","Vrangess","Vrcp14pd","Vrcp14ps","Vrcp14sd","Vrcp14ss","Vrcp23ps","Vrcp28pd","Vrcp28ps","Vrcp28sd","Vrcp28ss","Vrcpph","Vrcpps","Vrcpsh","Vrcpss","Vreducepd","Vreduceph","Vreduceps","Vreducesd","Vreducesh","Vreducess","Vrndfxpntpd","Vrndfxpntps","Vrndscalepd","Vrndscaleph","Vrndscaleps","Vrndscalesd","Vrndscalesh","Vrndscaless","Vroundpd","Vroundps","Vroundsd","Vroundss","Vrsqrt14pd","Vrsqrt14ps","Vrsqrt14sd","Vrsqrt14ss","Vrsqrt23ps","Vrsqrt28pd","Vrsqrt28ps","Vrsqrt28sd","Vrsqrt28ss","Vrsqrtph","Vrsqrtps","Vrsqrtsh","Vrsqrtss","Vscalefpd","Vscalefph","Vscalefps","Vscalefsd","Vscalefsh","Vscalefss","Vscaleps","Vscatterdpd","Vscatterdps","Vscatterpf0dpd","Vscatterpf0dps","Vscatterpf0hintdpd","Vscatterpf0hintdps","Vscatterpf0qpd","Vscatterpf0qps","Vscatterpf1dpd","Vscatterpf1dps","Vscatterpf1qpd","Vscatterpf1qps","Vscatterqpd","Vscatterqps","Vshuff32x4","Vshuff64x2","Vshufi32x4","Vshufi64x2","Vshufpd","Vshufps","Vsqrtpd","Vsqrtph","Vsqrtps","Vsqrtsd","Vsqrtsh","Vsqrtss","Vstmxcsr","Vsubpd","Vsubph","Vsubps","Vsubrpd","Vsubrps","Vsubsd","Vsubsh","Vsubss","Vtestpd","Vtestps","Vucomisd","Vucomish","Vucomiss","Vunpckhpd","Vunpckhps","Vunpcklpd","Vunpcklps","Vxorpd","Vxorps","Vzeroall","Vzeroupper","Wait","Wait","Wbinvd","Wbinvd","Wbnoinvd","Wbnoinvd","WordOffset","Wrfsbase","Wrfsbase_r32","Wrfsbase_r64","Wrgsbase","Wrgsbase_r32","Wrgsbase_r64","Wrmsr","Wrmsr","Wrmsrlist","Wrmsrlist","Wrmsrns","Wrmsrns","Wrpkru","Wrpkru","Wrshr","Wrshr_rm32","Wrssd","Wrssd_m32_r32","Wrssq","Wrssq_m64_r64","Wrudbg","Wrudbg","Wrussd","Wrussd_m32_r32","Wrussq","Wrussq_m64_r64","XBTS","XMM0","XMM1","XMM10","XMM11","XMM12","XMM13","XMM14","XMM15","XMM16","XMM17","XMM18","XMM19","XMM2","XMM20","XMM21","XMM22","XMM23","XMM24","XMM25","XMM26","XMM27","XMM28","XMM29","XMM3","XMM30","XMM31","XMM4","XMM5","XMM6","XMM7","XMM8","XMM9","XOP","XOP_Bextr_r32_rm32_imm32","XOP_Bextr_r64_rm64_imm32","XOP_Blcfill_r32_rm32","XOP_Blcfill_r64_rm64","XOP_Blci_r32_rm32","XOP_Blci_r64_rm64","XOP_Blcic_r32_rm32","XOP_Blcic_r64_rm64","XOP_Blcmsk_r32_rm32","XOP_Blcmsk_r64_rm64","XOP_Blcs_r32_rm32","XOP_Blcs_r64_rm64","XOP_Blsfill_r32_rm32","XOP_Blsfill_r64_rm64","XOP_Blsic_r32_rm32","XOP_Blsic_r64_rm64","XOP_Llwpcb_r32","XOP_Llwpcb_r64","XOP_Lwpins_r32_rm32_imm32","XOP_Lwpins_r64_rm32_imm32","XOP_Lwpval_r32_rm32_imm32","XOP_Lwpval_r64_rm32_imm32","XOP_Slwpcb_r32","XOP_Slwpcb_r64","XOP_T1mskc_r32_rm32","XOP_T1mskc_r64_rm64","XOP_Tzmsk_r32_rm32","XOP_Tzmsk_r64_rm64","XOP_Vfrczpd_xmm_xmmm128","XOP_Vfrczpd_ymm_ymmm256","XOP_Vfrczps_xmm_xmmm128","XOP_Vfrczps_ymm_ymmm256","XOP_Vfrczsd_xmm_xmmm64","XOP_Vfrczss_xmm_xmmm32","XOP_Vpcmov_xmm_xmm_xmm_xmmm128","XOP_Vpcmov_xmm_xmm_xmmm128_xmm","XOP_Vpcmov_ymm_ymm_ymm_ymmm256","XOP_Vpcmov_ymm_ymm_ymmm256_ymm","XOP_Vpcomb_xmm_xmm_xmmm128_imm8","XOP_Vpcomd_xmm_xmm_xmmm128_imm8","XOP_Vpcomq_xmm_xmm_xmmm128_imm8","XOP_Vpcomub_xmm_xmm_xmmm128_imm8","XOP_Vpcomud_xmm_xmm_xmmm128_imm8","XOP_Vpcomuq_xmm_xmm_xmmm128_imm8","XOP_Vpcomuw_xmm_xmm_xmmm128_imm8","XOP_Vpcomw_xmm_xmm_xmmm128_imm8","XOP_Vphaddbd_xmm_xmmm128","XOP_Vphaddbq_xmm_xmmm128","XOP_Vphaddbw_xmm_xmmm128","XOP_Vphadddq_xmm_xmmm128","XOP_Vphaddubd_xmm_xmmm128","XOP_Vphaddubq_xmm_xmmm128","XOP_Vphaddubw_xmm_xmmm128","XOP_Vphaddudq_xmm_xmmm128","XOP_Vphadduwd_xmm_xmmm128","XOP_Vphadduwq_xmm_xmmm128","XOP_Vphaddwd_xmm_xmmm128","XOP_Vphaddwq_xmm_xmmm128","XOP_Vphsubbw_xmm_xmmm128","XOP_Vphsubdq_xmm_xmmm128","XOP_Vphsubwd_xmm_xmmm128","XOP_Vpmacsdd_xmm_xmm_xmmm128_xmm","XOP_Vpmacsdqh_xmm_xmm_xmmm128_xmm","XOP_Vpmacsdql_xmm_xmm_xmmm128_xmm","XOP_Vpmacssdd_xmm_xmm_xmmm128_xmm","XOP_Vpmacssdqh_xmm_xmm_xmmm128_xmm","XOP_Vpmacssdql_xmm_xmm_xmmm128_xmm","XOP_Vpmacsswd_xmm_xmm_xmmm128_xmm","XOP_Vpmacssww_xmm_xmm_xmmm128_xmm","XOP_Vpmacswd_xmm_xmm_xmmm128_xmm","XOP_Vpmacsww_xmm_xmm_xmmm128_xmm","XOP_Vpmadcsswd_xmm_xmm_xmmm128_xmm","XOP_Vpmadcswd_xmm_xmm_xmmm128_xmm","XOP_Vpperm_xmm_xmm_xmm_xmmm128","XOP_Vpperm_xmm_xmm_xmmm128_xmm","XOP_Vprotb_xmm_xmm_xmmm128","XOP_Vprotb_xmm_xmmm128_imm8","XOP_Vprotb_xmm_xmmm128_xmm","XOP_Vprotd_xmm_xmm_xmmm128","XOP_Vprotd_xmm_xmmm128_imm8","XOP_Vprotd_xmm_xmmm128_xmm","XOP_Vprotq_xmm_xmm_xmmm128","XOP_Vprotq_xmm_xmmm128_imm8","XOP_Vprotq_xmm_xmmm128_xmm","XOP_Vprotw_xmm_xmm_xmmm128","XOP_Vprotw_xmm_xmmm128_imm8","XOP_Vprotw_xmm_xmmm128_xmm","XOP_Vpshab_xmm_xmm_xmmm128","XOP_Vpshab_xmm_xmmm128_xmm","XOP_Vpshad_xmm_xmm_xmmm128","XOP_Vpshad_xmm_xmmm128_xmm","XOP_Vpshaq_xmm_xmm_xmmm128","XOP_Vpshaq_xmm_xmmm128_xmm","XOP_Vpshaw_xmm_xmm_xmmm128","XOP_Vpshaw_xmm_xmmm128_xmm","XOP_Vpshlb_xmm_xmm_xmmm128","XOP_Vpshlb_xmm_xmmm128_xmm","XOP_Vpshld_xmm_xmm_xmmm128","XOP_Vpshld_xmm_xmmm128_xmm","XOP_Vpshlq_xmm_xmm_xmmm128","XOP_Vpshlq_xmm_xmmm128_xmm","XOP_Vpshlw_xmm_xmm_xmmm128","XOP_Vpshlw_xmm_xmmm128_xmm","Xabort","Xabort_imm8","Xacquire","Xadd","Xadd_rm16_r16","Xadd_rm32_r32","Xadd_rm64_r64","Xadd_rm8_r8","Xbegin","Xbegin_rel16","Xbegin_rel32","Xbts","Xbts_r16_rm16","Xbts_r32_rm32","Xchg","Xchg_r16_AX","Xchg_r32_EAX","Xchg_r64_RAX","Xchg_rm16_r16","Xchg_rm32_r32","Xchg_rm64_r64","Xchg_rm8_r8","Xcryptcbc","Xcryptcbc_16","Xcryptcbc_32","Xcryptcbc_64","Xcryptcfb","Xcryptcfb_16","Xcryptcfb_32","Xcryptcfb_64","Xcryptctr","Xcryptctr_16","Xcryptctr_32","Xcryptctr_64","Xcryptecb","Xcryptecb_16","Xcryptecb_32","Xcryptecb_64","Xcryptofb","Xcryptofb_16","Xcryptofb_32","Xcryptofb_64","Xend","Xend","Xgetbv","Xgetbv","Xlat_m8","Xlatb","Xor","Xor_AL_imm8","Xor_AX_imm16","Xor_EAX_imm32","Xor_RAX_imm32","Xor_r16_rm16","Xor_r32_rm32","Xor_r64_rm64","Xor_r8_rm8","Xor_rm16_imm16","Xor_rm16_imm8","Xor_rm16_r16","Xor_rm32_imm32","Xor_rm32_imm8","Xor_rm32_r32","Xor_rm64_imm32","Xor_rm64_imm8","Xor_rm64_r64","Xor_rm8_imm8","Xor_rm8_imm8_82","Xor_rm8_r8","Xorpd","Xorpd_xmm_xmmm128","Xorps","Xorps_xmm_xmmm128","Xrelease","Xresldtrk","Xresldtrk","Xrstor","Xrstor64","Xrstor64_mem","Xrstor_mem","Xrstors","Xrstors64","Xrstors64_mem","Xrstors_mem","Xsave","Xsave","Xsave64","Xsave64","Xsave64_mem","Xsave_mem","Xsavec","Xsavec64","Xsavec64_mem","Xsavec_mem","Xsaveopt","Xsaveopt64","Xsaveopt64_mem","Xsaveopt_mem","Xsaves","Xsaves64","Xsaves64_mem","Xsaves_mem","Xsetbv","Xsetbv","Xsha1","Xsha1_16","Xsha1_32","Xsha1_64","Xsha256","Xsha256_16","Xsha256_32","Xsha256_64","Xsha512","Xsha512_16","Xsha512_32","Xsha512_64","Xsha512_alt","Xsha512_alt_16","Xsha512_alt_32","Xsha512_alt_64","Xstore","Xstore_16","Xstore_32","Xstore_64","Xstore_alt","Xstore_alt_16","Xstore_alt_32","Xstore_alt_64","Xsusldtrk","Xsusldtrk","Xtest","Xtest","YMM0","YMM1","YMM10","YMM11","YMM12","YMM13","YMM14","YMM15","YMM16","YMM17","YMM18","YMM19","YMM2","YMM20","YMM21","YMM22","YMM23","YMM24","YMM25","YMM26","YMM27","YMM28","YMM29","YMM3","YMM30","YMM31","YMM4","YMM5","YMM6","YMM7","YMM8","YMM9","ZMM0","ZMM1","ZMM10","ZMM11","ZMM12","ZMM13","ZMM14","ZMM15","ZMM16","ZMM17","ZMM18","ZMM19","ZMM2","ZMM20","ZMM21","ZMM22","ZMM23","ZMM24","ZMM25","ZMM26","ZMM27","ZMM28","ZMM29","ZMM3","ZMM30","ZMM31","ZMM4","ZMM5","ZMM6","ZMM7","ZMM8","ZMM9","Zero_bytes","Zero_bytes","ZeroingMasking","a","add","add","add_assign","add_assign","add_leading_zero_to_hex_numbers","add_leading_zero_to_hex_numbers","address","ae","always_show_scale","always_show_segment_register","b","be","binary_digit_group_size","binary_prefix","binary_suffix","bitness","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch_leading_zeros","branch_size","c","can_decode","cc_a","cc_ae","cc_b","cc_be","cc_e","cc_g","cc_ge","cc_l","cc_le","cc_ne","cc_np","cc_p","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","code","code_size","color","decimal_digit_group_size","decimal_prefix","decimal_suffix","declare_data_len","decode","decode_out","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","digit_group_size","digit_separator","digit_separator","displacement_leading_zeros","displacement_leading_zeros","displacement_offset","displacement_size","e","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_all_bits","far_branch16","far_branch32","far_branch_selector","first_operand_char_index","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","format_all_operands","format_all_operands","format_i16","format_i16","format_i16_options","format_i16_options","format_i32","format_i32","format_i32_options","format_i32_options","format_i64","format_i64","format_i64_options","format_i64_options","format_i8","format_i8","format_i8_options","format_i8_options","format_mnemonic","format_mnemonic","format_mnemonic_options","format_mnemonic_options","format_operand","format_operand","format_operand_separator","format_operand_separator","format_register","format_register","format_u16","format_u16","format_u16_options","format_u16_options","format_u32","format_u32","format_u32_options","format_u32_options","format_u64","format_u64","format_u64_options","format_u64_options","format_u8","format_u8","format_u8_options","format_u8_options","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","g","gas_naked_registers","gas_show_mnemonic_size_suffix","gas_space_after_memory_operand_comma","ge","get_constant_offsets","get_declare_byte_value","get_declare_dword_value","get_declare_qword_value","get_declare_word_value","get_formatter_operand","get_formatter_operand","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_instruction_operand","get_instruction_operand","has_displacement","has_immediate","has_immediate2","has_lock_prefix","has_op_mask","has_rep_prefix","has_repe_prefix","has_repne_prefix","has_segment_prefix","has_xacquire_prefix","has_xrelease_prefix","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hex_digit_group_size","hex_prefix","hex_suffix","immediate","immediate16","immediate32","immediate32to64","immediate64","immediate8","immediate8_2nd","immediate8to16","immediate8to32","immediate8to64","immediate_offset","immediate_offset2","immediate_size","immediate_size2","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","ip","ip","ip16","ip32","ip_rel_memory_address","is_broadcast","is_invalid","is_ip_rel_memory_operand","is_vsib","is_vsib32","is_vsib64","iter","l","last_error","le","leading_zeros","leading_zeros","len","masm_add_ds_prefix32","masm_displ_in_brackets","masm_symbol_displ_in_brackets","max_position","memory_base","memory_displ_size","memory_displacement32","memory_displacement64","memory_index","memory_index_scale","memory_segment","memory_size","memory_size_options","memory_size_options","merging_masking","mnemonic","mnemonic","na","nae","nasm_show_sign_extended_immediate_size","nb","nbe","nc","ne","near_branch16","near_branch32","near_branch64","near_branch_target","new","new","new","new","new","new","new","next_ip","next_ip16","next_ip32","ng","nge","nl","nle","np","number_base","number_base","nz","octal_digit_group_size","octal_prefix","octal_suffix","op0_kind","op0_register","op1_kind","op1_register","op2_kind","op2_register","op3_kind","op3_register","op4_kind","op4_register","op_count","op_kind","op_kinds","op_mask","op_register","operand_count","operand_count","operand_options","options","options","options_mut","options_mut","p","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pe","po","position","prefer_st0","prefix","rip_relative_addresses","rip_relative_addresses","rounding_control","scale_before_index","segment_prefix","set_add_leading_zero_to_hex_numbers","set_always_show_scale","set_always_show_segment_register","set_binary_digit_group_size","set_binary_prefix","set_binary_prefix_string","set_binary_suffix","set_binary_suffix_string","set_branch_leading_zeros","set_branch_size","set_cc_a","set_cc_ae","set_cc_b","set_cc_be","set_cc_e","set_cc_g","set_cc_ge","set_cc_l","set_cc_le","set_cc_ne","set_cc_np","set_cc_p","set_code","set_code_size","set_decimal_digit_group_size","set_decimal_prefix","set_decimal_prefix_string","set_decimal_suffix","set_decimal_suffix_string","set_declare_byte_value","set_declare_byte_value_i8","set_declare_data_len","set_declare_dword_value","set_declare_dword_value_i32","set_declare_qword_value","set_declare_qword_value_i64","set_declare_word_value","set_declare_word_value_i16","set_digit_separator","set_digit_separator_string","set_displacement_leading_zeros","set_far_branch16","set_far_branch32","set_far_branch_selector","set_first_operand_char_index","set_gas_naked_registers","set_gas_show_mnemonic_size_suffix","set_gas_space_after_memory_operand_comma","set_has_lock_prefix","set_has_rep_prefix","set_has_repe_prefix","set_has_repne_prefix","set_has_xacquire_prefix","set_has_xrelease_prefix","set_hex_digit_group_size","set_hex_prefix","set_hex_prefix_string","set_hex_suffix","set_hex_suffix_string","set_immediate16","set_immediate32","set_immediate32to64","set_immediate64","set_immediate8","set_immediate8_2nd","set_immediate8to16","set_immediate8to32","set_immediate8to64","set_immediate_i32","set_immediate_i64","set_immediate_u32","set_immediate_u64","set_ip","set_ip","set_ip16","set_ip32","set_is_broadcast","set_leading_zeros","set_len","set_masm_add_ds_prefix32","set_masm_displ_in_brackets","set_masm_symbol_displ_in_brackets","set_memory_base","set_memory_displ_size","set_memory_displacement32","set_memory_displacement64","set_memory_index","set_memory_index_scale","set_memory_size_options","set_memory_size_options","set_merging_masking","set_nasm_show_sign_extended_immediate_size","set_near_branch16","set_near_branch32","set_near_branch64","set_next_ip","set_next_ip16","set_next_ip32","set_number_base","set_octal_digit_group_size","set_octal_prefix","set_octal_prefix_string","set_octal_suffix","set_octal_suffix_string","set_op0_kind","set_op0_register","set_op1_kind","set_op1_register","set_op2_kind","set_op2_register","set_op3_kind","set_op3_register","set_op4_kind","set_op4_register","set_op_kind","set_op_mask","set_op_register","set_position","set_prefer_st0","set_rip_relative_addresses","set_rip_relative_addresses","set_rounding_control","set_scale_before_index","set_segment_prefix","set_show_branch_size","set_show_symbol_address","set_show_useless_prefixes","set_show_zero_displacements","set_signed_immediate_operands","set_signed_memory_displacements","set_small_hex_numbers_in_decimal","set_space_after_memory_bracket","set_space_after_operand_separator","set_space_between_memory_add_operators","set_space_between_memory_mul_operators","set_suppress_all_exceptions","set_tab_size","set_uppercase_all","set_uppercase_decorators","set_uppercase_hex","set_uppercase_keywords","set_uppercase_mnemonics","set_uppercase_prefixes","set_uppercase_registers","set_use_pseudo_ops","set_zeroing_masking","show_branch_size","show_symbol_address","show_useless_prefixes","show_zero_displacements","signed_immediate_operands","signed_memory_displacements","signed_number","small_hex_numbers_in_decimal","small_hex_numbers_in_decimal","space_after_memory_bracket","space_after_operand_separator","space_between_memory_add_operators","space_between_memory_mul_operators","sub","sub","sub_assign","sub_assign","suffix","suppress_all_exceptions","symbol","symbol_size","tab_size","text","text","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_set_declare_byte_value_i8","try_with_ip","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uppercase_all","uppercase_decorators","uppercase_hex","uppercase_hex","uppercase_keywords","uppercase_mnemonics","uppercase_prefixes","uppercase_registers","use_pseudo_ops","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","values","virtual_address","vsib","with_branch","with_displacement","with_immediate","with_intel","with_ip","with_options","with_str","with_str_kind","with_str_kind_flags","with_str_size","with_string","with_string","with_string","with_string_kind","with_string_kind_flags","with_string_size","with_text","with_text","with_text_flags","with_text_flags_size","with_text_size","with_vec","write","write_decorator","write_decorator","write_mnemonic","write_mnemonic","write_number","write_number","write_prefix","write_prefix","write_register","write_register","write_symbol","write_symbol","z","zeroing_masking"],"q":["iced_xd":["","","Decode Centaur <code>ALTINST</code>","AMD decoder: allow 16-bit branch/ret instructions in …","","<code>AAA</code>","","","<code>AAD imm8</code>","","<code>AADD m32, r32</code>","<code>AADD m64, r64</code>","","<code>AAM imm8</code>","","<code>AAND m32, r32</code>","<code>AAND m64, r64</code>","<code>AAS</code>","","","<code>ADC AL, imm8</code>","<code>ADC AX, imm16</code>","<code>ADC EAX, imm32</code>","<code>ADC RAX, imm32</code>","<code>ADC r16, r/m16</code>","<code>ADC r32, r/m32</code>","<code>ADC r64, r/m64</code>","<code>ADC r8, r/m8</code>","<code>ADC r/m16, imm16</code>","<code>ADC r/m16, imm8</code>","<code>ADC r/m16, r16</code>","<code>ADC r/m32, imm32</code>","<code>ADC r/m32, imm8</code>","<code>ADC r/m32, r32</code>","<code>ADC r/m64, imm32</code>","<code>ADC r/m64, imm8</code>","<code>ADC r/m64, r64</code>","<code>ADC r/m8, imm8</code>","<code>ADC r/m8, imm8</code>","<code>ADC r/m8, r8</code>","","<code>ADCX r32, r/m32</code>","<code>ADCX r64, r/m64</code>","","<code>ADD AL, imm8</code>","<code>ADD AX, imm16</code>","<code>ADD EAX, imm32</code>","<code>ADD RAX, imm32</code>","<code>ADD r16, r/m16</code>","<code>ADD r32, r/m32</code>","<code>ADD r64, r/m64</code>","<code>ADD r8, r/m8</code>","<code>ADD r/m16, imm16</code>","<code>ADD r/m16, imm8</code>","<code>ADD r/m16, r16</code>","<code>ADD r/m32, imm32</code>","<code>ADD r/m32, imm8</code>","<code>ADD r/m32, r32</code>","<code>ADD r/m64, imm32</code>","<code>ADD r/m64, imm8</code>","<code>ADD r/m64, r64</code>","<code>ADD r/m8, imm8</code>","<code>ADD r/m8, imm8</code>","<code>ADD r/m8, r8</code>","","<code>ADDPD xmm1, xmm2/m128</code>","","<code>ADDPS xmm1, xmm2/m128</code>","","","<code>ADDSD xmm1, xmm2/m64</code>","","<code>ADDSS xmm1, xmm2/m32</code>","","<code>ADDSUBPD xmm1, xmm2/m128</code>","","<code>ADDSUBPS xmm1, xmm2/m128</code>","","<code>ADOX r32, r/m32</code>","<code>ADOX r64, r/m64</code>","","","<code>AESDEC128KL xmm, m384</code>","","<code>AESDEC256KL xmm, m512</code>","<code>AESDEC xmm1, xmm2/m128</code>","","<code>AESDECLAST xmm1, xmm2/m128</code>","","<code>AESDECWIDE128KL m384, &lt;XMM0-7&gt;</code>","","<code>AESDECWIDE256KL m512, &lt;XMM0-7&gt;</code>","","","<code>AESENC128KL xmm, m384</code>","","<code>AESENC256KL xmm, m512</code>","<code>AESENC xmm1, xmm2/m128</code>","","<code>AESENCLAST xmm1, xmm2/m128</code>","","<code>AESENCWIDE128KL m384, &lt;XMM0-7&gt;</code>","","<code>AESENCWIDE256KL m512, &lt;XMM0-7&gt;</code>","","<code>AESIMC xmm1, xmm2/m128</code>","","<code>AESKEYGENASSIST xmm1, xmm2/m128, imm8</code>","<code>ALTINST</code>","","Always show the memory size, even if the assembler doesn’…","","<code>AND AL, imm8</code>","<code>AND AX, imm16</code>","<code>AND EAX, imm32</code>","<code>AND RAX, imm32</code>","<code>AND r16, r/m16</code>","<code>AND r32, r/m32</code>","<code>AND r64, r/m64</code>","<code>AND r8, r/m8</code>","<code>AND r/m16, imm16</code>","<code>AND r/m16, imm8</code>","<code>AND r/m16, r16</code>","<code>AND r/m32, imm32</code>","<code>AND r/m32, imm8</code>","<code>AND r/m32, r32</code>","<code>AND r/m64, imm32</code>","<code>AND r/m64, imm8</code>","<code>AND r/m64, r64</code>","<code>AND r/m8, imm8</code>","<code>AND r/m8, imm8</code>","<code>AND r/m8, r8</code>","","","<code>ANDNPD xmm1, xmm2/m128</code>","","<code>ANDNPS xmm1, xmm2/m128</code>","","<code>ANDPD xmm1, xmm2/m128</code>","","<code>ANDPS xmm1, xmm2/m128</code>","","<code>AOR m32, r32</code>","<code>AOR m64, r64</code>","","<code>ARPL r32/m16, r32</code>","<code>ARPL r/m16, r16</code>","","<code>AXOR m32, r32</code>","<code>AXOR m64, r64</code>","Memory location contains a <code>bfloat16</code>","","","","","","","","","","<code>BB0_RESET</code>","","<code>BB1_RESET</code>","","Memory location contains a 10-byte <code>bcd</code> value (<code>FBLD</code>/<code>FBSTP</code>)","","Binary numbers (base 2)","","","","","","","<code>BLENDPD xmm1, xmm2/m128, imm8</code>","","<code>BLENDPS xmm1, xmm2/m128, imm8</code>","","<code>BLENDVPD xmm1, xmm2/m128, &lt;XMM0&gt;</code>","","<code>BLENDVPS xmm1, xmm2/m128, &lt;XMM0&gt;</code>","","","","","","","32-bit <code>BNDMOV</code>, 2 x <code>u32</code>","64-bit <code>BNDMOV</code>, 2 x <code>u64</code>","","<code>BNDCL bnd, r/m32</code>","<code>BNDCL bnd, r/m64</code>","","<code>BNDCN bnd, r/m32</code>","<code>BNDCN bnd, r/m64</code>","","<code>BNDCU bnd, r/m32</code>","<code>BNDCU bnd, r/m64</code>","","<code>BNDLDX bnd, mib</code>","","<code>BNDMK bnd, m32</code>","<code>BNDMK bnd, m64</code>","","<code>BNDMOV bnd1, bnd2/m128</code>","<code>BNDMOV bnd1, bnd2/m64</code>","<code>BNDMOV bnd1/m128, bnd2</code>","<code>BNDMOV bnd1/m64, bnd2</code>","","<code>BNDSTX mib, bnd</code>","","Memory location contains two <code>u16</code>s (16-bit <code>BOUND</code>)","Memory location contains two <code>u32</code>s (32-bit <code>BOUND</code>)","<code>BOUND r16, m16&amp;16</code>","<code>BOUND r32, m32&amp;32</code>","Broadcast decorator, eg. <code>{1to4}</code>","Broadcast 2 x <code>bfloat16</code> to 128-bits","Broadcast 2 x <code>f16</code> to 128-bits","Broadcast 2 x <code>i16</code> to 128-bits","Broadcast 2 x <code>i32</code> to 128-bits","Broadcast 2 x <code>u32</code> to 128-bits","Broadcast <code>f16</code> to 128-bits","Broadcast <code>f32</code> to 128-bits","Broadcast <code>f64</code> to 128-bits","Broadcast <code>i16</code> to 128-bits","Broadcast <code>i32</code> to 128-bits","Broadcast <code>i64</code> to 128-bits","Broadcast <code>u16</code> to 128-bits","Broadcast <code>u32</code> to 128-bits","Broadcast <code>u52</code> to 128-bits","Broadcast <code>u64</code> to 128-bits","Broadcast 2 x <code>bfloat16</code> to 256-bits","Broadcast 2 x <code>f16</code> to 256-bits","Broadcast 2 x <code>i16</code> to 256-bits","Broadcast 2 x <code>i32</code> to 256-bits","Broadcast 2 x <code>u32</code> to 256-bits","Broadcast <code>f16</code> to 256-bits","Broadcast <code>f32</code> to 256-bits","Broadcast <code>f64</code> to 256-bits","Broadcast <code>i16</code> to 256-bits","Broadcast <code>i32</code> to 256-bits","Broadcast <code>i64</code> to 256-bits","Broadcast <code>u16</code> to 256-bits","Broadcast <code>u32</code> to 256-bits","Broadcast <code>u52</code> to 256-bits","Broadcast <code>u64</code> to 256-bits","Broadcast <code>f16</code> to 32-bits","Broadcast 2 x <code>bfloat16</code> to 512-bits","Broadcast 2 x <code>f16</code> to 512-bits","Broadcast 2 x <code>i16</code> to 512-bits","Broadcast 2 x <code>i32</code> to 512-bits","Broadcast 2 x <code>u32</code> to 512-bits","Broadcast <code>f16</code> to 512-bits","Broadcast <code>f32</code> to 512-bits","Broadcast <code>f64</code> to 512-bits","Broadcast <code>i16</code> to 512-bits","Broadcast <code>i32</code> to 512-bits","Broadcast <code>i64</code> to 512-bits","Broadcast <code>u16</code> to 512-bits","Broadcast <code>u32</code> to 512-bits","Broadcast <code>u52</code> to 512-bits","Broadcast <code>u64</code> to 512-bits","Broadcast <code>f16</code> to 64-bits","Broadcast <code>f32</code> to 64-bits","Broadcast <code>i32</code> to 64-bits","Broadcast <code>u32</code> to 64-bits","","<code>BSF r16, r/m16</code>","<code>BSF r32, r/m32</code>","<code>BSF r64, r/m64</code>","","<code>BSR r16, r/m16</code>","<code>BSR r32, r/m32</code>","<code>BSR r64, r/m64</code>","","<code>BSWAP r16</code>","<code>BSWAP r32</code>","<code>BSWAP r64</code>","","<code>BT r/m16, imm8</code>","<code>BT r/m16, r16</code>","<code>BT r/m32, imm8</code>","<code>BT r/m32, r32</code>","<code>BT r/m64, imm8</code>","<code>BT r/m64, r64</code>","","<code>BTC r/m16, imm8</code>","<code>BTC r/m16, r16</code>","<code>BTC r/m32, imm8</code>","<code>BTC r/m32, r32</code>","<code>BTC r/m64, imm8</code>","<code>BTC r/m64, r64</code>","","<code>BTR r/m16, imm8</code>","<code>BTR r/m16, r16</code>","<code>BTR r/m32, imm8</code>","<code>BTR r/m32, r32</code>","<code>BTR r/m64, imm8</code>","<code>BTR r/m64, r64</code>","","<code>BTS r/m16, imm8</code>","<code>BTS r/m16, r16</code>","<code>BTS r/m32, imm8</code>","<code>BTS r/m32, r32</code>","<code>BTS r/m64, imm8</code>","<code>BTS r/m64, r64</code>","","Mnemonic condition code selector (eg. <code>JA</code> / <code>JNBE</code>)","Mnemonic condition code selector (eg. <code>JAE</code> / <code>JNB</code> / <code>JNC</code>)","Mnemonic condition code selector (eg. <code>JB</code> / <code>JC</code> / <code>JNAE</code>)","Mnemonic condition code selector (eg. <code>JBE</code> / <code>JNA</code>)","Mnemonic condition code selector (eg. <code>JE</code> / <code>JZ</code>)","Mnemonic condition code selector (eg. <code>JG</code> / <code>JNLE</code>)","Mnemonic condition code selector (eg. <code>JGE</code> / <code>JNL</code>)","Mnemonic condition code selector (eg. <code>JL</code> / <code>JNGE</code>)","Mnemonic condition code selector (eg. <code>JLE</code> / <code>JNG</code>)","Mnemonic condition code selector (eg. <code>JNE</code> / <code>JNZ</code>)","Mnemonic condition code selector (eg. <code>JNP</code> / <code>JPO</code>)","Mnemonic condition code selector (eg. <code>JP</code> / <code>JPE</code>)","","","Decode <code>CL1INVMB</code>","Decode <code>0FA6</code>/<code>0FA7</code> as <code>CMPXCHG</code>","","","","","","","","","","","","","","","","","","","","Decode most Cyrix instructions: <code>FPU</code>, <code>EMMI</code>, <code>SMM</code>, <code>DDI</code>","Decode Cyrix <code>DMI</code> instructions (AMD Geode GX/LX)","Decode Cyrix <code>SMINT 0F7E</code> (Cyrix 6x86 or earlier)","","<code>CALL m16:16</code>","<code>CALL m16:32</code>","<code>CALL m16:64</code>","<code>CALL ptr16:16</code>","<code>CALL ptr16:32</code>","<code>CALL rel16</code>","<code>CALL rel32</code>","<code>CALL rel32</code>","<code>CALL r/m16</code>","<code>CALL r/m32</code>","<code>CALL r/m64</code>","<code>CBW</code>","","","<code>CCS_ENCRYPT</code>","<code>CCS_ENCRYPT</code>","<code>CCS_ENCRYPT</code>","","<code>CCS_HASH</code>","<code>CCS_HASH</code>","<code>CCS_HASH</code>","<code>CDQ</code>","","<code>CDQE</code>","","<code>CL1INVMB</code>","","<code>CLAC</code>","","<code>CLC</code>","","<code>CLD</code>","","","<code>CLDEMOTE m8</code>","","","","<code>CLFLUSH m8</code>","","<code>CLFLUSHOPT m8</code>","<code>CLGI</code>","","<code>CLI</code>","","","<code>CLRSSBSY m64</code>","<code>CLTS</code>","","<code>CLUI</code>","","","<code>CLWB m8</code>","","<code>CLZERO</code>","<code>CLZERO</code>","<code>CLZERO</code>","<code>CMC</code>","","","<code>CMOVA r16, r/m16</code>","<code>CMOVA r32, r/m32</code>","<code>CMOVA r64, r/m64</code>","","<code>CMOVAE r16, r/m16</code>","<code>CMOVAE r32, r/m32</code>","<code>CMOVAE r64, r/m64</code>","","<code>CMOVB r16, r/m16</code>","<code>CMOVB r32, r/m32</code>","<code>CMOVB r64, r/m64</code>","","<code>CMOVBE r16, r/m16</code>","<code>CMOVBE r32, r/m32</code>","<code>CMOVBE r64, r/m64</code>","","<code>CMOVE r16, r/m16</code>","<code>CMOVE r32, r/m32</code>","<code>CMOVE r64, r/m64</code>","","<code>CMOVG r16, r/m16</code>","<code>CMOVG r32, r/m32</code>","<code>CMOVG r64, r/m64</code>","","<code>CMOVGE r16, r/m16</code>","<code>CMOVGE r32, r/m32</code>","<code>CMOVGE r64, r/m64</code>","","<code>CMOVL r16, r/m16</code>","<code>CMOVL r32, r/m32</code>","<code>CMOVL r64, r/m64</code>","","<code>CMOVLE r16, r/m16</code>","<code>CMOVLE r32, r/m32</code>","<code>CMOVLE r64, r/m64</code>","","<code>CMOVNE r16, r/m16</code>","<code>CMOVNE r32, r/m32</code>","<code>CMOVNE r64, r/m64</code>","","<code>CMOVNO r16, r/m16</code>","<code>CMOVNO r32, r/m32</code>","<code>CMOVNO r64, r/m64</code>","","<code>CMOVNP r16, r/m16</code>","<code>CMOVNP r32, r/m32</code>","<code>CMOVNP r64, r/m64</code>","","<code>CMOVNS r16, r/m16</code>","<code>CMOVNS r32, r/m32</code>","<code>CMOVNS r64, r/m64</code>","","<code>CMOVO r16, r/m16</code>","<code>CMOVO r32, r/m32</code>","<code>CMOVO r64, r/m64</code>","","<code>CMOVP r16, r/m16</code>","<code>CMOVP r32, r/m32</code>","<code>CMOVP r64, r/m64</code>","","<code>CMOVS r16, r/m16</code>","<code>CMOVS r32, r/m32</code>","<code>CMOVS r64, r/m64</code>","","<code>CMP AL, imm8</code>","<code>CMP AX, imm16</code>","<code>CMP EAX, imm32</code>","<code>CMP RAX, imm32</code>","<code>CMP r16, r/m16</code>","<code>CMP r32, r/m32</code>","<code>CMP r64, r/m64</code>","<code>CMP r8, r/m8</code>","<code>CMP r/m16, imm16</code>","<code>CMP r/m16, imm8</code>","<code>CMP r/m16, r16</code>","<code>CMP r/m32, imm32</code>","<code>CMP r/m32, imm8</code>","<code>CMP r/m32, r32</code>","<code>CMP r/m64, imm32</code>","<code>CMP r/m64, imm8</code>","<code>CMP r/m64, r64</code>","<code>CMP r/m8, imm8</code>","<code>CMP r/m8, imm8</code>","<code>CMP r/m8, r8</code>","","","","","","","","","","","","","","","<code>CMPPD xmm1, xmm2/m128, imm8</code>","","<code>CMPPS xmm1, xmm2/m128, imm8</code>","","","<code>CMPSB</code>","","<code>CMPSD</code>","<code>CMPSD xmm1, xmm2/m64, imm8</code>","","<code>CMPSQ</code>","","<code>CMPSS xmm1, xmm2/m32, imm8</code>","","<code>CMPSW</code>","","","","<code>CMPXCHG16B m128</code>","<code>CMPXCHG r/m16, r16</code>","<code>CMPXCHG r/m32, r32</code>","<code>CMPXCHG r/m8, r8</code>","","<code>CMPXCHG8B m64</code>","<code>CMPXCHG r/m16, r16</code>","<code>CMPXCHG r/m32, r32</code>","<code>CMPXCHG r/m64, r64</code>","<code>CMPXCHG r/m8, r8</code>","","x86 instruction code","16-bit code","32-bit code","64-bit code","The code size (16/32/64) that was used when an instruction …","","<code>COMISD xmm1, xmm2/m64</code>","","<code>COMISS xmm1, xmm2/m32</code>","Contains the offsets of the displacement and immediate. …","<code>CPU_READ</code>","","<code>CPU_WRITE</code>","","<code>CPUID</code>","","<code>CQO</code>","","","<code>CRC32 r32, r/m16</code>","<code>CRC32 r32, r/m32</code>","<code>CRC32 r32, r/m8</code>","<code>CRC32 r64, r/m64</code>","<code>CRC32 r64, r/m8</code>","","<code>CVTDQ2PD xmm1, xmm2/m64</code>","","<code>CVTDQ2PS xmm1, xmm2/m128</code>","","<code>CVTPD2DQ xmm1, xmm2/m128</code>","","<code>CVTPD2PI mm, xmm/m128</code>","","<code>CVTPD2PS xmm1, xmm2/m128</code>","","<code>CVTPI2PD xmm, mm/m64</code>","","<code>CVTPI2PS xmm, mm/m64</code>","","<code>CVTPS2DQ xmm1, xmm2/m128</code>","","<code>CVTPS2PD xmm1, xmm2/m64</code>","","<code>CVTPS2PI mm, xmm/m64</code>","","<code>CVTSD2SI r32, xmm1/m64</code>","<code>CVTSD2SI r64, xmm1/m64</code>","","<code>CVTSD2SS xmm1, xmm2/m64</code>","","<code>CVTSI2SD xmm1, r/m32</code>","<code>CVTSI2SD xmm1, r/m64</code>","","<code>CVTSI2SS xmm1, r/m32</code>","<code>CVTSI2SS xmm1, r/m64</code>","","<code>CVTSS2SD xmm1, xmm2/m32</code>","","<code>CVTSS2SI r32, xmm1/m32</code>","<code>CVTSS2SI r64, xmm1/m32</code>","","<code>CVTTPD2DQ xmm1, xmm2/m128</code>","","<code>CVTTPD2PI mm, xmm/m128</code>","","<code>CVTTPS2DQ xmm1, xmm2/m128</code>","","<code>CVTTPS2PI mm, xmm/m64</code>","","<code>CVTTSD2SI r32, xmm1/m64</code>","<code>CVTTSD2SI r64, xmm1/m64</code>","","<code>CVTTSS2SI r32, xmm1/m32</code>","<code>CVTTSS2SI r64, xmm1/m32</code>","<code>CWD</code>","","<code>CWDE</code>","","<code>UNDOC</code>","<code>UNDOC</code>","<code>UNDOC</code>","<code>UNDOC</code>","<code>UNDOC</code>","<code>UNDOC</code>","<code>UNDOC</code>","<code>UNDOC</code>","3DNow! encoding","<code>PAVGUSB mm, mm/m64</code>","<code>PF2ID mm, mm/m64</code>","<code>PF2IW mm, mm/m64</code>","<code>PFACC mm, mm/m64</code>","<code>PFADD mm, mm/m64</code>","<code>PFCMPEQ mm, mm/m64</code>","<code>PFCMPGE mm, mm/m64</code>","<code>PFCMPGT mm, mm/m64</code>","<code>PFMAX mm, mm/m64</code>","<code>PFMIN mm, mm/m64</code>","<code>PFMUL mm, mm/m64</code>","<code>PFNACC mm, mm/m64</code>","<code>PFPNACC mm, mm/m64</code>","<code>PFRCP mm, mm/m64</code>","<code>PFRCPIT1 mm, mm/m64</code>","<code>PFRCPIT2 mm, mm/m64</code>","<code>PFRCPV mm, mm/m64</code>","<code>PFRSQIT1 mm, mm/m64</code>","<code>PFRSQRT mm, mm/m64</code>","<code>PFRSQRTV mm, mm/m64</code>","<code>PFSUB mm, mm/m64</code>","<code>PFSUBR mm, mm/m64</code>","<code>PI2FD mm, mm/m64</code>","<code>PI2FW mm, mm/m64</code>","<code>PMULHRW mm, mm/m64</code>","<code>PSWAPD mm, mm/m64</code>","","","","","","","","","","","","","","","","","","","","","","","","<code>DAA</code>","","<code>DAS</code>","","Data symbol","","","","<code>DEC r16</code>","<code>DEC r32</code>","<code>DEC r/m16</code>","<code>DEC r/m32</code>","<code>DEC r/m64</code>","<code>DEC r/m8</code>","Decimal numbers (base 10)","A <code>db</code>/<code>.byte</code> asm directive that can store 1-16 bytes","A <code>dd</code>/<code>.int</code> asm directive that can store 1-4 dwords","A <code>dq</code>/<code>.quad</code> asm directive that can store 1-2 qwords","A <code>dw</code>/<code>.word</code> asm directive that can store 1-8 words","Decodes 16/32/64-bit x86 instructions","Decoder error","Decoder options","A decorator, eg. <code>sae</code> in <code>{sae}</code>","Decorator","Show memory size if the assembler requires it, else don’…","","Assembler directive","","<code>DIV r/m16</code>","<code>DIV r/m32</code>","<code>DIV r/m64</code>","<code>DIV r/m8</code>","","<code>DIVPD xmm1, xmm2/m128</code>","","<code>DIVPS xmm1, xmm2/m128</code>","","<code>DIVSD xmm1, xmm2/m64</code>","","<code>DIVSS xmm1, xmm2/m32</code>","<code>DMINT</code>","","Don’t use it!","Don’t use it!","Don’t use it!","Don’t use it!","Don’t use it!","Don’t use it!","Don’t use it!","","<code>DPPD xmm1, xmm2/m128, imm8</code>","","<code>DPPS xmm1, xmm2/m128, imm8</code>","","","Memory location contains a 32-bit offset (…","","","","","","","","","","","","EVEX encoding","<code>V4FMADDPS zmm1 {k1}{z}, zmm2+3, m128</code>","<code>V4FMADDSS xmm1 {k1}{z}, xmm2+3, m128</code>","<code>V4FNMADDPS zmm1 {k1}{z}, zmm2+3, m128</code>","<code>V4FNMADDSS xmm1 {k1}{z}, xmm2+3, m128</code>","<code>VADDPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VADDPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VADDPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</code>","<code>VADDPH xmm1 {k1}{z}, xmm2, xmm3/m128/m16bcst</code>","<code>VADDPH ymm1 {k1}{z}, ymm2, ymm3/m256/m16bcst</code>","<code>VADDPH zmm1 {k1}{z}, zmm2, zmm3/m512/m16bcst{er}</code>","<code>VADDPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VADDPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VADDPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</code>","<code>VADDSD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</code>","<code>VADDSH xmm1 {k1}{z}, xmm2, xmm3/m16{er}</code>","<code>VADDSS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</code>","<code>VAESDEC xmm1, xmm2, xmm3/m128</code>","<code>VAESDEC ymm1, ymm2, ymm3/m256</code>","<code>VAESDEC zmm1, zmm2, zmm3/m512</code>","<code>VAESDECLAST xmm1, xmm2, xmm3/m128</code>","<code>VAESDECLAST ymm1, ymm2, ymm3/m256</code>","<code>VAESDECLAST zmm1, zmm2, zmm3/m512</code>","<code>VAESENC xmm1, xmm2, xmm3/m128</code>","<code>VAESENC ymm1, ymm2, ymm3/m256</code>","<code>VAESENC zmm1, zmm2, zmm3/m512</code>","<code>VAESENCLAST xmm1, xmm2, xmm3/m128</code>","<code>VAESENCLAST ymm1, ymm2, ymm3/m256</code>","<code>VAESENCLAST zmm1, zmm2, zmm3/m512</code>","<code>VALIGND xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</code>","<code>VALIGND ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</code>","<code>VALIGND zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</code>","<code>VALIGNQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</code>","<code>VALIGNQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</code>","<code>VALIGNQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</code>","<code>VANDNPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VANDNPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VANDNPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VANDNPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VANDNPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VANDNPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VANDPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VANDPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VANDPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VANDPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VANDPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VANDPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VBLENDMPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VBLENDMPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VBLENDMPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VBLENDMPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VBLENDMPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VBLENDMPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VBROADCASTF32X2 ymm1 {k1}{z}, xmm2/m64</code>","<code>VBROADCASTF32X2 zmm1 {k1}{z}, xmm2/m64</code>","<code>VBROADCASTF32X4 ymm1 {k1}{z}, m128</code>","<code>VBROADCASTF32X4 zmm1 {k1}{z}, m128</code>","<code>VBROADCASTF32X8 zmm1 {k1}{z}, m256</code>","<code>VBROADCASTF64X2 ymm1 {k1}{z}, m128</code>","<code>VBROADCASTF64X2 zmm1 {k1}{z}, m128</code>","<code>VBROADCASTF64X4 zmm1 {k1}{z}, m256</code>","<code>VBROADCASTI32X2 xmm1 {k1}{z}, xmm2/m64</code>","<code>VBROADCASTI32X2 ymm1 {k1}{z}, xmm2/m64</code>","<code>VBROADCASTI32X2 zmm1 {k1}{z}, xmm2/m64</code>","<code>VBROADCASTI32X4 ymm1 {k1}{z}, m128</code>","<code>VBROADCASTI32X4 zmm1 {k1}{z}, m128</code>","<code>VBROADCASTI32X8 zmm1 {k1}{z}, m256</code>","<code>VBROADCASTI64X2 ymm1 {k1}{z}, m128</code>","<code>VBROADCASTI64X2 zmm1 {k1}{z}, m128</code>","<code>VBROADCASTI64X4 zmm1 {k1}{z}, m256</code>","<code>VBROADCASTSD ymm1 {k1}{z}, xmm2/m64</code>","<code>VBROADCASTSD zmm1 {k1}{z}, xmm2/m64</code>","<code>VBROADCASTSS xmm1 {k1}{z}, xmm2/m32</code>","<code>VBROADCASTSS ymm1 {k1}{z}, xmm2/m32</code>","<code>VBROADCASTSS zmm1 {k1}{z}, xmm2/m32</code>","<code>VCMPPD k1 {k2}, xmm2, xmm3/m128/m64bcst, imm8</code>","<code>VCMPPD k1 {k2}, ymm2, ymm3/m256/m64bcst, imm8</code>","<code>VCMPPD k1 {k2}, zmm2, zmm3/m512/m64bcst{sae}, imm8</code>","<code>VCMPPH k1 {k2}, xmm2, xmm3/m128/m16bcst, imm8</code>","<code>VCMPPH k1 {k2}, ymm2, ymm3/m256/m16bcst, imm8</code>","<code>VCMPPH k1 {k2}, zmm2, zmm3/m512/m16bcst{sae}, imm8</code>","<code>VCMPPS k1 {k2}, xmm2, xmm3/m128/m32bcst, imm8</code>","<code>VCMPPS k1 {k2}, ymm2, ymm3/m256/m32bcst, imm8</code>","<code>VCMPPS k1 {k2}, zmm2, zmm3/m512/m32bcst{sae}, imm8</code>","<code>VCMPSD k1 {k2}, xmm2, xmm3/m64{sae}, imm8</code>","<code>VCMPSH k1 {k2}, xmm2, xmm3/m16{sae}, imm8</code>","<code>VCMPSS k1 {k2}, xmm2, xmm3/m32{sae}, imm8</code>","<code>VCOMISD xmm1, xmm2/m64{sae}</code>","<code>VCOMISH xmm1, xmm2/m16{sae}</code>","<code>VCOMISS xmm1, xmm2/m32{sae}</code>","<code>VCOMPRESSPD xmm1/m128 {k1}{z}, xmm2</code>","<code>VCOMPRESSPD ymm1/m256 {k1}{z}, ymm2</code>","<code>VCOMPRESSPD zmm1/m512 {k1}{z}, zmm2</code>","<code>VCOMPRESSPS xmm1/m128 {k1}{z}, xmm2</code>","<code>VCOMPRESSPS ymm1/m256 {k1}{z}, ymm2</code>","<code>VCOMPRESSPS zmm1/m512 {k1}{z}, zmm2</code>","<code>VCVTDQ2PD xmm1 {k1}{z}, xmm2/m64/m32bcst</code>","<code>VCVTDQ2PD ymm1 {k1}{z}, xmm2/m128/m32bcst</code>","<code>VCVTDQ2PD zmm1 {k1}{z}, ymm2/m256/m32bcst{er}</code>","<code>VCVTDQ2PH xmm1 {k1}{z}, xmm2/m128/m32bcst</code>","<code>VCVTDQ2PH xmm1 {k1}{z}, ymm2/m256/m32bcst</code>","<code>VCVTDQ2PH ymm1 {k1}{z}, zmm2/m512/m32bcst{er}</code>","<code>VCVTDQ2PS xmm1 {k1}{z}, xmm2/m128/m32bcst</code>","<code>VCVTDQ2PS ymm1 {k1}{z}, ymm2/m256/m32bcst</code>","<code>VCVTDQ2PS zmm1 {k1}{z}, zmm2/m512/m32bcst{er}</code>","<code>VCVTNE2PS2BF16 xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VCVTNE2PS2BF16 ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VCVTNE2PS2BF16 zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VCVTNEPS2BF16 xmm1 {k1}{z}, xmm2/m128/m32bcst</code>","<code>VCVTNEPS2BF16 xmm1 {k1}{z}, ymm2/m256/m32bcst</code>","<code>VCVTNEPS2BF16 ymm1 {k1}{z}, zmm2/m512/m32bcst</code>","<code>VCVTPD2DQ xmm1 {k1}{z}, xmm2/m128/m64bcst</code>","<code>VCVTPD2DQ xmm1 {k1}{z}, ymm2/m256/m64bcst</code>","<code>VCVTPD2DQ ymm1 {k1}{z}, zmm2/m512/m64bcst{er}</code>","<code>VCVTPD2PH xmm1 {k1}{z}, xmm2/m128/m64bcst</code>","<code>VCVTPD2PH xmm1 {k1}{z}, ymm2/m256/m64bcst</code>","<code>VCVTPD2PH xmm1 {k1}{z}, zmm2/m512/m64bcst{er}</code>","<code>VCVTPD2PS xmm1 {k1}{z}, xmm2/m128/m64bcst</code>","<code>VCVTPD2PS xmm1 {k1}{z}, ymm2/m256/m64bcst</code>","<code>VCVTPD2PS ymm1 {k1}{z}, zmm2/m512/m64bcst{er}</code>","<code>VCVTPD2QQ xmm1 {k1}{z}, xmm2/m128/m64bcst</code>","<code>VCVTPD2QQ ymm1 {k1}{z}, ymm2/m256/m64bcst</code>","<code>VCVTPD2QQ zmm1 {k1}{z}, zmm2/m512/m64bcst{er}</code>","<code>VCVTPD2UDQ xmm1 {k1}{z}, xmm2/m128/m64bcst</code>","<code>VCVTPD2UDQ xmm1 {k1}{z}, ymm2/m256/m64bcst</code>","<code>VCVTPD2UDQ ymm1 {k1}{z}, zmm2/m512/m64bcst{er}</code>","<code>VCVTPD2UQQ xmm1 {k1}{z}, xmm2/m128/m64bcst</code>","<code>VCVTPD2UQQ ymm1 {k1}{z}, ymm2/m256/m64bcst</code>","<code>VCVTPD2UQQ zmm1 {k1}{z}, zmm2/m512/m64bcst{er}</code>","<code>VCVTPH2DQ xmm1 {k1}{z}, xmm2/m64/m16bcst</code>","<code>VCVTPH2DQ ymm1 {k1}{z}, xmm2/m128/m16bcst</code>","<code>VCVTPH2DQ zmm1 {k1}{z}, ymm2/m256/m16bcst{er}</code>","<code>VCVTPH2PD xmm1 {k1}{z}, xmm2/m32/m16bcst</code>","<code>VCVTPH2PD ymm1 {k1}{z}, xmm2/m64/m16bcst</code>","<code>VCVTPH2PD zmm1 {k1}{z}, xmm2/m128/m16bcst{sae}</code>","<code>VCVTPH2PS xmm1 {k1}{z}, xmm2/m64</code>","<code>VCVTPH2PS ymm1 {k1}{z}, xmm2/m128</code>","<code>VCVTPH2PS zmm1 {k1}{z}, ymm2/m256{sae}</code>","<code>VCVTPH2PSX xmm1 {k1}{z}, xmm2/m64/m16bcst</code>","<code>VCVTPH2PSX ymm1 {k1}{z}, xmm2/m128/m16bcst</code>","<code>VCVTPH2PSX zmm1 {k1}{z}, ymm2/m256/m16bcst{sae}</code>","<code>VCVTPH2QQ xmm1 {k1}{z}, xmm2/m32/m16bcst</code>","<code>VCVTPH2QQ ymm1 {k1}{z}, xmm2/m64/m16bcst</code>","<code>VCVTPH2QQ zmm1 {k1}{z}, xmm2/m128/m16bcst{er}</code>","<code>VCVTPH2UDQ xmm1 {k1}{z}, xmm2/m64/m16bcst</code>","<code>VCVTPH2UDQ ymm1 {k1}{z}, xmm2/m128/m16bcst</code>","<code>VCVTPH2UDQ zmm1 {k1}{z}, ymm2/m256/m16bcst{er}</code>","<code>VCVTPH2UQQ xmm1 {k1}{z}, xmm2/m32/m16bcst</code>","<code>VCVTPH2UQQ ymm1 {k1}{z}, xmm2/m64/m16bcst</code>","<code>VCVTPH2UQQ zmm1 {k1}{z}, xmm2/m128/m16bcst{er}</code>","<code>VCVTPH2UW xmm1 {k1}{z}, xmm2/m128/m16bcst</code>","<code>VCVTPH2UW ymm1 {k1}{z}, ymm2/m256/m16bcst</code>","<code>VCVTPH2UW zmm1 {k1}{z}, zmm2/m512/m16bcst{er}</code>","<code>VCVTPH2W xmm1 {k1}{z}, xmm2/m128/m16bcst</code>","<code>VCVTPH2W ymm1 {k1}{z}, ymm2/m256/m16bcst</code>","<code>VCVTPH2W zmm1 {k1}{z}, zmm2/m512/m16bcst{er}</code>","<code>VCVTPS2DQ xmm1 {k1}{z}, xmm2/m128/m32bcst</code>","<code>VCVTPS2DQ ymm1 {k1}{z}, ymm2/m256/m32bcst</code>","<code>VCVTPS2DQ zmm1 {k1}{z}, zmm2/m512/m32bcst{er}</code>","<code>VCVTPS2PD xmm1 {k1}{z}, xmm2/m64/m32bcst</code>","<code>VCVTPS2PD ymm1 {k1}{z}, xmm2/m128/m32bcst</code>","<code>VCVTPS2PD zmm1 {k1}{z}, ymm2/m256/m32bcst{sae}</code>","<code>VCVTPS2PH xmm1/m128 {k1}{z}, ymm2, imm8</code>","<code>VCVTPS2PH xmm1/m64 {k1}{z}, xmm2, imm8</code>","<code>VCVTPS2PH ymm1/m256 {k1}{z}, zmm2{sae}, imm8</code>","<code>VCVTPS2PHX xmm1 {k1}{z}, xmm2/m128/m32bcst</code>","<code>VCVTPS2PHX xmm1 {k1}{z}, ymm2/m256/m32bcst</code>","<code>VCVTPS2PHX ymm1 {k1}{z}, zmm2/m512/m32bcst{er}</code>","<code>VCVTPS2QQ xmm1 {k1}{z}, xmm2/m64/m32bcst</code>","<code>VCVTPS2QQ ymm1 {k1}{z}, xmm2/m128/m32bcst</code>","<code>VCVTPS2QQ zmm1 {k1}{z}, ymm2/m256/m32bcst{er}</code>","<code>VCVTPS2UDQ xmm1 {k1}{z}, xmm2/m128/m32bcst</code>","<code>VCVTPS2UDQ ymm1 {k1}{z}, ymm2/m256/m32bcst</code>","<code>VCVTPS2UDQ zmm1 {k1}{z}, zmm2/m512/m32bcst{er}</code>","<code>VCVTPS2UQQ xmm1 {k1}{z}, xmm2/m64/m32bcst</code>","<code>VCVTPS2UQQ ymm1 {k1}{z}, xmm2/m128/m32bcst</code>","<code>VCVTPS2UQQ zmm1 {k1}{z}, ymm2/m256/m32bcst{er}</code>","<code>VCVTQQ2PD xmm1 {k1}{z}, xmm2/m128/m64bcst</code>","<code>VCVTQQ2PD ymm1 {k1}{z}, ymm2/m256/m64bcst</code>","<code>VCVTQQ2PD zmm1 {k1}{z}, zmm2/m512/m64bcst{er}</code>","<code>VCVTQQ2PH xmm1 {k1}{z}, xmm2/m128/m64bcst</code>","<code>VCVTQQ2PH xmm1 {k1}{z}, ymm2/m256/m64bcst</code>","<code>VCVTQQ2PH xmm1 {k1}{z}, zmm2/m512/m64bcst{er}</code>","<code>VCVTQQ2PS xmm1 {k1}{z}, xmm2/m128/m64bcst</code>","<code>VCVTQQ2PS xmm1 {k1}{z}, ymm2/m256/m64bcst</code>","<code>VCVTQQ2PS ymm1 {k1}{z}, zmm2/m512/m64bcst{er}</code>","<code>VCVTSD2SH xmm1 {k1}{z}, xmm2, xmm3/m64{er}</code>","<code>VCVTSD2SI r32, xmm1/m64{er}</code>","<code>VCVTSD2SI r64, xmm1/m64{er}</code>","<code>VCVTSD2SS xmm1 {k1}{z}, xmm2, xmm3/m64{er}</code>","<code>VCVTSD2USI r32, xmm1/m64{er}</code>","<code>VCVTSD2USI r64, xmm1/m64{er}</code>","<code>VCVTSH2SD xmm1 {k1}{z}, xmm2, xmm3/m16{sae}</code>","<code>VCVTSH2SI r32, xmm1/m16{er}</code>","<code>VCVTSH2SI r64, xmm1/m16{er}</code>","<code>VCVTSH2SS xmm1 {k1}{z}, xmm2, xmm3/m16{sae}</code>","<code>VCVTSH2USI r32, xmm1/m16{er}</code>","<code>VCVTSH2USI r64, xmm1/m16{er}</code>","<code>VCVTSI2SD xmm1, xmm2, r/m32{er}</code>","<code>VCVTSI2SD xmm1, xmm2, r/m64{er}</code>","<code>VCVTSI2SH xmm1, xmm2, r/m32{er}</code>","<code>VCVTSI2SH xmm1, xmm2, r/m64{er}</code>","<code>VCVTSI2SS xmm1, xmm2, r/m32{er}</code>","<code>VCVTSI2SS xmm1, xmm2, r/m64{er}</code>","<code>VCVTSS2SD xmm1 {k1}{z}, xmm2, xmm3/m32{sae}</code>","<code>VCVTSS2SH xmm1 {k1}{z}, xmm2, xmm3/m32{er}</code>","<code>VCVTSS2SI r32, xmm1/m32{er}</code>","<code>VCVTSS2SI r64, xmm1/m32{er}</code>","<code>VCVTSS2USI r32, xmm1/m32{er}</code>","<code>VCVTSS2USI r64, xmm1/m32{er}</code>","<code>VCVTTPD2DQ xmm1 {k1}{z}, xmm2/m128/m64bcst</code>","<code>VCVTTPD2DQ xmm1 {k1}{z}, ymm2/m256/m64bcst</code>","<code>VCVTTPD2DQ ymm1 {k1}{z}, zmm2/m512/m64bcst{sae}</code>","<code>VCVTTPD2QQ xmm1 {k1}{z}, xmm2/m128/m64bcst</code>","<code>VCVTTPD2QQ ymm1 {k1}{z}, ymm2/m256/m64bcst</code>","<code>VCVTTPD2QQ zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}</code>","<code>VCVTTPD2UDQ xmm1 {k1}{z}, xmm2/m128/m64bcst</code>","<code>VCVTTPD2UDQ xmm1 {k1}{z}, ymm2/m256/m64bcst</code>","<code>VCVTTPD2UDQ ymm1 {k1}{z}, zmm2/m512/m64bcst{sae}</code>","<code>VCVTTPD2UQQ xmm1 {k1}{z}, xmm2/m128/m64bcst</code>","<code>VCVTTPD2UQQ ymm1 {k1}{z}, ymm2/m256/m64bcst</code>","<code>VCVTTPD2UQQ zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}</code>","<code>VCVTTPH2DQ xmm1 {k1}{z}, xmm2/m64/m16bcst</code>","<code>VCVTTPH2DQ ymm1 {k1}{z}, xmm2/m128/m16bcst</code>","<code>VCVTTPH2DQ zmm1 {k1}{z}, ymm2/m256/m16bcst{sae}</code>","<code>VCVTTPH2QQ xmm1 {k1}{z}, xmm2/m32/m16bcst</code>","<code>VCVTTPH2QQ ymm1 {k1}{z}, xmm2/m64/m16bcst</code>","<code>VCVTTPH2QQ zmm1 {k1}{z}, xmm2/m128/m16bcst{sae}</code>","<code>VCVTTPH2UDQ xmm1 {k1}{z}, xmm2/m64/m16bcst</code>","<code>VCVTTPH2UDQ ymm1 {k1}{z}, xmm2/m128/m16bcst</code>","<code>VCVTTPH2UDQ zmm1 {k1}{z}, ymm2/m256/m16bcst{sae}</code>","<code>VCVTTPH2UQQ xmm1 {k1}{z}, xmm2/m32/m16bcst</code>","<code>VCVTTPH2UQQ ymm1 {k1}{z}, xmm2/m64/m16bcst</code>","<code>VCVTTPH2UQQ zmm1 {k1}{z}, xmm2/m128/m16bcst{sae}</code>","<code>VCVTTPH2UW xmm1 {k1}{z}, xmm2/m128/m16bcst</code>","<code>VCVTTPH2UW ymm1 {k1}{z}, ymm2/m256/m16bcst</code>","<code>VCVTTPH2UW zmm1 {k1}{z}, zmm2/m512/m16bcst{sae}</code>","<code>VCVTTPH2W xmm1 {k1}{z}, xmm2/m128/m16bcst</code>","<code>VCVTTPH2W ymm1 {k1}{z}, ymm2/m256/m16bcst</code>","<code>VCVTTPH2W zmm1 {k1}{z}, zmm2/m512/m16bcst{sae}</code>","<code>VCVTTPS2DQ xmm1 {k1}{z}, xmm2/m128/m32bcst</code>","<code>VCVTTPS2DQ ymm1 {k1}{z}, ymm2/m256/m32bcst</code>","<code>VCVTTPS2DQ zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}</code>","<code>VCVTTPS2QQ xmm1 {k1}{z}, xmm2/m64/m32bcst</code>","<code>VCVTTPS2QQ ymm1 {k1}{z}, xmm2/m128/m32bcst</code>","<code>VCVTTPS2QQ zmm1 {k1}{z}, ymm2/m256/m32bcst{sae}</code>","<code>VCVTTPS2UDQ xmm1 {k1}{z}, xmm2/m128/m32bcst</code>","<code>VCVTTPS2UDQ ymm1 {k1}{z}, ymm2/m256/m32bcst</code>","<code>VCVTTPS2UDQ zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}</code>","<code>VCVTTPS2UQQ xmm1 {k1}{z}, xmm2/m64/m32bcst</code>","<code>VCVTTPS2UQQ ymm1 {k1}{z}, xmm2/m128/m32bcst</code>","<code>VCVTTPS2UQQ zmm1 {k1}{z}, ymm2/m256/m32bcst{sae}</code>","<code>VCVTTSD2SI r32, xmm1/m64{sae}</code>","<code>VCVTTSD2SI r64, xmm1/m64{sae}</code>","<code>VCVTTSD2USI r32, xmm1/m64{sae}</code>","<code>VCVTTSD2USI r64, xmm1/m64{sae}</code>","<code>VCVTTSH2SI r32, xmm1/m16{sae}</code>","<code>VCVTTSH2SI r64, xmm1/m16{sae}</code>","<code>VCVTTSH2USI r32, xmm1/m16{sae}</code>","<code>VCVTTSH2USI r64, xmm1/m16{sae}</code>","<code>VCVTTSS2SI r32, xmm1/m32{sae}</code>","<code>VCVTTSS2SI r64, xmm1/m32{sae}</code>","<code>VCVTTSS2USI r32, xmm1/m32{sae}</code>","<code>VCVTTSS2USI r64, xmm1/m32{sae}</code>","<code>VCVTUDQ2PD xmm1 {k1}{z}, xmm2/m64/m32bcst</code>","<code>VCVTUDQ2PD ymm1 {k1}{z}, xmm2/m128/m32bcst</code>","<code>VCVTUDQ2PD zmm1 {k1}{z}, ymm2/m256/m32bcst{er}</code>","<code>VCVTUDQ2PH xmm1 {k1}{z}, xmm2/m128/m32bcst</code>","<code>VCVTUDQ2PH xmm1 {k1}{z}, ymm2/m256/m32bcst</code>","<code>VCVTUDQ2PH ymm1 {k1}{z}, zmm2/m512/m32bcst{er}</code>","<code>VCVTUDQ2PS xmm1 {k1}{z}, xmm2/m128/m32bcst</code>","<code>VCVTUDQ2PS ymm1 {k1}{z}, ymm2/m256/m32bcst</code>","<code>VCVTUDQ2PS zmm1 {k1}{z}, zmm2/m512/m32bcst{er}</code>","<code>VCVTUQQ2PD xmm1 {k1}{z}, xmm2/m128/m64bcst</code>","<code>VCVTUQQ2PD ymm1 {k1}{z}, ymm2/m256/m64bcst</code>","<code>VCVTUQQ2PD zmm1 {k1}{z}, zmm2/m512/m64bcst{er}</code>","<code>VCVTUQQ2PH xmm1 {k1}{z}, xmm2/m128/m64bcst</code>","<code>VCVTUQQ2PH xmm1 {k1}{z}, ymm2/m256/m64bcst</code>","<code>VCVTUQQ2PH xmm1 {k1}{z}, zmm2/m512/m64bcst{er}</code>","<code>VCVTUQQ2PS xmm1 {k1}{z}, xmm2/m128/m64bcst</code>","<code>VCVTUQQ2PS xmm1 {k1}{z}, ymm2/m256/m64bcst</code>","<code>VCVTUQQ2PS ymm1 {k1}{z}, zmm2/m512/m64bcst{er}</code>","<code>VCVTUSI2SD xmm1, xmm2, r/m32{er}</code>","<code>VCVTUSI2SD xmm1, xmm2, r/m64{er}</code>","<code>VCVTUSI2SH xmm1, xmm2, r/m32{er}</code>","<code>VCVTUSI2SH xmm1, xmm2, r/m64{er}</code>","<code>VCVTUSI2SS xmm1, xmm2, r/m32{er}</code>","<code>VCVTUSI2SS xmm1, xmm2, r/m64{er}</code>","<code>VCVTUW2PH xmm1 {k1}{z}, xmm2/m128/m16bcst</code>","<code>VCVTUW2PH ymm1 {k1}{z}, ymm2/m256/m16bcst</code>","<code>VCVTUW2PH zmm1 {k1}{z}, zmm2/m512/m16bcst{er}</code>","<code>VCVTW2PH xmm1 {k1}{z}, xmm2/m128/m16bcst</code>","<code>VCVTW2PH ymm1 {k1}{z}, ymm2/m256/m16bcst</code>","<code>VCVTW2PH zmm1 {k1}{z}, zmm2/m512/m16bcst{er}</code>","<code>VDBPSADBW xmm1 {k1}{z}, xmm2, xmm3/m128, imm8</code>","<code>VDBPSADBW ymm1 {k1}{z}, ymm2, ymm3/m256, imm8</code>","<code>VDBPSADBW zmm1 {k1}{z}, zmm2, zmm3/m512, imm8</code>","<code>VDIVPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VDIVPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VDIVPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</code>","<code>VDIVPH xmm1 {k1}{z}, xmm2, xmm3/m128/m16bcst</code>","<code>VDIVPH ymm1 {k1}{z}, ymm2, ymm3/m256/m16bcst</code>","<code>VDIVPH zmm1 {k1}{z}, zmm2, zmm3/m512/m16bcst{er}</code>","<code>VDIVPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VDIVPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VDIVPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</code>","<code>VDIVSD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</code>","<code>VDIVSH xmm1 {k1}{z}, xmm2, xmm3/m16{er}</code>","<code>VDIVSS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</code>","<code>VDPBF16PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VDPBF16PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VDPBF16PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VEXP2PD zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}</code>","<code>VEXP2PS zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}</code>","<code>VEXPANDPD xmm1 {k1}{z}, xmm2/m128</code>","<code>VEXPANDPD ymm1 {k1}{z}, ymm2/m256</code>","<code>VEXPANDPD zmm1 {k1}{z}, zmm2/m512</code>","<code>VEXPANDPS xmm1 {k1}{z}, xmm2/m128</code>","<code>VEXPANDPS ymm1 {k1}{z}, ymm2/m256</code>","<code>VEXPANDPS zmm1 {k1}{z}, zmm2/m512</code>","<code>VEXTRACTF32X4 xmm1/m128 {k1}{z}, ymm2, imm8</code>","<code>VEXTRACTF32X4 xmm1/m128 {k1}{z}, zmm2, imm8</code>","<code>VEXTRACTF32X8 ymm1/m256 {k1}{z}, zmm2, imm8</code>","<code>VEXTRACTF64X2 xmm1/m128 {k1}{z}, ymm2, imm8</code>","<code>VEXTRACTF64X2 xmm1/m128 {k1}{z}, zmm2, imm8</code>","<code>VEXTRACTF64X4 ymm1/m256 {k1}{z}, zmm2, imm8</code>","<code>VEXTRACTI32X4 xmm1/m128 {k1}{z}, ymm2, imm8</code>","<code>VEXTRACTI32X4 xmm1/m128 {k1}{z}, zmm2, imm8</code>","<code>VEXTRACTI32X8 ymm1/m256 {k1}{z}, zmm2, imm8</code>","<code>VEXTRACTI64X2 xmm1/m128 {k1}{z}, ymm2, imm8</code>","<code>VEXTRACTI64X2 xmm1/m128 {k1}{z}, zmm2, imm8</code>","<code>VEXTRACTI64X4 ymm1/m256 {k1}{z}, zmm2, imm8</code>","<code>VEXTRACTPS r64/m32, xmm1, imm8</code>","<code>VEXTRACTPS r/m32, xmm1, imm8</code>","<code>VFCMADDCPH xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VFCMADDCPH ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VFCMADDCPH zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</code>","<code>VFCMADDCSH xmm1 {k1}{z}, xmm2, xmm3/m32{er}</code>","<code>VFCMULCPH xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VFCMULCPH ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VFCMULCPH zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</code>","<code>VFCMULCSH xmm1 {k1}{z}, xmm2, xmm3/m32{er}</code>","<code>VFIXUPIMMPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</code>","<code>VFIXUPIMMPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</code>","…","<code>VFIXUPIMMPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</code>","<code>VFIXUPIMMPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</code>","…","<code>VFIXUPIMMSD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}, imm8</code>","<code>VFIXUPIMMSS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}, imm8</code>","<code>VFMADD132PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VFMADD132PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VFMADD132PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</code>","<code>VFMADD132PH xmm1 {k1}{z}, xmm2, xmm3/m128/m16bcst</code>","<code>VFMADD132PH ymm1 {k1}{z}, ymm2, ymm3/m256/m16bcst</code>","<code>VFMADD132PH zmm1 {k1}{z}, zmm2, zmm3/m512/m16bcst{er}</code>","<code>VFMADD132PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VFMADD132PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VFMADD132PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</code>","<code>VFMADD132SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</code>","<code>VFMADD132SH xmm1 {k1}{z}, xmm2, xmm3/m16{er}</code>","<code>VFMADD132SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</code>","<code>VFMADD213PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VFMADD213PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VFMADD213PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</code>","<code>VFMADD213PH xmm1 {k1}{z}, xmm2, xmm3/m128/m16bcst</code>","<code>VFMADD213PH ymm1 {k1}{z}, ymm2, ymm3/m256/m16bcst</code>","<code>VFMADD213PH zmm1 {k1}{z}, zmm2, zmm3/m512/m16bcst{er}</code>","<code>VFMADD213PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VFMADD213PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VFMADD213PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</code>","<code>VFMADD213SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</code>","<code>VFMADD213SH xmm1 {k1}{z}, xmm2, xmm3/m16{er}</code>","<code>VFMADD213SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</code>","<code>VFMADD231PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VFMADD231PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VFMADD231PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</code>","<code>VFMADD231PH xmm1 {k1}{z}, xmm2, xmm3/m128/m16bcst</code>","<code>VFMADD231PH ymm1 {k1}{z}, ymm2, ymm3/m256/m16bcst</code>","<code>VFMADD231PH zmm1 {k1}{z}, zmm2, zmm3/m512/m16bcst{er}</code>","<code>VFMADD231PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VFMADD231PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VFMADD231PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</code>","<code>VFMADD231SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</code>","<code>VFMADD231SH xmm1 {k1}{z}, xmm2, xmm3/m16{er}</code>","<code>VFMADD231SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</code>","<code>VFMADDCPH xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VFMADDCPH ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VFMADDCPH zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</code>","<code>VFMADDCSH xmm1 {k1}{z}, xmm2, xmm3/m32{er}</code>","<code>VFMADDSUB132PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VFMADDSUB132PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VFMADDSUB132PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</code>","<code>VFMADDSUB132PH xmm1 {k1}{z}, xmm2, xmm3/m128/m16bcst</code>","<code>VFMADDSUB132PH ymm1 {k1}{z}, ymm2, ymm3/m256/m16bcst</code>","<code>VFMADDSUB132PH zmm1 {k1}{z}, zmm2, zmm3/m512/m16bcst{er}</code>","<code>VFMADDSUB132PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VFMADDSUB132PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VFMADDSUB132PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</code>","<code>VFMADDSUB213PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VFMADDSUB213PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VFMADDSUB213PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</code>","<code>VFMADDSUB213PH xmm1 {k1}{z}, xmm2, xmm3/m128/m16bcst</code>","<code>VFMADDSUB213PH ymm1 {k1}{z}, ymm2, ymm3/m256/m16bcst</code>","<code>VFMADDSUB213PH zmm1 {k1}{z}, zmm2, zmm3/m512/m16bcst{er}</code>","<code>VFMADDSUB213PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VFMADDSUB213PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VFMADDSUB213PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</code>","<code>VFMADDSUB231PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VFMADDSUB231PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VFMADDSUB231PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</code>","<code>VFMADDSUB231PH xmm1 {k1}{z}, xmm2, xmm3/m128/m16bcst</code>","<code>VFMADDSUB231PH ymm1 {k1}{z}, ymm2, ymm3/m256/m16bcst</code>","<code>VFMADDSUB231PH zmm1 {k1}{z}, zmm2, zmm3/m512/m16bcst{er}</code>","<code>VFMADDSUB231PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VFMADDSUB231PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VFMADDSUB231PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</code>","<code>VFMSUB132PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VFMSUB132PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VFMSUB132PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</code>","<code>VFMSUB132PH xmm1 {k1}{z}, xmm2, xmm3/m128/m16bcst</code>","<code>VFMSUB132PH ymm1 {k1}{z}, ymm2, ymm3/m256/m16bcst</code>","<code>VFMSUB132PH zmm1 {k1}{z}, zmm2, zmm3/m512/m16bcst{er}</code>","<code>VFMSUB132PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VFMSUB132PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VFMSUB132PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</code>","<code>VFMSUB132SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</code>","<code>VFMSUB132SH xmm1 {k1}{z}, xmm2, xmm3/m16{er}</code>","<code>VFMSUB132SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</code>","<code>VFMSUB213PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VFMSUB213PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VFMSUB213PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</code>","<code>VFMSUB213PH xmm1 {k1}{z}, xmm2, xmm3/m128/m16bcst</code>","<code>VFMSUB213PH ymm1 {k1}{z}, ymm2, ymm3/m256/m16bcst</code>","<code>VFMSUB213PH zmm1 {k1}{z}, zmm2, zmm3/m512/m16bcst{er}</code>","<code>VFMSUB213PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VFMSUB213PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VFMSUB213PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</code>","<code>VFMSUB213SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</code>","<code>VFMSUB213SH xmm1 {k1}{z}, xmm2, xmm3/m16{er}</code>","<code>VFMSUB213SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</code>","<code>VFMSUB231PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VFMSUB231PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VFMSUB231PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</code>","<code>VFMSUB231PH xmm1 {k1}{z}, xmm2, xmm3/m128/m16bcst</code>","<code>VFMSUB231PH ymm1 {k1}{z}, ymm2, ymm3/m256/m16bcst</code>","<code>VFMSUB231PH zmm1 {k1}{z}, zmm2, zmm3/m512/m16bcst{er}</code>","<code>VFMSUB231PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VFMSUB231PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VFMSUB231PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</code>","<code>VFMSUB231SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</code>","<code>VFMSUB231SH xmm1 {k1}{z}, xmm2, xmm3/m16{er}</code>","<code>VFMSUB231SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</code>","<code>VFMSUBADD132PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VFMSUBADD132PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VFMSUBADD132PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</code>","<code>VFMSUBADD132PH xmm1 {k1}{z}, xmm2, xmm3/m128/m16bcst</code>","<code>VFMSUBADD132PH ymm1 {k1}{z}, ymm2, ymm3/m256/m16bcst</code>","<code>VFMSUBADD132PH zmm1 {k1}{z}, zmm2, zmm3/m512/m16bcst{er}</code>","<code>VFMSUBADD132PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VFMSUBADD132PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VFMSUBADD132PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</code>","<code>VFMSUBADD213PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VFMSUBADD213PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VFMSUBADD213PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</code>","<code>VFMSUBADD213PH xmm1 {k1}{z}, xmm2, xmm3/m128/m16bcst</code>","<code>VFMSUBADD213PH ymm1 {k1}{z}, ymm2, ymm3/m256/m16bcst</code>","<code>VFMSUBADD213PH zmm1 {k1}{z}, zmm2, zmm3/m512/m16bcst{er}</code>","<code>VFMSUBADD213PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VFMSUBADD213PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VFMSUBADD213PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</code>","<code>VFMSUBADD231PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VFMSUBADD231PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VFMSUBADD231PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</code>","<code>VFMSUBADD231PH xmm1 {k1}{z}, xmm2, xmm3/m128/m16bcst</code>","<code>VFMSUBADD231PH ymm1 {k1}{z}, ymm2, ymm3/m256/m16bcst</code>","<code>VFMSUBADD231PH zmm1 {k1}{z}, zmm2, zmm3/m512/m16bcst{er}</code>","<code>VFMSUBADD231PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VFMSUBADD231PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VFMSUBADD231PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</code>","<code>VFMULCPH xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VFMULCPH ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VFMULCPH zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</code>","<code>VFMULCSH xmm1 {k1}{z}, xmm2, xmm3/m32{er}</code>","<code>VFNMADD132PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VFNMADD132PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VFNMADD132PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</code>","<code>VFNMADD132PH xmm1 {k1}{z}, xmm2, xmm3/m128/m16bcst</code>","<code>VFNMADD132PH ymm1 {k1}{z}, ymm2, ymm3/m256/m16bcst</code>","<code>VFNMADD132PH zmm1 {k1}{z}, zmm2, zmm3/m512/m16bcst{er}</code>","<code>VFNMADD132PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VFNMADD132PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VFNMADD132PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</code>","<code>VFNMADD132SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</code>","<code>VFNMADD132SH xmm1 {k1}{z}, xmm2, xmm3/m16{er}</code>","<code>VFNMADD132SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</code>","<code>VFNMADD213PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VFNMADD213PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VFNMADD213PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</code>","<code>VFNMADD213PH xmm1 {k1}{z}, xmm2, xmm3/m128/m16bcst</code>","<code>VFNMADD213PH ymm1 {k1}{z}, ymm2, ymm3/m256/m16bcst</code>","<code>VFNMADD213PH zmm1 {k1}{z}, zmm2, zmm3/m512/m16bcst{er}</code>","<code>VFNMADD213PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VFNMADD213PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VFNMADD213PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</code>","<code>VFNMADD213SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</code>","<code>VFNMADD213SH xmm1 {k1}{z}, xmm2, xmm3/m16{er}</code>","<code>VFNMADD213SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</code>","<code>VFNMADD231PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VFNMADD231PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VFNMADD231PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</code>","<code>VFNMADD231PH xmm1 {k1}{z}, xmm2, xmm3/m128/m16bcst</code>","<code>VFNMADD231PH ymm1 {k1}{z}, ymm2, ymm3/m256/m16bcst</code>","<code>VFNMADD231PH zmm1 {k1}{z}, zmm2, zmm3/m512/m16bcst{er}</code>","<code>VFNMADD231PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VFNMADD231PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VFNMADD231PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</code>","<code>VFNMADD231SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</code>","<code>VFNMADD231SH xmm1 {k1}{z}, xmm2, xmm3/m16{er}</code>","<code>VFNMADD231SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</code>","<code>VFNMSUB132PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VFNMSUB132PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VFNMSUB132PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</code>","<code>VFNMSUB132PH xmm1 {k1}{z}, xmm2, xmm3/m128/m16bcst</code>","<code>VFNMSUB132PH ymm1 {k1}{z}, ymm2, ymm3/m256/m16bcst</code>","<code>VFNMSUB132PH zmm1 {k1}{z}, zmm2, zmm3/m512/m16bcst{er}</code>","<code>VFNMSUB132PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VFNMSUB132PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VFNMSUB132PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</code>","<code>VFNMSUB132SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</code>","<code>VFNMSUB132SH xmm1 {k1}{z}, xmm2, xmm3/m16{er}</code>","<code>VFNMSUB132SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</code>","<code>VFNMSUB213PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VFNMSUB213PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VFNMSUB213PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</code>","<code>VFNMSUB213PH xmm1 {k1}{z}, xmm2, xmm3/m128/m16bcst</code>","<code>VFNMSUB213PH ymm1 {k1}{z}, ymm2, ymm3/m256/m16bcst</code>","<code>VFNMSUB213PH zmm1 {k1}{z}, zmm2, zmm3/m512/m16bcst{er}</code>","<code>VFNMSUB213PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VFNMSUB213PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VFNMSUB213PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</code>","<code>VFNMSUB213SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</code>","<code>VFNMSUB213SH xmm1 {k1}{z}, xmm2, xmm3/m16{er}</code>","<code>VFNMSUB213SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</code>","<code>VFNMSUB231PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VFNMSUB231PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VFNMSUB231PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</code>","<code>VFNMSUB231PH xmm1 {k1}{z}, xmm2, xmm3/m128/m16bcst</code>","<code>VFNMSUB231PH ymm1 {k1}{z}, ymm2, ymm3/m256/m16bcst</code>","<code>VFNMSUB231PH zmm1 {k1}{z}, zmm2, zmm3/m512/m16bcst{er}</code>","<code>VFNMSUB231PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VFNMSUB231PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VFNMSUB231PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</code>","<code>VFNMSUB231SD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</code>","<code>VFNMSUB231SH xmm1 {k1}{z}, xmm2, xmm3/m16{er}</code>","<code>VFNMSUB231SS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</code>","<code>VFPCLASSPD k2 {k1}, xmm2/m128/m64bcst, imm8</code>","<code>VFPCLASSPD k2 {k1}, ymm2/m256/m64bcst, imm8</code>","<code>VFPCLASSPD k2 {k1}, zmm2/m512/m64bcst, imm8</code>","<code>VFPCLASSPH k1 {k2}, xmm2/m128/m16bcst, imm8</code>","<code>VFPCLASSPH k1 {k2}, ymm2/m256/m16bcst, imm8</code>","<code>VFPCLASSPH k1 {k2}, zmm2/m512/m16bcst, imm8</code>","<code>VFPCLASSPS k2 {k1}, xmm2/m128/m32bcst, imm8</code>","<code>VFPCLASSPS k2 {k1}, ymm2/m256/m32bcst, imm8</code>","<code>VFPCLASSPS k2 {k1}, zmm2/m512/m32bcst, imm8</code>","<code>VFPCLASSSD k2 {k1}, xmm2/m64, imm8</code>","<code>VFPCLASSSH k1 {k2}, xmm2/m16, imm8</code>","<code>VFPCLASSSS k2 {k1}, xmm2/m32, imm8</code>","<code>VGATHERDPD xmm1 {k1}, vm32x</code>","<code>VGATHERDPD ymm1 {k1}, vm32x</code>","<code>VGATHERDPD zmm1 {k1}, vm32y</code>","<code>VGATHERDPS xmm1 {k1}, vm32x</code>","<code>VGATHERDPS ymm1 {k1}, vm32y</code>","<code>VGATHERDPS zmm1 {k1}, vm32z</code>","<code>VGATHERPF0DPD vm32y {k1}</code>","<code>VGATHERPF0DPS vm32z {k1}</code>","<code>VGATHERPF0QPD vm64z {k1}</code>","<code>VGATHERPF0QPS vm64z {k1}</code>","<code>VGATHERPF1DPD vm32y {k1}</code>","<code>VGATHERPF1DPS vm32z {k1}</code>","<code>VGATHERPF1QPD vm64z {k1}</code>","<code>VGATHERPF1QPS vm64z {k1}</code>","<code>VGATHERQPD xmm1 {k1}, vm64x</code>","<code>VGATHERQPD ymm1 {k1}, vm64y</code>","<code>VGATHERQPD zmm1 {k1}, vm64z</code>","<code>VGATHERQPS xmm1 {k1}, vm64x</code>","<code>VGATHERQPS xmm1 {k1}, vm64y</code>","<code>VGATHERQPS ymm1 {k1}, vm64z</code>","<code>VGETEXPPD xmm1 {k1}{z}, xmm2/m128/m64bcst</code>","<code>VGETEXPPD ymm1 {k1}{z}, ymm2/m256/m64bcst</code>","<code>VGETEXPPD zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}</code>","<code>VGETEXPPH xmm1 {k1}{z}, xmm2/m128/m16bcst</code>","<code>VGETEXPPH ymm1 {k1}{z}, ymm2/m256/m16bcst</code>","<code>VGETEXPPH zmm1 {k1}{z}, zmm2/m512/m16bcst{sae}</code>","<code>VGETEXPPS xmm1 {k1}{z}, xmm2/m128/m32bcst</code>","<code>VGETEXPPS ymm1 {k1}{z}, ymm2/m256/m32bcst</code>","<code>VGETEXPPS zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}</code>","<code>VGETEXPSD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}</code>","<code>VGETEXPSH xmm1 {k1}{z}, xmm2, xmm3/m16{sae}</code>","<code>VGETEXPSS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}</code>","<code>VGETMANTPD xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</code>","<code>VGETMANTPD ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</code>","<code>VGETMANTPD zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}, imm8</code>","<code>VGETMANTPH xmm1 {k1}{z}, xmm2/m128/m16bcst, imm8</code>","<code>VGETMANTPH ymm1 {k1}{z}, ymm2/m256/m16bcst, imm8</code>","<code>VGETMANTPH zmm1 {k1}{z}, zmm2/m512/m16bcst{sae}, imm8</code>","<code>VGETMANTPS xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</code>","<code>VGETMANTPS ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</code>","<code>VGETMANTPS zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}, imm8</code>","<code>VGETMANTSD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}, imm8</code>","<code>VGETMANTSH xmm1 {k1}{z}, xmm2, xmm3/m16{sae}, imm8</code>","<code>VGETMANTSS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}, imm8</code>","…","…","…","<code>VGF2P8AFFINEQB xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</code>","<code>VGF2P8AFFINEQB ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</code>","<code>VGF2P8AFFINEQB zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</code>","<code>VGF2P8MULB xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VGF2P8MULB ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VGF2P8MULB zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VINSERTF32X4 ymm1 {k1}{z}, ymm2, xmm3/m128, imm8</code>","<code>VINSERTF32X4 zmm1 {k1}{z}, zmm2, xmm3/m128, imm8</code>","<code>VINSERTF32X8 zmm1 {k1}{z}, zmm2, ymm3/m256, imm8</code>","<code>VINSERTF64X2 ymm1 {k1}{z}, ymm2, xmm3/m128, imm8</code>","<code>VINSERTF64X2 zmm1 {k1}{z}, zmm2, xmm3/m128, imm8</code>","<code>VINSERTF64X4 zmm1 {k1}{z}, zmm2, ymm3/m256, imm8</code>","<code>VINSERTI32X4 ymm1 {k1}{z}, ymm2, xmm3/m128, imm8</code>","<code>VINSERTI32X4 zmm1 {k1}{z}, zmm2, xmm3/m128, imm8</code>","<code>VINSERTI32X8 zmm1 {k1}{z}, zmm2, ymm3/m256, imm8</code>","<code>VINSERTI64X2 ymm1 {k1}{z}, ymm2, xmm3/m128, imm8</code>","<code>VINSERTI64X2 zmm1 {k1}{z}, zmm2, xmm3/m128, imm8</code>","<code>VINSERTI64X4 zmm1 {k1}{z}, zmm2, ymm3/m256, imm8</code>","<code>VINSERTPS xmm1, xmm2, xmm3/m32, imm8</code>","<code>VMAXPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VMAXPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VMAXPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{sae}</code>","<code>VMAXPH xmm1 {k1}{z}, xmm2, xmm3/m128/m16bcst</code>","<code>VMAXPH ymm1 {k1}{z}, ymm2, ymm3/m256/m16bcst</code>","<code>VMAXPH zmm1 {k1}{z}, zmm2, zmm3/m512/m16bcst{sae}</code>","<code>VMAXPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VMAXPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VMAXPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{sae}</code>","<code>VMAXSD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}</code>","<code>VMAXSH xmm1 {k1}{z}, xmm2, xmm3/m16{sae}</code>","<code>VMAXSS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}</code>","<code>VMINPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VMINPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VMINPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{sae}</code>","<code>VMINPH xmm1 {k1}{z}, xmm2, xmm3/m128/m16bcst</code>","<code>VMINPH ymm1 {k1}{z}, ymm2, ymm3/m256/m16bcst</code>","<code>VMINPH zmm1 {k1}{z}, zmm2, zmm3/m512/m16bcst{sae}</code>","<code>VMINPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VMINPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VMINPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{sae}</code>","<code>VMINSD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}</code>","<code>VMINSH xmm1 {k1}{z}, xmm2, xmm3/m16{sae}</code>","<code>VMINSS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}</code>","<code>VMOVAPD xmm1 {k1}{z}, xmm2/m128</code>","<code>VMOVAPD xmm2/m128 {k1}{z}, xmm1</code>","<code>VMOVAPD ymm1 {k1}{z}, ymm2/m256</code>","<code>VMOVAPD ymm2/m256 {k1}{z}, ymm1</code>","<code>VMOVAPD zmm1 {k1}{z}, zmm2/m512</code>","<code>VMOVAPD zmm2/m512 {k1}{z}, zmm1</code>","<code>VMOVAPS xmm1 {k1}{z}, xmm2/m128</code>","<code>VMOVAPS xmm2/m128 {k1}{z}, xmm1</code>","<code>VMOVAPS ymm1 {k1}{z}, ymm2/m256</code>","<code>VMOVAPS ymm2/m256 {k1}{z}, ymm1</code>","<code>VMOVAPS zmm1 {k1}{z}, zmm2/m512</code>","<code>VMOVAPS zmm2/m512 {k1}{z}, zmm1</code>","<code>VMOVD r/m32, xmm1</code>","<code>VMOVD xmm1, r/m32</code>","<code>VMOVDDUP xmm1 {k1}{z}, xmm2/m64</code>","<code>VMOVDDUP ymm1 {k1}{z}, ymm2/m256</code>","<code>VMOVDDUP zmm1 {k1}{z}, zmm2/m512</code>","<code>VMOVDQA32 xmm1 {k1}{z}, xmm2/m128</code>","<code>VMOVDQA32 xmm2/m128 {k1}{z}, xmm1</code>","<code>VMOVDQA32 ymm1 {k1}{z}, ymm2/m256</code>","<code>VMOVDQA32 ymm2/m256 {k1}{z}, ymm1</code>","<code>VMOVDQA32 zmm1 {k1}{z}, zmm2/m512</code>","<code>VMOVDQA32 zmm2/m512 {k1}{z}, zmm1</code>","<code>VMOVDQA64 xmm1 {k1}{z}, xmm2/m128</code>","<code>VMOVDQA64 xmm2/m128 {k1}{z}, xmm1</code>","<code>VMOVDQA64 ymm1 {k1}{z}, ymm2/m256</code>","<code>VMOVDQA64 ymm2/m256 {k1}{z}, ymm1</code>","<code>VMOVDQA64 zmm1 {k1}{z}, zmm2/m512</code>","<code>VMOVDQA64 zmm2/m512 {k1}{z}, zmm1</code>","<code>VMOVDQU16 xmm1 {k1}{z}, xmm2/m128</code>","<code>VMOVDQU16 xmm2/m128 {k1}{z}, xmm1</code>","<code>VMOVDQU16 ymm1 {k1}{z}, ymm2/m256</code>","<code>VMOVDQU16 ymm2/m256 {k1}{z}, ymm1</code>","<code>VMOVDQU16 zmm1 {k1}{z}, zmm2/m512</code>","<code>VMOVDQU16 zmm2/m512 {k1}{z}, zmm1</code>","<code>VMOVDQU32 xmm1 {k1}{z}, xmm2/m128</code>","<code>VMOVDQU32 xmm2/m128 {k1}{z}, xmm1</code>","<code>VMOVDQU32 ymm1 {k1}{z}, ymm2/m256</code>","<code>VMOVDQU32 ymm2/m256 {k1}{z}, ymm1</code>","<code>VMOVDQU32 zmm1 {k1}{z}, zmm2/m512</code>","<code>VMOVDQU32 zmm2/m512 {k1}{z}, zmm1</code>","<code>VMOVDQU64 xmm1 {k1}{z}, xmm2/m128</code>","<code>VMOVDQU64 xmm2/m128 {k1}{z}, xmm1</code>","<code>VMOVDQU64 ymm1 {k1}{z}, ymm2/m256</code>","<code>VMOVDQU64 ymm2/m256 {k1}{z}, ymm1</code>","<code>VMOVDQU64 zmm1 {k1}{z}, zmm2/m512</code>","<code>VMOVDQU64 zmm2/m512 {k1}{z}, zmm1</code>","<code>VMOVDQU8 xmm1 {k1}{z}, xmm2/m128</code>","<code>VMOVDQU8 xmm2/m128 {k1}{z}, xmm1</code>","<code>VMOVDQU8 ymm1 {k1}{z}, ymm2/m256</code>","<code>VMOVDQU8 ymm2/m256 {k1}{z}, ymm1</code>","<code>VMOVDQU8 zmm1 {k1}{z}, zmm2/m512</code>","<code>VMOVDQU8 zmm2/m512 {k1}{z}, zmm1</code>","<code>VMOVHLPS xmm1, xmm2, xmm3</code>","<code>VMOVHPD m64, xmm1</code>","<code>VMOVHPD xmm2, xmm1, m64</code>","<code>VMOVHPS m64, xmm1</code>","<code>VMOVHPS xmm2, xmm1, m64</code>","<code>VMOVLHPS xmm1, xmm2, xmm3</code>","<code>VMOVLPD m64, xmm1</code>","<code>VMOVLPD xmm2, xmm1, m64</code>","<code>VMOVLPS m64, xmm1</code>","<code>VMOVLPS xmm2, xmm1, m64</code>","<code>VMOVNTDQ m128, xmm1</code>","<code>VMOVNTDQ m256, ymm1</code>","<code>VMOVNTDQ m512, zmm1</code>","<code>VMOVNTDQA xmm1, m128</code>","<code>VMOVNTDQA ymm1, m256</code>","<code>VMOVNTDQA zmm1, m512</code>","<code>VMOVNTPD m128, xmm1</code>","<code>VMOVNTPD m256, ymm1</code>","<code>VMOVNTPD m512, zmm1</code>","<code>VMOVNTPS m128, xmm1</code>","<code>VMOVNTPS m256, ymm1</code>","<code>VMOVNTPS m512, zmm1</code>","<code>VMOVQ r/m64, xmm1</code>","<code>VMOVQ xmm1, r/m64</code>","<code>VMOVQ xmm1, xmm2/m64</code>","<code>VMOVQ xmm1/m64, xmm2</code>","<code>VMOVSD m64 {k1}, xmm1</code>","<code>VMOVSD xmm1 {k1}{z}, m64</code>","<code>VMOVSD xmm1 {k1}{z}, xmm2, xmm3</code>","<code>VMOVSD xmm1 {k1}{z}, xmm2, xmm3</code>","<code>VMOVSH m16 {k1}, xmm1</code>","<code>VMOVSH xmm1 {k1}{z}, m16</code>","<code>VMOVSH xmm1 {k1}{z}, xmm2, xmm3</code>","<code>VMOVSH xmm1 {k1}{z}, xmm2, xmm3</code>","<code>VMOVSHDUP xmm1 {k1}{z}, xmm2/m128</code>","<code>VMOVSHDUP ymm1 {k1}{z}, ymm2/m256</code>","<code>VMOVSHDUP zmm1 {k1}{z}, zmm2/m512</code>","<code>VMOVSLDUP xmm1 {k1}{z}, xmm2/m128</code>","<code>VMOVSLDUP ymm1 {k1}{z}, ymm2/m256</code>","<code>VMOVSLDUP zmm1 {k1}{z}, zmm2/m512</code>","<code>VMOVSS m32 {k1}, xmm1</code>","<code>VMOVSS xmm1 {k1}{z}, m32</code>","<code>VMOVSS xmm1 {k1}{z}, xmm2, xmm3</code>","<code>VMOVSS xmm1 {k1}{z}, xmm2, xmm3</code>","<code>VMOVUPD xmm1 {k1}{z}, xmm2/m128</code>","<code>VMOVUPD xmm2/m128 {k1}{z}, xmm1</code>","<code>VMOVUPD ymm1 {k1}{z}, ymm2/m256</code>","<code>VMOVUPD ymm2/m256 {k1}{z}, ymm1</code>","<code>VMOVUPD zmm1 {k1}{z}, zmm2/m512</code>","<code>VMOVUPD zmm2/m512 {k1}{z}, zmm1</code>","<code>VMOVUPS xmm1 {k1}{z}, xmm2/m128</code>","<code>VMOVUPS xmm2/m128 {k1}{z}, xmm1</code>","<code>VMOVUPS ymm1 {k1}{z}, ymm2/m256</code>","<code>VMOVUPS ymm2/m256 {k1}{z}, ymm1</code>","<code>VMOVUPS zmm1 {k1}{z}, zmm2/m512</code>","<code>VMOVUPS zmm2/m512 {k1}{z}, zmm1</code>","<code>VMOVW r32/m16, xmm1</code>","<code>VMOVW r64/m16, xmm1</code>","<code>VMOVW xmm1, r32/m16</code>","<code>VMOVW xmm1, r64/m16</code>","<code>VMULPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VMULPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VMULPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</code>","<code>VMULPH xmm1 {k1}{z}, xmm2, xmm3/m128/m16bcst</code>","<code>VMULPH ymm1 {k1}{z}, ymm2, ymm3/m256/m16bcst</code>","<code>VMULPH zmm1 {k1}{z}, zmm2, zmm3/m512/m16bcst{er}</code>","<code>VMULPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VMULPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VMULPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</code>","<code>VMULSD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</code>","<code>VMULSH xmm1 {k1}{z}, xmm2, xmm3/m16{er}</code>","<code>VMULSS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</code>","<code>VORPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VORPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VORPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VORPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VORPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VORPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VP2INTERSECTD k1+1, xmm2, xmm3/m128/m32bcst</code>","<code>VP2INTERSECTD k1+1, ymm2, ymm3/m256/m32bcst</code>","<code>VP2INTERSECTD k1+1, zmm2, zmm3/m512/m32bcst</code>","<code>VP2INTERSECTQ k1+1, xmm2, xmm3/m128/m64bcst</code>","<code>VP2INTERSECTQ k1+1, ymm2, ymm3/m256/m64bcst</code>","<code>VP2INTERSECTQ k1+1, zmm2, zmm3/m512/m64bcst</code>","<code>VP4DPWSSD zmm1 {k1}{z}, zmm2+3, m128</code>","<code>VP4DPWSSDS zmm1 {k1}{z}, zmm2+3, m128</code>","<code>VPABSB xmm1 {k1}{z}, xmm2/m128</code>","<code>VPABSB ymm1 {k1}{z}, ymm2/m256</code>","<code>VPABSB zmm1 {k1}{z}, zmm2/m512</code>","<code>VPABSD xmm1 {k1}{z}, xmm2/m128/m32bcst</code>","<code>VPABSD ymm1 {k1}{z}, ymm2/m256/m32bcst</code>","<code>VPABSD zmm1 {k1}{z}, zmm2/m512/m32bcst</code>","<code>VPABSQ xmm1 {k1}{z}, xmm2/m128/m64bcst</code>","<code>VPABSQ ymm1 {k1}{z}, ymm2/m256/m64bcst</code>","<code>VPABSQ zmm1 {k1}{z}, zmm2/m512/m64bcst</code>","<code>VPABSW xmm1 {k1}{z}, xmm2/m128</code>","<code>VPABSW ymm1 {k1}{z}, ymm2/m256</code>","<code>VPABSW zmm1 {k1}{z}, zmm2/m512</code>","<code>VPACKSSDW xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPACKSSDW ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPACKSSDW zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPACKSSWB xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPACKSSWB ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPACKSSWB zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPACKUSDW xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPACKUSDW ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPACKUSDW zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPACKUSWB xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPACKUSWB ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPACKUSWB zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPADDB xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPADDB ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPADDB zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPADDD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPADDD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPADDD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPADDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPADDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPADDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPADDSB xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPADDSB ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPADDSB zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPADDSW xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPADDSW ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPADDSW zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPADDUSB xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPADDUSB ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPADDUSB zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPADDUSW xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPADDUSW ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPADDUSW zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPADDW xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPADDW ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPADDW zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPALIGNR xmm1 {k1}{z}, xmm2, xmm3/m128, imm8</code>","<code>VPALIGNR ymm1 {k1}{z}, ymm2, ymm3/m256, imm8</code>","<code>VPALIGNR zmm1 {k1}{z}, zmm2, zmm3/m512, imm8</code>","<code>VPANDD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPANDD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPANDD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPANDND xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPANDND ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPANDND zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPANDNQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPANDNQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPANDNQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPANDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPANDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPANDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPAVGB xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPAVGB ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPAVGB zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPAVGW xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPAVGW ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPAVGW zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPBLENDMB xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPBLENDMB ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPBLENDMB zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPBLENDMD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPBLENDMD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPBLENDMD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPBLENDMQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPBLENDMQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPBLENDMQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPBLENDMW xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPBLENDMW ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPBLENDMW zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPBROADCASTB xmm1 {k1}{z}, r32</code>","<code>VPBROADCASTB xmm1 {k1}{z}, xmm2/m8</code>","<code>VPBROADCASTB ymm1 {k1}{z}, r32</code>","<code>VPBROADCASTB ymm1 {k1}{z}, xmm2/m8</code>","<code>VPBROADCASTB zmm1 {k1}{z}, r32</code>","<code>VPBROADCASTB zmm1 {k1}{z}, xmm2/m8</code>","<code>VPBROADCASTD xmm1 {k1}{z}, r32</code>","<code>VPBROADCASTD xmm1 {k1}{z}, xmm2/m32</code>","<code>VPBROADCASTD ymm1 {k1}{z}, r32</code>","<code>VPBROADCASTD ymm1 {k1}{z}, xmm2/m32</code>","<code>VPBROADCASTD zmm1 {k1}{z}, r32</code>","<code>VPBROADCASTD zmm1 {k1}{z}, xmm2/m32</code>","<code>VPBROADCASTMB2Q xmm1, k1</code>","<code>VPBROADCASTMB2Q ymm1, k1</code>","<code>VPBROADCASTMB2Q zmm1, k1</code>","<code>VPBROADCASTMW2D xmm1, k1</code>","<code>VPBROADCASTMW2D ymm1, k1</code>","<code>VPBROADCASTMW2D zmm1, k1</code>","<code>VPBROADCASTQ xmm1 {k1}{z}, r64</code>","<code>VPBROADCASTQ xmm1 {k1}{z}, xmm2/m64</code>","<code>VPBROADCASTQ ymm1 {k1}{z}, r64</code>","<code>VPBROADCASTQ ymm1 {k1}{z}, xmm2/m64</code>","<code>VPBROADCASTQ zmm1 {k1}{z}, r64</code>","<code>VPBROADCASTQ zmm1 {k1}{z}, xmm2/m64</code>","<code>VPBROADCASTW xmm1 {k1}{z}, r32</code>","<code>VPBROADCASTW xmm1 {k1}{z}, xmm2/m16</code>","<code>VPBROADCASTW ymm1 {k1}{z}, r32</code>","<code>VPBROADCASTW ymm1 {k1}{z}, xmm2/m16</code>","<code>VPBROADCASTW zmm1 {k1}{z}, r32</code>","<code>VPBROADCASTW zmm1 {k1}{z}, xmm2/m16</code>","<code>VPCLMULQDQ xmm1, xmm2, xmm3/m128, imm8</code>","<code>VPCLMULQDQ ymm1, ymm2, ymm3/m256, imm8</code>","<code>VPCLMULQDQ zmm1, zmm2, zmm3/m512, imm8</code>","<code>VPCMPB k1 {k2}, xmm2, xmm3/m128, imm8</code>","<code>VPCMPB k1 {k2}, ymm2, ymm3/m256, imm8</code>","<code>VPCMPB k1 {k2}, zmm2, zmm3/m512, imm8</code>","<code>VPCMPD k1 {k2}, xmm2, xmm3/m128/m32bcst, imm8</code>","<code>VPCMPD k1 {k2}, ymm2, ymm3/m256/m32bcst, imm8</code>","<code>VPCMPD k1 {k2}, zmm2, zmm3/m512/m32bcst, imm8</code>","<code>VPCMPEQB k1 {k2}, xmm2, xmm3/m128</code>","<code>VPCMPEQB k1 {k2}, ymm2, ymm3/m256</code>","<code>VPCMPEQB k1 {k2}, zmm2, zmm3/m512</code>","<code>VPCMPEQD k1 {k2}, xmm2, xmm3/m128/m32bcst</code>","<code>VPCMPEQD k1 {k2}, ymm2, ymm3/m256/m32bcst</code>","<code>VPCMPEQD k1 {k2}, zmm2, zmm3/m512/m32bcst</code>","<code>VPCMPEQQ k1 {k2}, xmm2, xmm3/m128/m64bcst</code>","<code>VPCMPEQQ k1 {k2}, ymm2, ymm3/m256/m64bcst</code>","<code>VPCMPEQQ k1 {k2}, zmm2, zmm3/m512/m64bcst</code>","<code>VPCMPEQW k1 {k2}, xmm2, xmm3/m128</code>","<code>VPCMPEQW k1 {k2}, ymm2, ymm3/m256</code>","<code>VPCMPEQW k1 {k2}, zmm2, zmm3/m512</code>","<code>VPCMPGTB k1 {k2}, xmm2, xmm3/m128</code>","<code>VPCMPGTB k1 {k2}, ymm2, ymm3/m256</code>","<code>VPCMPGTB k1 {k2}, zmm2, zmm3/m512</code>","<code>VPCMPGTD k1 {k2}, xmm2, xmm3/m128/m32bcst</code>","<code>VPCMPGTD k1 {k2}, ymm2, ymm3/m256/m32bcst</code>","<code>VPCMPGTD k1 {k2}, zmm2, zmm3/m512/m32bcst</code>","<code>VPCMPGTQ k1 {k2}, xmm2, xmm3/m128/m64bcst</code>","<code>VPCMPGTQ k1 {k2}, ymm2, ymm3/m256/m64bcst</code>","<code>VPCMPGTQ k1 {k2}, zmm2, zmm3/m512/m64bcst</code>","<code>VPCMPGTW k1 {k2}, xmm2, xmm3/m128</code>","<code>VPCMPGTW k1 {k2}, ymm2, ymm3/m256</code>","<code>VPCMPGTW k1 {k2}, zmm2, zmm3/m512</code>","<code>VPCMPQ k1 {k2}, xmm2, xmm3/m128/m64bcst, imm8</code>","<code>VPCMPQ k1 {k2}, ymm2, ymm3/m256/m64bcst, imm8</code>","<code>VPCMPQ k1 {k2}, zmm2, zmm3/m512/m64bcst, imm8</code>","<code>VPCMPUB k1 {k2}, xmm2, xmm3/m128, imm8</code>","<code>VPCMPUB k1 {k2}, ymm2, ymm3/m256, imm8</code>","<code>VPCMPUB k1 {k2}, zmm2, zmm3/m512, imm8</code>","<code>VPCMPUD k1 {k2}, xmm2, xmm3/m128/m32bcst, imm8</code>","<code>VPCMPUD k1 {k2}, ymm2, ymm3/m256/m32bcst, imm8</code>","<code>VPCMPUD k1 {k2}, zmm2, zmm3/m512/m32bcst, imm8</code>","<code>VPCMPUQ k1 {k2}, xmm2, xmm3/m128/m64bcst, imm8</code>","<code>VPCMPUQ k1 {k2}, ymm2, ymm3/m256/m64bcst, imm8</code>","<code>VPCMPUQ k1 {k2}, zmm2, zmm3/m512/m64bcst, imm8</code>","<code>VPCMPUW k1 {k2}, xmm2, xmm3/m128, imm8</code>","<code>VPCMPUW k1 {k2}, ymm2, ymm3/m256, imm8</code>","<code>VPCMPUW k1 {k2}, zmm2, zmm3/m512, imm8</code>","<code>VPCMPW k1 {k2}, xmm2, xmm3/m128, imm8</code>","<code>VPCMPW k1 {k2}, ymm2, ymm3/m256, imm8</code>","<code>VPCMPW k1 {k2}, zmm2, zmm3/m512, imm8</code>","<code>VPCOMPRESSB xmm1/m128 {k1}{z}, xmm2</code>","<code>VPCOMPRESSB ymm1/m256 {k1}{z}, ymm2</code>","<code>VPCOMPRESSB zmm1/m512 {k1}{z}, zmm2</code>","<code>VPCOMPRESSD xmm1/m128 {k1}{z}, xmm2</code>","<code>VPCOMPRESSD ymm1/m256 {k1}{z}, ymm2</code>","<code>VPCOMPRESSD zmm1/m512 {k1}{z}, zmm2</code>","<code>VPCOMPRESSQ xmm1/m128 {k1}{z}, xmm2</code>","<code>VPCOMPRESSQ ymm1/m256 {k1}{z}, ymm2</code>","<code>VPCOMPRESSQ zmm1/m512 {k1}{z}, zmm2</code>","<code>VPCOMPRESSW xmm1/m128 {k1}{z}, xmm2</code>","<code>VPCOMPRESSW ymm1/m256 {k1}{z}, ymm2</code>","<code>VPCOMPRESSW zmm1/m512 {k1}{z}, zmm2</code>","<code>VPCONFLICTD xmm1 {k1}{z}, xmm2/m128/m32bcst</code>","<code>VPCONFLICTD ymm1 {k1}{z}, ymm2/m256/m32bcst</code>","<code>VPCONFLICTD zmm1 {k1}{z}, zmm2/m512/m32bcst</code>","<code>VPCONFLICTQ xmm1 {k1}{z}, xmm2/m128/m64bcst</code>","<code>VPCONFLICTQ ymm1 {k1}{z}, ymm2/m256/m64bcst</code>","<code>VPCONFLICTQ zmm1 {k1}{z}, zmm2/m512/m64bcst</code>","<code>VPDPBUSD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPDPBUSD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPDPBUSD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPDPBUSDS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPDPBUSDS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPDPBUSDS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPDPWSSD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPDPWSSD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPDPWSSD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPDPWSSDS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPDPWSSDS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPDPWSSDS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPERMB xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPERMB ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPERMB zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPERMD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPERMD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPERMI2B xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPERMI2B ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPERMI2B zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPERMI2D xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPERMI2D ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPERMI2D zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPERMI2PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPERMI2PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPERMI2PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPERMI2PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPERMI2PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPERMI2PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPERMI2Q xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPERMI2Q ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPERMI2Q zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPERMI2W xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPERMI2W ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPERMI2W zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPERMILPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPERMILPD xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</code>","<code>VPERMILPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPERMILPD ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</code>","<code>VPERMILPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPERMILPD zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</code>","<code>VPERMILPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPERMILPS xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</code>","<code>VPERMILPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPERMILPS ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</code>","<code>VPERMILPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPERMILPS zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</code>","<code>VPERMPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPERMPD ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</code>","<code>VPERMPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPERMPD zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</code>","<code>VPERMPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPERMPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPERMQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPERMQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</code>","<code>VPERMQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPERMQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</code>","<code>VPERMT2B xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPERMT2B ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPERMT2B zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPERMT2D xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPERMT2D ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPERMT2D zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPERMT2PD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPERMT2PD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPERMT2PD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPERMT2PS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPERMT2PS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPERMT2PS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPERMT2Q xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPERMT2Q ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPERMT2Q zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPERMT2W xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPERMT2W ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPERMT2W zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPERMW xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPERMW ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPERMW zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPEXPANDB xmm1 {k1}{z}, xmm2/m128</code>","<code>VPEXPANDB ymm1 {k1}{z}, ymm2/m256</code>","<code>VPEXPANDB zmm1 {k1}{z}, zmm2/m512</code>","<code>VPEXPANDD xmm1 {k1}{z}, xmm2/m128</code>","<code>VPEXPANDD ymm1 {k1}{z}, ymm2/m256</code>","<code>VPEXPANDD zmm1 {k1}{z}, zmm2/m512</code>","<code>VPEXPANDQ xmm1 {k1}{z}, xmm2/m128</code>","<code>VPEXPANDQ ymm1 {k1}{z}, ymm2/m256</code>","<code>VPEXPANDQ zmm1 {k1}{z}, zmm2/m512</code>","<code>VPEXPANDW xmm1 {k1}{z}, xmm2/m128</code>","<code>VPEXPANDW ymm1 {k1}{z}, ymm2/m256</code>","<code>VPEXPANDW zmm1 {k1}{z}, zmm2/m512</code>","<code>VPEXTRB r32/m8, xmm2, imm8</code>","<code>VPEXTRB r64/m8, xmm2, imm8</code>","<code>VPEXTRD r/m32, xmm2, imm8</code>","<code>VPEXTRQ r/m64, xmm2, imm8</code>","<code>VPEXTRW r32, xmm1, imm8</code>","<code>VPEXTRW r32/m16, xmm2, imm8</code>","<code>VPEXTRW r64, xmm1, imm8</code>","<code>VPEXTRW r64/m16, xmm2, imm8</code>","<code>VPGATHERDD xmm1 {k1}, vm32x</code>","<code>VPGATHERDD ymm1 {k1}, vm32y</code>","<code>VPGATHERDD zmm1 {k1}, vm32z</code>","<code>VPGATHERDQ xmm1 {k1}, vm32x</code>","<code>VPGATHERDQ ymm1 {k1}, vm32x</code>","<code>VPGATHERDQ zmm1 {k1}, vm32y</code>","<code>VPGATHERQD xmm1 {k1}, vm64x</code>","<code>VPGATHERQD xmm1 {k1}, vm64y</code>","<code>VPGATHERQD ymm1 {k1}, vm64z</code>","<code>VPGATHERQQ xmm1 {k1}, vm64x</code>","<code>VPGATHERQQ ymm1 {k1}, vm64y</code>","<code>VPGATHERQQ zmm1 {k1}, vm64z</code>","<code>VPINSRB xmm1, xmm2, r32/m8, imm8</code>","<code>VPINSRB xmm1, xmm2, r64/m8, imm8</code>","<code>VPINSRD xmm1, xmm2, r/m32, imm8</code>","<code>VPINSRQ xmm1, xmm2, r/m64, imm8</code>","<code>VPINSRW xmm1, xmm2, r32/m16, imm8</code>","<code>VPINSRW xmm1, xmm2, r64/m16, imm8</code>","<code>VPLZCNTD xmm1 {k1}{z}, xmm2/m128/m32bcst</code>","<code>VPLZCNTD ymm1 {k1}{z}, ymm2/m256/m32bcst</code>","<code>VPLZCNTD zmm1 {k1}{z}, zmm2/m512/m32bcst</code>","<code>VPLZCNTQ xmm1 {k1}{z}, xmm2/m128/m64bcst</code>","<code>VPLZCNTQ ymm1 {k1}{z}, ymm2/m256/m64bcst</code>","<code>VPLZCNTQ zmm1 {k1}{z}, zmm2/m512/m64bcst</code>","<code>VPMADD52HUQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPMADD52HUQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPMADD52HUQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPMADD52LUQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPMADD52LUQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPMADD52LUQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPMADDUBSW xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPMADDUBSW ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPMADDUBSW zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPMADDWD xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPMADDWD ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPMADDWD zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPMAXSB xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPMAXSB ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPMAXSB zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPMAXSD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPMAXSD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPMAXSD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPMAXSQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPMAXSQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPMAXSQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPMAXSW xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPMAXSW ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPMAXSW zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPMAXUB xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPMAXUB ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPMAXUB zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPMAXUD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPMAXUD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPMAXUD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPMAXUQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPMAXUQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPMAXUQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPMAXUW xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPMAXUW ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPMAXUW zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPMINSB xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPMINSB ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPMINSB zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPMINSD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPMINSD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPMINSD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPMINSQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPMINSQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPMINSQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPMINSW xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPMINSW ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPMINSW zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPMINUB xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPMINUB ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPMINUB zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPMINUD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPMINUD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPMINUD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPMINUQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPMINUQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPMINUQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPMINUW xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPMINUW ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPMINUW zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPMOVB2M k1, xmm1</code>","<code>VPMOVB2M k1, ymm1</code>","<code>VPMOVB2M k1, zmm1</code>","<code>VPMOVD2M k1, xmm1</code>","<code>VPMOVD2M k1, ymm1</code>","<code>VPMOVD2M k1, zmm1</code>","<code>VPMOVDB xmm1/m128 {k1}{z}, zmm2</code>","<code>VPMOVDB xmm1/m32 {k1}{z}, xmm2</code>","<code>VPMOVDB xmm1/m64 {k1}{z}, ymm2</code>","<code>VPMOVDW xmm1/m128 {k1}{z}, ymm2</code>","<code>VPMOVDW xmm1/m64 {k1}{z}, xmm2</code>","<code>VPMOVDW ymm1/m256 {k1}{z}, zmm2</code>","<code>VPMOVM2B xmm1, k1</code>","<code>VPMOVM2B ymm1, k1</code>","<code>VPMOVM2B zmm1, k1</code>","<code>VPMOVM2D xmm1, k1</code>","<code>VPMOVM2D ymm1, k1</code>","<code>VPMOVM2D zmm1, k1</code>","<code>VPMOVM2Q xmm1, k1</code>","<code>VPMOVM2Q ymm1, k1</code>","<code>VPMOVM2Q zmm1, k1</code>","<code>VPMOVM2W xmm1, k1</code>","<code>VPMOVM2W ymm1, k1</code>","<code>VPMOVM2W zmm1, k1</code>","<code>VPMOVQ2M k1, xmm1</code>","<code>VPMOVQ2M k1, ymm1</code>","<code>VPMOVQ2M k1, zmm1</code>","<code>VPMOVQB xmm1/m16 {k1}{z}, xmm2</code>","<code>VPMOVQB xmm1/m32 {k1}{z}, ymm2</code>","<code>VPMOVQB xmm1/m64 {k1}{z}, zmm2</code>","<code>VPMOVQD xmm1/m128 {k1}{z}, ymm2</code>","<code>VPMOVQD xmm1/m64 {k1}{z}, xmm2</code>","<code>VPMOVQD ymm1/m256 {k1}{z}, zmm2</code>","<code>VPMOVQW xmm1/m128 {k1}{z}, zmm2</code>","<code>VPMOVQW xmm1/m32 {k1}{z}, xmm2</code>","<code>VPMOVQW xmm1/m64 {k1}{z}, ymm2</code>","<code>VPMOVSDB xmm1/m128 {k1}{z}, zmm2</code>","<code>VPMOVSDB xmm1/m32 {k1}{z}, xmm2</code>","<code>VPMOVSDB xmm1/m64 {k1}{z}, ymm2</code>","<code>VPMOVSDW xmm1/m128 {k1}{z}, ymm2</code>","<code>VPMOVSDW xmm1/m64 {k1}{z}, xmm2</code>","<code>VPMOVSDW ymm1/m256 {k1}{z}, zmm2</code>","<code>VPMOVSQB xmm1/m16 {k1}{z}, xmm2</code>","<code>VPMOVSQB xmm1/m32 {k1}{z}, ymm2</code>","<code>VPMOVSQB xmm1/m64 {k1}{z}, zmm2</code>","<code>VPMOVSQD xmm1/m128 {k1}{z}, ymm2</code>","<code>VPMOVSQD xmm1/m64 {k1}{z}, xmm2</code>","<code>VPMOVSQD ymm1/m256 {k1}{z}, zmm2</code>","<code>VPMOVSQW xmm1/m128 {k1}{z}, zmm2</code>","<code>VPMOVSQW xmm1/m32 {k1}{z}, xmm2</code>","<code>VPMOVSQW xmm1/m64 {k1}{z}, ymm2</code>","<code>VPMOVSWB xmm1/m128 {k1}{z}, ymm2</code>","<code>VPMOVSWB xmm1/m64 {k1}{z}, xmm2</code>","<code>VPMOVSWB ymm1/m256 {k1}{z}, zmm2</code>","<code>VPMOVSXBD xmm1 {k1}{z}, xmm2/m32</code>","<code>VPMOVSXBD ymm1 {k1}{z}, xmm2/m64</code>","<code>VPMOVSXBD zmm1 {k1}{z}, xmm2/m128</code>","<code>VPMOVSXBQ xmm1 {k1}{z}, xmm2/m16</code>","<code>VPMOVSXBQ ymm1 {k1}{z}, xmm2/m32</code>","<code>VPMOVSXBQ zmm1 {k1}{z}, xmm2/m64</code>","<code>VPMOVSXBW xmm1 {k1}{z}, xmm2/m64</code>","<code>VPMOVSXBW ymm1 {k1}{z}, xmm2/m128</code>","<code>VPMOVSXBW zmm1 {k1}{z}, ymm2/m256</code>","<code>VPMOVSXDQ xmm1 {k1}{z}, xmm2/m64</code>","<code>VPMOVSXDQ ymm1 {k1}{z}, xmm2/m128</code>","<code>VPMOVSXDQ zmm1 {k1}{z}, ymm2/m256</code>","<code>VPMOVSXWD xmm1 {k1}{z}, xmm2/m64</code>","<code>VPMOVSXWD ymm1 {k1}{z}, xmm2/m128</code>","<code>VPMOVSXWD zmm1 {k1}{z}, ymm2/m256</code>","<code>VPMOVSXWQ xmm1 {k1}{z}, xmm2/m32</code>","<code>VPMOVSXWQ ymm1 {k1}{z}, xmm2/m64</code>","<code>VPMOVSXWQ zmm1 {k1}{z}, xmm2/m128</code>","<code>VPMOVUSDB xmm1/m128 {k1}{z}, zmm2</code>","<code>VPMOVUSDB xmm1/m32 {k1}{z}, xmm2</code>","<code>VPMOVUSDB xmm1/m64 {k1}{z}, ymm2</code>","<code>VPMOVUSDW xmm1/m128 {k1}{z}, ymm2</code>","<code>VPMOVUSDW xmm1/m64 {k1}{z}, xmm2</code>","<code>VPMOVUSDW ymm1/m256 {k1}{z}, zmm2</code>","<code>VPMOVUSQB xmm1/m16 {k1}{z}, xmm2</code>","<code>VPMOVUSQB xmm1/m32 {k1}{z}, ymm2</code>","<code>VPMOVUSQB xmm1/m64 {k1}{z}, zmm2</code>","<code>VPMOVUSQD xmm1/m128 {k1}{z}, ymm2</code>","<code>VPMOVUSQD xmm1/m64 {k1}{z}, xmm2</code>","<code>VPMOVUSQD ymm1/m256 {k1}{z}, zmm2</code>","<code>VPMOVUSQW xmm1/m128 {k1}{z}, zmm2</code>","<code>VPMOVUSQW xmm1/m32 {k1}{z}, xmm2</code>","<code>VPMOVUSQW xmm1/m64 {k1}{z}, ymm2</code>","<code>VPMOVUSWB xmm1/m128 {k1}{z}, ymm2</code>","<code>VPMOVUSWB xmm1/m64 {k1}{z}, xmm2</code>","<code>VPMOVUSWB ymm1/m256 {k1}{z}, zmm2</code>","<code>VPMOVW2M k1, xmm1</code>","<code>VPMOVW2M k1, ymm1</code>","<code>VPMOVW2M k1, zmm1</code>","<code>VPMOVWB xmm1/m128 {k1}{z}, ymm2</code>","<code>VPMOVWB xmm1/m64 {k1}{z}, xmm2</code>","<code>VPMOVWB ymm1/m256 {k1}{z}, zmm2</code>","<code>VPMOVZXBD xmm1 {k1}{z}, xmm2/m32</code>","<code>VPMOVZXBD ymm1 {k1}{z}, xmm2/m64</code>","<code>VPMOVZXBD zmm1 {k1}{z}, xmm2/m128</code>","<code>VPMOVZXBQ xmm1 {k1}{z}, xmm2/m16</code>","<code>VPMOVZXBQ ymm1 {k1}{z}, xmm2/m32</code>","<code>VPMOVZXBQ zmm1 {k1}{z}, xmm2/m64</code>","<code>VPMOVZXBW xmm1 {k1}{z}, xmm2/m64</code>","<code>VPMOVZXBW ymm1 {k1}{z}, xmm2/m128</code>","<code>VPMOVZXBW zmm1 {k1}{z}, ymm2/m256</code>","<code>VPMOVZXDQ xmm1 {k1}{z}, xmm2/m64</code>","<code>VPMOVZXDQ ymm1 {k1}{z}, xmm2/m128</code>","<code>VPMOVZXDQ zmm1 {k1}{z}, ymm2/m256</code>","<code>VPMOVZXWD xmm1 {k1}{z}, xmm2/m64</code>","<code>VPMOVZXWD ymm1 {k1}{z}, xmm2/m128</code>","<code>VPMOVZXWD zmm1 {k1}{z}, ymm2/m256</code>","<code>VPMOVZXWQ xmm1 {k1}{z}, xmm2/m32</code>","<code>VPMOVZXWQ ymm1 {k1}{z}, xmm2/m64</code>","<code>VPMOVZXWQ zmm1 {k1}{z}, xmm2/m128</code>","<code>VPMULDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPMULDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPMULDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPMULHRSW xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPMULHRSW ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPMULHRSW zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPMULHUW xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPMULHUW ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPMULHUW zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPMULHW xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPMULHW ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPMULHW zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPMULLD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPMULLD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPMULLD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPMULLQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPMULLQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPMULLQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPMULLW xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPMULLW ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPMULLW zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPMULTISHIFTQB xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPMULTISHIFTQB ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPMULTISHIFTQB zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPMULUDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPMULUDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPMULUDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPOPCNTB xmm1 {k1}{z}, xmm2/m128</code>","<code>VPOPCNTB ymm1 {k1}{z}, ymm2/m256</code>","<code>VPOPCNTB zmm1 {k1}{z}, zmm2/m512</code>","<code>VPOPCNTD xmm1 {k1}{z}, xmm2/m128/m32bcst</code>","<code>VPOPCNTD ymm1 {k1}{z}, ymm2/m256/m32bcst</code>","<code>VPOPCNTD zmm1 {k1}{z}, zmm2/m512/m32bcst</code>","<code>VPOPCNTQ xmm1 {k1}{z}, xmm2/m128/m64bcst</code>","<code>VPOPCNTQ ymm1 {k1}{z}, ymm2/m256/m64bcst</code>","<code>VPOPCNTQ zmm1 {k1}{z}, zmm2/m512/m64bcst</code>","<code>VPOPCNTW xmm1 {k1}{z}, xmm2/m128</code>","<code>VPOPCNTW ymm1 {k1}{z}, ymm2/m256</code>","<code>VPOPCNTW zmm1 {k1}{z}, zmm2/m512</code>","<code>VPORD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPORD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPORD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPORQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPORQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPORQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPROLD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</code>","<code>VPROLD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</code>","<code>VPROLD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</code>","<code>VPROLQ xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</code>","<code>VPROLQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</code>","<code>VPROLQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</code>","<code>VPROLVD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPROLVD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPROLVD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPROLVQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPROLVQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPROLVQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPRORD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</code>","<code>VPRORD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</code>","<code>VPRORD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</code>","<code>VPRORQ xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</code>","<code>VPRORQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</code>","<code>VPRORQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</code>","<code>VPRORVD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPRORVD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPRORVD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPRORVQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPRORVQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPRORVQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPSADBW xmm1, xmm2, xmm3/m128</code>","<code>VPSADBW ymm1, ymm2, ymm3/m256</code>","<code>VPSADBW zmm1, zmm2, zmm3/m512</code>","<code>VPSCATTERDD vm32x {k1}, xmm1</code>","<code>VPSCATTERDD vm32y {k1}, ymm1</code>","<code>VPSCATTERDD vm32z {k1}, zmm1</code>","<code>VPSCATTERDQ vm32x {k1}, xmm1</code>","<code>VPSCATTERDQ vm32x {k1}, ymm1</code>","<code>VPSCATTERDQ vm32y {k1}, zmm1</code>","<code>VPSCATTERQD vm64x {k1}, xmm1</code>","<code>VPSCATTERQD vm64y {k1}, xmm1</code>","<code>VPSCATTERQD vm64z {k1}, ymm1</code>","<code>VPSCATTERQQ vm64x {k1}, xmm1</code>","<code>VPSCATTERQQ vm64y {k1}, ymm1</code>","<code>VPSCATTERQQ vm64z {k1}, zmm1</code>","<code>VPSHLDD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</code>","<code>VPSHLDD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</code>","<code>VPSHLDD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</code>","<code>VPSHLDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</code>","<code>VPSHLDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</code>","<code>VPSHLDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</code>","<code>VPSHLDVD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPSHLDVD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPSHLDVD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPSHLDVQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPSHLDVQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPSHLDVQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPSHLDVW xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPSHLDVW ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPSHLDVW zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPSHLDW xmm1 {k1}{z}, xmm2, xmm3/m128, imm8</code>","<code>VPSHLDW ymm1 {k1}{z}, ymm2, ymm3/m256, imm8</code>","<code>VPSHLDW zmm1 {k1}{z}, zmm2, zmm3/m512, imm8</code>","<code>VPSHRDD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</code>","<code>VPSHRDD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</code>","<code>VPSHRDD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</code>","<code>VPSHRDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</code>","<code>VPSHRDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</code>","<code>VPSHRDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</code>","<code>VPSHRDVD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPSHRDVD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPSHRDVD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPSHRDVQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPSHRDVQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPSHRDVQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPSHRDVW xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPSHRDVW ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPSHRDVW zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPSHRDW xmm1 {k1}{z}, xmm2, xmm3/m128, imm8</code>","<code>VPSHRDW ymm1 {k1}{z}, ymm2, ymm3/m256, imm8</code>","<code>VPSHRDW zmm1 {k1}{z}, zmm2, zmm3/m512, imm8</code>","<code>VPSHUFB xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPSHUFB ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPSHUFB zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPSHUFBITQMB k1 {k2}, xmm2, xmm3/m128</code>","<code>VPSHUFBITQMB k1 {k2}, ymm2, ymm3/m256</code>","<code>VPSHUFBITQMB k1 {k2}, zmm2, zmm3/m512</code>","<code>VPSHUFD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</code>","<code>VPSHUFD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</code>","<code>VPSHUFD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</code>","<code>VPSHUFHW xmm1 {k1}{z}, xmm2/m128, imm8</code>","<code>VPSHUFHW ymm1 {k1}{z}, ymm2/m256, imm8</code>","<code>VPSHUFHW zmm1 {k1}{z}, zmm2/m512, imm8</code>","<code>VPSHUFLW xmm1 {k1}{z}, xmm2/m128, imm8</code>","<code>VPSHUFLW ymm1 {k1}{z}, ymm2/m256, imm8</code>","<code>VPSHUFLW zmm1 {k1}{z}, zmm2/m512, imm8</code>","<code>VPSLLD xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPSLLD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</code>","<code>VPSLLD ymm1 {k1}{z}, ymm2, xmm3/m128</code>","<code>VPSLLD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</code>","<code>VPSLLD zmm1 {k1}{z}, zmm2, xmm3/m128</code>","<code>VPSLLD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</code>","<code>VPSLLDQ xmm1, xmm2/m128, imm8</code>","<code>VPSLLDQ ymm1, ymm2/m256, imm8</code>","<code>VPSLLDQ zmm1, zmm2/m512, imm8</code>","<code>VPSLLQ xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPSLLQ xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</code>","<code>VPSLLQ ymm1 {k1}{z}, ymm2, xmm3/m128</code>","<code>VPSLLQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</code>","<code>VPSLLQ zmm1 {k1}{z}, zmm2, xmm3/m128</code>","<code>VPSLLQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</code>","<code>VPSLLVD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPSLLVD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPSLLVD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPSLLVQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPSLLVQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPSLLVQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPSLLVW xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPSLLVW ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPSLLVW zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPSLLW xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPSLLW xmm1 {k1}{z}, xmm2/m128, imm8</code>","<code>VPSLLW ymm1 {k1}{z}, ymm2, xmm3/m128</code>","<code>VPSLLW ymm1 {k1}{z}, ymm2/m256, imm8</code>","<code>VPSLLW zmm1 {k1}{z}, zmm2, xmm3/m128</code>","<code>VPSLLW zmm1 {k1}{z}, zmm2/m512, imm8</code>","<code>VPSRAD xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPSRAD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</code>","<code>VPSRAD ymm1 {k1}{z}, ymm2, xmm3/m128</code>","<code>VPSRAD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</code>","<code>VPSRAD zmm1 {k1}{z}, zmm2, xmm3/m128</code>","<code>VPSRAD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</code>","<code>VPSRAQ xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPSRAQ xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</code>","<code>VPSRAQ ymm1 {k1}{z}, ymm2, xmm3/m128</code>","<code>VPSRAQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</code>","<code>VPSRAQ zmm1 {k1}{z}, zmm2, xmm3/m128</code>","<code>VPSRAQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</code>","<code>VPSRAVD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPSRAVD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPSRAVD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPSRAVQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPSRAVQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPSRAVQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPSRAVW xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPSRAVW ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPSRAVW zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPSRAW xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPSRAW xmm1 {k1}{z}, xmm2/m128, imm8</code>","<code>VPSRAW ymm1 {k1}{z}, ymm2, xmm3/m128</code>","<code>VPSRAW ymm1 {k1}{z}, ymm2/m256, imm8</code>","<code>VPSRAW zmm1 {k1}{z}, zmm2, xmm3/m128</code>","<code>VPSRAW zmm1 {k1}{z}, zmm2/m512, imm8</code>","<code>VPSRLD xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPSRLD xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</code>","<code>VPSRLD ymm1 {k1}{z}, ymm2, xmm3/m128</code>","<code>VPSRLD ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</code>","<code>VPSRLD zmm1 {k1}{z}, zmm2, xmm3/m128</code>","<code>VPSRLD zmm1 {k1}{z}, zmm2/m512/m32bcst, imm8</code>","<code>VPSRLDQ xmm1, xmm2/m128, imm8</code>","<code>VPSRLDQ ymm1, ymm2/m256, imm8</code>","<code>VPSRLDQ zmm1, zmm2/m512, imm8</code>","<code>VPSRLQ xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPSRLQ xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</code>","<code>VPSRLQ ymm1 {k1}{z}, ymm2, xmm3/m128</code>","<code>VPSRLQ ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</code>","<code>VPSRLQ zmm1 {k1}{z}, zmm2, xmm3/m128</code>","<code>VPSRLQ zmm1 {k1}{z}, zmm2/m512/m64bcst, imm8</code>","<code>VPSRLVD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPSRLVD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPSRLVD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPSRLVQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPSRLVQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPSRLVQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPSRLVW xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPSRLVW ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPSRLVW zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPSRLW xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPSRLW xmm1 {k1}{z}, xmm2/m128, imm8</code>","<code>VPSRLW ymm1 {k1}{z}, ymm2, xmm3/m128</code>","<code>VPSRLW ymm1 {k1}{z}, ymm2/m256, imm8</code>","<code>VPSRLW zmm1 {k1}{z}, zmm2, xmm3/m128</code>","<code>VPSRLW zmm1 {k1}{z}, zmm2/m512, imm8</code>","<code>VPSUBB xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPSUBB ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPSUBB zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPSUBD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPSUBD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPSUBD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPSUBQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPSUBQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPSUBQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPSUBSB xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPSUBSB ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPSUBSB zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPSUBSW xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPSUBSW ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPSUBSW zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPSUBUSB xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPSUBUSB ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPSUBUSB zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPSUBUSW xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPSUBUSW ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPSUBUSW zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPSUBW xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPSUBW ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPSUBW zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPTERNLOGD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</code>","<code>VPTERNLOGD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</code>","<code>VPTERNLOGD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</code>","<code>VPTERNLOGQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</code>","<code>VPTERNLOGQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</code>","<code>VPTERNLOGQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</code>","<code>VPTESTMB k2 {k1}, xmm2, xmm3/m128</code>","<code>VPTESTMB k2 {k1}, ymm2, ymm3/m256</code>","<code>VPTESTMB k2 {k1}, zmm2, zmm3/m512</code>","<code>VPTESTMD k2 {k1}, xmm2, xmm3/m128/m32bcst</code>","<code>VPTESTMD k2 {k1}, ymm2, ymm3/m256/m32bcst</code>","<code>VPTESTMD k2 {k1}, zmm2, zmm3/m512/m32bcst</code>","<code>VPTESTMQ k2 {k1}, xmm2, xmm3/m128/m64bcst</code>","<code>VPTESTMQ k2 {k1}, ymm2, ymm3/m256/m64bcst</code>","<code>VPTESTMQ k2 {k1}, zmm2, zmm3/m512/m64bcst</code>","<code>VPTESTMW k2 {k1}, xmm2, xmm3/m128</code>","<code>VPTESTMW k2 {k1}, ymm2, ymm3/m256</code>","<code>VPTESTMW k2 {k1}, zmm2, zmm3/m512</code>","<code>VPTESTNMB k2 {k1}, xmm2, xmm3/m128</code>","<code>VPTESTNMB k2 {k1}, ymm2, ymm3/m256</code>","<code>VPTESTNMB k2 {k1}, zmm2, zmm3/m512</code>","<code>VPTESTNMD k2 {k1}, xmm2, xmm3/m128/m32bcst</code>","<code>VPTESTNMD k2 {k1}, ymm2, ymm3/m256/m32bcst</code>","<code>VPTESTNMD k2 {k1}, zmm2, zmm3/m512/m32bcst</code>","<code>VPTESTNMQ k2 {k1}, xmm2, xmm3/m128/m64bcst</code>","<code>VPTESTNMQ k2 {k1}, ymm2, ymm3/m256/m64bcst</code>","<code>VPTESTNMQ k2 {k1}, zmm2, zmm3/m512/m64bcst</code>","<code>VPTESTNMW k2 {k1}, xmm2, xmm3/m128</code>","<code>VPTESTNMW k2 {k1}, ymm2, ymm3/m256</code>","<code>VPTESTNMW k2 {k1}, zmm2, zmm3/m512</code>","<code>VPUNPCKHBW xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPUNPCKHBW ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPUNPCKHBW zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPUNPCKHDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPUNPCKHDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPUNPCKHDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPUNPCKHQDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPUNPCKHQDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPUNPCKHQDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPUNPCKHWD xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPUNPCKHWD ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPUNPCKHWD zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPUNPCKLBW xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPUNPCKLBW ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPUNPCKLBW zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPUNPCKLDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPUNPCKLDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPUNPCKLDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPUNPCKLQDQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPUNPCKLQDQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPUNPCKLQDQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VPUNPCKLWD xmm1 {k1}{z}, xmm2, xmm3/m128</code>","<code>VPUNPCKLWD ymm1 {k1}{z}, ymm2, ymm3/m256</code>","<code>VPUNPCKLWD zmm1 {k1}{z}, zmm2, zmm3/m512</code>","<code>VPXORD xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VPXORD ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VPXORD zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VPXORQ xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VPXORQ ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VPXORQ zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VRANGEPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</code>","<code>VRANGEPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</code>","<code>VRANGEPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{sae}, imm8</code>","<code>VRANGEPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</code>","<code>VRANGEPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</code>","<code>VRANGEPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{sae}, imm8</code>","<code>VRANGESD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}, imm8</code>","<code>VRANGESS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}, imm8</code>","<code>VRCP14PD xmm1 {k1}{z}, xmm2/m128/m64bcst</code>","<code>VRCP14PD ymm1 {k1}{z}, ymm2/m256/m64bcst</code>","<code>VRCP14PD zmm1 {k1}{z}, zmm2/m512/m64bcst</code>","<code>VRCP14PS xmm1 {k1}{z}, xmm2/m128/m32bcst</code>","<code>VRCP14PS ymm1 {k1}{z}, ymm2/m256/m32bcst</code>","<code>VRCP14PS zmm1 {k1}{z}, zmm2/m512/m32bcst</code>","<code>VRCP14SD xmm1 {k1}{z}, xmm2, xmm3/m64</code>","<code>VRCP14SS xmm1 {k1}{z}, xmm2, xmm3/m32</code>","<code>VRCP28PD zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}</code>","<code>VRCP28PS zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}</code>","<code>VRCP28SD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}</code>","<code>VRCP28SS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}</code>","<code>VRCPPH xmm1 {k1}{z}, xmm2/m128/m16bcst</code>","<code>VRCPPH ymm1 {k1}{z}, ymm2/m256/m16bcst</code>","<code>VRCPPH zmm1 {k1}{z}, zmm2/m512/m16bcst</code>","<code>VRCPSH xmm1 {k1}{z}, xmm2, xmm3/m16</code>","<code>VREDUCEPD xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</code>","<code>VREDUCEPD ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</code>","<code>VREDUCEPD zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}, imm8</code>","<code>VREDUCEPH xmm1 {k1}{z}, xmm2/m128/m16bcst, imm8</code>","<code>VREDUCEPH ymm1 {k1}{z}, ymm2/m256/m16bcst, imm8</code>","<code>VREDUCEPH zmm1 {k1}{z}, zmm2/m512/m16bcst{sae}, imm8</code>","<code>VREDUCEPS xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</code>","<code>VREDUCEPS ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</code>","<code>VREDUCEPS zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}, imm8</code>","<code>VREDUCESD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}, imm8</code>","<code>VREDUCESH xmm1 {k1}{z}, xmm2, xmm3/m16{sae}, imm8</code>","<code>VREDUCESS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}, imm8</code>","<code>VRNDSCALEPD xmm1 {k1}{z}, xmm2/m128/m64bcst, imm8</code>","<code>VRNDSCALEPD ymm1 {k1}{z}, ymm2/m256/m64bcst, imm8</code>","<code>VRNDSCALEPD zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}, imm8</code>","<code>VRNDSCALEPH xmm1 {k1}{z}, xmm2/m128/m16bcst, imm8</code>","<code>VRNDSCALEPH ymm1 {k1}{z}, ymm2/m256/m16bcst, imm8</code>","<code>VRNDSCALEPH zmm1 {k1}{z}, zmm2/m512/m16bcst{sae}, imm8</code>","<code>VRNDSCALEPS xmm1 {k1}{z}, xmm2/m128/m32bcst, imm8</code>","<code>VRNDSCALEPS ymm1 {k1}{z}, ymm2/m256/m32bcst, imm8</code>","<code>VRNDSCALEPS zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}, imm8</code>","<code>VRNDSCALESD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}, imm8</code>","<code>VRNDSCALESH xmm1 {k1}{z}, xmm2, xmm3/m16{sae}, imm8</code>","<code>VRNDSCALESS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}, imm8</code>","<code>VRSQRT14PD xmm1 {k1}{z}, xmm2/m128/m64bcst</code>","<code>VRSQRT14PD ymm1 {k1}{z}, ymm2/m256/m64bcst</code>","<code>VRSQRT14PD zmm1 {k1}{z}, zmm2/m512/m64bcst</code>","<code>VRSQRT14PS xmm1 {k1}{z}, xmm2/m128/m32bcst</code>","<code>VRSQRT14PS ymm1 {k1}{z}, ymm2/m256/m32bcst</code>","<code>VRSQRT14PS zmm1 {k1}{z}, zmm2/m512/m32bcst</code>","<code>VRSQRT14SD xmm1 {k1}{z}, xmm2, xmm3/m64</code>","<code>VRSQRT14SS xmm1 {k1}{z}, xmm2, xmm3/m32</code>","<code>VRSQRT28PD zmm1 {k1}{z}, zmm2/m512/m64bcst{sae}</code>","<code>VRSQRT28PS zmm1 {k1}{z}, zmm2/m512/m32bcst{sae}</code>","<code>VRSQRT28SD xmm1 {k1}{z}, xmm2, xmm3/m64{sae}</code>","<code>VRSQRT28SS xmm1 {k1}{z}, xmm2, xmm3/m32{sae}</code>","<code>VRSQRTPH xmm1 {k1}{z}, xmm2/m128/m16bcst</code>","<code>VRSQRTPH ymm1 {k1}{z}, ymm2/m256/m16bcst</code>","<code>VRSQRTPH zmm1 {k1}{z}, zmm2/m512/m16bcst</code>","<code>VRSQRTSH xmm1 {k1}{z}, xmm2, xmm3/m16</code>","<code>VSCALEFPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VSCALEFPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VSCALEFPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</code>","<code>VSCALEFPH xmm1 {k1}{z}, xmm2, xmm3/m128/m16bcst</code>","<code>VSCALEFPH ymm1 {k1}{z}, ymm2, ymm3/m256/m16bcst</code>","<code>VSCALEFPH zmm1 {k1}{z}, zmm2, zmm3/m512/m16bcst{er}</code>","<code>VSCALEFPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VSCALEFPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VSCALEFPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</code>","<code>VSCALEFSD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</code>","<code>VSCALEFSH xmm1 {k1}{z}, xmm2, xmm3/m16{er}</code>","<code>VSCALEFSS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</code>","<code>VSCATTERDPD vm32x {k1}, xmm1</code>","<code>VSCATTERDPD vm32x {k1}, ymm1</code>","<code>VSCATTERDPD vm32y {k1}, zmm1</code>","<code>VSCATTERDPS vm32x {k1}, xmm1</code>","<code>VSCATTERDPS vm32y {k1}, ymm1</code>","<code>VSCATTERDPS vm32z {k1}, zmm1</code>","<code>VSCATTERPF0DPD vm32y {k1}</code>","<code>VSCATTERPF0DPS vm32z {k1}</code>","<code>VSCATTERPF0QPD vm64z {k1}</code>","<code>VSCATTERPF0QPS vm64z {k1}</code>","<code>VSCATTERPF1DPD vm32y {k1}</code>","<code>VSCATTERPF1DPS vm32z {k1}</code>","<code>VSCATTERPF1QPD vm64z {k1}</code>","<code>VSCATTERPF1QPS vm64z {k1}</code>","<code>VSCATTERQPD vm64x {k1}, xmm1</code>","<code>VSCATTERQPD vm64y {k1}, ymm1</code>","<code>VSCATTERQPD vm64z {k1}, zmm1</code>","<code>VSCATTERQPS vm64x {k1}, xmm1</code>","<code>VSCATTERQPS vm64y {k1}, xmm1</code>","<code>VSCATTERQPS vm64z {k1}, ymm1</code>","<code>VSHUFF32X4 ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</code>","<code>VSHUFF32X4 zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</code>","<code>VSHUFF64X2 ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</code>","<code>VSHUFF64X2 zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</code>","<code>VSHUFI32X4 ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</code>","<code>VSHUFI32X4 zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</code>","<code>VSHUFI64X2 ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</code>","<code>VSHUFI64X2 zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</code>","<code>VSHUFPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst, imm8</code>","<code>VSHUFPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst, imm8</code>","<code>VSHUFPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst, imm8</code>","<code>VSHUFPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst, imm8</code>","<code>VSHUFPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst, imm8</code>","<code>VSHUFPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst, imm8</code>","<code>VSQRTPD xmm1 {k1}{z}, xmm2/m128/m64bcst</code>","<code>VSQRTPD ymm1 {k1}{z}, ymm2/m256/m64bcst</code>","<code>VSQRTPD zmm1 {k1}{z}, zmm2/m512/m64bcst{er}</code>","<code>VSQRTPH xmm1 {k1}{z}, xmm2/m128/m16bcst</code>","<code>VSQRTPH ymm1 {k1}{z}, ymm2/m256/m16bcst</code>","<code>VSQRTPH zmm1 {k1}{z}, zmm2/m512/m16bcst{er}</code>","<code>VSQRTPS xmm1 {k1}{z}, xmm2/m128/m32bcst</code>","<code>VSQRTPS ymm1 {k1}{z}, ymm2/m256/m32bcst</code>","<code>VSQRTPS zmm1 {k1}{z}, zmm2/m512/m32bcst{er}</code>","<code>VSQRTSD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</code>","<code>VSQRTSH xmm1 {k1}{z}, xmm2, xmm3/m16{er}</code>","<code>VSQRTSS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</code>","<code>VSUBPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VSUBPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VSUBPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst{er}</code>","<code>VSUBPH xmm1 {k1}{z}, xmm2, xmm3/m128/m16bcst</code>","<code>VSUBPH ymm1 {k1}{z}, ymm2, ymm3/m256/m16bcst</code>","<code>VSUBPH zmm1 {k1}{z}, zmm2, zmm3/m512/m16bcst{er}</code>","<code>VSUBPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VSUBPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VSUBPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst{er}</code>","<code>VSUBSD xmm1 {k1}{z}, xmm2, xmm3/m64{er}</code>","<code>VSUBSH xmm1 {k1}{z}, xmm2, xmm3/m16{er}</code>","<code>VSUBSS xmm1 {k1}{z}, xmm2, xmm3/m32{er}</code>","<code>VUCOMISD xmm1, xmm2/m64{sae}</code>","<code>VUCOMISH xmm1, xmm2/m16{sae}</code>","<code>VUCOMISS xmm1, xmm2/m32{sae}</code>","<code>VUNPCKHPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VUNPCKHPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VUNPCKHPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VUNPCKHPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VUNPCKHPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VUNPCKHPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VUNPCKLPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VUNPCKLPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VUNPCKLPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VUNPCKLPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VUNPCKLPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VUNPCKLPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>VXORPD xmm1 {k1}{z}, xmm2, xmm3/m128/m64bcst</code>","<code>VXORPD ymm1 {k1}{z}, ymm2, ymm3/m256/m64bcst</code>","<code>VXORPD zmm1 {k1}{z}, zmm2, zmm3/m512/m64bcst</code>","<code>VXORPS xmm1 {k1}{z}, xmm2, xmm3/m128/m32bcst</code>","<code>VXORPS ymm1 {k1}{z}, ymm2, ymm3/m256/m32bcst</code>","<code>VXORPS zmm1 {k1}{z}, zmm2, zmm3/m512/m32bcst</code>","<code>EMMS</code>","","<code>ENCLS</code>","","<code>ENCLU</code>","","<code>ENCLV</code>","","","<code>ENCODEKEY128 r32, r32, &lt;XMM0-2&gt;, &lt;XMM4-6&gt;</code>","","<code>ENCODEKEY256 r32, r32, &lt;XMM0-6&gt;</code>","Instruction encoding","<code>ENDBR32</code>","","<code>ENDBR64</code>","","","<code>ENQCMD r16, m512</code>","<code>ENQCMD r32, m512</code>","<code>ENQCMD r64, m512</code>","","<code>ENQCMDS r16, m512</code>","<code>ENQCMDS r32, m512</code>","<code>ENQCMDS r64, m512</code>","","<code>ENTER imm16, imm8</code>","<code>ENTER imm16, imm8</code>","<code>ENTER imm16, imm8</code>","<code>ERETS</code>","","<code>ERETU</code>","","MVEX eviction hint: <code>{eh}</code>","","<code>EXTRACTPS r64/m32, xmm1, imm8</code>","<code>EXTRACTPS r/m32, xmm1, imm8</code>","","<code>EXTRQ xmm1, imm8, imm8</code>","<code>EXTRQ xmm1, xmm2</code>","<code>F2XM1</code>","","Decode opcodes <code>0F0D</code> and <code>0F18-0F1F</code> as reserved-nop …","","","<code>FABS</code>","","","<code>FADD m32fp</code>","<code>FADD m64fp</code>","<code>FADD ST(0), ST(i)</code>","<code>FADD ST(i), ST(0)</code>","","<code>FADDP ST(i), ST(0)</code>","Far 16-bit branch. This operand kind uses …","Far 32-bit branch. This operand kind uses …","","<code>FBLD m80bcd</code>","","<code>FBSTP m80bcd</code>","<code>FCHS</code>","","<code>FCLEX</code>","","","<code>FCMOVB ST(0), ST(i)</code>","","<code>FCMOVBE ST(0), ST(i)</code>","","<code>FCMOVE ST(0), ST(i)</code>","","<code>FCMOVNB ST(0), ST(i)</code>","","<code>FCMOVNBE ST(0), ST(i)</code>","","<code>FCMOVNE ST(0), ST(i)</code>","","<code>FCMOVNU ST(0), ST(i)</code>","","<code>FCMOVU ST(0), ST(i)</code>","","<code>FCOM m32fp</code>","<code>FCOM m64fp</code>","<code>FCOM ST(i)</code>","<code>FCOM ST(i)</code>","","<code>FCOMI ST, ST(i)</code>","","<code>FCOMIP ST, ST(i)</code>","","<code>FCOMP m32fp</code>","<code>FCOMP m64fp</code>","<code>FCOMP ST(i)</code>","<code>FCOMP ST(i)</code>","<code>FCOMP ST(i)</code>","<code>FCOMPP</code>","","<code>FCOS</code>","","<code>FDECSTP</code>","","<code>FDISI</code>","","","<code>FDIV m32fp</code>","<code>FDIV m64fp</code>","<code>FDIV ST(0), ST(i)</code>","<code>FDIV ST(i), ST(0)</code>","","<code>FDIVP ST(i), ST(0)</code>","","<code>FDIVR m32fp</code>","<code>FDIVR m64fp</code>","<code>FDIVR ST(0), ST(i)</code>","<code>FDIVR ST(i), ST(0)</code>","","<code>FDIVRP ST(i), ST(0)</code>","<code>FEMMS</code>","","<code>FENI</code>","","","<code>FFREE ST(i)</code>","","<code>FFREEP ST(i)</code>","","<code>FIADD m16int</code>","<code>FIADD m32int</code>","","<code>FICOM m16int</code>","<code>FICOM m32int</code>","","<code>FICOMP m16int</code>","<code>FICOMP m32int</code>","","<code>FIDIV m16int</code>","<code>FIDIV m32int</code>","","<code>FIDIVR m16int</code>","<code>FIDIVR m32int</code>","","<code>FILD m16int</code>","<code>FILD m32int</code>","<code>FILD m64int</code>","","<code>FIMUL m16int</code>","<code>FIMUL m32int</code>","<code>FINCSTP</code>","","<code>FINIT</code>","","","<code>FIST m16int</code>","<code>FIST m32int</code>","","<code>FISTP m16int</code>","<code>FISTP m32int</code>","<code>FISTP m64int</code>","","<code>FISTTP m16int</code>","<code>FISTTP m32int</code>","<code>FISTTP m64int</code>","","<code>FISUB m16int</code>","<code>FISUB m32int</code>","","<code>FISUBR m16int</code>","<code>FISUBR m32int</code>","","<code>FLD1</code>","","<code>FLD m32fp</code>","<code>FLD m64fp</code>","<code>FLD m80fp</code>","<code>FLD ST(i)</code>","","<code>FLDCW m2byte</code>","","<code>FLDENV m14byte</code>","<code>FLDENV m28byte</code>","<code>FLDL2E</code>","","<code>FLDL2T</code>","","<code>FLDLG2</code>","","<code>FLDLN2</code>","","<code>FLDPI</code>","","<code>FLDZ</code>","","Memory location contains a <code>f128</code>","Memory location contains a <code>f16</code>","Memory location contains a <code>f32</code>","Memory location contains a <code>f64</code>","Memory location contains a <code>f80</code>","","<code>FMUL m32fp</code>","<code>FMUL m64fp</code>","<code>FMUL ST(0), ST(i)</code>","<code>FMUL ST(i), ST(0)</code>","","<code>FMULP ST(i), ST(0)</code>","<code>FNCLEX</code>","","<code>FNDISI</code>","","<code>FNENI</code>","","<code>FNINIT</code>","","<code>FNOP</code>","","","<code>FNSAVE m108byte</code>","<code>FNSAVE m94byte</code>","<code>FNSETPM</code>","","","<code>FNSTCW m2byte</code>","","<code>FNSTDW AX</code>","","<code>FNSTENV m14byte</code>","<code>FNSTENV m28byte</code>","","<code>FNSTSG AX</code>","","<code>FNSTSW AX</code>","<code>FNSTSW m2byte</code>","Format mnemonic options","Formats instructions","Operand options","Formatter options","Can override options used by a <code>Formatter</code>","Used by a <code>Formatter</code> to write all text. <code>String</code> also …","Formatter text kind","<code>FPATAN</code>","","<code>FPREM</code>","","<code>FPREM1</code>","","<code>FPTAN</code>","","Memory location contains a 14-byte FPU environment (16-bit …","Memory location contains a 28-byte FPU environment …","Memory location contains a 108-byte FPU environment …","Memory location contains a 94-byte FPU environment (16-bit …","<code>FRICHOP</code>","","<code>FRINEAR</code>","","<code>FRINT2</code>","","<code>FRNDINT</code>","","","<code>FRSTOR m108byte</code>","<code>FRSTOR m94byte</code>","<code>FRSTPM</code>","","","<code>FSAVE m108byte</code>","<code>FSAVE m94byte</code>","<code>FSCALE</code>","","<code>FSETPM</code>","","<code>FSIN</code>","","<code>FSINCOS</code>","","<code>FSQRT</code>","","","<code>FST m32fp</code>","<code>FST m64fp</code>","<code>FST ST(i)</code>","","<code>FSTCW m2byte</code>","","<code>FSTDW AX</code>","","<code>FSTENV m14byte</code>","<code>FSTENV m28byte</code>","","<code>FSTP m32fp</code>","<code>FSTP m64fp</code>","<code>FSTP m80fp</code>","<code>FSTP ST(i)</code>","<code>FSTP ST(i)</code>","<code>FSTP ST(i)</code>","","<code>FSTPNCE ST(i)</code>","","<code>FSTSG AX</code>","","<code>FSTSW AX</code>","<code>FSTSW m2byte</code>","","<code>FSUB m32fp</code>","<code>FSUB m64fp</code>","<code>FSUB ST(0), ST(i)</code>","<code>FSUB ST(i), ST(0)</code>","","<code>FSUBP ST(i), ST(0)</code>","","<code>FSUBR m32fp</code>","<code>FSUBR m64fp</code>","<code>FSUBR ST(0), ST(i)</code>","<code>FSUBR ST(i), ST(0)</code>","","<code>FSUBRP ST(i), ST(0)</code>","<code>FTST</code>","","<code>FTSTP</code>","","","<code>FUCOM ST(i)</code>","","<code>FUCOMI ST, ST(i)</code>","","<code>FUCOMIP ST, ST(i)</code>","","<code>FUCOMP ST(i)</code>","<code>FUCOMPP</code>","","Function symbol","Function address (eg. <code>CALL XXXXXX</code>)","Memory location contains a 16-bit limit and a 64-bit …","Memory location contains a 16-bit limit and a 32-bit …","<code>FXAM</code>","","","<code>FXCH ST(i)</code>","<code>FXCH ST(i)</code>","<code>FXCH ST(i)</code>","","","<code>FXRSTOR64 m512byte</code>","<code>FXRSTOR m512byte</code>","","","Memory location contains 512-bytes of <code>FXSAVE64</code>/<code>FXRSTOR64</code> …","<code>FXSAVE64 m512byte</code>","Memory location contains 512-bytes of <code>FXSAVE</code>/<code>FXRSTOR</code> data","<code>FXSAVE m512byte</code>","<code>FXTRACT</code>","","<code>FYL2X</code>","","<code>FYL2XP1</code>","","","","","<code>GETSEC</code>","<code>GETSECQ</code>","","","<code>GF2P8AFFINEINVQB xmm1, xmm2/m128, imm8</code>","","<code>GF2P8AFFINEQB xmm1, xmm2/m128, imm8</code>","","<code>GF2P8MULB xmm1, xmm2/m128</code>","","<code>HADDPD xmm1, xmm2/m128</code>","","<code>HADDPS xmm1, xmm2/m128</code>","Hex numbers (base 16)","","","<code>HLT</code>","","","<code>HRESET imm8, &lt;EAX&gt;</code>","","<code>HSUBPD xmm1, xmm2/m128</code>","","<code>HSUBPS xmm1, xmm2/m128</code>","It’s an invalid instruction, eg. it’s a new unknown …","","","<code>IBTS r/m16, r16</code>","<code>IBTS r/m32, r32</code>","iced error","","<code>IDIV r/m16</code>","<code>IDIV r/m32</code>","<code>IDIV r/m64</code>","<code>IDIV r/m8</code>","16-bit constant. This operand kind uses …","32-bit constant. This operand kind uses …","A 32-bit value sign extended to 64 bits. This operand kind …","64-bit constant. This operand kind uses …","8-bit constant. This operand kind uses …","8-bit constant used by the <code>ENTER</code>, <code>EXTRQ</code>, <code>INSERTQ</code> …","An 8-bit value sign extended to 16 bits. This operand kind …","An 8-bit value sign extended to 32 bits. This operand kind …","An 8-bit value sign extended to 64 bits. This operand kind …","","<code>IMUL r16, r/m16</code>","<code>IMUL r16, r/m16, imm16</code>","<code>IMUL r16, r/m16, imm8</code>","<code>IMUL r32, r/m32</code>","<code>IMUL r32, r/m32, imm32</code>","<code>IMUL r32, r/m32, imm8</code>","<code>IMUL r64, r/m64</code>","<code>IMUL r64, r/m64, imm32</code>","<code>IMUL r64, r/m64, imm8</code>","<code>IMUL r/m16</code>","<code>IMUL r/m32</code>","<code>IMUL r/m64</code>","<code>IMUL r/m8</code>","","<code>IN AL, DX</code>","<code>IN AL, imm8</code>","<code>IN AX, DX</code>","<code>IN AX, imm8</code>","<code>IN EAX, DX</code>","<code>IN EAX, imm8</code>","","<code>INC r16</code>","<code>INC r32</code>","<code>INC r/m16</code>","<code>INC r/m32</code>","<code>INC r/m64</code>","<code>INC r/m8</code>","","<code>INCSSPD r32</code>","","<code>INCSSPQ r64</code>","","<code>INSB</code>","","<code>INSD</code>","","<code>INSERTPS xmm1, xmm2/m32, imm8</code>","","<code>INSERTQ xmm1, xmm2</code>","<code>INSERTQ xmm1, xmm2, imm8, imm8</code>","A 16/32/64-bit x86 instruction. Created by <code>Decoder</code>, by …","","<code>INSW</code>","","<code>INT1</code>","","Memory location contains a <code>i128</code>","","Memory location contains a <code>i16</code>","Memory location contains a <code>i256</code>","<code>INT3</code>","","","Memory location contains a <code>i32</code>","Memory location contains a <code>i512</code>","","Memory location contains a <code>i64</code>","","Memory location contains a <code>i8</code>","<code>INT imm8</code>","Intel formatter (same as Intel XED)","<code>INTO</code>","","It’s an invalid instruction or an invalid encoding of an …","<code>INVD</code>","","","<code>INVEPT r32, m128</code>","<code>INVEPT r64, m128</code>","","<code>INVLPG m</code>","","<code>INVLPGA</code>","<code>INVLPGA</code>","<code>INVLPGA</code>","","<code>INVLPGB</code>","<code>INVLPGB</code>","<code>INVLPGB</code>","","<code>INVPCID r32, m128</code>","<code>INVPCID r64, m128</code>","","<code>INVVPID r32, m128</code>","<code>INVVPID r64, m128</code>","","<code>IRETD</code>","","<code>IRETQ</code>","","<code>IRET</code>","Decode <code>JMPE</code> instructions","","<code>JA rel16</code>","<code>JA rel32</code>","<code>JA rel32</code>","<code>JA rel8</code>","<code>JA rel8</code>","<code>JA rel8</code>","","<code>JAE rel16</code>","<code>JAE rel32</code>","<code>JAE rel32</code>","<code>JAE rel8</code>","<code>JAE rel8</code>","<code>JAE rel8</code>","","<code>JB rel16</code>","<code>JB rel32</code>","<code>JB rel32</code>","<code>JB rel8</code>","<code>JB rel8</code>","<code>JB rel8</code>","","<code>JBE rel16</code>","<code>JBE rel32</code>","<code>JBE rel32</code>","<code>JBE rel8</code>","<code>JBE rel8</code>","<code>JBE rel8</code>","","<code>JCXZ rel8</code>","<code>JCXZ rel8</code>","","<code>JE rel16</code>","<code>JE rel32</code>","<code>JE rel32</code>","<code>JE rel8</code>","<code>JE rel8</code>","<code>JE rel8</code>","","<code>JECXZ rel8</code>","<code>JECXZ rel8</code>","<code>JECXZ rel8</code>","","<code>JG rel16</code>","<code>JG rel32</code>","<code>JG rel32</code>","<code>JG rel8</code>","<code>JG rel8</code>","<code>JG rel8</code>","","<code>JGE rel16</code>","<code>JGE rel32</code>","<code>JGE rel32</code>","<code>JGE rel8</code>","<code>JGE rel8</code>","<code>JGE rel8</code>","","","","<code>JL rel16</code>","<code>JL rel32</code>","<code>JL rel32</code>","<code>JL rel8</code>","<code>JL rel8</code>","<code>JL rel8</code>","","<code>JLE rel16</code>","<code>JLE rel32</code>","<code>JLE rel32</code>","<code>JLE rel8</code>","<code>JLE rel8</code>","<code>JLE rel8</code>","","<code>JMP m16:16</code>","<code>JMP m16:32</code>","<code>JMP m16:64</code>","<code>JMP ptr16:16</code>","<code>JMP ptr16:32</code>","<code>JMP rel16</code>","<code>JMP rel32</code>","<code>JMP rel32</code>","<code>JMP rel8</code>","<code>JMP rel8</code>","<code>JMP rel8</code>","<code>JMP r/m16</code>","<code>JMP r/m32</code>","<code>JMP r/m64</code>","","<code>JMPE disp16</code>","<code>JMPE disp32</code>","<code>JMPE r/m16</code>","<code>JMPE r/m32</code>","","<code>JNE rel16</code>","<code>JNE rel32</code>","<code>JNE rel32</code>","<code>JNE rel8</code>","<code>JNE rel8</code>","<code>JNE rel8</code>","","<code>JNO rel16</code>","<code>JNO rel32</code>","<code>JNO rel32</code>","<code>JNO rel8</code>","<code>JNO rel8</code>","<code>JNO rel8</code>","","<code>JNP rel16</code>","<code>JNP rel32</code>","<code>JNP rel32</code>","<code>JNP rel8</code>","<code>JNP rel8</code>","<code>JNP rel8</code>","","<code>JNS rel16</code>","<code>JNS rel32</code>","<code>JNS rel32</code>","<code>JNS rel8</code>","<code>JNS rel8</code>","<code>JNS rel8</code>","","<code>JO rel16</code>","<code>JO rel32</code>","<code>JO rel32</code>","<code>JO rel8</code>","<code>JO rel8</code>","<code>JO rel8</code>","","<code>JP rel16</code>","<code>JP rel32</code>","<code>JP rel32</code>","<code>JP rel8</code>","<code>JP rel8</code>","<code>JP rel8</code>","","<code>JRCXZ rel8</code>","<code>JRCXZ rel8</code>","","<code>JS rel16</code>","<code>JS rel32</code>","<code>JS rel32</code>","<code>JS rel8</code>","<code>JS rel8</code>","<code>JS rel8</code>","","","","","","","","","384-bit AES 128 handle (Key Locker)","512-bit AES 256 handle (Key Locker)","Decode Intel Knights Corner instructions (requires the <code>mvex</code>…","","","","","","","","","","","","","","","","","","","Any keyword","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decode 286 <code>STOREALL</code>/<code>LOADALL</code> (<code>0F04</code> and <code>0F05</code>)","Decode 386 <code>LOADALL</code>","Label symbol","Label address (eg. <code>JE XXXXXX</code>)","<code>LAHF</code>","","","<code>LAR r16, r/m16</code>","<code>LAR r32, r32/m16</code>","<code>LAR r64, r64/m16</code>","","<code>LDDQU xmm1, m128</code>","","<code>LDMXCSR m32</code>","","<code>LDS r16, m16:16</code>","<code>LDS r32, m16:32</code>","","","<code>LEA r16, m</code>","<code>LEA r32, m</code>","<code>LEA r64, m</code>","","<code>LEAVE</code>","<code>LEAVE</code>","<code>LEAVE</code>","Legacy encoding","","<code>LES r16, m16:16</code>","<code>LES r32, m16:32</code>","<code>LFENCE</code>","","<code>LFENCE</code>","<code>LFENCE</code>","<code>LFENCE</code>","<code>LFENCE</code>","<code>LFENCE</code>","<code>LFENCE</code>","<code>LFENCE</code>","","<code>LFS r16, m16:16</code>","<code>LFS r32, m16:32</code>","<code>LFS r64, m16:64</code>","","<code>LGDT m16&amp;32</code>","<code>LGDT m16&amp;32</code>","<code>LGDT m16&amp;64</code>","","<code>LGS r16, m16:16</code>","<code>LGS r32, m16:32</code>","<code>LGS r64, m16:64</code>","","<code>LIDT m16&amp;32</code>","<code>LIDT m16&amp;32</code>","<code>LIDT m16&amp;64</code>","","<code>LKGS r32/m16</code>","<code>LKGS r64/m16</code>","<code>LKGS r/m16</code>","","<code>LLDT r32/m16</code>","<code>LLDT r64/m16</code>","<code>LLDT r/m16</code>","","","<code>LMSW r32/m16</code>","<code>LMSW r64/m16</code>","<code>LMSW r/m16</code>","","<code>LOADALL</code>","<code>LOADALL</code>","","<code>LOADIWKEY xmm1, xmm2, &lt;EAX&gt;, &lt;XMM0&gt;</code>","","","<code>LODSB</code>","","<code>LODSD</code>","","<code>LODSQ</code>","","<code>LODSW</code>","","<code>LOOP rel8</code>","<code>LOOP rel8</code>","<code>LOOP rel8</code>","<code>LOOP rel8</code>","<code>LOOP rel8</code>","<code>LOOP rel8</code>","<code>LOOP rel8</code>","","<code>LOOPE rel8</code>","<code>LOOPE rel8</code>","<code>LOOPE rel8</code>","<code>LOOPE rel8</code>","<code>LOOPE rel8</code>","<code>LOOPE rel8</code>","<code>LOOPE rel8</code>","","<code>LOOPNE rel8</code>","<code>LOOPNE rel8</code>","<code>LOOPNE rel8</code>","<code>LOOPNE rel8</code>","<code>LOOPNE rel8</code>","<code>LOOPNE rel8</code>","<code>LOOPNE rel8</code>","","<code>LSL r16, r/m16</code>","<code>LSL r32, r32/m16</code>","<code>LSL r64, r64/m16</code>","","<code>LSS r16, m16:16</code>","<code>LSS r32, m16:32</code>","<code>LSS r64, m16:64</code>","","<code>LTR r32/m16</code>","<code>LTR r64/m16</code>","<code>LTR r/m16</code>","","","","<code>LZCNT r16, r/m16</code>","<code>LZCNT r32, r/m32</code>","<code>LZCNT r64, r/m64</code>","","","","","","","","","Decode <code>MOV r32,tr</code> and <code>MOV tr,r32</code>","Decode <code>MPX</code> instructions","MVEX encoding","<code>CLEVICT0 m</code>","<code>CLEVICT1 m</code>","<code>UNDOC zmm1 {k1}, mvt</code>","<code>UNDOC zmm1 {k1}, mvt</code>","<code>UNDOC zmm1 {k1}, mvt</code>","<code>UNDOC zmm1 {k1}, zmm2, zmm3/mt</code>","<code>UNDOC zmm1 {k1}, zmm2, zmm3/mt</code>","<code>UNDOC zmm1 {k1}, zmm2, zmm3/mt</code>","<code>UNDOC zmm1 {k1}, zmm2, zmm3/mt</code>","<code>UNDOC zmm1 {k1}, zmm2, zmm3/mt</code>","<code>UNDOC zmm1 {k1}, zmm2, zmm3/mt</code>","<code>UNDOC zmm1 {k1}, zmm2, zmm3/mt</code>","<code>UNDOC zmm1 {k1}, zmm2, zmm3/mt</code>","<code>UNDOC zmm1 {k1}, zmm2, zmm3/mt</code>","<code>UNDOC zmm1 {k1}, zmm2, zmm3/mt</code>","<code>UNDOC zmm1 {k1}, zmm2, zmm3/mt</code>","<code>UNDOC zmm1 {k1}, zmm2, zmm3/mt</code>","<code>UNDOC zmm1 {k1}, zmm2, zmm3/mt</code>","<code>UNDOC zmm1 {k1}, zmm2/mt</code>","<code>UNDOC zmm1 {k1}, zmm2/mt</code>","<code>UNDOC zmm1 {k1}, zmm2/mt</code>","<code>UNDOC zmm1 {k1}, zmm2/mt</code>","<code>UNDOC zmm1 {k1}, zmm2/mt</code>","<code>UNDOC zmm1 {k1}, zmm2/mt</code>","<code>UNDOC zmm1 {k1}, zmm2/mt</code>","<code>UNDOC zmm1 {k1}, zmm2/mt</code>","<code>UNDOC zmm1 {k1}, zmm2/mt</code>","<code>UNDOC zmm1 {k1}, zmm2/mt</code>","<code>UNDOC zmm1 {k1}, zmm2/mt</code>","<code>UNDOC zmm1 {k1}, zmm2/mt</code>","<code>UNDOC zmm1 {k1}, zmm2/mt</code>","<code>UNDOC zmm1 {k1}, zmm2/mt</code>","<code>UNDOC zmm1 {k1}, zmm2/mt, imm8</code>","<code>UNDOC zmm1 {k1}, zmm2/mt, imm8</code>","<code>VADDNPD zmm1 {k1}, zmm2, Sf64(zmm3/mt)</code>","<code>VADDNPS zmm1 {k1}, zmm2, Sf32(zmm3/mt)</code>","<code>VADDPD zmm1 {k1}, zmm2, Sf64(zmm3/mt)</code>","<code>VADDPS zmm1 {k1}, zmm2, Sf32(zmm3/mt)</code>","<code>VADDSETSPS zmm1 {k1}, zmm2, Sf32(zmm3/mt)</code>","<code>VALIGND zmm1 {k1}, zmm2, zmm3/mt, imm8</code>","<code>VBLENDMPD zmm1 {k1}, zmm2, Sf64(zmm3/mt)</code>","<code>VBLENDMPS zmm1 {k1}, zmm2, Sf32(zmm3/mt)</code>","<code>VBROADCASTF32X4 zmm1 {k1}, Uf32(mt)</code>","<code>VBROADCASTF64X4 zmm1 {k1}, Uf64(mt)</code>","<code>VBROADCASTI32X4 zmm1 {k1}, Ui32(mt)</code>","<code>VBROADCASTI64X4 zmm1 {k1}, Ui64(mt)</code>","<code>VBROADCASTSD zmm1 {k1}, Uf64(mt)</code>","<code>VBROADCASTSS zmm1 {k1}, Uf32(mt)</code>","<code>VCMPPD k2 {k1}, zmm1, Sf64(zmm2/mt), imm8</code>","<code>VCMPPS k2 {k1}, zmm1, Sf32(zmm2/mt), imm8</code>","<code>VCVTDQ2PD zmm1 {k1}, Si32(zmm2/mt)</code>","<code>VCVTFXPNTDQ2PS zmm1 {k1}, Si32(zmm2/mt), imm8</code>","<code>VCVTFXPNTPD2DQ zmm1 {k1}, Sf64(zmm2/mt), imm8</code>","<code>VCVTFXPNTPD2UDQ zmm1 {k1}, Sf64(zmm2/mt), imm8</code>","<code>VCVTFXPNTPS2DQ zmm1 {k1}, Sf32(zmm2/mt), imm8</code>","<code>VCVTFXPNTPS2UDQ zmm1 {k1}, Sf32(zmm2/mt), imm8</code>","<code>VCVTFXPNTUDQ2PS zmm1 {k1}, Si32(zmm2/mt), imm8</code>","<code>VCVTPD2PS zmm1 {k1}, Sf64(zmm2/mt)</code>","<code>VCVTPS2PD zmm1 {k1}, Sf32(zmm2/mt)</code>","<code>VCVTUDQ2PD zmm1 {k1}, Si32(zmm2/mt)</code>","<code>VEXP223PS zmm1 {k1}, zmm2/mt</code>","<code>VFIXUPNANPD zmm1 {k1}, zmm2, Si64(zmm3/mt)</code>","<code>VFIXUPNANPS zmm1 {k1}, zmm2, Si32(zmm3/mt)</code>","<code>VFMADD132PD zmm1 {k1}, zmm2, Sf64(zmm3/mt)</code>","<code>VFMADD132PS zmm1 {k1}, zmm2, Sf32(zmm3/mt)</code>","<code>VFMADD213PD zmm1 {k1}, zmm2, Sf64(zmm3/mt)</code>","<code>VFMADD213PS zmm1 {k1}, zmm2, Sf32(zmm3/mt)</code>","<code>VFMADD231PD zmm1 {k1}, zmm2, Sf64(zmm3/mt)</code>","<code>VFMADD231PS zmm1 {k1}, zmm2, Sf32(zmm3/mt)</code>","<code>VFMADD233PS zmm1 {k1}, zmm2, Sf32(zmm3/mt)</code>","<code>VFMSUB132PD zmm1 {k1}, zmm2, Sf64(zmm3/mt)</code>","<code>VFMSUB132PS zmm1 {k1}, zmm2, Sf32(zmm3/mt)</code>","<code>VFMSUB213PD zmm1 {k1}, zmm2, Sf64(zmm3/mt)</code>","<code>VFMSUB213PS zmm1 {k1}, zmm2, Sf32(zmm3/mt)</code>","<code>VFMSUB231PD zmm1 {k1}, zmm2, Sf64(zmm3/mt)</code>","<code>VFMSUB231PS zmm1 {k1}, zmm2, Sf32(zmm3/mt)</code>","<code>VFNMADD132PD zmm1 {k1}, zmm2, Sf64(zmm3/mt)</code>","<code>VFNMADD132PS zmm1 {k1}, zmm2, Sf32(zmm3/mt)</code>","<code>VFNMADD213PD zmm1 {k1}, zmm2, Sf64(zmm3/mt)</code>","<code>VFNMADD213PS zmm1 {k1}, zmm2, Sf32(zmm3/mt)</code>","<code>VFNMADD231PD zmm1 {k1}, zmm2, Sf64(zmm3/mt)</code>","<code>VFNMADD231PS zmm1 {k1}, zmm2, Sf32(zmm3/mt)</code>","<code>VFNMSUB132PD zmm1 {k1}, zmm2, Sf64(zmm3/mt)</code>","<code>VFNMSUB132PS zmm1 {k1}, zmm2, Sf32(zmm3/mt)</code>","<code>VFNMSUB213PD zmm1 {k1}, zmm2, Sf64(zmm3/mt)</code>","<code>VFNMSUB213PS zmm1 {k1}, zmm2, Sf32(zmm3/mt)</code>","<code>VFNMSUB231PD zmm1 {k1}, zmm2, Sf64(zmm3/mt)</code>","<code>VFNMSUB231PS zmm1 {k1}, zmm2, Sf32(zmm3/mt)</code>","<code>VGATHERDPD zmm1 {k1}, Uf64(mvt)</code>","<code>VGATHERDPS zmm1 {k1}, Uf32(mvt)</code>","<code>VGATHERPF0DPS Uf32(mvt) {k1}</code>","<code>VGATHERPF0HINTDPD Uf64(mvt) {k1}</code>","<code>VGATHERPF0HINTDPS Uf32(mvt) {k1}</code>","<code>VGATHERPF1DPS Uf32(mvt) {k1}</code>","<code>VGETEXPPD zmm1 {k1}, Sf64(zmm2/mt)</code>","<code>VGETEXPPS zmm1 {k1}, Sf32(zmm2/mt)</code>","<code>VGETMANTPD zmm1 {k1}, Sf64(zmm2/mt), imm8</code>","<code>VGETMANTPS zmm1 {k1}, Sf32(zmm2/mt), imm8</code>","<code>VGMAXABSPS zmm1 {k1}, zmm2, Sf32(zmm3/mt)</code>","<code>VGMAXPD zmm1 {k1}, zmm2, Sf64(zmm3/mt)</code>","<code>VGMAXPS zmm1 {k1}, zmm2, Sf32(zmm3/mt)</code>","<code>VGMINPD zmm1 {k1}, zmm2, Sf64(zmm3/mt)</code>","<code>VGMINPS zmm1 {k1}, zmm2, Sf32(zmm3/mt)</code>","<code>VLOADUNPACKHD zmm1 {k1}, Ui32(mt)</code>","<code>VLOADUNPACKHPD zmm1 {k1}, Uf64(mt)</code>","<code>VLOADUNPACKHPS zmm1 {k1}, Uf32(mt)</code>","<code>VLOADUNPACKHQ zmm1 {k1}, Ui64(mt)</code>","<code>VLOADUNPACKLD zmm1 {k1}, Ui32(mt)</code>","<code>VLOADUNPACKLPD zmm1 {k1}, Uf64(mt)</code>","<code>VLOADUNPACKLPS zmm1 {k1}, Uf32(mt)</code>","<code>VLOADUNPACKLQ zmm1 {k1}, Ui64(mt)</code>","<code>VLOG2PS zmm1 {k1}, zmm2/mt</code>","<code>VMOVAPD mt {k1}, Df64(zmm1)</code>","<code>VMOVAPD zmm1 {k1}, Sf64(zmm2/mt)</code>","<code>VMOVAPS mt {k1}, Df32(zmm1)</code>","<code>VMOVAPS zmm1 {k1}, Sf32(zmm2/mt)</code>","<code>VMOVDQA32 mt {k1}, Di32(zmm1)</code>","<code>VMOVDQA32 zmm1 {k1}, Si32(zmm2/mt)</code>","<code>VMOVDQA64 mt {k1}, Di64(zmm1)</code>","<code>VMOVDQA64 zmm1 {k1}, Si64(zmm2/mt)</code>","<code>VMOVNRAPD m {k1}, Df64(zmm1)</code>","<code>VMOVNRAPS m {k1}, Df32(zmm1)</code>","<code>VMOVNRNGOAPD m {k1}, Df64(zmm1)</code>","<code>VMOVNRNGOAPS m {k1}, Df32(zmm1)</code>","<code>VMULPD zmm1 {k1}, zmm2, Sf64(zmm3/mt)</code>","<code>VMULPS zmm1 {k1}, zmm2, Sf32(zmm3/mt)</code>","<code>VPACKSTOREHD mt {k1}, Di32(zmm1)</code>","<code>VPACKSTOREHPD mt {k1}, Df64(zmm1)</code>","<code>VPACKSTOREHPS mt {k1}, Df32(zmm1)</code>","<code>VPACKSTOREHQ mt {k1}, Di64(zmm1)</code>","<code>VPACKSTORELD mt {k1}, Di32(zmm1)</code>","<code>VPACKSTORELPD mt {k1}, Df64(zmm1)</code>","<code>VPACKSTORELPS mt {k1}, Df32(zmm1)</code>","<code>VPACKSTORELQ mt {k1}, Di64(zmm1)</code>","<code>VPADCD zmm1 {k1}, k2, Si32(zmm3/mt)</code>","<code>VPADDD zmm1 {k1}, zmm2, Si32(zmm3/mt)</code>","<code>VPADDSETCD zmm1 {k1}, k2, Si32(zmm3/mt)</code>","<code>VPADDSETSD zmm1 {k1}, zmm2, Si32(zmm3/mt)</code>","<code>VPANDD zmm1 {k1}, zmm2, Si32(zmm3/mt)</code>","<code>VPANDND zmm1 {k1}, zmm2, Si32(zmm3/mt)</code>","<code>VPANDNQ zmm1 {k1}, zmm2, Si64(zmm3/mt)</code>","<code>VPANDQ zmm1 {k1}, zmm2, Si64(zmm3/mt)</code>","<code>VPBLENDMD zmm1 {k1}, zmm2, Si32(zmm3/mt)</code>","<code>VPBLENDMQ zmm1 {k1}, zmm2, Si64(zmm3/mt)</code>","<code>VPBROADCASTD zmm1 {k1}, Ui32(mt)</code>","<code>VPBROADCASTQ zmm1 {k1}, Ui64(mt)</code>","<code>VPCMPD k2 {k1}, zmm1, Si32(zmm2/mt), imm8</code>","<code>VPCMPEQD k2 {k1}, zmm1, Si32(zmm2/mt)</code>","<code>VPCMPGTD k2 {k1}, zmm1, Si32(zmm2/mt)</code>","<code>VPCMPLTD k2 {k1}, zmm1, Si32(zmm2/mt)</code>","<code>VPCMPUD k2 {k1}, zmm1, Si32(zmm2/mt), imm8</code>","<code>VPERMD zmm1 {k1}, zmm2, zmm3/mt</code>","<code>VPERMF32X4 zmm1 {k1}, zmm2/mt, imm8</code>","<code>VPGATHERDD zmm1 {k1}, Ui32(mvt)</code>","<code>VPGATHERDQ zmm1 {k1}, Ui64(mvt)</code>","<code>VPMADD231D zmm1 {k1}, zmm2, Si32(zmm3/mt)</code>","<code>VPMADD233D zmm1 {k1}, zmm2, Si32(zmm3/mt)</code>","<code>VPMAXSD zmm1 {k1}, zmm2, Si32(zmm3/mt)</code>","<code>VPMAXUD zmm1 {k1}, zmm2, Si32(zmm3/mt)</code>","<code>VPMINSD zmm1 {k1}, zmm2, Si32(zmm3/mt)</code>","<code>VPMINUD zmm1 {k1}, zmm2, Si32(zmm3/mt)</code>","<code>VPMULHD zmm1 {k1}, zmm2, Si32(zmm3/mt)</code>","<code>VPMULHUD zmm1 {k1}, zmm2, Si32(zmm3/mt)</code>","<code>VPMULLD zmm1 {k1}, zmm2, Si32(zmm3/mt)</code>","<code>VPORD zmm1 {k1}, zmm2, Si32(zmm3/mt)</code>","<code>VPORQ zmm1 {k1}, zmm2, Si64(zmm3/mt)</code>","<code>VPREFETCH0 m</code>","<code>VPREFETCH1 m</code>","<code>VPREFETCH2 m</code>","<code>VPREFETCHE0 m</code>","<code>VPREFETCHE1 m</code>","<code>VPREFETCHE2 m</code>","<code>VPREFETCHENTA m</code>","<code>VPREFETCHNTA m</code>","<code>VPSBBD zmm1 {k1}, k2, Si32(zmm3/mt)</code>","<code>VPSBBRD zmm1 {k1}, k2, Si32(zmm3/mt)</code>","<code>VPSCATTERDD mvt {k1}, Di32(zmm1)</code>","<code>VPSCATTERDQ mvt {k1}, Di64(zmm1)</code>","<code>VPSHUFD zmm1 {k1}, zmm2/mt, imm8</code>","<code>VPSLLD zmm1 {k1}, Si32(zmm2/mt), imm8</code>","<code>VPSLLVD zmm1 {k1}, zmm2, Si32(zmm3/mt)</code>","<code>VPSRAD zmm1 {k1}, Si32(zmm2/mt), imm8</code>","<code>VPSRAVD zmm1 {k1}, zmm2, Si32(zmm3/mt)</code>","<code>VPSRLD zmm1 {k1}, Si32(zmm2/mt), imm8</code>","<code>VPSRLVD zmm1 {k1}, zmm2, Si32(zmm3/mt)</code>","<code>VPSUBD zmm1 {k1}, zmm2, Si32(zmm3/mt)</code>","<code>VPSUBRD zmm1 {k1}, zmm2, Si32(zmm3/mt)</code>","<code>VPSUBRSETBD zmm1 {k1}, k2, Si32(zmm3/mt)</code>","<code>VPSUBSETBD zmm1 {k1}, k2, Si32(zmm3/mt)</code>","<code>VPTESTMD k2 {k1}, zmm1, Si32(zmm2/mt)</code>","<code>VPXORD zmm1 {k1}, zmm2, Si32(zmm3/mt)</code>","<code>VPXORQ zmm1 {k1}, zmm2, Si64(zmm3/mt)</code>","<code>VRCP23PS zmm1 {k1}, zmm2/mt</code>","<code>VRNDFXPNTPD zmm1 {k1}, Sf64(zmm2/mt), imm8</code>","<code>VRNDFXPNTPS zmm1 {k1}, Sf32(zmm2/mt), imm8</code>","<code>VRSQRT23PS zmm1 {k1}, zmm2/mt</code>","<code>VSCALEPS zmm1 {k1}, zmm2, Si32(zmm3/mt)</code>","<code>VSCATTERDPD mvt {k1}, Df64(zmm1)</code>","<code>VSCATTERDPS mvt {k1}, Df32(zmm1)</code>","<code>VSCATTERPF0DPS Uf32(mvt) {k1}</code>","<code>VSCATTERPF0HINTDPD Uf64(mvt) {k1}</code>","<code>VSCATTERPF0HINTDPS Uf32(mvt) {k1}</code>","<code>VSCATTERPF1DPS Uf32(mvt) {k1}</code>","<code>VSUBPD zmm1 {k1}, zmm2, Sf64(zmm3/mt)</code>","<code>VSUBPS zmm1 {k1}, zmm2, Sf32(zmm3/mt)</code>","<code>VSUBRPD zmm1 {k1}, zmm2, Sf64(zmm3/mt)</code>","<code>VSUBRPS zmm1 {k1}, zmm2, Sf32(zmm3/mt)</code>","","<code>MASKMOVDQU xmm1, xmm2</code>","","<code>MASKMOVQ mm1, mm2</code>","","<code>MAXPD xmm1, xmm2/m128</code>","","<code>MAXPS xmm1, xmm2/m128</code>","","<code>MAXSD xmm1, xmm2/m64</code>","","<code>MAXSS xmm1, xmm2/m32</code>","<code>MCOMMIT</code>","","Memory operand.","<code>ES:[DI]</code>. This operand kind uses <code>Instruction::memory_size()</code>","<code>ES:[EDI]</code>. This operand kind uses <code>Instruction::memory_size()</code>","<code>ES:[RDI]</code>. This operand kind uses <code>Instruction::memory_size()</code>","<code>seg:[DI]</code>. This operand kind uses <code>Instruction::memory_size()</code>…","<code>seg:[EDI]</code>. This operand kind uses …","<code>seg:[ESI]</code>. This operand kind uses …","<code>seg:[RDI]</code>. This operand kind uses …","<code>seg:[RSI]</code>. This operand kind uses …","<code>seg:[SI]</code>. This operand kind uses <code>Instruction::memory_size()</code>…","Size of a memory reference","Memory size options used by the formatters","<code>MFENCE</code>","","<code>MFENCE</code>","<code>MFENCE</code>","<code>MFENCE</code>","<code>MFENCE</code>","<code>MFENCE</code>","<code>MFENCE</code>","<code>MFENCE</code>","Show memory size if a human can’t figure out the size of …","","<code>MINPD xmm1, xmm2/m128</code>","","<code>MINPS xmm1, xmm2/m128</code>","","<code>MINSD xmm1, xmm2/m64</code>","","<code>MINSS xmm1, xmm2/m32</code>","Mnemonic","Any mnemonic","","<code>MONITOR</code>","<code>MONITOR</code>","<code>MONITOR</code>","","<code>MONITORX</code>","<code>MONITORX</code>","<code>MONITORX</code>","","<code>MONTMUL</code>","<code>MONTMUL</code>","<code>MONTMUL</code>","","<code>MOV AL, moffs8</code>","<code>MOV AX, moffs16</code>","<code>MOV EAX, moffs32</code>","<code>MOV RAX, moffs64</code>","<code>MOV Sreg, r32/m16</code>","<code>MOV Sreg, r64/m16</code>","<code>MOV Sreg, r/m16</code>","<code>MOV cr, r32</code>","<code>MOV cr, r64</code>","<code>MOV dr, r32</code>","<code>MOV dr, r64</code>","<code>MOV moffs16, AX</code>","<code>MOV moffs32, EAX</code>","<code>MOV moffs64, RAX</code>","<code>MOV moffs8, AL</code>","<code>MOV r16, imm16</code>","<code>MOV r16, r/m16</code>","<code>MOV r32, cr</code>","<code>MOV r32, dr</code>","<code>MOV r32, imm32</code>","<code>MOV r32, r/m32</code>","<code>MOV r32, tr</code>","<code>MOV r32/m16, Sreg</code>","<code>MOV r64, cr</code>","<code>MOV r64, dr</code>","<code>MOV r64, imm64</code>","<code>MOV r64, r/m64</code>","<code>MOV r64/m16, Sreg</code>","<code>MOV r8, imm8</code>","<code>MOV r8, r/m8</code>","<code>MOV r/m16, Sreg</code>","<code>MOV r/m16, imm16</code>","<code>MOV r/m16, r16</code>","<code>MOV r/m32, imm32</code>","<code>MOV r/m32, r32</code>","<code>MOV r/m64, imm32</code>","<code>MOV r/m64, r64</code>","<code>MOV r/m8, imm8</code>","<code>MOV r/m8, r8</code>","<code>MOV tr, r32</code>","","<code>MOVAPD xmm1, xmm2/m128</code>","<code>MOVAPD xmm2/m128, xmm1</code>","","<code>MOVAPS xmm1, xmm2/m128</code>","<code>MOVAPS xmm2/m128, xmm1</code>","","<code>MOVBE m16, r16</code>","<code>MOVBE m32, r32</code>","<code>MOVBE m64, r64</code>","<code>MOVBE r16, m16</code>","<code>MOVBE r32, m32</code>","<code>MOVBE r64, m64</code>","","<code>MOVD mm, r/m32</code>","<code>MOVD r/m32, mm</code>","<code>MOVD r/m32, xmm</code>","<code>MOVD xmm, r/m32</code>","","<code>MOVDDUP xmm1, xmm2/m64</code>","","<code>MOVDIR64B r16, m512</code>","<code>MOVDIR64B r32, m512</code>","<code>MOVDIR64B r64, m512</code>","","<code>MOVDIRI m32, r32</code>","<code>MOVDIRI m64, r64</code>","","<code>MOVDQ2Q mm, xmm</code>","","<code>MOVDQA xmm1, xmm2/m128</code>","<code>MOVDQA xmm2/m128, xmm1</code>","","<code>MOVDQU xmm1, xmm2/m128</code>","<code>MOVDQU xmm2/m128, xmm1</code>","","<code>MOVHLPS xmm1, xmm2</code>","","<code>MOVHPD m64, xmm1</code>","<code>MOVHPD xmm1, m64</code>","","<code>MOVHPS m64, xmm1</code>","<code>MOVHPS xmm1, m64</code>","","<code>MOVLHPS xmm1, xmm2</code>","","<code>MOVLPD m64, xmm1</code>","<code>MOVLPD xmm1, m64</code>","","<code>MOVLPS m64, xmm1</code>","<code>MOVLPS xmm1, m64</code>","","<code>MOVMSKPD r32, xmm</code>","<code>MOVMSKPD r64, xmm</code>","","<code>MOVMSKPS r32, xmm</code>","<code>MOVMSKPS r64, xmm</code>","","<code>MOVNTDQ m128, xmm1</code>","","<code>MOVNTDQA xmm1, m128</code>","","<code>MOVNTI m32, r32</code>","<code>MOVNTI m64, r64</code>","","<code>MOVNTPD m128, xmm1</code>","","<code>MOVNTPS m128, xmm1</code>","","<code>MOVNTQ m64, mm</code>","","<code>MOVNTSD m64, xmm1</code>","","<code>MOVNTSS m32, xmm1</code>","","","<code>MOVQ2DQ xmm, mm</code>","<code>MOVQ mm, mm/m64</code>","<code>MOVQ mm, r/m64</code>","<code>MOVQ mm/m64, mm</code>","<code>MOVQ r/m64, mm</code>","<code>MOVQ r/m64, xmm</code>","<code>MOVQ xmm, r/m64</code>","<code>MOVQ xmm1, xmm2/m64</code>","<code>MOVQ xmm2/m64, xmm1</code>","","<code>MOVSB</code>","","<code>MOVSD</code>","<code>MOVSD xmm1, xmm2/m64</code>","<code>MOVSD xmm1/m64, xmm2</code>","","<code>MOVSHDUP xmm1, xmm2/m128</code>","","<code>MOVSLDUP xmm1, xmm2/m128</code>","","<code>MOVSQ</code>","","<code>MOVSS xmm1, xmm2/m32</code>","<code>MOVSS xmm2/m32, xmm1</code>","","<code>MOVSW</code>","","<code>MOVSX r16, r/m16</code>","<code>MOVSX r16, r/m8</code>","<code>MOVSX r32, r/m16</code>","<code>MOVSX r32, r/m8</code>","<code>MOVSX r64, r/m16</code>","<code>MOVSX r64, r/m8</code>","","<code>MOVSXD r16, r/m16</code>","<code>MOVSXD r32, r/m32</code>","<code>MOVSXD r64, r/m32</code>","","<code>MOVUPD xmm1, xmm2/m128</code>","<code>MOVUPD xmm2/m128, xmm1</code>","","<code>MOVUPS xmm1, xmm2/m128</code>","<code>MOVUPS xmm2/m128, xmm1</code>","","<code>MOVZX r16, r/m16</code>","<code>MOVZX r16, r/m8</code>","<code>MOVZX r32, r/m16</code>","<code>MOVZX r32, r/m8</code>","<code>MOVZX r64, r/m16</code>","<code>MOVZX r64, r/m8</code>","","<code>MPSADBW xmm1, xmm2/m128, imm8</code>","","<code>MUL r/m16</code>","<code>MUL r/m32</code>","<code>MUL r/m64</code>","<code>MUL r/m8</code>","","<code>MULPD xmm1, xmm2/m128</code>","","<code>MULPS xmm1, xmm2/m128</code>","","<code>MULSD xmm1, xmm2/m64</code>","","<code>MULSS xmm1, xmm2/m32</code>","","<code>MWAIT</code>","","<code>MWAITX</code>","","<code>N = 1</code>","<code>N = 16</code>","<code>N = b ? 2 : 16</code>","<code>N = b ? 4 : 16</code>","<code>N = b ? 8 : 16</code>","<code>N = 2</code>","<code>N = 32</code>","<code>N = b ? 2 : 32</code>","<code>N = b ? 4 : 32</code>","<code>N = b ? 8 : 32</code>","<code>N = 4</code>","<code>N = b ? 2 : 4</code>","<code>N = 64</code>","<code>N = b ? 2 : 64</code>","<code>N = b ? 4 : 64</code>","<code>N = b ? 8 : 64</code>","<code>N = 8</code>","<code>N = b ? 2 : 8</code>","<code>N = b ? 4 : 8</code>","No option is enabled","No option is set","No bit is set","Disable some checks for invalid encodings of instructions, …","Don’t decode <code>LAHF</code> and <code>SAHF</code> in 64-bit mode","Don’t add the mnemonic","Don’t decode <code>TZCNT</code>, decode <code>BSF</code> instead","Don’t decode <code>LZCNT</code>, decode <code>BSR</code> instead","Don’t decode <code>PAUSE</code>, decode <code>NOP</code> instead","Don’t add any prefixes","Don’t decode <code>WBNOINVD</code>, decode <code>WBINVD</code> instead","Near 16-bit branch. This operand kind uses …","Near 32-bit branch. This operand kind uses …","Near 64-bit branch. This operand kind uses …","","<code>NEG r/m16</code>","<code>NEG r/m32</code>","<code>NEG r/m64</code>","<code>NEG r/m8</code>","Never show memory size","There’s not enough bytes left to decode the instruction","No error. The last decoded instruction is a valid …","No rounding mode","","","<code>NOP r/m16</code>","<code>NOP r/m32</code>","<code>NOP r/m64</code>","<code>NOP</code>","<code>NOP</code>","<code>NOP</code>","","<code>NOT r/m16</code>","<code>NOT r/m32</code>","<code>NOT r/m64</code>","<code>NOT r/m8</code>","","Number","Number base","Gets initialized with the default options and can be …","Number kind","Decode some old removed FPU instructions (eg. <code>FRSTPM</code>)","Octal numbers (base 8)","Instruction operand kind","","Any operator","","<code>OR AL, imm8</code>","<code>OR AX, imm16</code>","<code>OR EAX, imm32</code>","<code>OR RAX, imm32</code>","<code>OR r16, r/m16</code>","<code>OR r32, r/m32</code>","<code>OR r64, r/m64</code>","<code>OR r8, r/m8</code>","<code>OR r/m16, imm16</code>","<code>OR r/m16, imm8</code>","<code>OR r/m16, r16</code>","<code>OR r/m32, imm32</code>","<code>OR r/m32, imm8</code>","<code>OR r/m32, r32</code>","<code>OR r/m64, imm32</code>","<code>OR r/m64, imm8</code>","<code>OR r/m64, r64</code>","<code>OR r/m8, imm8</code>","<code>OR r/m8, imm8</code>","<code>OR r/m8, r8</code>","","<code>ORPD xmm1, xmm2/m128</code>","","<code>ORPS xmm1, xmm2/m128</code>","","<code>OUT DX, AL</code>","<code>OUT DX, AX</code>","<code>OUT DX, EAX</code>","<code>OUT imm8, AL</code>","<code>OUT imm8, AX</code>","<code>OUT imm8, EAX</code>","","<code>OUTSB</code>","","<code>OUTSD</code>","","<code>OUTSW</code>","Decode <code>PCOMMIT</code>","","<code>PABSB mm1, mm2/m64</code>","<code>PABSB xmm1, xmm2/m128</code>","","<code>PABSD mm1, mm2/m64</code>","<code>PABSD xmm1, xmm2/m128</code>","","<code>PABSW mm1, mm2/m64</code>","<code>PABSW xmm1, xmm2/m128</code>","128-bit location: 4 x (2 x <code>bfloat16</code>)","128-bit location: 4 x (2 x <code>f16</code>)","128-bit location: 8 x <code>bfloat16</code>","128-bit location: 8 x <code>f16</code>","128-bit location: 4 x <code>f32</code>","128-bit location: 2 x <code>f64</code>","128-bit location: 8 x <code>i16</code>","128-bit location: 4 x <code>i32</code>","128-bit location: 2 x <code>i64</code>","128-bit location: 16 x <code>i8</code>","128-bit location: 8 x <code>u16</code>","128-bit location: 4 x <code>u32</code>","128-bit location: 2 x <code>u52</code>","128-bit location: 2 x <code>u64</code>","128-bit location: 16 x <code>u8</code>","16-bit location: 2 x <code>i8</code>","16-bit location: 2 x <code>u8</code>","256-bit location: 8 x (2 x <code>bfloat16</code>)","256-bit location: 8 x (2 x <code>f16</code>)","256-bit location: 16 x <code>bfloat16</code>","256-bit location: 2 x <code>f128</code>","256-bit location: 16 x <code>f16</code>","256-bit location: 8 x <code>f32</code>","256-bit location: 4 x <code>f64</code>","256-bit location: 2 x <code>i128</code>","256-bit location: 16 x <code>i16</code>","256-bit location: 8 x <code>i32</code>","256-bit location: 4 x <code>i64</code>","256-bit location: 32 x <code>i8</code>","256-bit location: 2 x <code>u128</code>","256-bit location: 16 x <code>u16</code>","256-bit location: 8 x <code>u32</code>","256-bit location: 4 x <code>u52</code>","256-bit location: 4 x <code>u64</code>","256-bit location: 32 x <code>u8</code>","32-bit location: 2 x <code>bfloat16</code>","32-bit location: 2 x <code>f16</code>","32-bit location: 2 x <code>i16</code>","32-bit location: 4 x <code>i8</code>","32-bit location: 2 x <code>u16</code>","32-bit location: 4 x <code>u8</code>","512-bit location: 16 x (2 x <code>bfloat16</code>)","512-bit location: 16 x (2 x <code>f16</code>)","512-bit location: 32 x <code>f16</code>","512-bit location: 16 x <code>f32</code>","512-bit location: 8 x <code>f64</code>","512-bit location: 32 x <code>i16</code>","512-bit location: 16 x <code>i32</code>","512-bit location: 8 x <code>i64</code>","512-bit location: 64 x <code>i8</code>","256-bit location: 4 x <code>u128</code>","512-bit location: 32 x <code>u16</code>","512-bit location: 16 x <code>u32</code>","512-bit location: 8 x <code>u52</code>","512-bit location: 8 x <code>u64</code>","512-bit location: 64 x <code>u8</code>","64-bit location: 4 x <code>f16</code>","64-bit location: 2 x <code>f32</code>","64-bit location: 4 x <code>i16</code>","64-bit location: 2 x <code>i32</code>","64-bit location: 8 x <code>i8</code>","64-bit location: 4 x <code>u16</code>","64-bit location: 2 x <code>u32</code>","64-bit location: 8 x <code>u8</code>","","<code>PACKSSDW mm1, mm2/m64</code>","<code>PACKSSDW xmm1, xmm2/m128</code>","","<code>PACKSSWB mm1, mm2/m64</code>","<code>PACKSSWB xmm1, xmm2/m128</code>","","<code>PACKUSDW xmm1, xmm2/m128</code>","","<code>PACKUSWB mm, mm/m64</code>","<code>PACKUSWB xmm1, xmm2/m128</code>","","<code>PADDB mm, mm/m64</code>","<code>PADDB xmm1, xmm2/m128</code>","","<code>PADDD mm, mm/m64</code>","<code>PADDD xmm1, xmm2/m128</code>","","<code>PADDQ mm, mm/m64</code>","<code>PADDQ xmm1, xmm2/m128</code>","","<code>PADDSB mm, mm/m64</code>","<code>PADDSB xmm1, xmm2/m128</code>","","<code>PADDSIW mm, mm/m64</code>","","<code>PADDSW mm, mm/m64</code>","<code>PADDSW xmm1, xmm2/m128</code>","","<code>PADDUSB mm, mm/m64</code>","<code>PADDUSB xmm1, xmm2/m128</code>","","<code>PADDUSW mm, mm/m64</code>","<code>PADDUSW xmm1, xmm2/m128</code>","","<code>PADDW mm, mm/m64</code>","<code>PADDW xmm1, xmm2/m128</code>","","<code>PALIGNR mm1, mm2/m64, imm8</code>","<code>PALIGNR xmm1, xmm2/m128, imm8</code>","","<code>PAND mm, mm/m64</code>","<code>PAND xmm1, xmm2/m128</code>","","<code>PANDN mm, mm/m64</code>","<code>PANDN xmm1, xmm2/m128</code>","<code>PAUSE</code>","","","<code>PAVEB mm, mm/m64</code>","","<code>PAVGB mm1, mm2/m64</code>","<code>PAVGB xmm1, xmm2/m128</code>","","","<code>PAVGW mm1, mm2/m64</code>","<code>PAVGW xmm1, xmm2/m128</code>","","<code>PBLENDVB xmm1, xmm2/m128, &lt;XMM0&gt;</code>","","<code>PBLENDW xmm1, xmm2/m128, imm8</code>","","<code>PCLMULQDQ xmm1, xmm2/m128, imm8</code>","","<code>PCMPEQB mm, mm/m64</code>","<code>PCMPEQB xmm1, xmm2/m128</code>","","<code>PCMPEQD mm, mm/m64</code>","<code>PCMPEQD xmm1, xmm2/m128</code>","","<code>PCMPEQQ xmm1, xmm2/m128</code>","","<code>PCMPEQW mm, mm/m64</code>","<code>PCMPEQW xmm1, xmm2/m128</code>","","","<code>PCMPESTRI64 xmm1, xmm2/m128, imm8</code>","<code>PCMPESTRI xmm1, xmm2/m128, imm8</code>","","","<code>PCMPESTRM64 xmm1, xmm2/m128, imm8</code>","<code>PCMPESTRM xmm1, xmm2/m128, imm8</code>","","<code>PCMPGTB mm, mm/m64</code>","<code>PCMPGTB xmm1, xmm2/m128</code>","","<code>PCMPGTD mm, mm/m64</code>","<code>PCMPGTD xmm1, xmm2/m128</code>","","<code>PCMPGTQ xmm1, xmm2/m128</code>","","<code>PCMPGTW mm, mm/m64</code>","<code>PCMPGTW xmm1, xmm2/m128</code>","","<code>PCMPISTRI xmm1, xmm2/m128, imm8</code>","","<code>PCMPISTRM xmm1, xmm2/m128, imm8</code>","<code>PCOMMIT</code>","","<code>PCONFIG</code>","","","","<code>PDISTIB mm, m64</code>","","","<code>PEXTRB r32/m8, xmm2, imm8</code>","<code>PEXTRB r64/m8, xmm2, imm8</code>","","<code>PEXTRD r/m32, xmm2, imm8</code>","","<code>PEXTRQ r/m64, xmm2, imm8</code>","","<code>PEXTRW r32, mm, imm8</code>","<code>PEXTRW r32, xmm, imm8</code>","<code>PEXTRW r32/m16, xmm, imm8</code>","<code>PEXTRW r64, mm, imm8</code>","<code>PEXTRW r64, xmm, imm8</code>","<code>PEXTRW r64/m16, xmm, imm8</code>","","","","","","","","","","","","","","","","","","","","","","","<code>PHADDD mm1, mm2/m64</code>","<code>PHADDD xmm1, xmm2/m128</code>","","<code>PHADDSW mm1, mm2/m64</code>","<code>PHADDSW xmm1, xmm2/m128</code>","","<code>PHADDW mm1, mm2/m64</code>","<code>PHADDW xmm1, xmm2/m128</code>","","<code>PHMINPOSUW xmm1, xmm2/m128</code>","","<code>PHSUBD mm1, mm2/m64</code>","<code>PHSUBD xmm1, xmm2/m128</code>","","<code>PHSUBSW mm1, mm2/m64</code>","<code>PHSUBSW xmm1, xmm2/m128</code>","","<code>PHSUBW mm1, mm2/m64</code>","<code>PHSUBW xmm1, xmm2/m128</code>","","","","<code>PINSRB xmm1, r32/m8, imm8</code>","<code>PINSRB xmm1, r64/m8, imm8</code>","","<code>PINSRD xmm1, r/m32, imm8</code>","","<code>PINSRQ xmm1, r/m64, imm8</code>","","<code>PINSRW mm, r32/m16, imm8</code>","<code>PINSRW mm, r64/m16, imm8</code>","<code>PINSRW xmm, r32/m16, imm8</code>","<code>PINSRW xmm, r64/m16, imm8</code>","","<code>PMACHRIW mm, m64</code>","","<code>PMADDUBSW mm1, mm2/m64</code>","<code>PMADDUBSW xmm1, xmm2/m128</code>","","<code>PMADDWD mm, mm/m64</code>","<code>PMADDWD xmm1, xmm2/m128</code>","","<code>PMAGW mm, mm/m64</code>","","<code>PMAXSB xmm1, xmm2/m128</code>","","<code>PMAXSD xmm1, xmm2/m128</code>","","<code>PMAXSW mm1, mm2/m64</code>","<code>PMAXSW xmm1, xmm2/m128</code>","","<code>PMAXUB mm1, mm2/m64</code>","<code>PMAXUB xmm1, xmm2/m128</code>","","<code>PMAXUD xmm1, xmm2/m128</code>","","<code>PMAXUW xmm1, xmm2/m128</code>","","<code>PMINSB xmm1, xmm2/m128</code>","","<code>PMINSD xmm1, xmm2/m128</code>","","<code>PMINSW mm1, mm2/m64</code>","<code>PMINSW xmm1, xmm2/m128</code>","","<code>PMINUB mm1, mm2/m64</code>","<code>PMINUB xmm1, xmm2/m128</code>","","<code>PMINUD xmm1, xmm2/m128</code>","","<code>PMINUW xmm1, xmm2/m128</code>","","<code>PMOVMSKB r32, mm</code>","<code>PMOVMSKB r32, xmm</code>","<code>PMOVMSKB r64, mm</code>","<code>PMOVMSKB r64, xmm</code>","","<code>PMOVSXBD xmm1, xmm2/m32</code>","","<code>PMOVSXBQ xmm1, xmm2/m16</code>","","<code>PMOVSXBW xmm1, xmm2/m64</code>","","<code>PMOVSXDQ xmm1, xmm2/m64</code>","","<code>PMOVSXWD xmm1, xmm2/m64</code>","","<code>PMOVSXWQ xmm1, xmm2/m32</code>","","<code>PMOVZXBD xmm1, xmm2/m32</code>","","<code>PMOVZXBQ xmm1, xmm2/m16</code>","","<code>PMOVZXBW xmm1, xmm2/m64</code>","","<code>PMOVZXDQ xmm1, xmm2/m64</code>","","<code>PMOVZXWD xmm1, xmm2/m64</code>","","<code>PMOVZXWQ xmm1, xmm2/m32</code>","","<code>PMULDQ xmm1, xmm2/m128</code>","","<code>PMULHRIW mm, mm/m64</code>","","<code>PMULHRSW mm1, mm2/m64</code>","<code>PMULHRSW xmm1, xmm2/m128</code>","","<code>PMULHRW mm, mm/m64</code>","","<code>PMULHUW mm1, mm2/m64</code>","<code>PMULHUW xmm1, xmm2/m128</code>","","<code>PMULHW mm, mm/m64</code>","<code>PMULHW xmm1, xmm2/m128</code>","","<code>PMULLD xmm1, xmm2/m128</code>","","<code>PMULLW mm, mm/m64</code>","<code>PMULLW xmm1, xmm2/m128</code>","","<code>PMULUDQ mm1, mm2/m64</code>","<code>PMULUDQ xmm1, xmm2/m128</code>","","<code>PMVGEZB mm, m64</code>","","<code>PMVLZB mm, m64</code>","","<code>PMVNZB mm, m64</code>","","<code>PMVZB mm, m64</code>","","<code>POP r16</code>","<code>POP r32</code>","<code>POP r64</code>","<code>POP r/m16</code>","<code>POP r/m32</code>","<code>POP r/m64</code>","","<code>POPAD</code>","","<code>POPA</code>","","<code>POPCNT r16, r/m16</code>","<code>POPCNT r32, r/m32</code>","<code>POPCNT r64, r/m64</code>","<code>POP DS</code>","<code>POP ES</code>","<code>POP FS</code>","<code>POP GS</code>","<code>POP SS</code>","","<code>POPFD</code>","","<code>POPFQ</code>","","<code>POPF</code>","<code>POP FS</code>","<code>POP GS</code>","<code>POP CS</code>","<code>POP DS</code>","<code>POP ES</code>","<code>POP FS</code>","<code>POP GS</code>","<code>POP SS</code>","","<code>POR mm, mm/m64</code>","<code>POR xmm1, xmm2/m128</code>","","<code>PREFETCH m8</code>","","<code>PREFETCHIT0 m8</code>","","<code>PREFETCHIT1 m8</code>","","<code>PREFETCHNTA m8</code>","<code>PREFETCHW m8</code>","<code>PREFETCH m8</code>","<code>PREFETCH m8</code>","<code>PREFETCH m8</code>","<code>PREFETCH m8</code>","","<code>PREFETCHT0 m8</code>","","<code>PREFETCHT1 m8</code>","","<code>PREFETCHT2 m8</code>","","<code>PREFETCHW m8</code>","","<code>PREFETCHWT1 m8</code>","Any prefix","Prefix","","<code>PSADBW mm1, mm2/m64</code>","<code>PSADBW xmm1, xmm2/m128</code>","","<code>PSHUFB mm1, mm2/m64</code>","<code>PSHUFB xmm1, xmm2/m128</code>","","<code>PSHUFD xmm1, xmm2/m128, imm8</code>","","<code>PSHUFHW xmm1, xmm2/m128, imm8</code>","","<code>PSHUFLW xmm1, xmm2/m128, imm8</code>","","<code>PSHUFW mm1, mm2/m64, imm8</code>","","<code>PSIGNB mm1, mm2/m64</code>","<code>PSIGNB xmm1, xmm2/m128</code>","","<code>PSIGND mm1, mm2/m64</code>","<code>PSIGND xmm1, xmm2/m128</code>","","<code>PSIGNW mm1, mm2/m64</code>","<code>PSIGNW xmm1, xmm2/m128</code>","","<code>PSLLD mm, imm8</code>","<code>PSLLD mm, mm/m64</code>","<code>PSLLD xmm1, imm8</code>","<code>PSLLD xmm1, xmm2/m128</code>","","<code>PSLLDQ xmm1, imm8</code>","","<code>PSLLQ mm, imm8</code>","<code>PSLLQ mm, mm/m64</code>","<code>PSLLQ xmm1, imm8</code>","<code>PSLLQ xmm1, xmm2/m128</code>","","<code>PSLLW mm1, imm8</code>","<code>PSLLW mm, mm/m64</code>","<code>PSLLW xmm1, imm8</code>","<code>PSLLW xmm1, xmm2/m128</code>","<code>PSMASH</code>","","","<code>PSRAD mm, imm8</code>","<code>PSRAD mm, mm/m64</code>","<code>PSRAD xmm1, imm8</code>","<code>PSRAD xmm1, xmm2/m128</code>","","<code>PSRAW mm, imm8</code>","<code>PSRAW mm, mm/m64</code>","<code>PSRAW xmm1, imm8</code>","<code>PSRAW xmm1, xmm2/m128</code>","","<code>PSRLD mm, imm8</code>","<code>PSRLD mm, mm/m64</code>","<code>PSRLD xmm1, imm8</code>","<code>PSRLD xmm1, xmm2/m128</code>","","<code>PSRLDQ xmm1, imm8</code>","","<code>PSRLQ mm, imm8</code>","<code>PSRLQ mm, mm/m64</code>","<code>PSRLQ xmm1, imm8</code>","<code>PSRLQ xmm1, xmm2/m128</code>","","<code>PSRLW mm, imm8</code>","<code>PSRLW mm, mm/m64</code>","<code>PSRLW xmm1, imm8</code>","<code>PSRLW xmm1, xmm2/m128</code>","","<code>PSUBB mm, mm/m64</code>","<code>PSUBB xmm1, xmm2/m128</code>","","<code>PSUBD mm, mm/m64</code>","<code>PSUBD xmm1, xmm2/m128</code>","","<code>PSUBQ mm1, mm2/m64</code>","<code>PSUBQ xmm1, xmm2/m128</code>","","<code>PSUBSB mm, mm/m64</code>","<code>PSUBSB xmm1, xmm2/m128</code>","","<code>PSUBSIW mm, mm/m64</code>","","<code>PSUBSW mm, mm/m64</code>","<code>PSUBSW xmm1, xmm2/m128</code>","","<code>PSUBUSB mm, mm/m64</code>","<code>PSUBUSB xmm1, xmm2/m128</code>","","<code>PSUBUSW mm, mm/m64</code>","<code>PSUBUSW xmm1, xmm2/m128</code>","","<code>PSUBW mm, mm/m64</code>","<code>PSUBW xmm1, xmm2/m128</code>","","","<code>PTEST xmm1, xmm2/m128</code>","","<code>PTWRITE r/m32</code>","<code>PTWRITE r/m64</code>","Any punctuation","","<code>PUNPCKHBW mm, mm/m64</code>","<code>PUNPCKHBW xmm1, xmm2/m128</code>","","<code>PUNPCKHDQ mm, mm/m64</code>","<code>PUNPCKHDQ xmm1, xmm2/m128</code>","","<code>PUNPCKHQDQ xmm1, xmm2/m128</code>","","<code>PUNPCKHWD mm, mm/m64</code>","<code>PUNPCKHWD xmm1, xmm2/m128</code>","","<code>PUNPCKLBW mm, mm/m32</code>","<code>PUNPCKLBW xmm1, xmm2/m128</code>","","<code>PUNPCKLDQ mm, mm/m32</code>","<code>PUNPCKLDQ xmm1, xmm2/m128</code>","","<code>PUNPCKLQDQ xmm1, xmm2/m128</code>","","<code>PUNPCKLWD mm, mm/m32</code>","<code>PUNPCKLWD xmm1, xmm2/m128</code>","","<code>PUSH imm16</code>","<code>PUSH r16</code>","<code>PUSH r32</code>","<code>PUSH r64</code>","<code>PUSH r/m16</code>","<code>PUSH r/m32</code>","<code>PUSH r/m64</code>","","<code>PUSHAD</code>","","<code>PUSHA</code>","<code>PUSH CS</code>","<code>PUSH DS</code>","<code>PUSH ES</code>","<code>PUSH FS</code>","<code>PUSH GS</code>","<code>PUSH SS</code>","<code>PUSH imm32</code>","<code>PUSH imm8</code>","","<code>PUSHFD</code>","","<code>PUSHFQ</code>","","<code>PUSHF</code>","<code>PUSH FS</code>","<code>PUSH GS</code>","<code>PUSH imm32</code>","<code>PUSH imm8</code>","<code>PUSH CS</code>","<code>PUSH DS</code>","<code>PUSH ES</code>","<code>PUSH FS</code>","<code>PUSH GS</code>","<code>PUSH SS</code>","<code>PUSH imm8</code>","","<code>PVALIDATE</code>","<code>PVALIDATE</code>","<code>PVALIDATE</code>","","<code>PXOR mm, mm/m64</code>","<code>PXOR xmm1, xmm2/m128</code>","Memory location contains a 64-bit offset (…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","It’s a symbol relative to a register, eg. a struct …","","","","","<code>RCL r/m16, 1</code>","<code>RCL r/m16, CL</code>","<code>RCL r/m16, imm8</code>","<code>RCL r/m32, 1</code>","<code>RCL r/m32, CL</code>","<code>RCL r/m32, imm8</code>","<code>RCL r/m64, 1</code>","<code>RCL r/m64, CL</code>","<code>RCL r/m64, imm8</code>","<code>RCL r/m8, 1</code>","<code>RCL r/m8, CL</code>","<code>RCL r/m8, imm8</code>","","<code>RCPPS xmm1, xmm2/m128</code>","","<code>RCPSS xmm1, xmm2/m32</code>","","<code>RCR r/m16, 1</code>","<code>RCR r/m16, CL</code>","<code>RCR r/m16, imm8</code>","<code>RCR r/m32, 1</code>","<code>RCR r/m32, CL</code>","<code>RCR r/m32, imm8</code>","<code>RCR r/m64, 1</code>","<code>RCR r/m64, CL</code>","<code>RCR r/m64, imm8</code>","<code>RCR r/m8, 1</code>","<code>RCR r/m8, CL</code>","<code>RCR r/m8, imm8</code>","","<code>RDFSBASE r32</code>","<code>RDFSBASE r64</code>","","<code>RDGSBASE r32</code>","<code>RDGSBASE r64</code>","<code>RDM</code>","","<code>RDMSR</code>","","<code>RDMSRLIST</code>","","","<code>RDPID r32</code>","<code>RDPID r64</code>","<code>RDPKRU</code>","","<code>RDPMC</code>","","<code>RDPRU</code>","","","<code>RDRAND r16</code>","<code>RDRAND r32</code>","<code>RDRAND r64</code>","","<code>RDSEED r16</code>","<code>RDSEED r32</code>","<code>RDSEED r64</code>","","<code>RDSHR r/m32</code>","","<code>RDSSPD r32</code>","","<code>RDSSPQ r64</code>","<code>RDTSC</code>","","<code>RDTSCP</code>","","<code>RDUDBG</code>","","A register","A register (<code>Register</code>).","Any register","","","","","<code>RESERVEDNOP r/m16, r16</code>","<code>RESERVEDNOP r/m16, r16</code>","<code>RESERVEDNOP r/m16, r16</code>","<code>RESERVEDNOP r/m16, r16</code>","<code>RESERVEDNOP r/m16, r16</code>","<code>RESERVEDNOP r/m16, r16</code>","<code>RESERVEDNOP r/m16, r16</code>","<code>RESERVEDNOP r/m16, r16</code>","<code>RESERVEDNOP r/m16, r16</code>","<code>RESERVEDNOP r/m32, r32</code>","<code>RESERVEDNOP r/m32, r32</code>","<code>RESERVEDNOP r/m32, r32</code>","<code>RESERVEDNOP r/m32, r32</code>","<code>RESERVEDNOP r/m32, r32</code>","<code>RESERVEDNOP r/m32, r32</code>","<code>RESERVEDNOP r/m32, r32</code>","<code>RESERVEDNOP r/m32, r32</code>","<code>RESERVEDNOP r/m32, r32</code>","<code>RESERVEDNOP r/m64, r64</code>","<code>RESERVEDNOP r/m64, r64</code>","<code>RESERVEDNOP r/m64, r64</code>","<code>RESERVEDNOP r/m64, r64</code>","<code>RESERVEDNOP r/m64, r64</code>","<code>RESERVEDNOP r/m64, r64</code>","<code>RESERVEDNOP r/m64, r64</code>","<code>RESERVEDNOP r/m64, r64</code>","<code>RESERVEDNOP r/m64, r64</code>","","","<code>RETF</code>","<code>RETF imm16</code>","<code>RETF</code>","<code>RETF imm16</code>","<code>RETF</code>","<code>RETF imm16</code>","<code>RET</code>","<code>RET imm16</code>","<code>RET</code>","<code>RET imm16</code>","<code>RET</code>","<code>RET imm16</code>","<code>RMPADJUST</code>","","<code>RMPQUERY</code>","","<code>RMPUPDATE</code>","","","<code>ROL r/m16, 1</code>","<code>ROL r/m16, CL</code>","<code>ROL r/m16, imm8</code>","<code>ROL r/m32, 1</code>","<code>ROL r/m32, CL</code>","<code>ROL r/m32, imm8</code>","<code>ROL r/m64, 1</code>","<code>ROL r/m64, CL</code>","<code>ROL r/m64, imm8</code>","<code>ROL r/m8, 1</code>","<code>ROL r/m8, CL</code>","<code>ROL r/m8, imm8</code>","","<code>ROR r/m16, 1</code>","<code>ROR r/m16, CL</code>","<code>ROR r/m16, imm8</code>","<code>ROR r/m32, 1</code>","<code>ROR r/m32, CL</code>","<code>ROR r/m32, imm8</code>","<code>ROR r/m64, 1</code>","<code>ROR r/m64, CL</code>","<code>ROR r/m64, imm8</code>","<code>ROR r/m8, 1</code>","<code>ROR r/m8, CL</code>","<code>ROR r/m8, imm8</code>","","Round down (toward -inf)","Round to nearest (even)","Round toward zero (truncate)","Round up (toward +inf)","Rounding control","Rounding control, eg. <code>{rd-sae}</code>","","<code>ROUNDPD xmm1, xmm2/m128, imm8</code>","","<code>ROUNDPS xmm1, xmm2/m128, imm8</code>","","<code>ROUNDSD xmm1, xmm2/m64, imm8</code>","","<code>ROUNDSS xmm1, xmm2/m32, imm8</code>","","<code>RSDC Sreg, m80</code>","","<code>RSLDT m80</code>","<code>RSM</code>","","","<code>RSQRTPS xmm1, xmm2/m128</code>","","<code>RSQRTSS xmm1, xmm2/m32</code>","","<code>RSTORSSP m64</code>","","<code>RSTS m80</code>","","It’s a signed symbol and it should be displayed as …","","","","","","","","","","","","","","<code>SAHF</code>","","","<code>SAL r/m16, 1</code>","<code>SAL r/m16, CL</code>","<code>SAL r/m16, imm8</code>","<code>SAL r/m32, 1</code>","<code>SAL r/m32, CL</code>","<code>SAL r/m32, imm8</code>","<code>SAL r/m64, 1</code>","<code>SAL r/m64, CL</code>","<code>SAL r/m64, imm8</code>","<code>SAL r/m8, 1</code>","<code>SAL r/m8, CL</code>","<code>SAL r/m8, imm8</code>","<code>SALC</code>","","","<code>SAR r/m16, 1</code>","<code>SAR r/m16, CL</code>","<code>SAR r/m16, imm8</code>","<code>SAR r/m32, 1</code>","<code>SAR r/m32, CL</code>","<code>SAR r/m32, imm8</code>","<code>SAR r/m64, 1</code>","<code>SAR r/m64, CL</code>","<code>SAR r/m64, imm8</code>","<code>SAR r/m8, 1</code>","<code>SAR r/m8, CL</code>","<code>SAR r/m8, imm8</code>","","<code>SAVEPREVSSP</code>","","","<code>SBB AL, imm8</code>","<code>SBB AX, imm16</code>","<code>SBB EAX, imm32</code>","<code>SBB RAX, imm32</code>","<code>SBB r16, r/m16</code>","<code>SBB r32, r/m32</code>","<code>SBB r64, r/m64</code>","<code>SBB r8, r/m8</code>","<code>SBB r/m16, imm16</code>","<code>SBB r/m16, imm8</code>","<code>SBB r/m16, r16</code>","<code>SBB r/m32, imm32</code>","<code>SBB r/m32, imm8</code>","<code>SBB r/m32, r32</code>","<code>SBB r/m64, imm32</code>","<code>SBB r/m64, imm8</code>","<code>SBB r/m64, r64</code>","<code>SBB r/m8, imm8</code>","<code>SBB r/m8, imm8</code>","<code>SBB r/m8, r8</code>","","<code>SCASB</code>","","<code>SCASD</code>","","<code>SCASQ</code>","","<code>SCASW</code>","<code>SEAMCALL</code>","","<code>SEAMOPS</code>","","<code>SEAMRET</code>","","Memory location contains a seg:ptr pair, <code>u16</code> (offset) + <code>u16</code>…","Memory location contains a seg:ptr pair, <code>u32</code> (offset) + <code>u16</code>…","Memory location contains a seg:ptr pair, <code>u64</code> (offset) + <code>u16</code>…","80-bit segment descriptor and selector: 0-7 = descriptor, …","Selector value (eg. far <code>JMP</code>/<code>CALL</code>)","","<code>SENDUIPI r64</code>","<code>SERIALIZE</code>","","","<code>SETA r/m8</code>","","<code>SETAE r/m8</code>","","<code>SETB r/m8</code>","","<code>SETBE r/m8</code>","","<code>SETE r/m8</code>","","<code>SETG r/m8</code>","","<code>SETGE r/m8</code>","","<code>SETL r/m8</code>","","<code>SETLE r/m8</code>","","<code>SETNE r/m8</code>","","<code>SETNO r/m8</code>","","<code>SETNP r/m8</code>","","<code>SETNS r/m8</code>","","<code>SETO r/m8</code>","","<code>SETP r/m8</code>","","<code>SETS r/m8</code>","<code>SETSSBSY</code>","","<code>SFENCE</code>","","<code>SFENCE</code>","<code>SFENCE</code>","<code>SFENCE</code>","<code>SFENCE</code>","<code>SFENCE</code>","<code>SFENCE</code>","<code>SFENCE</code>","","<code>SGDT m</code>","<code>SGDT m</code>","<code>SGDT m</code>","","<code>SHA1MSG1 xmm1, xmm2/m128</code>","","<code>SHA1MSG2 xmm1, xmm2/m128</code>","","<code>SHA1NEXTE xmm1, xmm2/m128</code>","","<code>SHA1RNDS4 xmm1, xmm2/m128, imm8</code>","","<code>SHA256MSG1 xmm1, xmm2/m128</code>","","<code>SHA256MSG2 xmm1, xmm2/m128</code>","","<code>SHA256RNDS2 xmm1, xmm2/m128, &lt;XMM0&gt;</code>","","<code>SHL r/m16, 1</code>","<code>SHL r/m16, CL</code>","<code>SHL r/m16, imm8</code>","<code>SHL r/m32, 1</code>","<code>SHL r/m32, CL</code>","<code>SHL r/m32, imm8</code>","<code>SHL r/m64, 1</code>","<code>SHL r/m64, CL</code>","<code>SHL r/m64, imm8</code>","<code>SHL r/m8, 1</code>","<code>SHL r/m8, CL</code>","<code>SHL r/m8, imm8</code>","","<code>SHLD r/m16, r16, CL</code>","<code>SHLD r/m16, r16, imm8</code>","<code>SHLD r/m32, r32, CL</code>","<code>SHLD r/m32, r32, imm8</code>","<code>SHLD r/m64, r64, CL</code>","<code>SHLD r/m64, r64, imm8</code>","","","<code>SHR r/m16, 1</code>","<code>SHR r/m16, CL</code>","<code>SHR r/m16, imm8</code>","<code>SHR r/m32, 1</code>","<code>SHR r/m32, CL</code>","<code>SHR r/m32, imm8</code>","<code>SHR r/m64, 1</code>","<code>SHR r/m64, CL</code>","<code>SHR r/m64, imm8</code>","<code>SHR r/m8, 1</code>","<code>SHR r/m8, CL</code>","<code>SHR r/m8, imm8</code>","","<code>SHRD r/m16, r16, CL</code>","<code>SHRD r/m16, r16, imm8</code>","<code>SHRD r/m32, r32, CL</code>","<code>SHRD r/m32, r32, imm8</code>","<code>SHRD r/m64, r64, CL</code>","<code>SHRD r/m64, r64, imm8</code>","","","<code>SHUFPD xmm1, xmm2/m128, imm8</code>","","<code>SHUFPS xmm1, xmm2/m128, imm8</code>","","<code>SIDT m</code>","<code>SIDT m</code>","<code>SIDT m</code>","<code>SKINIT</code>","","","<code>SLDT r32/m16</code>","<code>SLDT r64/m16</code>","<code>SLDT r/m16</code>","","<code>SMINT</code>","","<code>SMINT</code>","","<code>SMSW r32/m16</code>","<code>SMSW r64/m16</code>","<code>SMSW r/m16</code>","","","<code>SQRTPD xmm1, xmm2/m128</code>","","<code>SQRTPS xmm1, xmm2/m128</code>","","<code>SQRTSD xmm1, xmm2/m64</code>","","<code>SQRTSS xmm1, xmm2/m32</code>","<code>STAC</code>","","<code>STC</code>","","<code>STD</code>","","<code>STGI</code>","","<code>STI</code>","","","<code>STMXCSR m32</code>","<code>STOREALL</code>","","","<code>STOSB</code>","","<code>STOSD</code>","","<code>STOSQ</code>","","<code>STOSW</code>","Contains a <code>&amp;&#39;a str</code>","","<code>STR r32/m16</code>","<code>STR r64/m16</code>","<code>STR r/m16</code>","Contains a <code>String</code>","","<code>STUI</code>","","","<code>SUB AL, imm8</code>","<code>SUB AX, imm16</code>","<code>SUB EAX, imm32</code>","<code>SUB RAX, imm32</code>","<code>SUB r16, r/m16</code>","<code>SUB r32, r/m32</code>","<code>SUB r64, r/m64</code>","<code>SUB r8, r/m8</code>","<code>SUB r/m16, imm16</code>","<code>SUB r/m16, imm8</code>","<code>SUB r/m16, r16</code>","<code>SUB r/m32, imm32</code>","<code>SUB r/m32, imm8</code>","<code>SUB r/m32, r32</code>","<code>SUB r/m64, imm32</code>","<code>SUB r/m64, imm8</code>","<code>SUB r/m64, r64</code>","<code>SUB r/m8, imm8</code>","<code>SUB r/m8, imm8</code>","<code>SUB r/m8, r8</code>","","<code>SUBPD xmm1, xmm2/m128</code>","","<code>SUBPS xmm1, xmm2/m128</code>","","<code>SUBSD xmm1, xmm2/m64</code>","","<code>SUBSS xmm1, xmm2/m32</code>","Suppress all exceptions: <code>{sae}</code>","","<code>SVDC m80, Sreg</code>","","<code>SVLDT m80</code>","","<code>SVTS m80</code>","<code>SWAPGS</code>","","MVEX swizzle or memory up/down conversion: <code>{dacb}</code> or …","Contains a <code>&amp;&#39;a str</code> or a <code>String</code>","Contains one or more <code>SymResTextPart</code>s (text and color)","Contains text and colors","Symbol flags","Used by a <code>Formatter</code> to resolve symbols","Created by a <code>SymbolResolver</code>","<code>SYSCALL</code>","","<code>SYSENTER</code>","","","<code>SYSEXIT</code>","<code>SYSEXITQ</code>","","","<code>SYSRET</code>","<code>SYSRETQ</code>","","","","","","","","","","","","","","","","","","","<code>TDCALL</code>","","","","","","","","","<code>TEST AL, imm8</code>","<code>TEST AX, imm16</code>","<code>TEST EAX, imm32</code>","<code>TEST RAX, imm32</code>","<code>TEST r/m16, imm16</code>","<code>TEST r/m16, imm16</code>","<code>TEST r/m16, r16</code>","<code>TEST r/m32, imm32</code>","<code>TEST r/m32, imm32</code>","<code>TEST r/m32, r32</code>","<code>TEST r/m64, imm32</code>","<code>TEST r/m64, imm32</code>","<code>TEST r/m64, r64</code>","<code>TEST r/m8, imm8</code>","<code>TEST r/m8, imm8</code>","<code>TEST r/m8, r8</code>","<code>TESTUI</code>","","Normal text","Text and color","Text and color (vector)","Tile data","64-bit location: TILECFG (<code>LDTILECFG</code>/<code>STTILECFG</code>)","","","","","","<code>TLBSYNC</code>","","","<code>TPAUSE r32, &lt;edx&gt;, &lt;eax&gt;</code>","<code>TPAUSE r64, &lt;edx&gt;, &lt;eax&gt;</code>","Tuple type (EVEX/MVEX) which can be used to get the disp8 …","","<code>TZCNT r16, r/m16</code>","<code>TZCNT r32, r/m32</code>","<code>TZCNT r64, r/m64</code>","","","Decode undocumented Intel <code>RDUDBG</code> and <code>WRUDBG</code> instructions","Memory location contains a <code>u128</code>","","Memory location contains a <code>u16</code>","Memory location contains a <code>u256</code>","","Memory location contains a <code>u32</code>","Memory location contains a <code>u512</code>","Memory location contains a <code>u52</code>","","Memory location contains a <code>u64</code>","","Memory location contains a <code>u8</code>","Decode <code>UMOV</code> instructions","","<code>UCOMISD xmm1, xmm2/m64</code>","","<code>UCOMISS xmm1, xmm2/m32</code>","<code>UD0</code>","","<code>UD0 r16, r/m16</code>","<code>UD0 r32, r/m32</code>","<code>UD0 r64, r/m64</code>","","<code>UD1 r16, r/m16</code>","<code>UD1 r32, r/m32</code>","<code>UD1 r64, r/m64</code>","<code>UD2</code>","","<code>UIRET</code>","","","<code>UMONITOR r16</code>","<code>UMONITOR r32</code>","<code>UMONITOR r64</code>","","<code>UMOV r16, r/m16</code>","<code>UMOV r32, r/m32</code>","<code>UMOV r8, r/m8</code>","<code>UMOV r/m16, r16</code>","<code>UMOV r/m32, r32</code>","<code>UMOV r/m8, r8</code>","","<code>UMWAIT r32, &lt;edx&gt;, &lt;eax&gt;</code>","<code>UMWAIT r64, &lt;edx&gt;, &lt;eax&gt;</code>","","Unknown size","Unknown size or the instruction doesn’t reference any …","","<code>UNPCKHPD xmm1, xmm2/m128</code>","","<code>UNPCKHPS xmm1, xmm2/m128</code>","","<code>UNPCKLPD xmm1, xmm2/m128</code>","","<code>UNPCKLPS xmm1, xmm2/m128</code>","","","","","VEX encoding","<code>ANDN r32a, r32b, r/m32</code>","<code>ANDN r64a, r64b, r/m64</code>","<code>BEXTR r32a, r/m32, r32b</code>","<code>BEXTR r64a, r/m64, r64b</code>","<code>BLSI r32, r/m32</code>","<code>BLSI r64, r/m64</code>","<code>BLSMSK r32, r/m32</code>","<code>BLSMSK r64, r/m64</code>","<code>BLSR r32, r/m32</code>","<code>BLSR r64, r/m64</code>","<code>BZHI r32a, r/m32, r32b</code>","<code>BZHI r64a, r/m64, r64b</code>","<code>CMPBEXADD m32, r32, r32</code>","<code>CMPBEXADD m64, r64, r64</code>","<code>CMPBXADD m32, r32, r32</code>","<code>CMPBXADD m64, r64, r64</code>","<code>CMPLEXADD m32, r32, r32</code>","<code>CMPLEXADD m64, r64, r64</code>","<code>CMPLXADD m32, r32, r32</code>","<code>CMPLXADD m64, r64, r64</code>","<code>CMPNBEXADD m32, r32, r32</code>","<code>CMPNBEXADD m64, r64, r64</code>","<code>CMPNBXADD m32, r32, r32</code>","<code>CMPNBXADD m64, r64, r64</code>","<code>CMPNLEXADD m32, r32, r32</code>","<code>CMPNLEXADD m64, r64, r64</code>","<code>CMPNLXADD m32, r32, r32</code>","<code>CMPNLXADD m64, r64, r64</code>","<code>CMPNOXADD m32, r32, r32</code>","<code>CMPNOXADD m64, r64, r64</code>","<code>CMPNPXADD m32, r32, r32</code>","<code>CMPNPXADD m64, r64, r64</code>","<code>CMPNSXADD m32, r32, r32</code>","<code>CMPNSXADD m64, r64, r64</code>","<code>CMPNZXADD m32, r32, r32</code>","<code>CMPNZXADD m64, r64, r64</code>","<code>CMPOXADD m32, r32, r32</code>","<code>CMPOXADD m64, r64, r64</code>","<code>CMPPXADD m32, r32, r32</code>","<code>CMPPXADD m64, r64, r64</code>","<code>CMPSXADD m32, r32, r32</code>","<code>CMPSXADD m64, r64, r64</code>","<code>CMPZXADD m32, r32, r32</code>","<code>CMPZXADD m64, r64, r64</code>","<code>CLEVICT0 m8</code>","<code>CLEVICT1 m8</code>","<code>DELAY r32</code>","<code>DELAY r64</code>","<code>JKNZD k1, rel32</code>","<code>JKNZD k1, rel8</code>","<code>JKZD k1, rel32</code>","<code>JKZD k1, rel8</code>","<code>KAND k1, k2</code>","<code>KANDN k1, k2</code>","<code>KANDNR k1, k2</code>","<code>KCONCATH r64, k1, k2</code>","<code>KCONCATL r64, k1, k2</code>","<code>KEXTRACT k1, r64, imm8</code>","<code>KMERGE2L1H k1, k2</code>","<code>KMERGE2L1L k1, k2</code>","<code>KMOV k1, k2</code>","<code>KMOV k1, r32</code>","<code>KMOV r32, k1</code>","<code>KNOT k1, k2</code>","<code>KOR k1, k2</code>","<code>KORTEST k1, k2</code>","<code>KXNOR k1, k2</code>","<code>KXOR k1, k2</code>","<code>LZCNT r32, r32</code>","<code>LZCNT r64, r64</code>","<code>POPCNT r32, r32</code>","<code>POPCNT r64, r64</code>","<code>SPFLT r32</code>","<code>SPFLT r64</code>","<code>TZCNT r32, r32</code>","<code>TZCNT r64, r64</code>","<code>TZCNTI r32, r32</code>","<code>TZCNTI r64, r64</code>","<code>UNDOC r32, r/m32</code>","<code>UNDOC r32, r/m32</code>","<code>UNDOC r32, r/m32</code>","<code>UNDOC r64, r/m64</code>","<code>UNDOC r64, r/m64</code>","<code>UNDOC r64, r/m64</code>","<code>VPREFETCH0 m8</code>","<code>VPREFETCH1 m8</code>","<code>VPREFETCH2 m8</code>","<code>VPREFETCHE0 m8</code>","<code>VPREFETCHE1 m8</code>","<code>VPREFETCHE2 m8</code>","<code>VPREFETCHENTA m8</code>","<code>VPREFETCHNTA m8</code>","<code>KADDB k1, k2, k3</code>","<code>KADDD k1, k2, k3</code>","<code>KADDQ k1, k2, k3</code>","<code>KADDW k1, k2, k3</code>","<code>KANDB k1, k2, k3</code>","<code>KANDD k1, k2, k3</code>","<code>KANDNB k1, k2, k3</code>","<code>KANDND k1, k2, k3</code>","<code>KANDNQ k1, k2, k3</code>","<code>KANDNW k1, k2, k3</code>","<code>KANDQ k1, k2, k3</code>","<code>KANDW k1, k2, k3</code>","<code>KMOVB k1, k2/m8</code>","<code>KMOVB k1, r32</code>","<code>KMOVB m8, k1</code>","<code>KMOVB r32, k1</code>","<code>KMOVD k1, k2/m32</code>","<code>KMOVD k1, r32</code>","<code>KMOVD m32, k1</code>","<code>KMOVD r32, k1</code>","<code>KMOVQ k1, k2/m64</code>","<code>KMOVQ k1, r64</code>","<code>KMOVQ m64, k1</code>","<code>KMOVQ r64, k1</code>","<code>KMOVW k1, k2/m16</code>","<code>KMOVW k1, r32</code>","<code>KMOVW m16, k1</code>","<code>KMOVW r32, k1</code>","<code>KNOTB k1, k2</code>","<code>KNOTD k1, k2</code>","<code>KNOTQ k1, k2</code>","<code>KNOTW k1, k2</code>","<code>KORB k1, k2, k3</code>","<code>KORD k1, k2, k3</code>","<code>KORQ k1, k2, k3</code>","<code>KORTESTB k1, k2</code>","<code>KORTESTD k1, k2</code>","<code>KORTESTQ k1, k2</code>","<code>KORTESTW k1, k2</code>","<code>KORW k1, k2, k3</code>","<code>KSHIFTLB k1, k2, imm8</code>","<code>KSHIFTLD k1, k2, imm8</code>","<code>KSHIFTLQ k1, k2, imm8</code>","<code>KSHIFTLW k1, k2, imm8</code>","<code>KSHIFTRB k1, k2, imm8</code>","<code>KSHIFTRD k1, k2, imm8</code>","<code>KSHIFTRQ k1, k2, imm8</code>","<code>KSHIFTRW k1, k2, imm8</code>","<code>KTESTB k1, k2</code>","<code>KTESTD k1, k2</code>","<code>KTESTQ k1, k2</code>","<code>KTESTW k1, k2</code>","<code>KUNPCKBW k1, k2, k3</code>","<code>KUNPCKDQ k1, k2, k3</code>","<code>KUNPCKWD k1, k2, k3</code>","<code>KXNORB k1, k2, k3</code>","<code>KXNORD k1, k2, k3</code>","<code>KXNORQ k1, k2, k3</code>","<code>KXNORW k1, k2, k3</code>","<code>KXORB k1, k2, k3</code>","<code>KXORD k1, k2, k3</code>","<code>KXORQ k1, k2, k3</code>","<code>KXORW k1, k2, k3</code>","<code>LDTILECFG m512</code>","<code>MULX r32a, r32b, r/m32</code>","<code>MULX r64a, r64b, r/m64</code>","<code>PDEP r32a, r32b, r/m32</code>","<code>PDEP r64a, r64b, r/m64</code>","<code>PEXT r32a, r32b, r/m32</code>","<code>PEXT r64a, r64b, r/m64</code>","<code>RORX r32, r/m32, imm8</code>","<code>RORX r64, r/m64, imm8</code>","<code>SARX r32a, r/m32, r32b</code>","<code>SARX r64a, r/m64, r64b</code>","<code>SHLX r32a, r/m32, r32b</code>","<code>SHLX r64a, r/m64, r64b</code>","<code>SHRX r32a, r/m32, r32b</code>","<code>SHRX r64a, r/m64, r64b</code>","<code>STTILECFG m512</code>","<code>TDPBF16PS tmm1, tmm2, tmm3</code>","<code>TDPBSSD tmm1, tmm2, tmm3</code>","<code>TDPBSUD tmm1, tmm2, tmm3</code>","<code>TDPBUSD tmm1, tmm2, tmm3</code>","<code>TDPBUUD tmm1, tmm2, tmm3</code>","<code>TDPFP16PS tmm1, tmm2, tmm3</code>","<code>TILELOADD tmm1, sibmem</code>","<code>TILELOADDT1 tmm1, sibmem</code>","<code>TILERELEASE</code>","<code>TILESTORED sibmem, tmm1</code>","<code>TILEZERO tmm1</code>","<code>VADDPD xmm1, xmm2, xmm3/m128</code>","<code>VADDPD ymm1, ymm2, ymm3/m256</code>","<code>VADDPS xmm1, xmm2, xmm3/m128</code>","<code>VADDPS ymm1, ymm2, ymm3/m256</code>","<code>VADDSD xmm1, xmm2, xmm3/m64</code>","<code>VADDSS xmm1, xmm2, xmm3/m32</code>","<code>VADDSUBPD xmm1, xmm2, xmm3/m128</code>","<code>VADDSUBPD ymm1, ymm2, ymm3/m256</code>","<code>VADDSUBPS xmm1, xmm2, xmm3/m128</code>","<code>VADDSUBPS ymm1, ymm2, ymm3/m256</code>","<code>VAESDEC xmm1, xmm2, xmm3/m128</code>","<code>VAESDEC ymm1, ymm2, ymm3/m256</code>","<code>VAESDECLAST xmm1, xmm2, xmm3/m128</code>","<code>VAESDECLAST ymm1, ymm2, ymm3/m256</code>","<code>VAESENC xmm1, xmm2, xmm3/m128</code>","<code>VAESENC ymm1, ymm2, ymm3/m256</code>","<code>VAESENCLAST xmm1, xmm2, xmm3/m128</code>","<code>VAESENCLAST ymm1, ymm2, ymm3/m256</code>","<code>VAESIMC xmm1, xmm2/m128</code>","<code>VAESKEYGENASSIST xmm1, xmm2/m128, imm8</code>","<code>VANDNPD xmm1, xmm2, xmm3/m128</code>","<code>VANDNPD ymm1, ymm2, ymm3/m256</code>","<code>VANDNPS xmm1, xmm2, xmm3/m128</code>","<code>VANDNPS ymm1, ymm2, ymm3/m256</code>","<code>VANDPD xmm1, xmm2, xmm3/m128</code>","<code>VANDPD ymm1, ymm2, ymm3/m256</code>","<code>VANDPS xmm1, xmm2, xmm3/m128</code>","<code>VANDPS ymm1, ymm2, ymm3/m256</code>","<code>VBCSTNEBF162PS xmm1, m16</code>","<code>VBCSTNEBF162PS ymm1, m16</code>","<code>VBCSTNESH2PS xmm1, m16</code>","<code>VBCSTNESH2PS ymm1, m16</code>","<code>VBLENDPD xmm1, xmm2, xmm3/m128, imm8</code>","<code>VBLENDPD ymm1, ymm2, ymm3/m256, imm8</code>","<code>VBLENDPS xmm1, xmm2, xmm3/m128, imm8</code>","<code>VBLENDPS ymm1, ymm2, ymm3/m256, imm8</code>","<code>VBLENDVPD xmm1, xmm2, xmm3/m128, xmm4</code>","<code>VBLENDVPD ymm1, ymm2, ymm3/m256, ymm4</code>","<code>VBLENDVPS xmm1, xmm2, xmm3/m128, xmm4</code>","<code>VBLENDVPS ymm1, ymm2, ymm3/m256, ymm4</code>","<code>VBROADCASTF128 ymm1, m128</code>","<code>VBROADCASTI128 ymm1, m128</code>","<code>VBROADCASTSD ymm1, m64</code>","<code>VBROADCASTSD ymm1, xmm2</code>","<code>VBROADCASTSS xmm1, m32</code>","<code>VBROADCASTSS xmm1, xmm2</code>","<code>VBROADCASTSS ymm1, m32</code>","<code>VBROADCASTSS ymm1, xmm2</code>","<code>VCMPPD xmm1, xmm2, xmm3/m128, imm8</code>","<code>VCMPPD ymm1, ymm2, ymm3/m256, imm8</code>","<code>VCMPPS xmm1, xmm2, xmm3/m128, imm8</code>","<code>VCMPPS ymm1, ymm2, ymm3/m256, imm8</code>","<code>VCMPSD xmm1, xmm2, xmm3/m64, imm8</code>","<code>VCMPSS xmm1, xmm2, xmm3/m32, imm8</code>","<code>VCOMISD xmm1, xmm2/m64</code>","<code>VCOMISS xmm1, xmm2/m32</code>","<code>VCVTDQ2PD xmm1, xmm2/m64</code>","<code>VCVTDQ2PD ymm1, xmm2/m128</code>","<code>VCVTDQ2PS xmm1, xmm2/m128</code>","<code>VCVTDQ2PS ymm1, ymm2/m256</code>","<code>VCVTNEEBF162PS xmm1, m128</code>","<code>VCVTNEEBF162PS ymm1, m256</code>","<code>VCVTNEEPH2PS xmm1, m128</code>","<code>VCVTNEEPH2PS ymm1, m256</code>","<code>VCVTNEOBF162PS xmm1, m128</code>","<code>VCVTNEOBF162PS ymm1, m256</code>","<code>VCVTNEOPH2PS xmm1, m128</code>","<code>VCVTNEOPH2PS ymm1, m256</code>","<code>VCVTNEPS2BF16 xmm1, xmm2/m128</code>","<code>VCVTNEPS2BF16 xmm1, ymm2/m256</code>","<code>VCVTPD2DQ xmm1, xmm2/m128</code>","<code>VCVTPD2DQ xmm1, ymm2/m256</code>","<code>VCVTPD2PS xmm1, xmm2/m128</code>","<code>VCVTPD2PS xmm1, ymm2/m256</code>","<code>VCVTPH2PS xmm1, xmm2/m64</code>","<code>VCVTPH2PS ymm1, xmm2/m128</code>","<code>VCVTPS2DQ xmm1, xmm2/m128</code>","<code>VCVTPS2DQ ymm1, ymm2/m256</code>","<code>VCVTPS2PD xmm1, xmm2/m64</code>","<code>VCVTPS2PD ymm1, xmm2/m128</code>","<code>VCVTPS2PH xmm1/m128, ymm2, imm8</code>","<code>VCVTPS2PH xmm1/m64, xmm2, imm8</code>","<code>VCVTSD2SI r32, xmm1/m64</code>","<code>VCVTSD2SI r64, xmm1/m64</code>","<code>VCVTSD2SS xmm1, xmm2, xmm3/m64</code>","<code>VCVTSI2SD xmm1, xmm2, r/m32</code>","<code>VCVTSI2SD xmm1, xmm2, r/m64</code>","<code>VCVTSI2SS xmm1, xmm2, r/m32</code>","<code>VCVTSI2SS xmm1, xmm2, r/m64</code>","<code>VCVTSS2SD xmm1, xmm2, xmm3/m32</code>","<code>VCVTSS2SI r32, xmm1/m32</code>","<code>VCVTSS2SI r64, xmm1/m32</code>","<code>VCVTTPD2DQ xmm1, xmm2/m128</code>","<code>VCVTTPD2DQ xmm1, ymm2/m256</code>","<code>VCVTTPS2DQ xmm1, xmm2/m128</code>","<code>VCVTTPS2DQ ymm1, ymm2/m256</code>","<code>VCVTTSD2SI r32, xmm1/m64</code>","<code>VCVTTSD2SI r64, xmm1/m64</code>","<code>VCVTTSS2SI r32, xmm1/m32</code>","<code>VCVTTSS2SI r64, xmm1/m32</code>","<code>VDIVPD xmm1, xmm2, xmm3/m128</code>","<code>VDIVPD ymm1, ymm2, ymm3/m256</code>","<code>VDIVPS xmm1, xmm2, xmm3/m128</code>","<code>VDIVPS ymm1, ymm2, ymm3/m256</code>","<code>VDIVSD xmm1, xmm2, xmm3/m64</code>","<code>VDIVSS xmm1, xmm2, xmm3/m32</code>","<code>VDPPD xmm1, xmm2, xmm3/m128, imm8</code>","<code>VDPPS xmm1, xmm2, xmm3/m128, imm8</code>","<code>VDPPS ymm1, ymm2, ymm3/m256, imm8</code>","<code>VEXTRACTF128 xmm1/m128, ymm2, imm8</code>","<code>VEXTRACTI128 xmm1/m128, ymm2, imm8</code>","<code>VEXTRACTPS r64/m32, xmm1, imm8</code>","<code>VEXTRACTPS r/m32, xmm1, imm8</code>","<code>VFMADD132PD xmm1, xmm2, xmm3/m128</code>","<code>VFMADD132PD ymm1, ymm2, ymm3/m256</code>","<code>VFMADD132PS xmm1, xmm2, xmm3/m128</code>","<code>VFMADD132PS ymm1, ymm2, ymm3/m256</code>","<code>VFMADD132SD xmm1, xmm2, xmm3/m64</code>","<code>VFMADD132SS xmm1, xmm2, xmm3/m32</code>","<code>VFMADD213PD xmm1, xmm2, xmm3/m128</code>","<code>VFMADD213PD ymm1, ymm2, ymm3/m256</code>","<code>VFMADD213PS xmm1, xmm2, xmm3/m128</code>","<code>VFMADD213PS ymm1, ymm2, ymm3/m256</code>","<code>VFMADD213SD xmm1, xmm2, xmm3/m64</code>","<code>VFMADD213SS xmm1, xmm2, xmm3/m32</code>","<code>VFMADD231PD xmm1, xmm2, xmm3/m128</code>","<code>VFMADD231PD ymm1, ymm2, ymm3/m256</code>","<code>VFMADD231PS xmm1, xmm2, xmm3/m128</code>","<code>VFMADD231PS ymm1, ymm2, ymm3/m256</code>","<code>VFMADD231SD xmm1, xmm2, xmm3/m64</code>","<code>VFMADD231SS xmm1, xmm2, xmm3/m32</code>","<code>VFMADDPD xmm1, xmm2, xmm3, xmm4/m128</code>","<code>VFMADDPD xmm1, xmm2, xmm3/m128, xmm4</code>","<code>VFMADDPD ymm1, ymm2, ymm3, ymm4/m256</code>","<code>VFMADDPD ymm1, ymm2, ymm3/m256, ymm4</code>","<code>VFMADDPS xmm1, xmm2, xmm3, xmm4/m128</code>","<code>VFMADDPS xmm1, xmm2, xmm3/m128, xmm4</code>","<code>VFMADDPS ymm1, ymm2, ymm3, ymm4/m256</code>","<code>VFMADDPS ymm1, ymm2, ymm3/m256, ymm4</code>","<code>VFMADDSD xmm1, xmm2, xmm3, xmm4/m64</code>","<code>VFMADDSD xmm1, xmm2, xmm3/m64, xmm4</code>","<code>VFMADDSS xmm1, xmm2, xmm3, xmm4/m32</code>","<code>VFMADDSS xmm1, xmm2, xmm3/m32, xmm4</code>","<code>VFMADDSUB132PD xmm1, xmm2, xmm3/m128</code>","<code>VFMADDSUB132PD ymm1, ymm2, ymm3/m256</code>","<code>VFMADDSUB132PS xmm1, xmm2, xmm3/m128</code>","<code>VFMADDSUB132PS ymm1, ymm2, ymm3/m256</code>","<code>VFMADDSUB213PD xmm1, xmm2, xmm3/m128</code>","<code>VFMADDSUB213PD ymm1, ymm2, ymm3/m256</code>","<code>VFMADDSUB213PS xmm1, xmm2, xmm3/m128</code>","<code>VFMADDSUB213PS ymm1, ymm2, ymm3/m256</code>","<code>VFMADDSUB231PD xmm1, xmm2, xmm3/m128</code>","<code>VFMADDSUB231PD ymm1, ymm2, ymm3/m256</code>","<code>VFMADDSUB231PS xmm1, xmm2, xmm3/m128</code>","<code>VFMADDSUB231PS ymm1, ymm2, ymm3/m256</code>","<code>VFMADDSUBPD xmm1, xmm2, xmm3, xmm4/m128</code>","<code>VFMADDSUBPD xmm1, xmm2, xmm3/m128, xmm4</code>","<code>VFMADDSUBPD ymm1, ymm2, ymm3, ymm4/m256</code>","<code>VFMADDSUBPD ymm1, ymm2, ymm3/m256, ymm4</code>","<code>VFMADDSUBPS xmm1, xmm2, xmm3, xmm4/m128</code>","<code>VFMADDSUBPS xmm1, xmm2, xmm3/m128, xmm4</code>","<code>VFMADDSUBPS ymm1, ymm2, ymm3, ymm4/m256</code>","<code>VFMADDSUBPS ymm1, ymm2, ymm3/m256, ymm4</code>","<code>VFMSUB132PD xmm1, xmm2, xmm3/m128</code>","<code>VFMSUB132PD ymm1, ymm2, ymm3/m256</code>","<code>VFMSUB132PS xmm1, xmm2, xmm3/m128</code>","<code>VFMSUB132PS ymm1, ymm2, ymm3/m256</code>","<code>VFMSUB132SD xmm1, xmm2, xmm3/m64</code>","<code>VFMSUB132SS xmm1, xmm2, xmm3/m32</code>","<code>VFMSUB213PD xmm1, xmm2, xmm3/m128</code>","<code>VFMSUB213PD ymm1, ymm2, ymm3/m256</code>","<code>VFMSUB213PS xmm1, xmm2, xmm3/m128</code>","<code>VFMSUB213PS ymm1, ymm2, ymm3/m256</code>","<code>VFMSUB213SD xmm1, xmm2, xmm3/m64</code>","<code>VFMSUB213SS xmm1, xmm2, xmm3/m32</code>","<code>VFMSUB231PD xmm1, xmm2, xmm3/m128</code>","<code>VFMSUB231PD ymm1, ymm2, ymm3/m256</code>","<code>VFMSUB231PS xmm1, xmm2, xmm3/m128</code>","<code>VFMSUB231PS ymm1, ymm2, ymm3/m256</code>","<code>VFMSUB231SD xmm1, xmm2, xmm3/m64</code>","<code>VFMSUB231SS xmm1, xmm2, xmm3/m32</code>","<code>VFMSUBADD132PD xmm1, xmm2, xmm3/m128</code>","<code>VFMSUBADD132PD ymm1, ymm2, ymm3/m256</code>","<code>VFMSUBADD132PS xmm1, xmm2, xmm3/m128</code>","<code>VFMSUBADD132PS ymm1, ymm2, ymm3/m256</code>","<code>VFMSUBADD213PD xmm1, xmm2, xmm3/m128</code>","<code>VFMSUBADD213PD ymm1, ymm2, ymm3/m256</code>","<code>VFMSUBADD213PS xmm1, xmm2, xmm3/m128</code>","<code>VFMSUBADD213PS ymm1, ymm2, ymm3/m256</code>","<code>VFMSUBADD231PD xmm1, xmm2, xmm3/m128</code>","<code>VFMSUBADD231PD ymm1, ymm2, ymm3/m256</code>","<code>VFMSUBADD231PS xmm1, xmm2, xmm3/m128</code>","<code>VFMSUBADD231PS ymm1, ymm2, ymm3/m256</code>","<code>VFMSUBADDPD xmm1, xmm2, xmm3, xmm4/m128</code>","<code>VFMSUBADDPD xmm1, xmm2, xmm3/m128, xmm4</code>","<code>VFMSUBADDPD ymm1, ymm2, ymm3, ymm4/m256</code>","<code>VFMSUBADDPD ymm1, ymm2, ymm3/m256, ymm4</code>","<code>VFMSUBADDPS xmm1, xmm2, xmm3, xmm4/m128</code>","<code>VFMSUBADDPS xmm1, xmm2, xmm3/m128, xmm4</code>","<code>VFMSUBADDPS ymm1, ymm2, ymm3, ymm4/m256</code>","<code>VFMSUBADDPS ymm1, ymm2, ymm3/m256, ymm4</code>","<code>VFMSUBPD xmm1, xmm2, xmm3, xmm4/m128</code>","<code>VFMSUBPD xmm1, xmm2, xmm3/m128, xmm4</code>","<code>VFMSUBPD ymm1, ymm2, ymm3, ymm4/m256</code>","<code>VFMSUBPD ymm1, ymm2, ymm3/m256, ymm4</code>","<code>VFMSUBPS xmm1, xmm2, xmm3, xmm4/m128</code>","<code>VFMSUBPS xmm1, xmm2, xmm3/m128, xmm4</code>","<code>VFMSUBPS ymm1, ymm2, ymm3, ymm4/m256</code>","<code>VFMSUBPS ymm1, ymm2, ymm3/m256, ymm4</code>","<code>VFMSUBSD xmm1, xmm2, xmm3, xmm4/m64</code>","<code>VFMSUBSD xmm1, xmm2, xmm3/m64, xmm4</code>","<code>VFMSUBSS xmm1, xmm2, xmm3, xmm4/m32</code>","<code>VFMSUBSS xmm1, xmm2, xmm3/m32, xmm4</code>","<code>VFNMADD132PD xmm1, xmm2, xmm3/m128</code>","<code>VFNMADD132PD ymm1, ymm2, ymm3/m256</code>","<code>VFNMADD132PS xmm1, xmm2, xmm3/m128</code>","<code>VFNMADD132PS ymm1, ymm2, ymm3/m256</code>","<code>VFNMADD132SD xmm1, xmm2, xmm3/m64</code>","<code>VFNMADD132SS xmm1, xmm2, xmm3/m32</code>","<code>VFNMADD213PD xmm1, xmm2, xmm3/m128</code>","<code>VFNMADD213PD ymm1, ymm2, ymm3/m256</code>","<code>VFNMADD213PS xmm1, xmm2, xmm3/m128</code>","<code>VFNMADD213PS ymm1, ymm2, ymm3/m256</code>","<code>VFNMADD213SD xmm1, xmm2, xmm3/m64</code>","<code>VFNMADD213SS xmm1, xmm2, xmm3/m32</code>","<code>VFNMADD231PD xmm1, xmm2, xmm3/m128</code>","<code>VFNMADD231PD ymm1, ymm2, ymm3/m256</code>","<code>VFNMADD231PS xmm1, xmm2, xmm3/m128</code>","<code>VFNMADD231PS ymm1, ymm2, ymm3/m256</code>","<code>VFNMADD231SD xmm1, xmm2, xmm3/m64</code>","<code>VFNMADD231SS xmm1, xmm2, xmm3/m32</code>","<code>VFNMADDPD xmm1, xmm2, xmm3, xmm4/m128</code>","<code>VFNMADDPD xmm1, xmm2, xmm3/m128, xmm4</code>","<code>VFNMADDPD ymm1, ymm2, ymm3, ymm4/m256</code>","<code>VFNMADDPD ymm1, ymm2, ymm3/m256, ymm4</code>","<code>VFNMADDPS xmm1, xmm2, xmm3, xmm4/m128</code>","<code>VFNMADDPS xmm1, xmm2, xmm3/m128, xmm4</code>","<code>VFNMADDPS ymm1, ymm2, ymm3, ymm4/m256</code>","<code>VFNMADDPS ymm1, ymm2, ymm3/m256, ymm4</code>","<code>VFNMADDSD xmm1, xmm2, xmm3, xmm4/m64</code>","<code>VFNMADDSD xmm1, xmm2, xmm3/m64, xmm4</code>","<code>VFNMADDSS xmm1, xmm2, xmm3, xmm4/m32</code>","<code>VFNMADDSS xmm1, xmm2, xmm3/m32, xmm4</code>","<code>VFNMSUB132PD xmm1, xmm2, xmm3/m128</code>","<code>VFNMSUB132PD ymm1, ymm2, ymm3/m256</code>","<code>VFNMSUB132PS xmm1, xmm2, xmm3/m128</code>","<code>VFNMSUB132PS ymm1, ymm2, ymm3/m256</code>","<code>VFNMSUB132SD xmm1, xmm2, xmm3/m64</code>","<code>VFNMSUB132SS xmm1, xmm2, xmm3/m32</code>","<code>VFNMSUB213PD xmm1, xmm2, xmm3/m128</code>","<code>VFNMSUB213PD ymm1, ymm2, ymm3/m256</code>","<code>VFNMSUB213PS xmm1, xmm2, xmm3/m128</code>","<code>VFNMSUB213PS ymm1, ymm2, ymm3/m256</code>","<code>VFNMSUB213SD xmm1, xmm2, xmm3/m64</code>","<code>VFNMSUB213SS xmm1, xmm2, xmm3/m32</code>","<code>VFNMSUB231PD xmm1, xmm2, xmm3/m128</code>","<code>VFNMSUB231PD ymm1, ymm2, ymm3/m256</code>","<code>VFNMSUB231PS xmm1, xmm2, xmm3/m128</code>","<code>VFNMSUB231PS ymm1, ymm2, ymm3/m256</code>","<code>VFNMSUB231SD xmm1, xmm2, xmm3/m64</code>","<code>VFNMSUB231SS xmm1, xmm2, xmm3/m32</code>","<code>VFNMSUBPD xmm1, xmm2, xmm3, xmm4/m128</code>","<code>VFNMSUBPD xmm1, xmm2, xmm3/m128, xmm4</code>","<code>VFNMSUBPD ymm1, ymm2, ymm3, ymm4/m256</code>","<code>VFNMSUBPD ymm1, ymm2, ymm3/m256, ymm4</code>","<code>VFNMSUBPS xmm1, xmm2, xmm3, xmm4/m128</code>","<code>VFNMSUBPS xmm1, xmm2, xmm3/m128, xmm4</code>","<code>VFNMSUBPS ymm1, ymm2, ymm3, ymm4/m256</code>","<code>VFNMSUBPS ymm1, ymm2, ymm3/m256, ymm4</code>","<code>VFNMSUBSD xmm1, xmm2, xmm3, xmm4/m64</code>","<code>VFNMSUBSD xmm1, xmm2, xmm3/m64, xmm4</code>","<code>VFNMSUBSS xmm1, xmm2, xmm3, xmm4/m32</code>","<code>VFNMSUBSS xmm1, xmm2, xmm3/m32, xmm4</code>","<code>VGATHERDPD xmm1, vm32x, xmm2</code>","<code>VGATHERDPD ymm1, vm32x, ymm2</code>","<code>VGATHERDPS xmm1, vm32x, xmm2</code>","<code>VGATHERDPS ymm1, vm32y, ymm2</code>","<code>VGATHERQPD xmm1, vm64x, xmm2</code>","<code>VGATHERQPD ymm1, vm64y, ymm2</code>","<code>VGATHERQPS xmm1, vm64x, xmm2</code>","<code>VGATHERQPS xmm1, vm64y, xmm2</code>","<code>VGF2P8AFFINEINVQB xmm1, xmm2, xmm3/m128, imm8</code>","<code>VGF2P8AFFINEINVQB ymm1, ymm2, ymm3/m256, imm8</code>","<code>VGF2P8AFFINEQB xmm1, xmm2, xmm3/m128, imm8</code>","<code>VGF2P8AFFINEQB ymm1, ymm2, ymm3/m256, imm8</code>","<code>VGF2P8MULB xmm1, xmm2, xmm3/m128</code>","<code>VGF2P8MULB ymm1, ymm2, ymm3/m256</code>","<code>VHADDPD xmm1, xmm2, xmm3/m128</code>","<code>VHADDPD ymm1, ymm2, ymm3/m256</code>","<code>VHADDPS xmm1, xmm2, xmm3/m128</code>","<code>VHADDPS ymm1, ymm2, ymm3/m256</code>","<code>VHSUBPD xmm1, xmm2, xmm3/m128</code>","<code>VHSUBPD ymm1, ymm2, ymm3/m256</code>","<code>VHSUBPS xmm1, xmm2, xmm3/m128</code>","<code>VHSUBPS ymm1, ymm2, ymm3/m256</code>","<code>VINSERTF128 ymm1, ymm2, xmm3/m128, imm8</code>","<code>VINSERTI128 ymm1, ymm2, xmm3/m128, imm8</code>","<code>VINSERTPS xmm1, xmm2, xmm3/m32, imm8</code>","<code>VLDDQU xmm1, m128</code>","<code>VLDDQU ymm1, m256</code>","<code>VLDMXCSR m32</code>","<code>VMASKMOVDQU xmm1, xmm2</code>","<code>VMASKMOVPD m128, xmm1, xmm2</code>","<code>VMASKMOVPD m256, ymm1, ymm2</code>","<code>VMASKMOVPD xmm1, xmm2, m128</code>","<code>VMASKMOVPD ymm1, ymm2, m256</code>","<code>VMASKMOVPS m128, xmm1, xmm2</code>","<code>VMASKMOVPS m256, ymm1, ymm2</code>","<code>VMASKMOVPS xmm1, xmm2, m128</code>","<code>VMASKMOVPS ymm1, ymm2, m256</code>","<code>VMAXPD xmm1, xmm2, xmm3/m128</code>","<code>VMAXPD ymm1, ymm2, ymm3/m256</code>","<code>VMAXPS xmm1, xmm2, xmm3/m128</code>","<code>VMAXPS ymm1, ymm2, ymm3/m256</code>","<code>VMAXSD xmm1, xmm2, xmm3/m64</code>","<code>VMAXSS xmm1, xmm2, xmm3/m32</code>","<code>VMINPD xmm1, xmm2, xmm3/m128</code>","<code>VMINPD ymm1, ymm2, ymm3/m256</code>","<code>VMINPS xmm1, xmm2, xmm3/m128</code>","<code>VMINPS ymm1, ymm2, ymm3/m256</code>","<code>VMINSD xmm1, xmm2, xmm3/m64</code>","<code>VMINSS xmm1, xmm2, xmm3/m32</code>","<code>VMOVAPD xmm1, xmm2/m128</code>","<code>VMOVAPD xmm2/m128, xmm1</code>","<code>VMOVAPD ymm1, ymm2/m256</code>","<code>VMOVAPD ymm2/m256, ymm1</code>","<code>VMOVAPS xmm1, xmm2/m128</code>","<code>VMOVAPS xmm2/m128, xmm1</code>","<code>VMOVAPS ymm1, ymm2/m256</code>","<code>VMOVAPS ymm2/m256, ymm1</code>","<code>VMOVD r/m32, xmm1</code>","<code>VMOVD xmm1, r/m32</code>","<code>VMOVDDUP xmm1, xmm2/m64</code>","<code>VMOVDDUP ymm1, ymm2/m256</code>","<code>VMOVDQA xmm1, xmm2/m128</code>","<code>VMOVDQA xmm2/m128, xmm1</code>","<code>VMOVDQA ymm1, ymm2/m256</code>","<code>VMOVDQA ymm2/m256, ymm1</code>","<code>VMOVDQU xmm1, xmm2/m128</code>","<code>VMOVDQU xmm2/m128, xmm1</code>","<code>VMOVDQU ymm1, ymm2/m256</code>","<code>VMOVDQU ymm2/m256, ymm1</code>","<code>VMOVHLPS xmm1, xmm2, xmm3</code>","<code>VMOVHPD m64, xmm1</code>","<code>VMOVHPD xmm2, xmm1, m64</code>","<code>VMOVHPS m64, xmm1</code>","<code>VMOVHPS xmm2, xmm1, m64</code>","<code>VMOVLHPS xmm1, xmm2, xmm3</code>","<code>VMOVLPD m64, xmm1</code>","<code>VMOVLPD xmm2, xmm1, m64</code>","<code>VMOVLPS m64, xmm1</code>","<code>VMOVLPS xmm2, xmm1, m64</code>","<code>VMOVMSKPD r32, xmm2</code>","<code>VMOVMSKPD r32, ymm2</code>","<code>VMOVMSKPD r64, xmm2</code>","<code>VMOVMSKPD r64, ymm2</code>","<code>VMOVMSKPS r32, xmm2</code>","<code>VMOVMSKPS r32, ymm2</code>","<code>VMOVMSKPS r64, xmm2</code>","<code>VMOVMSKPS r64, ymm2</code>","<code>VMOVNTDQ m128, xmm1</code>","<code>VMOVNTDQ m256, ymm1</code>","<code>VMOVNTDQA xmm1, m128</code>","<code>VMOVNTDQA ymm1, m256</code>","<code>VMOVNTPD m128, xmm1</code>","<code>VMOVNTPD m256, ymm1</code>","<code>VMOVNTPS m128, xmm1</code>","<code>VMOVNTPS m256, ymm1</code>","<code>VMOVQ r/m64, xmm1</code>","<code>VMOVQ xmm1, r/m64</code>","<code>VMOVQ xmm1, xmm2/m64</code>","<code>VMOVQ xmm1/m64, xmm2</code>","<code>VMOVSD m64, xmm1</code>","<code>VMOVSD xmm1, m64</code>","<code>VMOVSD xmm1, xmm2, xmm3</code>","<code>VMOVSD xmm1, xmm2, xmm3</code>","<code>VMOVSHDUP xmm1, xmm2/m128</code>","<code>VMOVSHDUP ymm1, ymm2/m256</code>","<code>VMOVSLDUP xmm1, xmm2/m128</code>","<code>VMOVSLDUP ymm1, ymm2/m256</code>","<code>VMOVSS m32, xmm1</code>","<code>VMOVSS xmm1, m32</code>","<code>VMOVSS xmm1, xmm2, xmm3</code>","<code>VMOVSS xmm1, xmm2, xmm3</code>","<code>VMOVUPD xmm1, xmm2/m128</code>","<code>VMOVUPD xmm2/m128, xmm1</code>","<code>VMOVUPD ymm1, ymm2/m256</code>","<code>VMOVUPD ymm2/m256, ymm1</code>","<code>VMOVUPS xmm1, xmm2/m128</code>","<code>VMOVUPS xmm2/m128, xmm1</code>","<code>VMOVUPS ymm1, ymm2/m256</code>","<code>VMOVUPS ymm2/m256, ymm1</code>","<code>VMPSADBW xmm1, xmm2, xmm3/m128, imm8</code>","<code>VMPSADBW ymm1, ymm2, ymm3/m256, imm8</code>","<code>VMULPD xmm1, xmm2, xmm3/m128</code>","<code>VMULPD ymm1, ymm2, ymm3/m256</code>","<code>VMULPS xmm1, xmm2, xmm3/m128</code>","<code>VMULPS ymm1, ymm2, ymm3/m256</code>","<code>VMULSD xmm1, xmm2, xmm3/m64</code>","<code>VMULSS xmm1, xmm2, xmm3/m32</code>","<code>VORPD xmm1, xmm2, xmm3/m128</code>","<code>VORPD ymm1, ymm2, ymm3/m256</code>","<code>VORPS xmm1, xmm2, xmm3/m128</code>","<code>VORPS ymm1, ymm2, ymm3/m256</code>","<code>VPABSB xmm1, xmm2/m128</code>","<code>VPABSB ymm1, ymm2/m256</code>","<code>VPABSD xmm1, xmm2/m128</code>","<code>VPABSD ymm1, ymm2/m256</code>","<code>VPABSW xmm1, xmm2/m128</code>","<code>VPABSW ymm1, ymm2/m256</code>","<code>VPACKSSDW xmm1, xmm2, xmm3/m128</code>","<code>VPACKSSDW ymm1, ymm2, ymm3/m256</code>","<code>VPACKSSWB xmm1, xmm2, xmm3/m128</code>","<code>VPACKSSWB ymm1, ymm2, ymm3/m256</code>","<code>VPACKUSDW xmm1, xmm2, xmm3/m128</code>","<code>VPACKUSDW ymm1, ymm2, ymm3/m256</code>","<code>VPACKUSWB xmm1, xmm2, xmm3/m128</code>","<code>VPACKUSWB ymm1, ymm2, ymm3/m256</code>","<code>VPADDB xmm1, xmm2, xmm3/m128</code>","<code>VPADDB ymm1, ymm2, ymm3/m256</code>","<code>VPADDD xmm1, xmm2, xmm3/m128</code>","<code>VPADDD ymm1, ymm2, ymm3/m256</code>","<code>VPADDQ xmm1, xmm2, xmm3/m128</code>","<code>VPADDQ ymm1, ymm2, ymm3/m256</code>","<code>VPADDSB xmm1, xmm2, xmm3/m128</code>","<code>VPADDSB ymm1, ymm2, ymm3/m256</code>","<code>VPADDSW xmm1, xmm2, xmm3/m128</code>","<code>VPADDSW ymm1, ymm2, ymm3/m256</code>","<code>VPADDUSB xmm1, xmm2, xmm3/m128</code>","<code>VPADDUSB ymm1, ymm2, ymm3/m256</code>","<code>VPADDUSW xmm1, xmm2, xmm3/m128</code>","<code>VPADDUSW ymm1, ymm2, ymm3/m256</code>","<code>VPADDW xmm1, xmm2, xmm3/m128</code>","<code>VPADDW ymm1, ymm2, ymm3/m256</code>","<code>VPALIGNR xmm1, xmm2, xmm3/m128, imm8</code>","<code>VPALIGNR ymm1, ymm2, ymm3/m256, imm8</code>","<code>VPAND xmm1, xmm2, xmm3/m128</code>","<code>VPAND ymm1, ymm2, ymm3/m256</code>","<code>VPANDN xmm1, xmm2, xmm3/m128</code>","<code>VPANDN ymm1, ymm2, ymm3/m256</code>","<code>VPAVGB xmm1, xmm2, xmm3/m128</code>","<code>VPAVGB ymm1, ymm2, ymm3/m256</code>","<code>VPAVGW xmm1, xmm2, xmm3/m128</code>","<code>VPAVGW ymm1, ymm2, ymm3/m256</code>","<code>VPBLENDD xmm1, xmm2, xmm3/m128, imm8</code>","<code>VPBLENDD ymm1, ymm2, ymm3/m256, imm8</code>","<code>VPBLENDVB xmm1, xmm2, xmm3/m128, xmm4</code>","<code>VPBLENDVB ymm1, ymm2, ymm3/m256, ymm4</code>","<code>VPBLENDW xmm1, xmm2, xmm3/m128, imm8</code>","<code>VPBLENDW ymm1, ymm2, ymm3/m256, imm8</code>","<code>VPBROADCASTB xmm1, xmm2/m8</code>","<code>VPBROADCASTB ymm1, xmm2/m8</code>","<code>VPBROADCASTD xmm1, xmm2/m32</code>","<code>VPBROADCASTD ymm1, xmm2/m32</code>","<code>VPBROADCASTQ xmm1, xmm2/m64</code>","<code>VPBROADCASTQ ymm1, xmm2/m64</code>","<code>VPBROADCASTW xmm1, xmm2/m16</code>","<code>VPBROADCASTW ymm1, xmm2/m16</code>","<code>VPCLMULQDQ xmm1, xmm2, xmm3/m128, imm8</code>","<code>VPCLMULQDQ ymm1, ymm2, ymm3/m256, imm8</code>","<code>VPCMPEQB xmm1, xmm2, xmm3/m128</code>","<code>VPCMPEQB ymm1, ymm2, ymm3/m256</code>","<code>VPCMPEQD xmm1, xmm2, xmm3/m128</code>","<code>VPCMPEQD ymm1, ymm2, ymm3/m256</code>","<code>VPCMPEQQ xmm1, xmm2, xmm3/m128</code>","<code>VPCMPEQQ ymm1, ymm2, ymm3/m256</code>","<code>VPCMPEQW xmm1, xmm2, xmm3/m128</code>","<code>VPCMPEQW ymm1, ymm2, ymm3/m256</code>","<code>VPCMPESTRI64 xmm1, xmm2/m128, imm8</code>","<code>VPCMPESTRI xmm1, xmm2/m128, imm8</code>","<code>VPCMPESTRM64 xmm1, xmm2/m128, imm8</code>","<code>VPCMPESTRM xmm1, xmm2/m128, imm8</code>","<code>VPCMPGTB xmm1, xmm2, xmm3/m128</code>","<code>VPCMPGTB ymm1, ymm2, ymm3/m256</code>","<code>VPCMPGTD xmm1, xmm2, xmm3/m128</code>","<code>VPCMPGTD ymm1, ymm2, ymm3/m256</code>","<code>VPCMPGTQ xmm1, xmm2, xmm3/m128</code>","<code>VPCMPGTQ ymm1, ymm2, ymm3/m256</code>","<code>VPCMPGTW xmm1, xmm2, xmm3/m128</code>","<code>VPCMPGTW ymm1, ymm2, ymm3/m256</code>","<code>VPCMPISTRI xmm1, xmm2/m128, imm8</code>","<code>VPCMPISTRM xmm1, xmm2/m128, imm8</code>","<code>VPDPBSSD xmm1, xmm2, xmm3/m128</code>","<code>VPDPBSSD ymm1, ymm2, ymm3/m256</code>","<code>VPDPBSSDS xmm1, xmm2, xmm3/m128</code>","<code>VPDPBSSDS ymm1, ymm2, ymm3/m256</code>","<code>VPDPBSUD xmm1, xmm2, xmm3/m128</code>","<code>VPDPBSUD ymm1, ymm2, ymm3/m256</code>","<code>VPDPBSUDS xmm1, xmm2, xmm3/m128</code>","<code>VPDPBSUDS ymm1, ymm2, ymm3/m256</code>","<code>VPDPBUSD xmm1, xmm2, xmm3/m128</code>","<code>VPDPBUSD ymm1, ymm2, ymm3/m256</code>","<code>VPDPBUSDS xmm1, xmm2, xmm3/m128</code>","<code>VPDPBUSDS ymm1, ymm2, ymm3/m256</code>","<code>VPDPBUUD xmm1, xmm2, xmm3/m128</code>","<code>VPDPBUUD ymm1, ymm2, ymm3/m256</code>","<code>VPDPBUUDS xmm1, xmm2, xmm3/m128</code>","<code>VPDPBUUDS ymm1, ymm2, ymm3/m256</code>","<code>VPDPWSSD xmm1, xmm2, xmm3/m128</code>","<code>VPDPWSSD ymm1, ymm2, ymm3/m256</code>","<code>VPDPWSSDS xmm1, xmm2, xmm3/m128</code>","<code>VPDPWSSDS ymm1, ymm2, ymm3/m256</code>","<code>VPERM2F128 ymm1, ymm2, ymm3/m256, imm8</code>","<code>VPERM2I128 ymm1, ymm2, ymm3/m256, imm8</code>","<code>VPERMD ymm1, ymm2, ymm3/m256</code>","<code>VPERMIL2PD xmm1, xmm2, xmm3, xmm4/m128, imm4</code>","<code>VPERMIL2PD xmm1, xmm2, xmm3/m128, xmm4, imm4</code>","<code>VPERMIL2PD ymm1, ymm2, ymm3, ymm4/m256, imm4</code>","<code>VPERMIL2PD ymm1, ymm2, ymm3/m256, ymm4, imm4</code>","<code>VPERMIL2PS xmm1, xmm2, xmm3, xmm4/m128, imm4</code>","<code>VPERMIL2PS xmm1, xmm2, xmm3/m128, xmm4, imm4</code>","<code>VPERMIL2PS ymm1, ymm2, ymm3, ymm4/m256, imm4</code>","<code>VPERMIL2PS ymm1, ymm2, ymm3/m256, ymm4, imm4</code>","<code>VPERMILPD xmm1, xmm2, xmm3/m128</code>","<code>VPERMILPD xmm1, xmm2/m128, imm8</code>","<code>VPERMILPD ymm1, ymm2, ymm3/m256</code>","<code>VPERMILPD ymm1, ymm2/m256, imm8</code>","<code>VPERMILPS xmm1, xmm2, xmm3/m128</code>","<code>VPERMILPS xmm1, xmm2/m128, imm8</code>","<code>VPERMILPS ymm1, ymm2, ymm3/m256</code>","<code>VPERMILPS ymm1, ymm2/m256, imm8</code>","<code>VPERMPD ymm1, ymm2/m256, imm8</code>","<code>VPERMPS ymm1, ymm2, ymm3/m256</code>","<code>VPERMQ ymm1, ymm2/m256, imm8</code>","<code>VPEXTRB r32/m8, xmm2, imm8</code>","<code>VPEXTRB r64/m8, xmm2, imm8</code>","<code>VPEXTRD r/m32, xmm2, imm8</code>","<code>VPEXTRQ r/m64, xmm2, imm8</code>","<code>VPEXTRW r32, xmm1, imm8</code>","<code>VPEXTRW r32/m16, xmm2, imm8</code>","<code>VPEXTRW r64, xmm1, imm8</code>","<code>VPEXTRW r64/m16, xmm2, imm8</code>","<code>VPGATHERDD xmm1, vm32x, xmm2</code>","<code>VPGATHERDD ymm1, vm32y, ymm2</code>","<code>VPGATHERDQ xmm1, vm32x, xmm2</code>","<code>VPGATHERDQ ymm1, vm32x, ymm2</code>","<code>VPGATHERQD xmm1, vm64x, xmm2</code>","<code>VPGATHERQD xmm1, vm64y, xmm2</code>","<code>VPGATHERQQ xmm1, vm64x, xmm2</code>","<code>VPGATHERQQ ymm1, vm64y, ymm2</code>","<code>VPHADDD xmm1, xmm2, xmm3/m128</code>","<code>VPHADDD ymm1, ymm2, ymm3/m256</code>","<code>VPHADDSW xmm1, xmm2, xmm3/m128</code>","<code>VPHADDSW ymm1, ymm2, ymm3/m256</code>","<code>VPHADDW xmm1, xmm2, xmm3/m128</code>","<code>VPHADDW ymm1, ymm2, ymm3/m256</code>","<code>VPHMINPOSUW xmm1, xmm2/m128</code>","<code>VPHSUBD xmm1, xmm2, xmm3/m128</code>","<code>VPHSUBD ymm1, ymm2, ymm3/m256</code>","<code>VPHSUBSW xmm1, xmm2, xmm3/m128</code>","<code>VPHSUBSW ymm1, ymm2, ymm3/m256</code>","<code>VPHSUBW xmm1, xmm2, xmm3/m128</code>","<code>VPHSUBW ymm1, ymm2, ymm3/m256</code>","<code>VPINSRB xmm1, xmm2, r32/m8, imm8</code>","<code>VPINSRB xmm1, xmm2, r64/m8, imm8</code>","<code>VPINSRD xmm1, xmm2, r/m32, imm8</code>","<code>VPINSRQ xmm1, xmm2, r/m64, imm8</code>","<code>VPINSRW xmm1, xmm2, r32/m16, imm8</code>","<code>VPINSRW xmm1, xmm2, r64/m16, imm8</code>","<code>VPMADD52HUQ xmm1, xmm2, xmm3/m128</code>","<code>VPMADD52HUQ ymm1, ymm2, ymm3/m256</code>","<code>VPMADD52LUQ xmm1, xmm2, xmm3/m128</code>","<code>VPMADD52LUQ ymm1, ymm2, ymm3/m256</code>","<code>VPMADDUBSW xmm1, xmm2, xmm3/m128</code>","<code>VPMADDUBSW ymm1, ymm2, ymm3/m256</code>","<code>VPMADDWD xmm1, xmm2, xmm3/m128</code>","<code>VPMADDWD ymm1, ymm2, ymm3/m256</code>","<code>VPMASKMOVD m128, xmm1, xmm2</code>","<code>VPMASKMOVD m256, ymm1, ymm2</code>","<code>VPMASKMOVD xmm1, xmm2, m128</code>","<code>VPMASKMOVD ymm1, ymm2, m256</code>","<code>VPMASKMOVQ m128, xmm1, xmm2</code>","<code>VPMASKMOVQ m256, ymm1, ymm2</code>","<code>VPMASKMOVQ xmm1, xmm2, m128</code>","<code>VPMASKMOVQ ymm1, ymm2, m256</code>","<code>VPMAXSB xmm1, xmm2, xmm3/m128</code>","<code>VPMAXSB ymm1, ymm2, ymm3/m256</code>","<code>VPMAXSD xmm1, xmm2, xmm3/m128</code>","<code>VPMAXSD ymm1, ymm2, ymm3/m256</code>","<code>VPMAXSW xmm1, xmm2, xmm3/m128</code>","<code>VPMAXSW ymm1, ymm2, ymm3/m256</code>","<code>VPMAXUB xmm1, xmm2, xmm3/m128</code>","<code>VPMAXUB ymm1, ymm2, ymm3/m256</code>","<code>VPMAXUD xmm1, xmm2, xmm3/m128</code>","<code>VPMAXUD ymm1, ymm2, ymm3/m256</code>","<code>VPMAXUW xmm1, xmm2, xmm3/m128</code>","<code>VPMAXUW ymm1, ymm2, ymm3/m256</code>","<code>VPMINSB xmm1, xmm2, xmm3/m128</code>","<code>VPMINSB ymm1, ymm2, ymm3/m256</code>","<code>VPMINSD xmm1, xmm2, xmm3/m128</code>","<code>VPMINSD ymm1, ymm2, ymm3/m256</code>","<code>VPMINSW xmm1, xmm2, xmm3/m128</code>","<code>VPMINSW ymm1, ymm2, ymm3/m256</code>","<code>VPMINUB xmm1, xmm2, xmm3/m128</code>","<code>VPMINUB ymm1, ymm2, ymm3/m256</code>","<code>VPMINUD xmm1, xmm2, xmm3/m128</code>","<code>VPMINUD ymm1, ymm2, ymm3/m256</code>","<code>VPMINUW xmm1, xmm2, xmm3/m128</code>","<code>VPMINUW ymm1, ymm2, ymm3/m256</code>","<code>VPMOVMSKB r32, xmm1</code>","<code>VPMOVMSKB r32, ymm1</code>","<code>VPMOVMSKB r64, xmm1</code>","<code>VPMOVMSKB r64, ymm1</code>","<code>VPMOVSXBD xmm1, xmm2/m32</code>","<code>VPMOVSXBD ymm1, xmm2/m64</code>","<code>VPMOVSXBQ xmm1, xmm2/m16</code>","<code>VPMOVSXBQ ymm1, xmm2/m32</code>","<code>VPMOVSXBW xmm1, xmm2/m64</code>","<code>VPMOVSXBW ymm1, xmm2/m128</code>","<code>VPMOVSXDQ xmm1, xmm2/m64</code>","<code>VPMOVSXDQ ymm1, xmm2/m128</code>","<code>VPMOVSXWD xmm1, xmm2/m64</code>","<code>VPMOVSXWD ymm1, xmm2/m128</code>","<code>VPMOVSXWQ xmm1, xmm2/m32</code>","<code>VPMOVSXWQ ymm1, xmm2/m64</code>","<code>VPMOVZXBD xmm1, xmm2/m32</code>","<code>VPMOVZXBD ymm1, xmm2/m64</code>","<code>VPMOVZXBQ xmm1, xmm2/m16</code>","<code>VPMOVZXBQ ymm1, xmm2/m32</code>","<code>VPMOVZXBW xmm1, xmm2/m64</code>","<code>VPMOVZXBW ymm1, xmm2/m128</code>","<code>VPMOVZXDQ xmm1, xmm2/m64</code>","<code>VPMOVZXDQ ymm1, xmm2/m128</code>","<code>VPMOVZXWD xmm1, xmm2/m64</code>","<code>VPMOVZXWD ymm1, xmm2/m128</code>","<code>VPMOVZXWQ xmm1, xmm2/m32</code>","<code>VPMOVZXWQ ymm1, xmm2/m64</code>","<code>VPMULDQ xmm1, xmm2, xmm3/m128</code>","<code>VPMULDQ ymm1, ymm2, ymm3/m256</code>","<code>VPMULHRSW xmm1, xmm2, xmm3/m128</code>","<code>VPMULHRSW ymm1, ymm2, ymm3/m256</code>","<code>VPMULHUW xmm1, xmm2, xmm3/m128</code>","<code>VPMULHUW ymm1, ymm2, ymm3/m256</code>","<code>VPMULHW xmm1, xmm2, xmm3/m128</code>","<code>VPMULHW ymm1, ymm2, ymm3/m256</code>","<code>VPMULLD xmm1, xmm2, xmm3/m128</code>","<code>VPMULLD ymm1, ymm2, ymm3/m256</code>","<code>VPMULLW xmm1, xmm2, xmm3/m128</code>","<code>VPMULLW ymm1, ymm2, ymm3/m256</code>","<code>VPMULUDQ xmm1, xmm2, xmm3/m128</code>","<code>VPMULUDQ ymm1, ymm2, ymm3/m256</code>","<code>VPOR xmm1, xmm2, xmm3/m128</code>","<code>VPOR ymm1, ymm2, ymm3/m256</code>","<code>VPSADBW xmm1, xmm2, xmm3/m128</code>","<code>VPSADBW ymm1, ymm2, ymm3/m256</code>","<code>VPSHUFB xmm1, xmm2, xmm3/m128</code>","<code>VPSHUFB ymm1, ymm2, ymm3/m256</code>","<code>VPSHUFD xmm1, xmm2/m128, imm8</code>","<code>VPSHUFD ymm1, ymm2/m256, imm8</code>","<code>VPSHUFHW xmm1, xmm2/m128, imm8</code>","<code>VPSHUFHW ymm1, ymm2/m256, imm8</code>","<code>VPSHUFLW xmm1, xmm2/m128, imm8</code>","<code>VPSHUFLW ymm1, ymm2/m256, imm8</code>","<code>VPSIGNB xmm1, xmm2, xmm3/m128</code>","<code>VPSIGNB ymm1, ymm2, ymm3/m256</code>","<code>VPSIGND xmm1, xmm2, xmm3/m128</code>","<code>VPSIGND ymm1, ymm2, ymm3/m256</code>","<code>VPSIGNW xmm1, xmm2, xmm3/m128</code>","<code>VPSIGNW ymm1, ymm2, ymm3/m256</code>","<code>VPSLLD xmm1, xmm2, imm8</code>","<code>VPSLLD xmm1, xmm2, xmm3/m128</code>","<code>VPSLLD ymm1, ymm2, imm8</code>","<code>VPSLLD ymm1, ymm2, xmm3/m128</code>","<code>VPSLLDQ xmm1, xmm2, imm8</code>","<code>VPSLLDQ ymm1, ymm2, imm8</code>","<code>VPSLLQ xmm1, xmm2, imm8</code>","<code>VPSLLQ xmm1, xmm2, xmm3/m128</code>","<code>VPSLLQ ymm1, ymm2, imm8</code>","<code>VPSLLQ ymm1, ymm2, xmm3/m128</code>","<code>VPSLLVD xmm1, xmm2, xmm3/m128</code>","<code>VPSLLVD ymm1, ymm2, ymm3/m256</code>","<code>VPSLLVQ xmm1, xmm2, xmm3/m128</code>","<code>VPSLLVQ ymm1, ymm2, ymm3/m256</code>","<code>VPSLLW xmm1, xmm2, imm8</code>","<code>VPSLLW xmm1, xmm2, xmm3/m128</code>","<code>VPSLLW ymm1, ymm2, imm8</code>","<code>VPSLLW ymm1, ymm2, xmm3/m128</code>","<code>VPSRAD xmm1, xmm2, imm8</code>","<code>VPSRAD xmm1, xmm2, xmm3/m128</code>","<code>VPSRAD ymm1, ymm2, imm8</code>","<code>VPSRAD ymm1, ymm2, xmm3/m128</code>","<code>VPSRAVD xmm1, xmm2, xmm3/m128</code>","<code>VPSRAVD ymm1, ymm2, ymm3/m256</code>","<code>VPSRAW xmm1, xmm2, imm8</code>","<code>VPSRAW xmm1, xmm2, xmm3/m128</code>","<code>VPSRAW ymm1, ymm2, imm8</code>","<code>VPSRAW ymm1, ymm2, xmm3/m128</code>","<code>VPSRLD xmm1, xmm2, imm8</code>","<code>VPSRLD xmm1, xmm2, xmm3/m128</code>","<code>VPSRLD ymm1, ymm2, imm8</code>","<code>VPSRLD ymm1, ymm2, xmm3/m128</code>","<code>VPSRLDQ xmm1, xmm2, imm8</code>","<code>VPSRLDQ ymm1, ymm2, imm8</code>","<code>VPSRLQ xmm1, xmm2, imm8</code>","<code>VPSRLQ xmm1, xmm2, xmm3/m128</code>","<code>VPSRLQ ymm1, ymm2, imm8</code>","<code>VPSRLQ ymm1, ymm2, xmm3/m128</code>","<code>VPSRLVD xmm1, xmm2, xmm3/m128</code>","<code>VPSRLVD ymm1, ymm2, ymm3/m256</code>","<code>VPSRLVQ xmm1, xmm2, xmm3/m128</code>","<code>VPSRLVQ ymm1, ymm2, ymm3/m256</code>","<code>VPSRLW xmm1, xmm2, imm8</code>","<code>VPSRLW xmm1, xmm2, xmm3/m128</code>","<code>VPSRLW ymm1, ymm2, imm8</code>","<code>VPSRLW ymm1, ymm2, xmm3/m128</code>","<code>VPSUBB xmm1, xmm2, xmm3/m128</code>","<code>VPSUBB ymm1, ymm2, ymm3/m256</code>","<code>VPSUBD xmm1, xmm2, xmm3/m128</code>","<code>VPSUBD ymm1, ymm2, ymm3/m256</code>","<code>VPSUBQ xmm1, xmm2, xmm3/m128</code>","<code>VPSUBQ ymm1, ymm2, ymm3/m256</code>","<code>VPSUBSB xmm1, xmm2, xmm3/m128</code>","<code>VPSUBSB ymm1, ymm2, ymm3/m256</code>","<code>VPSUBSW xmm1, xmm2, xmm3/m128</code>","<code>VPSUBSW ymm1, ymm2, ymm3/m256</code>","<code>VPSUBUSB xmm1, xmm2, xmm3/m128</code>","<code>VPSUBUSB ymm1, ymm2, ymm3/m256</code>","<code>VPSUBUSW xmm1, xmm2, xmm3/m128</code>","<code>VPSUBUSW ymm1, ymm2, ymm3/m256</code>","<code>VPSUBW xmm1, xmm2, xmm3/m128</code>","<code>VPSUBW ymm1, ymm2, ymm3/m256</code>","<code>VPTEST xmm1, xmm2/m128</code>","<code>VPTEST ymm1, ymm2/m256</code>","<code>VPUNPCKHBW xmm1, xmm2, xmm3/m128</code>","<code>VPUNPCKHBW ymm1, ymm2, ymm3/m256</code>","<code>VPUNPCKHDQ xmm1, xmm2, xmm3/m128</code>","<code>VPUNPCKHDQ ymm1, ymm2, ymm3/m256</code>","<code>VPUNPCKHQDQ xmm1, xmm2, xmm3/m128</code>","<code>VPUNPCKHQDQ ymm1, ymm2, ymm3/m256</code>","<code>VPUNPCKHWD xmm1, xmm2, xmm3/m128</code>","<code>VPUNPCKHWD ymm1, ymm2, ymm3/m256</code>","<code>VPUNPCKLBW xmm1, xmm2, xmm3/m128</code>","<code>VPUNPCKLBW ymm1, ymm2, ymm3/m256</code>","<code>VPUNPCKLDQ xmm1, xmm2, xmm3/m128</code>","<code>VPUNPCKLDQ ymm1, ymm2, ymm3/m256</code>","<code>VPUNPCKLQDQ xmm1, xmm2, xmm3/m128</code>","<code>VPUNPCKLQDQ ymm1, ymm2, ymm3/m256</code>","<code>VPUNPCKLWD xmm1, xmm2, xmm3/m128</code>","<code>VPUNPCKLWD ymm1, ymm2, ymm3/m256</code>","<code>VPXOR xmm1, xmm2, xmm3/m128</code>","<code>VPXOR ymm1, ymm2, ymm3/m256</code>","<code>VRCPPS xmm1, xmm2/m128</code>","<code>VRCPPS ymm1, ymm2/m256</code>","<code>VRCPSS xmm1, xmm2, xmm3/m32</code>","<code>VROUNDPD xmm1, xmm2/m128, imm8</code>","<code>VROUNDPD ymm1, ymm2/m256, imm8</code>","<code>VROUNDPS xmm1, xmm2/m128, imm8</code>","<code>VROUNDPS ymm1, ymm2/m256, imm8</code>","<code>VROUNDSD xmm1, xmm2, xmm3/m64, imm8</code>","<code>VROUNDSS xmm1, xmm2, xmm3/m32, imm8</code>","<code>VRSQRTPS xmm1, xmm2/m128</code>","<code>VRSQRTPS ymm1, ymm2/m256</code>","<code>VRSQRTSS xmm1, xmm2, xmm3/m32</code>","<code>VSHUFPD xmm1, xmm2, xmm3/m128, imm8</code>","<code>VSHUFPD ymm1, ymm2, ymm3/m256, imm8</code>","<code>VSHUFPS xmm1, xmm2, xmm3/m128, imm8</code>","<code>VSHUFPS ymm1, ymm2, ymm3/m256, imm8</code>","<code>VSQRTPD xmm1, xmm2/m128</code>","<code>VSQRTPD ymm1, ymm2/m256</code>","<code>VSQRTPS xmm1, xmm2/m128</code>","<code>VSQRTPS ymm1, ymm2/m256</code>","<code>VSQRTSD xmm1, xmm2, xmm3/m64</code>","<code>VSQRTSS xmm1, xmm2, xmm3/m32</code>","<code>VSTMXCSR m32</code>","<code>VSUBPD xmm1, xmm2, xmm3/m128</code>","<code>VSUBPD ymm1, ymm2, ymm3/m256</code>","<code>VSUBPS xmm1, xmm2, xmm3/m128</code>","<code>VSUBPS ymm1, ymm2, ymm3/m256</code>","<code>VSUBSD xmm1, xmm2, xmm3/m64</code>","<code>VSUBSS xmm1, xmm2, xmm3/m32</code>","<code>VTESTPD xmm1, xmm2/m128</code>","<code>VTESTPD ymm1, ymm2/m256</code>","<code>VTESTPS xmm1, xmm2/m128</code>","<code>VTESTPS ymm1, ymm2/m256</code>","<code>VUCOMISD xmm1, xmm2/m64</code>","<code>VUCOMISS xmm1, xmm2/m32</code>","<code>VUNPCKHPD xmm1, xmm2, xmm3/m128</code>","<code>VUNPCKHPD ymm1, ymm2, ymm3/m256</code>","<code>VUNPCKHPS xmm1, xmm2, xmm3/m128</code>","<code>VUNPCKHPS ymm1, ymm2, ymm3/m256</code>","<code>VUNPCKLPD xmm1, xmm2, xmm3/m128</code>","<code>VUNPCKLPD ymm1, ymm2, ymm3/m256</code>","<code>VUNPCKLPS xmm1, xmm2, xmm3/m128</code>","<code>VUNPCKLPS ymm1, ymm2, ymm3/m256</code>","<code>VXORPD xmm1, xmm2, xmm3/m128</code>","<code>VXORPD ymm1, ymm2, ymm3/m256</code>","<code>VXORPS xmm1, xmm2, xmm3/m128</code>","<code>VXORPS ymm1, ymm2, ymm3/m256</code>","<code>VZEROALL</code>","<code>VZEROUPPER</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>VERR r32/m16</code>","<code>VERR r64/m16</code>","<code>VERR r/m16</code>","","<code>VERW r32/m16</code>","<code>VERW r64/m16</code>","<code>VERW r/m16</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>UNDOC</code>","<code>UNDOC</code>","<code>UNDOC</code>","<code>UNDOC</code>","<code>UNDOC</code>","<code>UNDOC</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>VMCALL</code>","","","<code>VMCLEAR m64</code>","<code>VMFUNC</code>","","<code>VMGEXIT</code>","","<code>VMGEXIT</code>","","","","","","","<code>VMLAUNCH</code>","","","<code>VMLOAD</code>","<code>VMLOAD</code>","<code>VMLOAD</code>","<code>VMMCALL</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>VMPTRLD m64</code>","","<code>VMPTRST m64</code>","","<code>VMREAD r/m32, r32</code>","<code>VMREAD r/m64, r64</code>","<code>VMRESUME</code>","","","<code>VMRUN</code>","<code>VMRUN</code>","<code>VMRUN</code>","","<code>VMSAVE</code>","<code>VMSAVE</code>","<code>VMSAVE</code>","","","","","","","","<code>VMWRITE r32, r/m32</code>","<code>VMWRITE r64, r/m64</code>","<code>VMXOFF</code>","","","<code>VMXON m64</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>WAIT</code>","","<code>WBINVD</code>","","<code>WBNOINVD</code>","","Memory location contains a 16-bit offset (…","","<code>WRFSBASE r32</code>","<code>WRFSBASE r64</code>","","<code>WRGSBASE r32</code>","<code>WRGSBASE r64</code>","<code>WRMSR</code>","","<code>WRMSRLIST</code>","","<code>WRMSRNS</code>","","<code>WRPKRU</code>","","","<code>WRSHR r/m32</code>","","<code>WRSSD m32, r32</code>","","<code>WRSSQ m64, r64</code>","<code>WRUDBG</code>","","","<code>WRUSSD m32, r32</code>","","<code>WRUSSQ m64, r64</code>","Decode <code>XBTS</code>/<code>IBTS</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","XOP encoding","<code>BEXTR r32, r/m32, imm32</code>","<code>BEXTR r64, r/m64, imm32</code>","<code>BLCFILL r32, r/m32</code>","<code>BLCFILL r64, r/m64</code>","<code>BLCI r32, r/m32</code>","<code>BLCI r64, r/m64</code>","<code>BLCIC r32, r/m32</code>","<code>BLCIC r64, r/m64</code>","<code>BLCMSK r32, r/m32</code>","<code>BLCMSK r64, r/m64</code>","<code>BLCS r32, r/m32</code>","<code>BLCS r64, r/m64</code>","<code>BLSFILL r32, r/m32</code>","<code>BLSFILL r64, r/m64</code>","<code>BLSIC r32, r/m32</code>","<code>BLSIC r64, r/m64</code>","<code>LLWPCB r32</code>","<code>LLWPCB r64</code>","<code>LWPINS r32, r/m32, imm32</code>","<code>LWPINS r64, r/m32, imm32</code>","<code>LWPVAL r32, r/m32, imm32</code>","<code>LWPVAL r64, r/m32, imm32</code>","<code>SLWPCB r32</code>","<code>SLWPCB r64</code>","<code>T1MSKC r32, r/m32</code>","<code>T1MSKC r64, r/m64</code>","<code>TZMSK r32, r/m32</code>","<code>TZMSK r64, r/m64</code>","<code>VFRCZPD xmm1, xmm2/m128</code>","<code>VFRCZPD ymm1, ymm2/m256</code>","<code>VFRCZPS xmm1, xmm2/m128</code>","<code>VFRCZPS ymm1, ymm2/m256</code>","<code>VFRCZSD xmm1, xmm2/m64</code>","<code>VFRCZSS xmm1, xmm2/m32</code>","<code>VPCMOV xmm1, xmm2, xmm3, xmm4/m128</code>","<code>VPCMOV xmm1, xmm2, xmm3/m128, xmm4</code>","<code>VPCMOV ymm1, ymm2, ymm3, ymm4/m256</code>","<code>VPCMOV ymm1, ymm2, ymm3/m256, ymm4</code>","<code>VPCOMB xmm1, xmm2, xmm3/m128, imm8</code>","<code>VPCOMD xmm1, xmm2, xmm3/m128, imm8</code>","<code>VPCOMQ xmm1, xmm2, xmm3/m128, imm8</code>","<code>VPCOMUB xmm1, xmm2, xmm3/m128, imm8</code>","<code>VPCOMUD xmm1, xmm2, xmm3/m128, imm8</code>","<code>VPCOMUQ xmm1, xmm2, xmm3/m128, imm8</code>","<code>VPCOMUW xmm1, xmm2, xmm3/m128, imm8</code>","<code>VPCOMW xmm1, xmm2, xmm3/m128, imm8</code>","<code>VPHADDBD xmm1, xmm2/m128</code>","<code>VPHADDBQ xmm1, xmm2/m128</code>","<code>VPHADDBW xmm1, xmm2/m128</code>","<code>VPHADDDQ xmm1, xmm2/m128</code>","<code>VPHADDUBD xmm1, xmm2/m128</code>","<code>VPHADDUBQ xmm1, xmm2/m128</code>","<code>VPHADDUBW xmm1, xmm2/m128</code>","<code>VPHADDUDQ xmm1, xmm2/m128</code>","<code>VPHADDUWD xmm1, xmm2/m128</code>","<code>VPHADDUWQ xmm1, xmm2/m128</code>","<code>VPHADDWD xmm1, xmm2/m128</code>","<code>VPHADDWQ xmm1, xmm2/m128</code>","<code>VPHSUBBW xmm1, xmm2/m128</code>","<code>VPHSUBDQ xmm1, xmm2/m128</code>","<code>VPHSUBWD xmm1, xmm2/m128</code>","<code>VPMACSDD xmm1, xmm2, xmm3/m128, xmm4</code>","<code>VPMACSDQH xmm1, xmm2, xmm3/m128, xmm4</code>","<code>VPMACSDQL xmm1, xmm2, xmm3/m128, xmm4</code>","<code>VPMACSSDD xmm1, xmm2, xmm3/m128, xmm4</code>","<code>VPMACSSDQH xmm1, xmm2, xmm3/m128, xmm4</code>","<code>VPMACSSDQL xmm1, xmm2, xmm3/m128, xmm4</code>","<code>VPMACSSWD xmm1, xmm2, xmm3/m128, xmm4</code>","<code>VPMACSSWW xmm1, xmm2, xmm3/m128, xmm4</code>","<code>VPMACSWD xmm1, xmm2, xmm3/m128, xmm4</code>","<code>VPMACSWW xmm1, xmm2, xmm3/m128, xmm4</code>","<code>VPMADCSSWD xmm1, xmm2, xmm3/m128, xmm4</code>","<code>VPMADCSWD xmm1, xmm2, xmm3/m128, xmm4</code>","<code>VPPERM xmm1, xmm2, xmm3, xmm4/m128</code>","<code>VPPERM xmm1, xmm2, xmm3/m128, xmm4</code>","<code>VPROTB xmm1, xmm2, xmm3/m128</code>","<code>VPROTB xmm1, xmm2/m128, imm8</code>","<code>VPROTB xmm1, xmm2/m128, xmm3</code>","<code>VPROTD xmm1, xmm2, xmm3/m128</code>","<code>VPROTD xmm1, xmm2/m128, imm8</code>","<code>VPROTD xmm1, xmm2/m128, xmm3</code>","<code>VPROTQ xmm1, xmm2, xmm3/m128</code>","<code>VPROTQ xmm1, xmm2/m128, imm8</code>","<code>VPROTQ xmm1, xmm2/m128, xmm3</code>","<code>VPROTW xmm1, xmm2, xmm3/m128</code>","<code>VPROTW xmm1, xmm2/m128, imm8</code>","<code>VPROTW xmm1, xmm2/m128, xmm3</code>","<code>VPSHAB xmm1, xmm2, xmm3/m128</code>","<code>VPSHAB xmm1, xmm2/m128, xmm3</code>","<code>VPSHAD xmm1, xmm2, xmm3/m128</code>","<code>VPSHAD xmm1, xmm2/m128, xmm3</code>","<code>VPSHAQ xmm1, xmm2, xmm3/m128</code>","<code>VPSHAQ xmm1, xmm2/m128, xmm3</code>","<code>VPSHAW xmm1, xmm2, xmm3/m128</code>","<code>VPSHAW xmm1, xmm2/m128, xmm3</code>","<code>VPSHLB xmm1, xmm2, xmm3/m128</code>","<code>VPSHLB xmm1, xmm2/m128, xmm3</code>","<code>VPSHLD xmm1, xmm2, xmm3/m128</code>","<code>VPSHLD xmm1, xmm2/m128, xmm3</code>","<code>VPSHLQ xmm1, xmm2, xmm3/m128</code>","<code>VPSHLQ xmm1, xmm2/m128, xmm3</code>","<code>VPSHLW xmm1, xmm2, xmm3/m128</code>","<code>VPSHLW xmm1, xmm2/m128, xmm3</code>","","<code>XABORT imm8</code>","","","<code>XADD r/m16, r16</code>","<code>XADD r/m32, r32</code>","<code>XADD r/m64, r64</code>","<code>XADD r/m8, r8</code>","","<code>XBEGIN rel16</code>","<code>XBEGIN rel32</code>","","<code>XBTS r16, r/m16</code>","<code>XBTS r32, r/m32</code>","","<code>XCHG r16, AX</code>","<code>XCHG r32, EAX</code>","<code>XCHG r64, RAX</code>","<code>XCHG r/m16, r16</code>","<code>XCHG r/m32, r32</code>","<code>XCHG r/m64, r64</code>","<code>XCHG r/m8, r8</code>","","<code>XCRYPTCBC</code>","<code>XCRYPTCBC</code>","<code>XCRYPTCBC</code>","","<code>XCRYPTCFB</code>","<code>XCRYPTCFB</code>","<code>XCRYPTCFB</code>","","<code>XCRYPTCTR</code>","<code>XCRYPTCTR</code>","<code>XCRYPTCTR</code>","","<code>XCRYPTECB</code>","<code>XCRYPTECB</code>","<code>XCRYPTECB</code>","","<code>XCRYPTOFB</code>","<code>XCRYPTOFB</code>","<code>XCRYPTOFB</code>","<code>XEND</code>","","<code>XGETBV</code>","","<code>XLATB</code>","","","<code>XOR AL, imm8</code>","<code>XOR AX, imm16</code>","<code>XOR EAX, imm32</code>","<code>XOR RAX, imm32</code>","<code>XOR r16, r/m16</code>","<code>XOR r32, r/m32</code>","<code>XOR r64, r/m64</code>","<code>XOR r8, r/m8</code>","<code>XOR r/m16, imm16</code>","<code>XOR r/m16, imm8</code>","<code>XOR r/m16, r16</code>","<code>XOR r/m32, imm32</code>","<code>XOR r/m32, imm8</code>","<code>XOR r/m32, r32</code>","<code>XOR r/m64, imm32</code>","<code>XOR r/m64, imm8</code>","<code>XOR r/m64, r64</code>","<code>XOR r/m8, imm8</code>","<code>XOR r/m8, imm8</code>","<code>XOR r/m8, r8</code>","","<code>XORPD xmm1, xmm2/m128</code>","","<code>XORPS xmm1, xmm2/m128</code>","","<code>XRESLDTRK</code>","","","","<code>XRSTOR64 mem</code>","<code>XRSTOR mem</code>","","","<code>XRSTORS64 mem</code>","<code>XRSTORS mem</code>","32-bit <code>XSAVE</code> area","","64-bit <code>XSAVE</code> area","","<code>XSAVE64 mem</code>","<code>XSAVE mem</code>","","","<code>XSAVEC64 mem</code>","<code>XSAVEC mem</code>","","","<code>XSAVEOPT64 mem</code>","<code>XSAVEOPT mem</code>","","","<code>XSAVES64 mem</code>","<code>XSAVES mem</code>","<code>XSETBV</code>","","","<code>XSHA1</code>","<code>XSHA1</code>","<code>XSHA1</code>","","<code>XSHA256</code>","<code>XSHA256</code>","<code>XSHA256</code>","","<code>XSHA512</code>","<code>XSHA512</code>","<code>XSHA512</code>","","<code>XSHA512_ALT</code>","<code>XSHA512_ALT</code>","<code>XSHA512_ALT</code>","","<code>XSTORE</code>","<code>XSTORE</code>","<code>XSTORE</code>","","<code>XSTORE_ALT</code>","<code>XSTORE_ALT</code>","<code>XSTORE_ALT</code>","<code>XSUSLDTRK</code>","","<code>XTEST</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A zero-sized instruction. Can be used as a label.","","Zeroing masking: <code>{z}</code>","<code>JA</code>, <code>CMOVA</code>, <code>SETA</code>","","","","","Add a leading zero to hex numbers if there’s no prefix …","Add a leading zero to hex numbers if there’s no prefix …","The address of the symbol","<code>JAE</code>, <code>CMOVAE</code>, <code>SETAE</code>","Always show the scale value even if it’s <code>*1</code>","Always show the effective segment register. If the option …","<code>JB</code>, <code>CMOVB</code>, <code>SETB</code>","<code>JBE</code>, <code>CMOVBE</code>, <code>SETBE</code>","Size of a digit group, see also <code>digit_separator()</code>","Binary number prefix or an empty string","Binary number suffix or an empty string","Gets the bitness (16, 32 or 64)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add leading zeros to branch offsets. Used by <code>CALL NEAR</code>, …","Show branch size (eg. <code>SHORT</code>, <code>NEAR PTR</code>)","<code>JC</code>, <code>CMOVC</code>, <code>SETC</code>","Returns <code>true</code> if there’s at least one more byte to …","Mnemonic condition code selector (eg. <code>JA</code> / <code>JNBE</code>)","Mnemonic condition code selector (eg. <code>JAE</code> / <code>JNB</code> / <code>JNC</code>)","Mnemonic condition code selector (eg. <code>JB</code> / <code>JC</code> / <code>JNAE</code>)","Mnemonic condition code selector (eg. <code>JBE</code> / <code>JNA</code>)","Mnemonic condition code selector (eg. <code>JE</code> / <code>JZ</code>)","Mnemonic condition code selector (eg. <code>JG</code> / <code>JNLE</code>)","Mnemonic condition code selector (eg. <code>JGE</code> / <code>JNL</code>)","Mnemonic condition code selector (eg. <code>JL</code> / <code>JNGE</code>)","Mnemonic condition code selector (eg. <code>JLE</code> / <code>JNG</code>)","Mnemonic condition code selector (eg. <code>JNE</code> / <code>JNZ</code>)","Mnemonic condition code selector (eg. <code>JNP</code> / <code>JPO</code>)","Mnemonic condition code selector (eg. <code>JP</code> / <code>JPE</code>)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the instruction code, see also <code>mnemonic()</code>","Gets the code size when the instruction was decoded. This …","Color","Size of a digit group, see also <code>digit_separator()</code>","Decimal number prefix or an empty string","Decimal number suffix or an empty string","Gets the number of elements in a <code>db</code>/<code>dw</code>/<code>dd</code>/<code>dq</code> directive. …","Decodes and returns the next instruction, see also …","Decodes the next instruction. The difference between this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Size of a digit group or 0 to not use a digit separator","Digit separator or an empty string. See also eg. …","Digit separator or an empty string to not use a digit …","Add leading zeros to displacements","Add leading zeros to displacements","The offset of the displacement, if any","Size in bytes of the displacement, or 0 if there’s no …","<code>JE</code>, <code>CMOVE</code>, <code>SETE</code>, <code>LOOPE</code>, <code>REPE</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks if two instructions are equal, comparing all bits, …","Gets the operand’s branch target. Use this method if the …","Gets the operand’s branch target. Use this method if the …","Gets the operand’s branch target selector. Use this …","Character index (0-based) where the first operand is …","Symbol flags, see <code>SymbolFlags</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Formats the whole instruction: prefixes, mnemonic, operands","","Formats all operands","","Formats a <code>i16</code>","","Formats a <code>i16</code>","","Formats a <code>i32</code>","","Formats a <code>i32</code>","","Formats a <code>i64</code>","","Formats a <code>i64</code>","","Formats a <code>i8</code>","","Formats a <code>i8</code>","","Formats the mnemonic and any prefixes","Formats the mnemonic and any prefixes","Formats the mnemonic and/or any prefixes","","Formats an operand. This is a formatter operand and not …","","Formats an operand separator","","Formats a register","","Formats a <code>u16</code>","","Formats a <code>u16</code>","","Formats a <code>u32</code>","","Formats a <code>u32</code>","","Formats a <code>u64</code>","","Formats a <code>u64</code>","","Formats a <code>u8</code>","","Formats a <code>u8</code>","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","<code>JG</code>, <code>CMOVG</code>, <code>SETG</code>","(gas only): If <code>true</code>, the formatter doesn’t add <code>%</code> to …","(gas only): Shows the mnemonic size suffix even when not …","(gas only): Add a space after the comma if it’s a memory …","<code>JGE</code>, <code>CMOVGE</code>, <code>SETGE</code>","Gets the offsets of the constants (memory displacement and …","Gets a <code>db</code> value, see also <code>declare_data_len()</code>. Can only be …","Gets a <code>dd</code> value, see also <code>declare_data_len()</code>. Can only be …","Gets a <code>dq</code> value, see also <code>declare_data_len()</code>. Can only be …","Gets a <code>dw</code> value, see also <code>declare_data_len()</code>. Can only be …","Converts an instruction operand index to a formatter …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a formatter operand index to an instruction …","","<code>true</code> if <code>displacement_offset()</code> and <code>displacement_size()</code> are …","<code>true</code> if <code>immediate_offset()</code> and <code>immediate_size()</code> are valid","<code>true</code> if <code>immediate_offset2()</code> and <code>immediate_size2()</code> are valid","<code>true</code> if the instruction has the <code>LOCK</code> prefix (<code>F0</code>)","Checks if there’s an opmask register (<code>op_mask()</code>)","<code>true</code> if the instruction has the <code>REPE</code> or <code>REP</code> prefix (<code>F3</code>)","<code>true</code> if the instruction has the <code>REPE</code> or <code>REP</code> prefix (<code>F3</code>)","<code>true</code> if the instruction has the <code>REPNE</code> prefix (<code>F2</code>)","Checks if the instruction has a segment override prefix, …","<code>true</code> if the instruction has the <code>XACQUIRE</code> prefix (<code>F2</code>)","<code>true</code> if the instruction has the <code>XRELEASE</code> prefix (<code>F3</code>)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Size of a digit group, see also <code>digit_separator()</code>","Hex number prefix or an empty string, eg. <code>&quot;0x&quot;</code>","Hex number suffix or an empty string, eg. <code>&quot;h&quot;</code>","Gets an operand’s immediate value","Gets the operand’s immediate value. Use this method if …","Gets the operand’s immediate value. Use this method if …","Gets the operand’s immediate value. Use this method if …","Gets the operand’s immediate value. Use this method if …","Gets the operand’s immediate value. Use this method if …","Gets the operand’s immediate value. Use this method if …","Gets the operand’s immediate value. Use this method if …","Gets the operand’s immediate value. Use this method if …","Gets the operand’s immediate value. Use this method if …","The offset of the first immediate, if any.","The offset of the second immediate, if any.","Size in bytes of the first immediate, or 0 if there’s no …","Size in bytes of the second immediate, or 0 if there’s …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Gets the current <code>IP</code>/<code>EIP</code>/<code>RIP</code> value, see also <code>position()</code>","Gets the 64-bit IP of the instruction, see also <code>next_ip()</code>","Gets the 16-bit IP of the instruction, see also <code>next_ip16()</code>","Gets the 32-bit IP of the instruction, see also <code>next_ip32()</code>","Gets the <code>RIP</code>/<code>EIP</code> releative address (<code>memory_displacement32()</code>…","<code>true</code> if the data is broadcast (EVEX instructions only)","Checks if it’s an invalid instruction (<code>code()</code> == …","Checks if the memory operand is <code>RIP</code>/<code>EIP</code> relative","Checks if this is a VSIB instruction, see also <code>is_vsib32()</code>…","VSIB instructions only (<code>is_vsib()</code>): <code>true</code> if it’s using …","VSIB instructions only (<code>is_vsib()</code>): <code>true</code> if it’s using …","Returns an iterator that borrows this instance to decode …","<code>JL</code>, <code>CMOVL</code>, <code>SETL</code>","Gets the last decoder error. Unless you need to know the …","<code>JLE</code>, <code>CMOVLE</code>, <code>SETLE</code>","Add leading zeros to hexadecimal/octal/binary numbers. …","If <code>true</code>, add leading zeros to numbers, eg. <code>1h</code> vs <code>00000001h</code>","Gets the length of the instruction, 0-15 bytes. This is …","(masm only): Add a <code>DS</code> segment override even if it’s not …","(masm only): Show displacements in brackets","(masm only): Show symbols in brackets","Gets the max value that can be passed to <code>try_set_position()</code>…","Gets the memory operand’s base register or <code>Register::None</code>…","Gets the size of the memory displacement in bytes. Valid …","Gets the memory operand’s displacement or the 32-bit …","Gets the memory operand’s displacement or the 64-bit …","Gets the memory operand’s index register or …","Gets the index register scale value, valid values are <code>*1</code>, …","Gets the effective segment register used to reference the …","Gets the size of the memory location that is referenced by …","Memory size options","Options that control if the memory size (eg. <code>DWORD PTR</code>) is …","<code>true</code> if merging-masking, <code>false</code> if zeroing-masking. Only …","Gets the mnemonic","Gets the mnemonic, see also <code>code()</code>","<code>JNA</code>, <code>CMOVNA</code>, <code>SETNA</code>","<code>JNAE</code>, <code>CMOVNAE</code>, <code>SETNAE</code>","(nasm only): Shows <code>BYTE</code>, <code>WORD</code>, <code>DWORD</code> or <code>QWORD</code> if it’s a …","<code>JNB</code>, <code>CMOVNB</code>, <code>SETNB</code>","<code>JNBE</code>, <code>CMOVNBE</code>, <code>SETNBE</code>","<code>JNC</code>, <code>CMOVNC</code>, <code>SETNC</code>","<code>JNE</code>, <code>CMOVNE</code>, <code>SETNE</code>, <code>LOOPNE</code>, <code>REPNE</code>","Gets the operand’s branch target. Use this method if the …","Gets the operand’s branch target. Use this method if the …","Gets the operand’s branch target. Use this method if the …","Gets the near branch target if it’s a <code>CALL</code>/<code>JMP</code>/<code>Jcc</code> near …","Creates a decoder","Creates an Intel (XED) formatter","Creates default formatter options","Constructor","Constructor","Constructor","Creates an empty <code>Instruction</code> (all fields are cleared). See …","Gets the 64-bit IP of the next instruction, see also <code>ip()</code>","Gets the 16-bit IP of the next instruction, see also <code>ip16()</code>","Gets the 32-bit IP of the next instruction, see also <code>ip32()</code>","<code>JNG</code>, <code>CMOVNG</code>, <code>SETNG</code>","<code>JNGE</code>, <code>CMOVNGE</code>, <code>SETNGE</code>","<code>JNL</code>, <code>CMOVNL</code>, <code>SETNL</code>","<code>JNLE</code>, <code>CMOVNLE</code>, <code>SETNLE</code>","<code>JNP</code>, <code>CMOVNP</code>, <code>SETNP</code>","Number base","Number base","<code>JNZ</code>, <code>CMOVNZ</code>, <code>SETNZ</code>, <code>LOOPNZ</code>, <code>REPNZ</code>","Size of a digit group, see also <code>digit_separator()</code>","Octal number prefix or an empty string","Octal number suffix or an empty string","Gets operand #0’s kind if the operand exists (see …","Gets operand #0’s register value. Use this method if …","Gets operand #1’s kind if the operand exists (see …","Gets operand #1’s register value. Use this method if …","Gets operand #2’s kind if the operand exists (see …","Gets operand #2’s register value. Use this method if …","Gets operand #3’s kind if the operand exists (see …","Gets operand #3’s register value. Use this method if …","Gets operand #4’s kind if the operand exists (see …","Gets operand #4’s register value. Use this method if …","Gets the operand count. An instruction can have 0-5 …","Gets an operand’s kind if it exists (see <code>op_count()</code>)","Gets all op kinds (<code>op_count()</code> values)","Gets the opmask register (<code>Register::K1</code> - <code>Register::K7</code>) or …","Gets the operand’s register value. Use this method if …","Gets the number of operands that will be formatted. A …","","Called by the formatter. The method can override any …","Gets the formatter options (immutable)","","Gets the formatter options (mutable)","","<code>JP</code>, <code>CMOVP</code>, <code>SETP</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>JPE</code>, <code>CMOVPE</code>, <code>SETPE</code>","<code>JPO</code>, <code>CMOVPO</code>, <code>SETPO</code>","Gets the current data position. This value is always &lt;= …","Use <code>st(0)</code> instead of <code>st</code> if <code>st</code> can be used. Ignored by the …","Number prefix or an empty string","If <code>true</code>, show <code>RIP</code> relative addresses as <code>[rip+12345678h]</code>, …","Show <code>RIP+displ</code> or the virtual address","Gets the rounding control (SAE is implied but …","Show memory operand scale value before the index register","Gets the segment override prefix or <code>Register::None</code> if …","Add a leading zero to hex numbers if there’s no prefix …","Always show the scale value even if it’s <code>*1</code>","Always show the effective segment register. If the option …","Size of a digit group, see also <code>digit_separator()</code>","Binary number prefix or an empty string","Binary number prefix or an empty string","Binary number suffix or an empty string","Binary number suffix or an empty string","Add leading zeros to branch offsets. Used by <code>CALL NEAR</code>, …","Show branch size (eg. <code>SHORT</code>, <code>NEAR PTR</code>)","Mnemonic condition code selector (eg. <code>JA</code> / <code>JNBE</code>)","Mnemonic condition code selector (eg. <code>JAE</code> / <code>JNB</code> / <code>JNC</code>)","Mnemonic condition code selector (eg. <code>JB</code> / <code>JC</code> / <code>JNAE</code>)","Mnemonic condition code selector (eg. <code>JBE</code> / <code>JNA</code>)","Mnemonic condition code selector (eg. <code>JE</code> / <code>JZ</code>)","Mnemonic condition code selector (eg. <code>JG</code> / <code>JNLE</code>)","Mnemonic condition code selector (eg. <code>JGE</code> / <code>JNL</code>)","Mnemonic condition code selector (eg. <code>JL</code> / <code>JNGE</code>)","Mnemonic condition code selector (eg. <code>JLE</code> / <code>JNG</code>)","Mnemonic condition code selector (eg. <code>JNE</code> / <code>JNZ</code>)","Mnemonic condition code selector (eg. <code>JNP</code> / <code>JPO</code>)","Mnemonic condition code selector (eg. <code>JP</code> / <code>JPE</code>)","Sets the instruction code","Sets the code size when the instruction was decoded. This …","Size of a digit group, see also <code>digit_separator()</code>","Decimal number prefix or an empty string","Decimal number prefix or an empty string","Decimal number suffix or an empty string","Decimal number suffix or an empty string","Sets a new <code>db</code> value, see also <code>declare_data_len()</code>. Can only …","Sets a new <code>db</code> value, see also <code>declare_data_len()</code>. Can only …","Sets the number of elements in a <code>db</code>/<code>dw</code>/<code>dd</code>/<code>dq</code> directive. …","Sets a new <code>dd</code> value, see also <code>declare_data_len()</code>. Can only …","Sets a new <code>dd</code> value, see also <code>declare_data_len()</code>. Can only …","Sets a new <code>dq</code> value, see also <code>declare_data_len()</code>. Can only …","Sets a new <code>dq</code> value, see also <code>declare_data_len()</code>. Can only …","Sets a new <code>dw</code> value, see also <code>declare_data_len()</code>. Can only …","Sets a new <code>dw</code> value, see also <code>declare_data_len()</code>. Can only …","Digit separator or an empty string. See also eg. …","Digit separator or an empty string. See also eg. …","Add leading zeros to displacements","Sets the operand’s branch target. Use this method if the …","Sets the operand’s branch target. Use this method if the …","Sets the operand’s branch target selector. Use this …","Character index (0-based) where the first operand is …","(gas only): If <code>true</code>, the formatter doesn’t add <code>%</code> to …","(gas only): Shows the mnemonic size suffix even when not …","(gas only): Add a space after the comma if it’s a memory …","<code>true</code> if the instruction has the <code>LOCK</code> prefix (<code>F0</code>)","<code>true</code> if the instruction has the <code>REPE</code> or <code>REP</code> prefix (<code>F3</code>)","<code>true</code> if the instruction has the <code>REPE</code> or <code>REP</code> prefix (<code>F3</code>)","<code>true</code> if the instruction has the <code>REPNE</code> prefix (<code>F2</code>)","<code>true</code> if the instruction has the <code>XACQUIRE</code> prefix (<code>F2</code>)","<code>true</code> if the instruction has the <code>XRELEASE</code> prefix (<code>F3</code>)","Size of a digit group, see also <code>digit_separator()</code>","Hex number prefix or an empty string, eg. <code>&quot;0x&quot;</code>","Hex number prefix or an empty string, eg. <code>&quot;0x&quot;</code>","Hex number suffix or an empty string, eg. <code>&quot;h&quot;</code>","Hex number suffix or an empty string, eg. <code>&quot;h&quot;</code>","Sets the operand’s immediate value. Use this method if …","Sets the operand’s immediate value. Use this method if …","Sets the operand’s immediate value. Use this method if …","Sets the operand’s immediate value. Use this method if …","Sets the operand’s immediate value. Use this method if …","Sets the operand’s immediate value. Use this method if …","Sets the operand’s immediate value. Use this method if …","Sets the operand’s immediate value. Use this method if …","Sets the operand’s immediate value. Use this method if …","Sets an operand’s immediate value","Sets an operand’s immediate value","Sets an operand’s immediate value","Sets an operand’s immediate value","Sets the current <code>IP</code>/<code>EIP</code>/<code>RIP</code> value, see also …","Sets the 64-bit IP of the instruction, see also …","Sets the 16-bit IP of the instruction, see also …","Sets the 32-bit IP of the instruction, see also …","Sets the is broadcast flag (EVEX instructions only)","Add leading zeros to hexadecimal/octal/binary numbers. …","Sets the length of the instruction, 0-15 bytes. This is …","(masm only): Add a <code>DS</code> segment override even if it’s not …","(masm only): Show displacements in brackets","(masm only): Show symbols in brackets","Sets the memory operand’s base register or <code>Register::None</code>…","Sets the size of the memory displacement in bytes. Valid …","Gets the memory operand’s displacement or the 32-bit …","Gets the memory operand’s displacement or the 64-bit …","Sets the memory operand’s index register or …","Sets the index register scale value, valid values are <code>*1</code>, …","Memory size options","Options that control if the memory size (eg. <code>DWORD PTR</code>) is …","<code>true</code> if merging-masking, <code>false</code> if zeroing-masking. Only …","(nasm only): Shows <code>BYTE</code>, <code>WORD</code>, <code>DWORD</code> or <code>QWORD</code> if it’s a …","Sets the operand’s branch target. Use this method if the …","Sets the operand’s branch target. Use this method if the …","Sets the operand’s branch target. Use this method if the …","Sets the 64-bit IP of the next instruction, see also …","Sets the 16-bit IP of the next instruction, see also …","Sets the 32-bit IP of the next instruction, see also …","Number base","Size of a digit group, see also <code>digit_separator()</code>","Octal number prefix or an empty string","Octal number prefix or an empty string","Octal number suffix or an empty string","Octal number suffix or an empty string","Sets operand #0’s kind if the operand exists (see …","Sets operand #0’s register value. Use this method if …","Sets operand #1’s kind if the operand exists (see …","Sets operand #1’s register value. Use this method if …","Sets operand #2’s kind if the operand exists (see …","Sets operand #2’s register value. Use this method if …","Sets operand #3’s kind if the operand exists (see …","Sets operand #3’s register value. Use this method if …","Sets operand #4’s kind if the operand exists (see …","Sets operand #4’s register value. Use this method if …","Sets an operand’s kind","Sets the opmask register (<code>Register::K1</code> - <code>Register::K7</code>) or …","Sets the operand’s register value. Use this method if …","Sets the current data position, which is the index into …","Use <code>st(0)</code> instead of <code>st</code> if <code>st</code> can be used. Ignored by the …","If <code>true</code>, show <code>RIP</code> relative addresses as <code>[rip+12345678h]</code>, …","Show <code>RIP+displ</code> or the virtual address","Sets the rounding control (SAE is implied but …","Show memory operand scale value before the index register","Sets the segment override prefix or <code>Register::None</code> if …","Show <code>NEAR</code>, <code>SHORT</code>, etc if it’s a branch instruction","Show the original value after the symbol name","Show useless prefixes. If it has useless prefixes, it …","Show zero displacements","Show immediate operands as signed numbers","Displacements are signed numbers","Small hex numbers (-9 .. 9) are shown in decimal","Add a space between the memory expression and the brackets","Add a space after the operand separator","Add spaces between memory operand <code>+</code> and <code>-</code> operators","Add spaces between memory operand <code>*</code> operator","Sets the suppress all exceptions flag (EVEX/MVEX encoded …","Size of a tab character or 0 to use spaces","Everything is uppercased, except numbers and their …","Uppercase decorators, eg. <code>{z}</code>, <code>{sae}</code>, <code>{rd-sae}</code> (but not …","Use uppercase hex digits","Keywords are uppercased (eg. <code>BYTE PTR</code>, <code>SHORT</code>)","Mnemonics are uppercased","Prefixes are uppercased","Registers are uppercased","Use pseudo instructions","<code>true</code> if zeroing-masking, <code>false</code> if merging-masking. Only …","Show <code>NEAR</code>, <code>SHORT</code>, etc if it’s a branch instruction","Show the original value after the symbol name","Show useless prefixes. If it has useless prefixes, it …","Show zero displacements","Show immediate operands as signed numbers","Displacements are signed numbers","If <code>true</code>, the number is signed, and if <code>false</code> it’s an …","Small hex numbers (-9 .. 9) are shown in decimal","Small hex numbers (-9 .. 9) are shown in decimal","Add a space between the memory expression and the brackets","Add a space after the operand separator","Add spaces between memory operand <code>+</code> and <code>-</code> operators","Add spaces between memory operand <code>*</code> operator","","","","","Number suffix or an empty string","Gets the suppress all exceptions flag (EVEX/MVEX encoded …","Tries to resolve a symbol","Symbol size or <code>None</code>","Size of a tab character or 0 to use spaces","Text","Contains the symbol","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a decoder","Sets a new <code>db</code> value, see also <code>declare_data_len()</code>. Can only …","Creates a decoder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Everything is uppercased, except numbers and their …","Uppercase decorators, eg. <code>{z}</code>, <code>{sae}</code>, <code>{rd-sae}</code> (but not …","Use uppercase hex digits","Use uppercase hex digits","Keywords are uppercased (eg. <code>BYTE PTR</code>, <code>SHORT</code>)","Mnemonics are uppercased","Prefixes are uppercased","Registers are uppercased","Use pseudo instructions","Iterates over all <code>Code</code> enum values","Iterates over all <code>DecoderError</code> enum values","Iterates over all <code>CodeSize</code> enum values","Iterates over all <code>RoundingControl</code> enum values","Iterates over all <code>OpKind</code> enum values","Iterates over all <code>EncodingKind</code> enum values","Iterates over all <code>TupleType</code> enum values","Iterates over all <code>NumberBase</code> enum values","Iterates over all <code>PrefixKind</code> enum values","Iterates over all <code>DecoratorKind</code> enum values","Iterates over all <code>NumberKind</code> enum values","Iterates over all <code>CC_b</code> enum values","Iterates over all <code>CC_ae</code> enum values","Iterates over all <code>CC_e</code> enum values","Iterates over all <code>CC_ne</code> enum values","Iterates over all <code>CC_be</code> enum values","Iterates over all <code>CC_a</code> enum values","Iterates over all <code>CC_p</code> enum values","Iterates over all <code>CC_np</code> enum values","Iterates over all <code>CC_l</code> enum values","Iterates over all <code>CC_ge</code> enum values","Iterates over all <code>CC_le</code> enum values","Iterates over all <code>CC_g</code> enum values","Iterates over all <code>FormatterTextKind</code> enum values","Iterates over all <code>MemorySizeOptions</code> enum values","Iterates over all <code>MemorySize</code> enum values","Iterates over all <code>Mnemonic</code> enum values","Iterates over all <code>Register</code> enum values","Gets the virtual address of a memory operand","Checks if it’s a vsib instruction.","Creates options used when formatting branch operands","Creates options used when formatting displacements","Creates options used when formatting immediate values","Creates default Intel (XED) formatter options","Creates a decoder","Creates an Intel (XED) formatter","Constructor","Constructor","Constructor","Constructor","Constructor","Constructor","Constructor","Constructor","Constructor","Constructor","Constructor","Constructor","Constructor","Constructor","Constructor","Constructor","Writes text and text kind","Writes a decorator","Writes a decorator","Writes a mnemonic (see <code>Instruction::mnemonic()</code>)","Writes a mnemonic (see <code>Instruction::mnemonic()</code>)","Writes a number","Writes a number","Writes a prefix","Writes a prefix","Writes a register","Writes a register","Writes a symbol","Writes a symbol","<code>JZ</code>, <code>CMOVZ</code>, <code>SETZ</code>, <code>LOOPZ</code>, <code>REPZ</code>","<code>true</code> if zeroing-masking, <code>false</code> if merging-masking. Only …"],"i":[1,1,67,67,1,21,43,43,21,43,21,21,43,21,43,21,21,21,43,43,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,43,21,21,43,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,43,21,43,21,30,43,21,43,21,43,21,43,21,43,21,21,43,43,21,43,21,21,43,21,43,21,43,21,43,43,21,43,21,21,43,21,43,21,43,21,43,21,43,21,21,43,34,43,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,43,43,21,43,21,43,21,43,21,43,21,21,43,21,21,43,21,21,42,1,1,1,1,1,1,1,1,1,21,43,21,43,42,43,29,43,43,43,43,43,43,21,43,21,43,21,43,21,43,43,43,43,43,30,42,42,43,21,21,43,21,21,43,21,21,43,21,43,21,21,43,21,21,21,21,43,21,43,42,42,21,21,31,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,43,21,21,21,43,21,21,21,43,21,21,21,43,21,21,21,21,21,21,43,21,21,21,21,21,21,43,21,21,21,21,21,21,43,21,21,21,21,21,21,43,0,0,0,0,0,0,0,0,0,0,0,0,1,1,67,67,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,30,1,1,67,67,67,43,21,21,21,21,21,21,21,21,21,21,21,21,43,43,21,21,21,43,21,21,21,21,43,21,43,21,43,21,43,21,43,21,43,43,21,43,43,43,21,43,21,21,43,21,43,43,21,21,43,21,43,43,21,43,21,21,21,21,43,43,21,21,21,43,21,21,21,43,21,21,21,43,21,21,21,43,21,21,21,43,21,21,21,43,21,21,21,43,21,21,21,43,21,21,21,43,21,21,21,43,21,21,21,43,21,21,21,43,21,21,21,43,21,21,21,43,21,21,21,43,21,21,21,43,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,43,43,43,43,43,43,43,43,43,43,43,43,43,43,21,43,21,43,43,21,43,21,21,43,21,43,21,43,21,43,43,43,21,21,21,21,43,21,21,21,21,21,43,0,24,24,24,0,43,21,43,21,0,21,43,21,43,21,43,21,43,43,21,21,21,21,21,43,21,43,21,43,21,43,21,43,21,43,21,43,21,43,21,43,21,43,21,43,21,21,43,21,43,21,21,43,21,21,43,21,43,21,21,43,21,43,21,43,21,43,21,43,21,21,43,21,21,21,43,21,43,21,21,21,21,21,21,21,21,27,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,30,1,1,21,43,21,43,33,43,43,43,21,21,21,21,21,21,29,21,21,21,21,0,0,0,33,0,34,43,33,43,21,21,21,21,43,21,43,21,43,21,43,21,21,43,1,1,1,1,1,1,1,43,21,43,21,43,43,42,1,1,1,1,1,1,1,30,1,1,1,27,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,43,21,43,21,43,21,43,43,21,43,21,0,21,43,21,43,43,21,21,21,43,21,21,21,43,21,21,21,21,43,21,43,31,43,21,21,43,21,21,21,43,67,30,1,21,43,43,21,21,21,21,43,21,26,26,43,21,43,21,21,43,21,43,43,21,43,21,43,21,43,21,43,21,43,21,43,21,43,21,43,21,21,21,21,43,21,43,21,43,21,21,21,21,21,21,43,21,43,21,43,21,43,43,21,21,21,21,43,21,43,21,21,21,21,43,21,21,43,21,43,43,21,43,21,43,21,21,43,21,21,43,21,21,43,21,21,43,21,21,43,21,21,21,43,21,21,21,43,21,43,43,21,21,43,21,21,21,43,21,21,21,43,21,21,43,21,21,43,21,43,21,21,21,21,43,21,43,21,21,21,43,21,43,21,43,21,43,21,43,21,43,42,42,42,42,42,43,21,21,21,21,43,21,21,43,21,43,21,43,21,43,21,43,43,21,21,21,43,43,21,43,21,43,21,21,43,21,43,21,21,0,0,0,0,0,0,0,21,43,21,43,21,43,21,43,42,42,42,42,21,43,21,43,21,43,21,43,43,21,21,21,43,43,21,21,21,43,21,43,21,43,21,43,21,43,43,21,21,21,43,21,43,21,43,21,21,43,21,21,21,21,21,21,43,21,43,21,43,21,21,43,21,21,21,21,43,21,43,21,21,21,21,43,21,21,43,21,43,43,21,43,21,43,21,43,21,21,43,33,33,42,42,21,43,43,21,21,21,43,43,21,21,43,43,42,21,42,21,21,43,21,43,21,43,30,1,43,21,21,43,43,21,43,21,43,21,43,21,43,21,29,30,30,21,43,43,21,43,21,43,21,21,43,43,21,21,0,43,21,21,21,21,26,26,26,26,26,26,26,26,26,43,21,21,21,21,21,21,21,21,21,21,21,21,21,43,21,21,21,21,21,21,43,21,21,21,21,21,21,43,21,43,21,43,21,43,21,43,21,43,21,21,0,43,21,43,21,43,42,32,42,42,21,43,32,42,42,32,42,32,42,21,0,21,43,23,21,43,43,21,21,43,21,43,21,21,21,43,21,21,21,43,21,21,43,21,21,43,21,43,21,43,21,67,43,21,21,21,21,21,21,43,21,21,21,21,21,21,43,21,21,21,21,21,21,43,21,21,21,21,21,21,43,21,21,43,21,21,21,21,21,21,43,21,21,21,43,21,21,21,21,21,21,43,21,21,21,21,21,21,43,43,43,21,21,21,21,21,21,43,21,21,21,21,21,21,43,21,21,21,21,21,21,21,21,21,21,21,21,21,21,43,21,21,21,21,43,21,21,21,21,21,21,43,21,21,21,21,21,21,43,21,21,21,21,21,21,43,21,21,21,21,21,21,43,21,21,21,21,21,21,43,21,21,21,21,21,21,43,21,21,43,21,21,21,21,21,21,1,1,1,1,1,1,1,1,42,42,67,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,33,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,67,67,33,33,21,43,43,21,21,21,43,21,43,21,43,21,21,43,43,21,21,21,43,21,21,21,27,43,21,21,21,43,21,21,21,21,21,21,21,43,21,21,21,43,21,21,21,43,21,21,21,43,21,21,21,43,21,21,21,43,21,21,21,43,43,21,21,21,43,21,21,43,21,30,43,21,43,21,43,21,43,21,43,21,21,21,21,21,21,21,43,21,21,21,21,21,21,21,43,21,21,21,21,21,21,21,43,21,21,21,43,21,21,21,43,21,21,21,43,43,43,21,21,21,1,1,1,1,1,1,1,1,67,67,27,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,43,21,43,21,43,21,43,21,43,21,43,21,21,43,26,26,26,26,26,26,26,26,26,26,0,0,21,43,21,21,21,21,21,21,21,34,43,21,43,21,43,21,43,21,0,33,43,21,21,21,43,21,21,21,43,21,21,21,43,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,43,21,21,43,21,21,43,21,21,21,21,21,21,43,21,21,21,21,43,21,43,21,21,21,43,21,21,43,21,43,21,21,43,21,21,43,21,43,21,21,43,21,21,43,21,43,21,21,43,21,21,43,21,21,43,21,21,43,21,43,21,43,21,21,43,21,43,21,43,21,43,21,43,21,43,43,21,21,21,21,21,21,21,21,21,43,21,43,21,21,21,43,21,43,21,43,21,43,21,21,43,21,43,21,21,21,21,21,21,43,21,21,21,43,21,21,43,21,21,43,21,21,21,21,21,21,43,21,43,21,21,21,21,43,21,43,21,43,21,43,21,43,21,43,21,43,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,67,68,69,67,67,68,67,67,67,68,67,26,26,26,43,21,21,21,21,34,23,23,25,1,43,21,21,21,21,21,21,43,21,21,21,21,30,33,0,0,0,67,29,0,30,33,43,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,43,21,43,21,43,21,21,21,21,21,21,43,21,43,21,43,21,67,43,21,21,43,21,21,43,21,21,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,43,21,21,43,21,21,43,21,43,21,21,43,21,21,43,21,21,43,21,21,43,21,21,43,21,43,21,21,43,21,21,43,21,21,43,21,21,43,21,21,43,21,21,43,21,21,21,43,43,21,43,21,21,43,43,21,21,43,21,43,21,43,21,43,21,21,43,21,21,43,21,43,21,21,43,43,21,21,43,43,21,21,43,21,21,43,21,21,43,21,43,21,21,43,21,43,21,21,43,21,43,43,43,21,43,43,21,21,43,21,43,21,43,21,21,21,21,21,21,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,21,21,43,21,21,43,21,21,43,21,43,21,21,43,21,21,43,21,21,43,43,43,21,21,43,21,43,21,43,21,21,21,21,43,21,43,21,21,43,21,21,43,21,43,21,43,21,43,21,21,43,21,21,43,21,43,21,43,21,43,21,43,21,21,43,21,21,43,21,43,21,43,21,21,21,21,43,21,43,21,43,21,43,21,43,21,43,21,43,21,43,21,43,21,43,21,43,21,43,21,43,21,43,21,43,21,21,43,21,43,21,21,43,21,21,43,21,43,21,21,43,21,21,43,21,43,21,43,21,43,21,43,21,21,21,21,21,21,43,21,43,21,43,21,21,21,21,21,21,21,21,43,21,43,21,43,21,21,21,21,21,21,21,21,21,43,21,21,43,21,43,21,43,21,43,21,21,21,21,21,21,43,21,43,21,43,21,43,21,43,21,33,0,43,21,21,43,21,21,43,21,43,21,43,21,43,21,43,21,21,43,21,21,43,21,21,43,21,21,21,21,43,21,43,21,21,21,21,43,21,21,21,21,21,43,43,21,21,21,21,43,21,21,21,21,43,21,21,21,21,43,21,43,21,21,21,21,43,21,21,21,21,43,21,21,43,21,21,43,21,21,43,21,21,43,21,43,21,21,43,21,21,43,21,21,43,21,21,43,43,21,43,21,21,33,43,21,21,43,21,21,43,21,43,21,21,43,21,21,43,21,21,43,21,43,21,21,43,21,21,21,21,21,21,21,43,21,43,21,21,21,21,21,21,21,21,21,43,21,43,21,43,21,21,21,21,21,21,21,21,21,21,21,21,43,21,21,21,43,21,21,42,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,69,1,1,1,43,21,21,21,21,21,21,21,21,21,21,21,21,43,21,43,21,43,21,21,21,21,21,21,21,21,21,21,21,21,43,21,21,43,21,21,21,43,21,43,21,43,43,21,21,21,43,21,43,21,43,43,21,21,21,43,21,21,21,43,21,43,21,43,21,21,43,21,43,21,43,0,26,33,30,30,30,43,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,43,43,21,21,21,21,21,21,21,21,21,21,21,21,21,43,21,43,21,43,43,21,21,21,21,21,21,21,21,21,21,21,21,43,21,21,21,21,21,21,21,21,21,21,21,21,43,25,25,25,25,0,31,43,21,43,21,43,21,43,21,43,21,43,21,21,43,43,21,43,21,43,21,43,21,1,69,1,1,1,30,1,1,1,1,1,1,1,1,1,21,43,43,21,21,21,21,21,21,21,21,21,21,21,21,21,43,43,21,21,21,21,21,21,21,21,21,21,21,21,43,21,43,43,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,43,21,43,21,43,21,43,21,21,43,21,43,21,43,42,42,42,42,33,43,21,21,43,43,21,43,21,43,21,43,21,43,21,43,21,43,21,43,21,43,21,43,21,43,21,43,21,43,21,43,21,43,21,43,21,21,43,21,43,21,21,21,21,21,21,21,43,21,21,21,43,21,43,21,43,21,43,21,43,21,43,21,43,21,43,21,21,21,21,21,21,21,21,21,21,21,21,43,21,21,21,21,21,21,43,43,21,21,21,21,21,21,21,21,21,21,21,21,43,21,21,21,21,21,21,43,43,21,43,21,43,21,21,21,21,43,43,21,21,21,43,21,43,21,43,21,21,21,43,43,21,43,21,43,21,43,21,21,43,21,43,21,43,21,43,21,43,43,21,21,43,43,21,43,21,43,21,43,21,36,43,21,21,21,36,43,21,43,43,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,43,21,43,21,43,21,43,21,31,43,21,43,21,43,21,21,43,31,0,0,0,0,0,0,21,43,21,43,43,21,21,43,43,21,21,43,43,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,21,43,43,43,43,43,43,43,43,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,43,33,38,38,42,42,43,43,43,43,43,21,43,43,21,21,0,43,21,21,21,43,43,67,42,32,42,42,32,42,42,42,32,42,32,42,67,43,21,43,21,21,43,21,21,21,43,21,21,21,21,43,21,43,43,21,21,21,43,21,21,21,21,21,21,43,21,21,43,24,42,43,21,43,21,43,21,43,21,43,43,43,43,27,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,21,21,21,43,21,21,21,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,21,21,21,21,21,21,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,21,43,43,21,21,43,21,43,21,43,43,43,43,43,43,21,43,43,21,21,21,21,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,21,43,21,43,21,21,21,43,43,21,21,21,43,21,21,21,43,43,43,43,43,43,43,21,21,21,43,43,21,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,21,43,21,43,21,43,42,43,21,21,43,21,21,21,43,21,43,21,43,21,43,43,21,43,21,43,21,21,43,43,21,43,21,67,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,27,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,43,21,30,43,21,21,21,21,43,21,21,43,21,21,43,21,21,21,21,21,21,21,43,21,21,21,43,21,21,21,43,21,21,21,43,21,21,21,43,21,21,21,21,43,21,43,21,43,43,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,43,21,43,21,30,21,43,43,43,21,21,43,43,21,21,42,43,42,43,21,21,43,43,21,21,43,43,21,21,43,43,21,21,21,43,43,21,21,21,43,21,21,21,43,21,21,21,43,21,21,21,43,21,21,21,43,21,21,21,21,43,21,43,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,21,43,31,9,1,1,1,1,4,35,39,10,4,4,11,12,4,4,4,7,67,7,68,69,46,21,22,23,24,25,26,27,28,29,30,31,32,11,10,13,18,12,9,20,19,16,15,17,14,33,34,8,4,35,36,37,38,39,40,41,42,43,1,67,7,68,69,46,21,22,23,24,25,26,27,28,29,30,31,32,11,10,13,18,12,9,20,19,16,15,17,14,33,34,8,4,35,36,37,38,39,40,41,42,43,1,4,8,11,7,4,4,4,4,4,4,4,4,4,4,4,4,21,22,23,24,25,26,27,28,29,30,31,32,11,10,13,18,12,9,20,19,16,15,17,14,33,34,8,4,35,36,37,38,39,40,41,42,43,1,21,22,23,24,25,26,27,28,29,30,31,32,11,10,13,18,12,9,20,19,16,15,17,14,33,34,8,4,35,36,37,38,39,40,41,42,43,1,21,23,24,25,26,27,28,29,30,31,32,11,10,13,18,12,9,20,19,16,15,17,14,33,34,42,43,1,41,41,37,4,4,4,41,7,7,46,21,22,23,24,25,26,27,28,29,30,31,32,11,10,13,18,12,9,20,19,16,15,17,14,33,34,8,4,35,36,37,41,42,43,1,35,4,35,4,35,22,22,13,21,22,23,24,25,26,27,28,29,30,31,32,11,10,13,18,12,9,20,19,16,15,17,14,33,34,8,4,36,37,38,39,41,42,43,1,41,41,41,41,4,39,21,22,23,24,25,26,27,28,29,30,31,32,11,10,13,18,12,9,20,19,16,15,17,14,33,34,8,4,35,36,37,38,39,40,40,41,41,42,43,1,70,46,70,46,70,46,70,46,70,46,70,46,70,46,70,46,70,46,70,46,70,70,70,46,70,46,70,46,70,46,70,46,70,46,70,46,70,46,70,46,70,46,70,46,70,46,67,7,68,69,46,21,22,23,24,25,26,27,28,29,30,31,32,11,10,13,18,12,9,20,19,16,15,17,14,33,34,8,4,35,36,37,38,39,40,41,42,43,1,14,4,4,4,15,7,41,41,41,41,70,46,21,22,23,24,25,26,27,28,29,30,31,32,11,10,13,18,12,9,20,19,16,15,17,14,33,34,8,4,36,37,38,39,41,42,43,1,70,46,22,22,22,41,41,41,41,41,41,41,41,21,22,23,24,25,26,27,28,29,30,31,32,11,10,13,18,12,9,20,19,16,15,17,14,33,34,8,4,36,37,38,39,41,42,43,1,4,4,4,41,41,41,41,41,41,41,41,41,41,22,22,22,22,67,7,68,69,46,21,22,23,24,25,26,27,28,29,30,31,32,11,10,13,18,12,9,20,19,16,15,17,14,33,34,8,4,35,36,37,38,39,40,41,42,43,1,7,7,7,41,41,41,41,41,41,41,41,41,41,7,16,7,17,4,35,41,4,4,4,7,41,41,41,41,41,41,41,41,8,4,41,21,41,12,11,4,10,9,10,18,41,41,41,41,7,46,4,35,37,38,41,41,41,41,17,16,15,14,19,4,35,18,4,4,4,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,70,46,66,70,46,70,46,20,21,23,24,25,26,27,28,29,30,31,32,11,10,13,18,12,9,20,19,16,15,17,14,33,34,42,43,1,20,19,7,4,35,8,4,41,4,41,4,4,4,4,4,4,4,4,4,8,4,4,4,4,4,4,4,4,4,4,4,4,41,41,4,4,4,4,4,41,41,41,41,41,41,41,41,41,4,4,4,41,41,41,4,4,4,4,41,41,41,41,41,41,4,4,4,4,4,41,41,41,41,41,41,41,41,41,41,41,41,41,7,41,41,41,41,4,41,4,4,4,41,41,41,41,41,41,8,4,41,4,41,41,41,41,41,41,4,4,4,4,4,4,41,41,41,41,41,41,41,41,41,41,41,41,41,7,4,8,4,41,4,41,4,4,4,4,4,4,4,4,4,4,4,41,4,4,4,4,4,4,4,4,4,41,4,4,4,4,4,4,35,4,35,4,4,4,4,1,1,1,1,35,41,64,39,4,37,39,21,22,23,24,25,26,27,28,29,30,31,32,11,10,13,18,12,9,20,19,16,15,17,14,33,34,8,4,35,36,37,38,39,40,41,42,43,1,40,41,67,7,68,69,46,21,21,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,31,32,32,11,11,10,10,13,13,18,18,12,12,9,9,20,20,19,19,16,16,15,15,17,17,14,14,33,33,34,34,8,4,35,36,37,38,39,40,41,42,42,43,43,1,1,67,7,68,69,46,21,22,23,24,25,26,27,28,29,30,31,32,11,10,13,18,12,9,20,19,16,15,17,14,33,34,8,4,35,36,37,38,39,40,41,42,43,1,7,41,7,67,7,68,69,46,21,22,23,24,25,26,27,28,29,30,31,32,11,10,13,18,12,9,20,19,16,15,17,14,33,34,8,4,35,36,37,38,39,40,41,42,43,1,4,4,4,35,4,4,4,4,4,21,23,24,25,26,27,28,29,30,31,32,11,10,13,18,12,9,20,19,16,15,17,14,33,34,42,43,1,41,41,35,35,35,4,7,46,39,39,39,39,37,38,39,39,39,39,38,39,39,39,39,38,50,50,50,50,50,50,50,50,50,50,50,50,50,13,41],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2]],[[1,3]],[[1,3]],[[1,2]],[4,5],0,0,0,[4,5],[4,5],0,0,[4,2],[4,6],[4,6],[7,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,5],[8,5],0,[7,5],[4,9],[4,10],[4,11],[4,12],[4,13],[4,14],[4,15],[4,16],[4,17],[4,18],[4,19],[4,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[11,11],[10,10],[13,13],[18,18],[12,12],[9,9],[20,20],[19,19],[16,16],[15,15],[17,17],[14,14],[33,33],[34,34],[8,8],[4,4],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[21,21],44],[[23,23],44],[[24,24],44],[[25,25],44],[[26,26],44],[[27,27],44],[[28,28],44],[[29,29],44],[[30,30],44],[[31,31],44],[[32,32],44],[[11,11],44],[[10,10],44],[[13,13],44],[[18,18],44],[[12,12],44],[[9,9],44],[[20,20],44],[[19,19],44],[[16,16],44],[[15,15],44],[[17,17],44],[[14,14],44],[[33,33],44],[[34,34],44],[[42,42],44],[[43,43],44],[[1,1],44],[41,21],[41,24],0,[4,2],[4,6],[4,6],[41,45],[7,41],[[7,41]],[[],46],[[],21],[[],22],[[],23],[[],24],[[],25],[[],26],[[],27],[[],28],[[],29],[[],30],[[],31],[[],32],[[],11],[[],10],[[],13],[[],18],[[],12],[[],9],[[],20],[[],19],[[],16],[[],15],[[],17],[[],14],[[],33],[[],34],[[],8],[[],4],[[],35],[[],36],[[],37],[[],41],[[],42],[[],43],[[],1],0,[4,6],0,[4,5],0,[22,45],[22,45],0,[[21,21],5],[[22,22],5],[[23,23],5],[[24,24],5],[[25,25],5],[[26,26],5],[[27,27],5],[[28,28],5],[[29,29],5],[[30,30],5],[[31,31],5],[[32,32],5],[[11,11],5],[[10,10],5],[[13,13],5],[[18,18],5],[[12,12],5],[[9,9],5],[[20,20],5],[[19,19],5],[[16,16],5],[[15,15],5],[[17,17],5],[[14,14],5],[[33,33],5],[[34,34],5],[[8,8],5],[[4,4],5],[[36,36],5],[[37,37],5],[[38,38],5],[[39,39],5],[[41,41],5],[[42,42],5],[[43,43],5],[[1,1],5],[[41,41],5],[41,47],[41,2],[41,47],[4,2],0,[[21,48],49],[[22,48],49],[[23,48],49],[[24,48],49],[[25,48],49],[[26,48],49],[[27,48],49],[[28,48],49],[[29,48],49],[[30,48],49],[[31,48],49],[[32,48],49],[[11,48],49],[[10,48],49],[[13,48],49],[[18,48],49],[[12,48],49],[[9,48],49],[[20,48],49],[[19,48],49],[[16,48],49],[[15,48],49],[[17,48],49],[[14,48],49],[[33,48],49],[[34,48],49],[[8,48],49],[[4,48],49],[[35,48],49],[[36,48],49],[[37,48],49],[[38,48],49],[[39,48],49],[[40,48],49],[[40,48],49],[[41,48],49],[[41,48],49],[[42,48],49],[[43,48],49],[[1,48],49],[[41,50]],[[46,41,50]],[[41,50]],[[46,41,50]],[51,6],[[46,51],6],[[51,35],6],[[46,51,35],6],[3,6],[[46,3],6],[[3,35],6],[[46,3,35],6],[52,6],[[46,52],6],[[52,35],6],[[46,52,35],6],[53,6],[[46,53],6],[[53,35],6],[[46,53,35],6],[[41,50]],[[41,50]],[[41,50,2]],[[46,41,50,2]],[[41,50,2],[[54,[40]]]],[[46,41,50,2],[[54,[40]]]],[[41,50]],[[46,41,50]],[1,6],[[46,1],6],[47,6],[[46,47],6],[[47,35],6],[[46,47,35],6],[2,6],[[46,2],6],[[2,35],6],[[46,2,35],6],[55,6],[[46,55],6],[[55,35],6],[[46,55,35],6],[56,6],[[46,56],6],[[56,35],6],[[46,56,35],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[4,5],[4,5],[4,5],0,[[7,41],22],[[41,45],56],[[41,45],2],[[41,45],55],[[41,45],47],[[41,2],[[54,[[57,[2]],40]]]],[[46,41,2],[[54,[[57,[2]],40]]]],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[41,2],[[54,[[57,[2]],40]]]],[[46,41,2],[[54,[[57,[2]],40]]]],[22,5],[22,5],[22,5],[41,5],[41,5],[41,5],[41,5],[41,5],[41,5],[41,5],[41,5],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[11],[10],[13],[18],[12],[9],[20],[19],[16],[15],[17],[14],[33],[34],[8],[4],[36],[37],[38],[39],[41],[42],[43],[1],[4,2],[4,6],[4,6],[[41,2],55],[41,47],[41,2],[41,52],[41,55],[41,56],[41,56],[41,51],[41,3],[41,52],[22,45],[22,45],[22,45],[22,45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7,55],[41,55],[41,47],[41,2],[41,55],[41,5],[41,5],[41,5],[41,5],[41,5],[41,5],0,0,[7,23],0,[4,5],0,[41,45],[4,5],[4,5],[4,5],[7,45],[41,1],[41,2],[41,2],[41,55],[41,1],[41,2],[41,1],[41,42],[8,34],[4,34],[41,5],[21,43],[41,43],0,0,[4,5],0,0,0,0,[41,47],[41,2],[41,55],[41,55],[[2,2],7],[[],46],[[],4],[[4,5,5,5],35],[[6,33],37],[[6,33],38],[[],41],[41,55],[41,47],[41,2],0,0,0,0,0,[4,29],0,0,[4,2],[4,6],[4,6],[41,26],[41,1],[41,26],[41,1],[41,26],[41,1],[41,26],[41,1],[41,26],[41,1],[41,2],[[41,2],26],[41,[[0,[58,59,60]]]],[41,1],[[41,2],1],[41,2],[[46,41],2],[[41,2,[57,[2]],8,35]],[[],4],[46,4],[[],4],[46,4],0,[[21,21],[[57,[44]]]],[[23,23],[[57,[44]]]],[[24,24],[[57,[44]]]],[[25,25],[[57,[44]]]],[[26,26],[[57,[44]]]],[[27,27],[[57,[44]]]],[[28,28],[[57,[44]]]],[[29,29],[[57,[44]]]],[[30,30],[[57,[44]]]],[[31,31],[[57,[44]]]],[[32,32],[[57,[44]]]],[[11,11],[[57,[44]]]],[[10,10],[[57,[44]]]],[[13,13],[[57,[44]]]],[[18,18],[[57,[44]]]],[[12,12],[[57,[44]]]],[[9,9],[[57,[44]]]],[[20,20],[[57,[44]]]],[[19,19],[[57,[44]]]],[[16,16],[[57,[44]]]],[[15,15],[[57,[44]]]],[[17,17],[[57,[44]]]],[[14,14],[[57,[44]]]],[[33,33],[[57,[44]]]],[[34,34],[[57,[44]]]],[[42,42],[[57,[44]]]],[[43,43],[[57,[44]]]],[[1,1],[[57,[44]]]],0,0,[7,45],[4,5],0,[8,5],[4,5],[41,25],[4,5],[41,1],[[4,5]],[[4,5]],[[4,5]],[[4,2]],[[4,6]],[[4,61]],[[4,6]],[[4,61]],[[4,5]],[[8,5]],[[4,9]],[[4,10]],[[4,11]],[[4,12]],[[4,13]],[[4,14]],[[4,15]],[[4,16]],[[4,17]],[[4,18]],[[4,19]],[[4,20]],[[41,21]],[[41,24]],[[4,2]],[[4,6]],[[4,61]],[[4,6]],[[4,61]],[[41,45,56]],[[41,45,53]],[[41,45]],[[41,45,2]],[[41,45,3]],[[41,45,55]],[[41,45,52]],[[41,45,47]],[[41,45,51]],[[4,6]],[[4,61]],[[4,5]],[[41,47]],[[41,2]],[[41,47]],[[4,2]],[[4,5]],[[4,5]],[[4,5]],[[41,5]],[[41,5]],[[41,5]],[[41,5]],[[41,5]],[[41,5]],[[4,2]],[[4,6]],[[4,61]],[[4,6]],[[4,61]],[[41,47]],[[41,2]],[[41,52]],[[41,55]],[[41,56]],[[41,56]],[[41,51]],[[41,3]],[[41,52]],[[41,2,3]],[[41,2,52]],[[41,2,2]],[[41,2,55]],[[7,55]],[[41,55]],[[41,47]],[[41,2]],[[41,5]],[[4,5]],[[41,45]],[[4,5]],[[4,5]],[[4,5]],[[41,1]],[[41,2]],[[41,2]],[[41,55]],[[41,1]],[[41,2]],[[8,34]],[[4,34]],[[41,5]],[[4,5]],[[41,47]],[[41,2]],[[41,55]],[[41,55]],[[41,47]],[[41,2]],[[4,29]],[[4,2]],[[4,6]],[[4,61]],[[4,6]],[[4,61]],[[41,26]],[[41,1]],[[41,26]],[[41,1]],[[41,26]],[[41,1]],[[41,26]],[[41,1]],[[41,26]],[[41,1]],[[41,2,26]],[[41,1]],[[41,2,1]],[[7,45],[[54,[40]]]],[[4,5]],[[8,5]],[[4,5]],[[41,25]],[[4,5]],[[41,1]],[[4,5]],[[4,5]],[[4,5]],[[4,5]],[[4,5]],[[4,5]],[[4,5]],[[4,5]],[[4,5]],[[4,5]],[[4,5]],[[41,5]],[[4,2]],[[4,5]],[[4,5]],[[4,5]],[[4,5]],[[4,5]],[[4,5]],[[4,5]],[[4,5]],[[41,5]],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],0,[4,5],0,[4,5],[4,5],[4,5],[4,5],[[1,2]],[[1,3]],[[1,3]],[[1,2]],0,[41,5],[[41,2,[57,[2]],55,2],[[57,[39]]]],0,[4,2],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],61],[[],61],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[45,[[54,[21]]]],[[],54],[[],54],[45,[[54,[23]]]],[[],54],[45,[[54,[24]]]],[45,[[54,[25]]]],[[],54],[45,[[54,[26]]]],[[],54],[45,[[54,[27]]]],[[],54],[45,[[54,[28]]]],[[],54],[45,[[54,[29]]]],[[],54],[45,[[54,[30]]]],[[],54],[45,[[54,[31]]]],[[],54],[45,[[54,[32]]]],[[],54],[45,[[54,[11]]]],[[],54],[45,[[54,[10]]]],[[],54],[[],54],[45,[[54,[13]]]],[45,[[54,[18]]]],[[],54],[[],54],[45,[[54,[12]]]],[[],54],[45,[[54,[9]]]],[[],54],[45,[[54,[20]]]],[[],54],[45,[[54,[19]]]],[[],54],[45,[[54,[16]]]],[45,[[54,[15]]]],[[],54],[[],54],[45,[[54,[17]]]],[[],54],[45,[[54,[14]]]],[[],54],[45,[[54,[33]]]],[[],54],[45,[[54,[34]]]],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[45,[[54,[42]]]],[45,[[54,[43]]]],[[],54],[[],54],[45,[[54,[1]]]],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[2,2],[[54,[7,40]]]],[[41,45,53],[[54,[40]]]],[[2,55,2],[[54,[7,40]]]],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[[],62],[4,5],[4,5],[4,5],0,[4,5],[4,5],[4,5],[4,5],[4,5],[[],[[0,[58,63,59,60]]]],[[],[[0,[58,63,59,60]]]],[[],[[0,[58,63,59,60]]]],[[],[[0,[58,63,59,60]]]],[[],[[0,[58,63,59,60]]]],[[],[[0,[58,63,59,60]]]],[[],[[0,[58,63,59,60]]]],[[],[[0,[58,63,59,60]]]],[[],[[0,[58,63,59,60]]]],[[],[[0,[58,63,59,60]]]],[[],[[0,[58,63,59,60]]]],[[],[[0,[58,63,59,60]]]],[[],[[0,[58,63,59,60]]]],[[],[[0,[58,63,59,60]]]],[[],[[0,[58,63,59,60]]]],[[],[[0,[58,63,59,60]]]],[[],[[0,[58,63,59,60]]]],[[],[[0,[58,63,59,60]]]],[[],[[0,[58,63,59,60]]]],[[],[[0,[58,63,59,60]]]],[[],[[0,[58,63,59,60]]]],[[],[[0,[58,63,59,60]]]],[[],[[0,[58,63,59,60]]]],[[],[[0,[58,63,59,60]]]],[[],[[0,[58,63,59,60]]]],[[],[[0,[58,63,59,60]]]],[[],[[0,[58,63,59,60]]]],[[],[[0,[58,63,59,60]]]],[[41,2,45],[[57,[55]]]],[41,[[57,[5]]]],[4,35],[4,35],[4,35],[[],4],[[2,55,2],7],[[[57,[[65,[64]]]],[57,[[65,[66]]]]],46],[[55,6],39],[[55,6,33],39],[[55,6,33,2],39],[[55,6,42],39],[[61,33],37],[[61,33],38],[[55,61],39],[[55,61,33],39],[[55,61,33,2],39],[[55,61,42],39],[37,38],[[55,38],39],[[55,38,2],39],[[55,38,2,42],39],[[55,38,42],39],[[],38],[[6,33]],[[41,2,[57,[2]],6,31]],[[41,2,[57,[2]],6,31]],[[41,6]],[[41,6]],[[41,2,[57,[2]],6,55,32,33]],[[41,2,[57,[2]],6,55,32,33]],[[41,6,30]],[[41,6,30]],[[41,2,[57,[2]],6,1]],[[41,2,[57,[2]],6,1]],[[41,2,[57,[2]],55,39]],[[41,2,[57,[2]],55,39]],0,[41,5]],"p":[[4,"Register"],[15,"u32"],[15,"i32"],[3,"FormatterOptions"],[15,"bool"],[15,"str"],[3,"Decoder"],[3,"FormatterOperandOptions"],[4,"CC_a"],[4,"CC_ae"],[4,"CC_b"],[4,"CC_be"],[4,"CC_e"],[4,"CC_g"],[4,"CC_ge"],[4,"CC_l"],[4,"CC_le"],[4,"CC_ne"],[4,"CC_np"],[4,"CC_p"],[4,"Code"],[3,"ConstantOffsets"],[4,"DecoderError"],[4,"CodeSize"],[4,"RoundingControl"],[4,"OpKind"],[4,"EncodingKind"],[4,"TupleType"],[4,"NumberBase"],[4,"PrefixKind"],[4,"DecoratorKind"],[4,"NumberKind"],[4,"FormatterTextKind"],[4,"MemorySizeOptions"],[3,"NumberFormattingOptions"],[4,"SymResString"],[3,"SymResTextPart"],[4,"SymResTextInfo"],[3,"SymbolResult"],[3,"IcedError"],[3,"Instruction"],[4,"MemorySize"],[4,"Mnemonic"],[4,"Ordering"],[15,"usize"],[3,"IntelFormatter"],[15,"u16"],[3,"Formatter"],[6,"Result"],[8,"FormatterOutput"],[15,"i16"],[15,"i64"],[15,"i8"],[4,"Result"],[15,"u64"],[15,"u8"],[4,"Option"],[8,"Iterator"],[8,"ExactSizeIterator"],[8,"FusedIterator"],[3,"String"],[3,"TypeId"],[8,"DoubleEndedIterator"],[8,"SymbolResolver"],[3,"Box"],[8,"FormatterOptionsProvider"],[3,"DecoderOptions"],[3,"FormatMnemonicOptions"],[3,"SymbolFlags"],[8,"Formatter"]]},\
"keos":{"doc":"KAIST educational Operating System.","t":[17,0,14,5,0,14,0,0,0,0,14,14,0,0,0,14,17,17,17,3,3,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,13,4,3,6,3,3,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,5,5,5,3,3,5,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,3,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,13,13,3,3,13,13,13,17,17,3,3,6,4,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,13,13,13,13,3,3,3,3,3,3,3,3,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,10,10,11,5,5,5,10],"n":["MAX_CPU","addressing","debug","do_tests","fs","info","interrupt","intrinsics","mm","panicking","print","println","spin_lock","sync","thread","warning","PAGE_MASK","PAGE_SHIFT","PAGE_SIZE","Pa","Va","ZERO","add","add","add_assign","add_assign","as_mut","as_ref","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","eq","eq","fmt","fmt","fmt","fmt","from","from","into","into","into_pa","into_usize","into_usize","into_va","new","new","partial_cmp","partial_cmp","sub","sub","sub_assign","sub_assign","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","Disk","DiskError","Error","File","File","FileSystem","FsDisk","FsError","Sector","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","close","cmp","create","eq","file_system","fmt","fmt","from","from","from","from","from","init_fs","into","into","into","into","into","into_offset","into_usize","load","name","new","open","partial_cmp","read","read","read","size","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","write","write","write","register","cpuid","read_cr3","ContigPages","Page","align_up","borrow","borrow","borrow_mut","borrow_mut","drop","from","from","from_pa","from_va","init_mm","inner","inner_mut","into","into","into_raw","new","new","new_with_align","pa","pa","split","try_from","try_from","try_into","try_into","type_id","type_id","va","va","load_debug_infos","SpinLock","SpinLockGuard","TryLockError","WouldBlock","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","deref","deref_mut","from","from","from","into","into","into","into_inner","lock","new","try_from","try_from","try_from","try_into","try_into","try_into","try_lock","type_id","type_id","type_id","SpinLock","SpinLockGuard","Exited","Idle","JoinHandle","ParkHandle","Parked","Runnable","Running","STACK_SIZE","THREAD_MAGIC","Thread","ThreadBuilder","ThreadPinGuard","ThreadState","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel","clone","clone_into","eq","exit","from","from","from","from","from","into","into","into","into","into","join","name","new","new_for","park_current_and","pin","scheduler","spawn","spawn_as_parked","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unpark","with_current","Disconnected","Disconnected","Empty","Full","IntoIter","Iter","PollingResponse","Receiver","RecvError","SendError","Sender","TryIter","TryRecvError","TrySendError","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_recv","can_send","capacity","capacity","channel","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","drop","drop","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","has_receiver","has_sender","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","iter","next","next","next","poll","put","recv","send","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_iter","try_recv","try_send","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Scheduler","next_to_run","push_to_queue","reschedule","scheduler","set_scheduler","start_idle","timer_tick"],"q":["keos","","","","","","","","","","","","","","","","keos::addressing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","keos::fs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","keos::interrupt","keos::intrinsics","","keos::mm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","keos::panicking","keos::spin_lock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","keos::sync","","keos::thread","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","keos::thread::channel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","keos::thread::scheduler","","","","","","",""],"d":["Maximum number of CPU this kernel can support.","Memory abstraction.","Print msg if debug build","Run the given tests.","Filesystem implementation.","Display an information message.","Interrupt management.","intrinsics of x86_64 not included in <code>core::arch::x86_64</code>.","Memory management including heap and physical memory.","KEOS panic handler.","Prints out the message.","Prints out the message with a newline.","SMP supported spinlock.","Useful synchronization primitives. Support similar …","A thread, abstraction of a cpu core.","Display a warning message.","Mask for page offset.","Shift amount to get page index.","Page size.","Physical address","Virtual address","PA with address 0.","","","","","Get mutable reference of T underlying the Va.","Get reference of T underlying the Va.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Cast into physical address.","Cast into usize.","Cast into usize.","Cast into virtual address.","Create a new physical address with a check.","Create a new virtual address with a check.","","","","","","","","","","","","","","","","","A device that has byte sink.","Disk operation has an error.","Possible error kinds.","The file.","The file.","The root file system","The filesystem disk.","File system operation has an error.","Sector.","","","","","","","","","","","","","Close this filesystem.","","Create a file that contains <code>contents</code>.","","Get a filesystem reference of the kernel.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Initialize the fs.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get offset that represented by the sector.","Cast into usize.","Load a file system from disk","Get name of this file.","Create a new file system to disk.","Open a file with <code>name</code>.","","Read 512 bytes from disk starting from sector.","","Read from file starting from <code>ofs</code> to <code>contents</code>.","Get size of this file.","","","","","","","","","","","","","","","","","Write 512 bytes to disk starting from sector.","","Write to file starting from <code>ofs</code> from <code>contents</code>.","Register interrupt handler","Get cpuid of this core.","read current cr3.","A contiguous pages representation.","A Page representation.","Align upwards. Returns the smallest x with alignment <code>align</code> …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a page from a pa.","Constructs a page from a va.","Initialize the physical memory allocator.","Get reference of underlying slice of the Page.","Get mutable reference of underlying sliceof the Page.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the page, returning a pa of the page.","Allocate a page.","Allocate a page.","Allocate a page with align","Get physical address of this page.","Get physical address of this page.","Split the ContigPages into multiple pages.","","","","","","","Get virtual address of this page.","Get virtual address of this page.","Load debugging symbols from kernel image","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a …","An enumeration of possible errors associated while trying …","The lock could not be acquired at this time because the …","","","","","","","Creates a <code>SpinLock&lt;T&gt;</code>, with the <code>Default</code> value for T.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this spinlock, returning the underlying data.","Acquires a spinlock, blocking the current thread until it …","Creates a new spinlock in an unlocked state ready for use.","","","","","","","Attempts to acquire this lock.","","","","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a …","Thread is exited with exitcode.","Thread is idle.","A handle to join thread.","A handle that represent the parked thread.","Thread is parked.","Thread is runnable.","Thread is running.","Size of each thread’s stack.","Thread magic to detect stack overflow.","An thread abstraction.","A struct to build a new thread.","A RAII implementation of the thread pinning.","A possible state of the thread.","","","","","","","","","","","Multi-producer, multi-consumer FIFO queue communication …","","","","Exit the thread with <code>exit_code</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Join this handle and returns exit code.","Thread name","Create a new thread builder for thread <code>name</code>.","Make a join handle for Thread <code>th</code>.","Park the current threads and run the given closure.","Pin current thread not to be scheduled by block .","Thread scheduler","Spawn the thread.","Spawn the thread as a parked state.","","","","","","","","","","","","","","","","","Consume the handle and unpark the underlying thread.","Run a function <code>f</code> with current thread as an argument.","This <code>channel</code>’s receiving half has disconnected, so the …","The <strong>channel</strong>’s sending half has become disconnected, and …","This <strong>channel</strong> is currently empty, but the <strong>Sender</strong>(s) have …","The data could not be sent on the <code>channel</code> because it would …","An owning iterator over messages on a <code>Receiver</code>, created by …","An iterator over messages on a <code>Receiver</code>, created by <code>iter</code>.","Helper structure to get response directly by polling this …","The receiving half of <code>channel</code> type. This half can only be …","An error returned from the <code>recv</code> function on a <code>Receiver</code>.","An error returned from the <code>Sender::send</code> function on <strong>channel</strong>…","The sending-half of <code>channel</code> type. This half can only be …","An iterator that attempts to yield all pending values for …","This enumeration is the list of the possible reasons that …","This enumeration is the list of the possible error …","","","","","","","","","","","","","","","","","","","","","Can receive a value through this channel.","Can send a value through this channel.","Get capacity of the channel.","Get capacity of the channel.","Creates a new bounded channel. All data sent on the <code>Sender</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Does anyone can receive a value through this channel.","Does anyone can send a value through this channel.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns an iterator that will block waiting for messages, …","","","","Poll and get the response.","Put the response into the cell.","Attempts to wait for a value on this receiver, returning …","Sends a value on this channel.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator that will attempt to yield all pending …","Attempts to return a pending value on this receiver …","Attempts to send a value on this channel without blocking.","","","","","","","","","","","Common features of thread scheduler.","Peek a next thread to run.","Push a thread <code>th</code> into scheduling queue.","Reschedule.","Get the reference of the kernel","Set the scheduler of the kernel.","Transmute this thread into the idle.","Called on every timer interrupt (1ms)."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,3,1,3,3,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,1,3,3,1,3,1,3,3,1,3,1,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,0,15,0,0,0,0,0,15,0,17,13,16,12,15,17,13,16,12,15,12,12,13,12,13,12,0,12,15,17,13,16,12,15,0,17,13,16,12,15,12,12,13,16,13,13,12,53,17,16,16,12,17,13,16,12,15,17,13,16,12,15,17,13,16,12,15,53,17,16,0,0,0,0,0,0,22,21,22,21,21,22,21,22,21,0,22,22,22,21,22,22,21,21,22,21,21,22,21,22,21,22,21,22,21,0,0,0,0,27,27,25,26,27,25,26,25,26,26,27,25,26,27,25,26,25,25,25,27,25,26,27,25,26,25,27,25,26,0,0,28,28,0,0,28,28,28,0,0,0,0,0,0,29,32,36,33,28,29,32,36,33,28,0,28,28,28,29,29,32,36,33,28,29,32,36,33,28,32,29,33,32,29,29,0,33,33,28,29,32,36,33,28,29,32,36,33,28,29,32,36,33,28,36,0,43,44,44,43,0,0,0,0,0,0,0,0,0,0,37,38,39,48,49,50,41,42,43,44,37,38,39,48,49,50,41,42,43,44,37,38,37,38,0,37,38,39,41,42,43,44,37,38,39,41,42,43,44,39,37,38,41,42,43,44,37,38,48,49,50,42,44,37,38,39,48,49,50,41,42,43,44,38,37,37,38,39,48,49,50,41,42,43,44,37,37,48,49,50,37,48,49,50,39,39,37,38,37,38,39,41,42,43,44,37,38,39,48,49,50,41,42,43,44,37,38,39,48,49,50,41,42,43,44,37,37,38,37,38,39,48,49,50,41,42,43,44,0,52,52,52,0,0,0,52],"f":[0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2]],[[3,2]],[[1,2]],[[3,2]],[3,4],[3,4],[[1,2],1],[[3,2],3],[[1,2]],[[3,2]],[[1,2],1],[[3,2],3],[[1,2]],[[3,2]],[[]],[[]],[[]],[[]],[1,1],[3,3],[[]],[[]],[[1,1],5],[[3,3],5],[[1,1],6],[[3,3],6],[[1,7],[[9,[8]]]],[[1,7],[[9,[8]]]],[[3,7],[[9,[8]]]],[[3,7],[[9,[8]]]],[[]],[[]],[[]],[[]],[3,1],[1,2],[3,2],[1,3],[2,[[4,[1]]]],[2,[[4,[3]]]],[[1,1],[[4,[5]]]],[[3,3],[[4,[5]]]],[[1,2]],[[3,2]],[[1,2]],[[3,2]],[[]],[[]],[[],10],[[],10],[[],9],[[],9],[[],9],[[],9],[[],11],[[],11],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,12],[[]],[13],[[12,12],5],[[13,14],[[9,[15]]]],[[12,12],6],[[],[[4,[13]]]],[[12,7],[[9,[8]]]],[[15,7],[[9,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,2],[12,2],[[],[[9,[13,15]]]],[16,14],[2,[[9,[13,15]]]],[[13,14],[[4,[16]]]],[[12,12],[[4,[5]]]],[12,[[9,[15]]]],[[17,12],[[9,[15]]]],[[16,2],[[9,[2,15]]]],[16,2],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],11],[[],11],[[],11],[[],11],[[],11],[12,[[9,[15]]]],[[17,12],[[9,[15]]]],[[16,2],[[9,[2,15]]]],[[2,[0,[18,19,20]]]],[[],2],[[],2],0,0,[[2,2],2],[[]],[[]],[[]],[[]],[21],[[]],[[]],[1,22],[[3,2],21],[23],[22],[22],[[]],[[]],[22,1],[[],[[4,[22]]]],[2,[[4,[21]]]],[[2,2],[[4,[21]]]],[22,1],[21,1],[21,[[24,[22]]]],[[],9],[[],9],[[],9],[[],9],[[],11],[[],11],[22,3],[21,3],[[],9],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[26],[26],[[]],[[]],[[]],[[]],[[]],[[]],[25],[25,26],[[],25],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[25,[[9,[26,27]]]],[[],11],[[],11],[[],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[28,28],[[]],[[28,28],6],[[29,30],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[32,30],0,[[],33],[29,32],[34],[[],35],0,[[33,[0,[34,19]]],32],[[33,[0,[34,19]]],36],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],11],[[],11],[[],11],[[],11],[[],11],[36],[34],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[37,[19]]],6],[[[38,[19]]],6],[[[37,[19]]],2],[[[38,[19]]],2],[2],[[[37,[19]]],[[37,[19]]]],[[[38,[19]]],[[38,[19]]]],[39,39],[[[41,[40]]],[[41,[40]]]],[42,42],[[[43,[40]]],[[43,[40]]]],[44,44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],39],[[[37,[19]]]],[[[38,[19]]]],[[[41,[45]],41],6],[[42,42],6],[[[43,[45]],43],6],[[44,44],6],[[[37,[19]],7],46],[[[38,[19]],7],46],[[[48,[[0,[47,19]]]],7],46],[[[49,[[0,[47,19]]]],7],46],[[[50,[[0,[47,19]]]],7],46],[[42,7],46],[[44,7],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[38,[19]]],6],[[[37,[19]]],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[37,[19]]],[[50,[19]]]],[37,[[48,[19]]]],[[]],[[]],[[]],[[[37,[19]]],[[48,[19]]]],[[[48,[19]]],[[4,[19]]]],[[[49,[19]]],[[4,[19]]]],[[[50,[19]]],[[4,[19]]]],[39],[39],[[[37,[19]]],[[9,[19,42]]]],[[[38,[19]],19],[[9,[[41,[19]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[[37,[19]]],[[49,[19]]]],[[[37,[19]]],[[9,[19,44]]]],[[[38,[19]],19],[[9,[[43,[19]]]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,[[],[[4,[[51,[29]]]]]],[[[51,[29]]]],[52],[[],52],[52],[2,31],[[]]],"p":[[3,"Pa"],[15,"usize"],[3,"Va"],[4,"Option"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"String"],[3,"TypeId"],[3,"Sector"],[3,"FileSystem"],[15,"str"],[4,"Error"],[3,"File"],[3,"FsDisk"],[8,"Fn"],[8,"Send"],[8,"Sync"],[3,"ContigPages"],[3,"Page"],[3,"Regions"],[3,"Vec"],[3,"SpinLock"],[3,"SpinLockGuard"],[4,"TryLockError"],[4,"ThreadState"],[3,"Thread"],[15,"i32"],[15,"never"],[3,"JoinHandle"],[3,"ThreadBuilder"],[8,"FnOnce"],[6,"ThreadPinGuard"],[3,"ParkHandle"],[3,"Receiver"],[3,"Sender"],[3,"PollingResponse"],[8,"Clone"],[3,"SendError"],[3,"RecvError"],[4,"TrySendError"],[4,"TryRecvError"],[8,"PartialEq"],[6,"Result"],[8,"Debug"],[3,"Iter"],[3,"TryIter"],[3,"IntoIter"],[3,"Box"],[8,"Scheduler"],[8,"Disk"]]},\
"kev":{"doc":"Welcome to the KeV project.","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","t":[8,5,14],"n":["LazyStatic","initialize","lazy_static"],"q":["lazy_static","",""],"d":["Support trait for enabling a few common operation on lazy …","Takes a shared reference to a lazy static and initializes …",""],"i":[0,0,0],"f":[0,[[]],0],"p":[]},\
"memchr":{"doc":"This library provides heavily optimized routines for …","t":[3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,0,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,3,3,3,3,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Memchr","Memchr2","Memchr3","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","into","into","into","into_iter","into_iter","into_iter","memchr","memchr2","memchr2_iter","memchr3","memchr3_iter","memchr_iter","memmem","memrchr","memrchr2","memrchr2_iter","memrchr3","memrchr3_iter","memrchr_iter","new","new","new","next","next","next","next_back","next_back","next_back","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Auto","FindIter","FindRevIter","Finder","FinderBuilder","FinderRev","None","Prefilter","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_forward","build_reverse","clone","clone","clone","clone","default","default","find","find","find_iter","find_iter","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","needle","needle","new","new","new","next","next","prefilter","rfind","rfind","rfind_iter","rfind_iter","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["memchr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","memchr::memmem","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An iterator for <code>memchr</code>.","An iterator for <code>memchr2</code>.","An iterator for <code>memchr3</code>.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Search for the first occurrence of a byte in a slice.","Like <code>memchr</code>, but searches for either of two bytes instead …","An iterator over all occurrences of the needles in a …","Like <code>memchr</code>, but searches for any of three bytes instead …","An iterator over all occurrences of the needles in a …","An iterator over all occurrences of the needle in a …","This module provides forward and reverse substring search …","Search for the last occurrence of a byte in a slice.","Like <code>memrchr</code>, but searches for either of two bytes instead …","An iterator over all occurrences of the needles in a …","Like <code>memrchr</code>, but searches for any of three bytes instead …","An iterator over all occurrences of the needles in a …","An iterator over all occurrences of the needle in a …","Creates a new iterator that yields all positions of needle …","Creates a new iterator that yields all positions of needle …","Create a new <code>Memchr3</code> that’s initialized to zero with a …","","","","","","","","","","","","","","","","","","","Automatically detect whether a heuristic prefilter should …","An iterator over non-overlapping substring matches.","An iterator over non-overlapping substring matches in …","A single substring searcher fixed to a particular needle.","A builder for constructing non-default forward or reverse …","A single substring reverse searcher fixed to a particular …","Never used a prefilter in substring search.","Prefilter controls whether heuristics are used to …","Convert this finder into its borrowed variant.","Convert this finder into its borrowed variant.","","","","","","","","","","","","","Build a forward finder using the given needle from the …","Build a reverse finder using the given needle from the …","","","","","","","Returns the index of the first occurrence of the given …","Returns the index of the first occurrence of this needle …","Returns an iterator over all non-overlapping occurrences …","Returns an iterator over all occurrences of a substring in …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the needle that this finder searches for.","Returns the needle that this finder searches for.","Create a new finder for the given needle.","Create a new reverse finder for the given needle.","Create a new finder builder with default settings.","","","Configure the prefilter setting for the finder.","Returns the index of the last occurrence of the given …","Returns the index of the last occurrence of this needle in …","Returns a reverse iterator over all non-overlapping …","Returns a reverse iterator over all occurrences of a …","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,13,0,0,0,0,0,13,0,10,11,13,14,17,10,11,12,13,14,17,10,11,12,12,12,13,10,11,12,13,12,0,10,0,10,13,14,17,10,11,12,13,14,17,10,11,12,13,14,17,10,11,12,14,17,10,11,10,11,12,14,17,12,0,11,0,11,13,14,17,10,11,12,13,14,17,10,11,12,13,14,17,10,11,12],"f":[0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[3,[2]]]],[[1,1],[[3,[2]]]],[[1,1],4],[[1,1,1],[[3,[2]]]],[[1,1,1],5],[1,6],0,[1,[[3,[2]]]],[[1,1],[[3,[2]]]],[[1,1],[[7,[4]]]],[[1,1,1],[[3,[2]]]],[[1,1,1],[[7,[5]]]],[1,[[7,[6]]]],[1,6],[[1,1],4],[[1,1,1],5],[6,[[3,[2]]]],[4,[[3,[2]]]],[5,[[3,[2]]]],[6,3],[4,3],[5,3],[6],[4],[5],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],0,0,0,0,0,0,0,0,[10,10],[11,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,10],[12,11],[13,13],[10,10],[11,11],[12,12],[[],13],[[],12],[[],[[3,[2]]]],[10,[[3,[2]]]],[[],14],[10,14],[[13,15],16],[[14,15],16],[[17,15],16],[[10,15],16],[[11,15],16],[[12,15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10],[11],[[],10],[[],11],[[],12],[14,[[3,[2]]]],[17,[[3,[2]]]],[[12,13],12],[[],[[3,[2]]]],[[11,18],[[3,[2]]]],[[],17],[11,17],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9]],"p":[[15,"u8"],[15,"usize"],[4,"Option"],[3,"Memchr2"],[3,"Memchr3"],[3,"Memchr"],[3,"Rev"],[4,"Result"],[3,"TypeId"],[3,"Finder"],[3,"FinderRev"],[3,"FinderBuilder"],[4,"Prefilter"],[3,"FindIter"],[3,"Formatter"],[6,"Result"],[3,"FindRevIter"],[8,"AsRef"]]},\
"num_enum":{"doc":"See https://docs.rs/num_enum for more info about this …","t":[24,8,24,24,18,16,16,8,24,3,24,11,11,11,11,11,11,11,10,11,12,11,10,11,11],"n":["Default","FromPrimitive","FromPrimitive","IntoPrimitive","NAME","Primitive","Primitive","TryFromPrimitive","TryFromPrimitive","TryFromPrimitiveError","UnsafeFromPrimitive","borrow","borrow_mut","clone","eq","fmt","fmt","from","from_primitive","into","number","try_from","try_from_primitive","try_into","type_id"],"q":["num_enum","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Implements <code>core::default::Default</code> for a …","","Implements <code>From&lt;Primitive&gt;</code> for a <code>#[repr(Primitive)] enum</code>.","Implements <code>Into&lt;Primitive&gt;</code> for a <code>#[repr(Primitive)] enum</code>.","","","","","Implements <code>TryFrom&lt;Primitive&gt;</code> for a <code>#[repr(Primitive)] enum</code>…","","Generates a …","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,0,0,0,1,8,1,0,0,0,0,2,2,2,2,2,2,2,8,2,2,2,1,2,2],"f":[0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[[2,[1]]],[[2,[1]]]],[[[2,[1]],[2,[1]]],3],[[[2,[1]],4],5],[[[2,[1]],4],5],[[]],[[]],[[]],0,[[],6],[[],[[6,[2]]]],[[],6],[[],7]],"p":[[8,"TryFromPrimitive"],[3,"TryFromPrimitiveError"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"],[8,"FromPrimitive"]]},\
"object":{"doc":"<code>object</code>","tn":["AArch64Call","Aarch64","Aarch64_Ilp32","Absolute","AddressSize","Any","Architecture","Arm","Avr","BinaryFormat","Bpf","Coff","Coff","Coff","Coff","Coff","CoffSection","ComdatKind","Common","Compilation","Data","Data","Debug","Dynamic","Elf","Elf","Elf","Elf","Elf","Elf","Elf","ExactMatch","File","FileFlags","Generic","Got","GotBaseOffset","GotBaseRelative","GotRelative","Hexagon","I386","ImageOffset","Label","Largest","Linkage","Linker","LoongArch64","LoongArchBranch","MachO","MachO","MachO","MachO","MachO","MachO","Metadata","Mips","Mips64","Msp430","Newest","NoDuplicates","None","None","None","None","Note","Null","Other","OtherString","Pe","PltRelative","PowerPc","PowerPc64","ReadOnlyData","ReadOnlyDataWithRel","ReadOnlyString","Relative","RelocationEncoding","RelocationKind","Riscv32","Riscv64","S390x","S390xDbl","SameSize","Sbf","Section","SectionFlags","SectionIndex","SectionKind","SectionOffset","SegmentFlags","Sparc64","SymbolFlags","SymbolKind","SymbolScope","Text","Text","Tls","Tls","TlsVariables","U16","U32","U64","U8","UninitializedData","UninitializedTls","Unknown","Unknown","Unknown","Unknown","Unknown","Wasm","Wasm32","X86Branch","X86RipRelative","X86RipRelativeMovq","X86Signed","X86_64","X86_64_X32","Xcoff","Xcoff","Xcoff","Xcoff","Xtensa","address_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","elf","endian","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","is_bss","pod","read","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","abi_version","characteristics","e_flags","f_flags","flags","os_abi","relative","value","characteristics","flags","s_flags","sh_flags","characteristics","flags","initprot","maxprot","p_flags","associative_section","n_desc","selection","st_info","st_other","CompressionHeader32","CompressionHeader64","DF_1_CONFALT","DF_1_DIRECT","DF_1_DISPRELDNE","DF_1_DISPRELPND","DF_1_EDITED","DF_1_ENDFILTEE","DF_1_GLOBAL","DF_1_GLOBAUDIT","DF_1_GROUP","DF_1_IGNMULDEF","DF_1_INITFIRST","DF_1_INTERPOSE","DF_1_LOADFLTR","DF_1_NODEFLIB","DF_1_NODELETE","DF_1_NODIRECT","DF_1_NODUMP","DF_1_NOHDR","DF_1_NOKSYMS","DF_1_NOOPEN","DF_1_NORELOC","DF_1_NOW","DF_1_ORIGIN","DF_1_PIE","DF_1_SINGLETON","DF_1_STUB","DF_1_SYMINTPOSE","DF_1_TRANS","DF_BIND_NOW","DF_ORIGIN","DF_STATIC_TLS","DF_SYMBOLIC","DF_TEXTREL","DT_ADDRRNGHI","DT_ADDRRNGLO","DT_ALPHA_PLTRO","DT_AUDIT","DT_AUXILIARY","DT_BIND_NOW","DT_CHECKSUM","DT_CONFIG","DT_DEBUG","DT_DEPAUDIT","DT_ENCODING","DT_FEATURE_1","DT_FILTER","DT_FINI","DT_FINI_ARRAY","DT_FINI_ARRAYSZ","DT_FLAGS","DT_FLAGS_1","DT_GNU_CONFLICT","DT_GNU_CONFLICTSZ","DT_GNU_HASH","DT_GNU_LIBLIST","DT_GNU_LIBLISTSZ","DT_GNU_PRELINKED","DT_HASH","DT_HIOS","DT_HIPROC","DT_IA_64_PLT_RESERVE","DT_INIT","DT_INIT_ARRAY","DT_INIT_ARRAYSZ","DT_JMPREL","DT_LOOS","DT_LOPROC","DT_MIPS_AUX_DYNAMIC","DT_MIPS_BASE_ADDRESS","DT_MIPS_COMPACT_SIZE","DT_MIPS_CONFLICT","DT_MIPS_CONFLICTNO","DT_MIPS_CXX_FLAGS","DT_MIPS_DELTA_CLASS","DT_MIPS_DELTA_CLASSSYM","DT_MIPS_DELTA_CLASSSYM_NO","DT_MIPS_DELTA_CLASS_NO","DT_MIPS_DELTA_INSTANCE","DT_MIPS_DELTA_INSTANCE_NO","DT_MIPS_DELTA_RELOC","DT_MIPS_DELTA_RELOC_NO","DT_MIPS_DELTA_SYM","DT_MIPS_DELTA_SYM_NO","DT_MIPS_DYNSTR_ALIGN","DT_MIPS_FLAGS","DT_MIPS_GOTSYM","DT_MIPS_GP_VALUE","DT_MIPS_HIDDEN_GOTIDX","DT_MIPS_HIPAGENO","DT_MIPS_ICHECKSUM","DT_MIPS_INTERFACE","DT_MIPS_INTERFACE_SIZE","DT_MIPS_IVERSION","DT_MIPS_LIBLIST","DT_MIPS_LIBLISTNO","DT_MIPS_LOCALPAGE_GOTIDX","DT_MIPS_LOCAL_GOTIDX","DT_MIPS_LOCAL_GOTNO","DT_MIPS_MSYM","DT_MIPS_OPTIONS","DT_MIPS_PERF_SUFFIX","DT_MIPS_PIXIE_INIT","DT_MIPS_PLTGOT","DT_MIPS_PROTECTED_GOTIDX","DT_MIPS_RLD_MAP","DT_MIPS_RLD_MAP_REL","DT_MIPS_RLD_TEXT_RESOLVE_ADDR","DT_MIPS_RLD_VERSION","DT_MIPS_RWPLT","DT_MIPS_SYMBOL_LIB","DT_MIPS_SYMTABNO","DT_MIPS_TIME_STAMP","DT_MIPS_UNREFEXTNO","DT_MOVEENT","DT_MOVESZ","DT_MOVETAB","DT_NEEDED","DT_NIOS2_GP","DT_NULL","DT_PLTGOT","DT_PLTPAD","DT_PLTPADSZ","DT_PLTREL","DT_PLTRELSZ","DT_POSFLAG_1","DT_PPC64_GLINK","DT_PPC64_OPD","DT_PPC64_OPDSZ","DT_PPC64_OPT","DT_PPC_GOT","DT_PPC_OPT","DT_PREINIT_ARRAY","DT_PREINIT_ARRAYSZ","DT_REL","DT_RELA","DT_RELACOUNT","DT_RELAENT","DT_RELASZ","DT_RELCOUNT","DT_RELENT","DT_RELSZ","DT_RPATH","DT_RUNPATH","DT_SONAME","DT_SPARC_REGISTER","DT_STRSZ","DT_STRTAB","DT_SYMBOLIC","DT_SYMENT","DT_SYMINENT","DT_SYMINFO","DT_SYMINSZ","DT_SYMTAB","DT_SYMTAB_SHNDX","DT_TEXTREL","DT_TLSDESC_GOT","DT_TLSDESC_PLT","DT_VALRNGHI","DT_VALRNGLO","DT_VERDEF","DT_VERDEFNUM","DT_VERNEED","DT_VERNEEDNUM","DT_VERSYM","Dyn32","Dyn64","EFA_PARISC_1_0","EFA_PARISC_1_1","EFA_PARISC_2_0","EF_ALPHA_32BIT","EF_ALPHA_CANRELAX","EF_ARM_ABI_FLOAT_HARD","EF_ARM_ABI_FLOAT_SOFT","EF_ARM_ALIGN8","EF_ARM_APCS_26","EF_ARM_APCS_FLOAT","EF_ARM_BE8","EF_ARM_DYNSYMSUSESEGIDX","EF_ARM_EABIMASK","EF_ARM_EABI_UNKNOWN","EF_ARM_EABI_VER1","EF_ARM_EABI_VER2","EF_ARM_EABI_VER3","EF_ARM_EABI_VER4","EF_ARM_EABI_VER5","EF_ARM_HASENTRY","EF_ARM_INTERWORK","EF_ARM_LE8","EF_ARM_MAPSYMSFIRST","EF_ARM_MAVERICK_FLOAT","EF_ARM_NEW_ABI","EF_ARM_OLD_ABI","EF_ARM_PIC","EF_ARM_RELEXEC","EF_ARM_SOFT_FLOAT","EF_ARM_SYMSARESORTED","EF_ARM_VFP_FLOAT","EF_AVR_ARCH","EF_AVR_ARCH_AVR1","EF_AVR_ARCH_AVR2","EF_AVR_ARCH_AVR25","EF_AVR_ARCH_AVR3","EF_AVR_ARCH_AVR31","EF_AVR_ARCH_AVR35","EF_AVR_ARCH_AVR4","EF_AVR_ARCH_AVR5","EF_AVR_ARCH_AVR51","EF_AVR_ARCH_AVR6","EF_AVR_ARCH_AVRTINY","EF_AVR_ARCH_XMEGA1","EF_AVR_ARCH_XMEGA2","EF_AVR_ARCH_XMEGA3","EF_AVR_ARCH_XMEGA4","EF_AVR_ARCH_XMEGA5","EF_AVR_ARCH_XMEGA6","EF_AVR_ARCH_XMEGA7","EF_AVR_LINKRELAX_PREPARED","EF_CSKY_ABIMASK","EF_CSKY_ABIV1","EF_CSKY_ABIV2","EF_CSKY_OTHER","EF_CSKY_PROCESSOR","EF_IA_64_ABI64","EF_IA_64_ARCH","EF_IA_64_MASKOS","EF_LARCH_ABI_DOUBLE_FLOAT","EF_LARCH_ABI_MODIFIER_MASK","EF_LARCH_ABI_SINGLE_FLOAT","EF_LARCH_ABI_SOFT_FLOAT","EF_LARCH_OBJABI_V1","EF_MIPS_64BIT_WHIRL","EF_MIPS_ABI","EF_MIPS_ABI2","EF_MIPS_ABI_EABI32","EF_MIPS_ABI_EABI64","EF_MIPS_ABI_O32","EF_MIPS_ABI_O64","EF_MIPS_ABI_ON32","EF_MIPS_ARCH","EF_MIPS_ARCH_1","EF_MIPS_ARCH_2","EF_MIPS_ARCH_3","EF_MIPS_ARCH_32","EF_MIPS_ARCH_32R2","EF_MIPS_ARCH_32R6","EF_MIPS_ARCH_4","EF_MIPS_ARCH_5","EF_MIPS_ARCH_64","EF_MIPS_ARCH_64R2","EF_MIPS_ARCH_64R6","EF_MIPS_CPIC","EF_MIPS_FP64","EF_MIPS_NAN2008","EF_MIPS_NOREORDER","EF_MIPS_PIC","EF_MIPS_XGOT","EF_PARISC_ARCH","EF_PARISC_EXT","EF_PARISC_LAZYSWAP","EF_PARISC_LSB","EF_PARISC_NO_KABP","EF_PARISC_TRAPNIL","EF_PARISC_WIDE","EF_PPC64_ABI","EF_PPC_EMB","EF_PPC_RELOCATABLE","EF_PPC_RELOCATABLE_LIB","EF_RISCV_FLOAT_ABI","EF_RISCV_FLOAT_ABI_DOUBLE","EF_RISCV_FLOAT_ABI_QUAD","EF_RISCV_FLOAT_ABI_SINGLE","EF_RISCV_FLOAT_ABI_SOFT","EF_RISCV_RVC","EF_S390_HIGH_GPRS","EF_SH1","EF_SH2","EF_SH2A","EF_SH2A_NOFPU","EF_SH2A_SH3E","EF_SH2A_SH3_NOFPU","EF_SH2A_SH4","EF_SH2A_SH4_NOFPU","EF_SH2E","EF_SH3","EF_SH3E","EF_SH3_DSP","EF_SH3_NOMMU","EF_SH4","EF_SH4A","EF_SH4AL_DSP","EF_SH4A_NOFPU","EF_SH4_NOFPU","EF_SH4_NOMMU_NOFPU","EF_SH_DSP","EF_SH_MACH_MASK","EF_SH_UNKNOWN","EF_SPARCV9_MM","EF_SPARCV9_PSO","EF_SPARCV9_RMO","EF_SPARCV9_TSO","EF_SPARC_32PLUS","EF_SPARC_EXT_MASK","EF_SPARC_HAL_R1","EF_SPARC_LEDATA","EF_SPARC_SUN_US1","EF_SPARC_SUN_US3","ELFCLASS32","ELFCLASS64","ELFCLASSNONE","ELFCOMPRESS_HIOS","ELFCOMPRESS_HIPROC","ELFCOMPRESS_LOOS","ELFCOMPRESS_LOPROC","ELFCOMPRESS_ZLIB","ELFDATA2LSB","ELFDATA2MSB","ELFDATANONE","ELFMAG","ELFOSABI_AIX","ELFOSABI_ARM","ELFOSABI_ARM_AEABI","ELFOSABI_AROS","ELFOSABI_CLOUDABI","ELFOSABI_FENIXOS","ELFOSABI_FREEBSD","ELFOSABI_GNU","ELFOSABI_HPUX","ELFOSABI_HURD","ELFOSABI_IRIX","ELFOSABI_LINUX","ELFOSABI_MODESTO","ELFOSABI_NETBSD","ELFOSABI_NONE","ELFOSABI_NSK","ELFOSABI_OPENBSD","ELFOSABI_OPENVMS","ELFOSABI_SOLARIS","ELFOSABI_STANDALONE","ELFOSABI_SYSV","ELFOSABI_TRU64","ELF_NOTE_CORE","ELF_NOTE_GNU","ELF_NOTE_LINUX","ELF_NOTE_OS_FREEBSD","ELF_NOTE_OS_GNU","ELF_NOTE_OS_LINUX","ELF_NOTE_OS_SOLARIS2","ELF_NOTE_SOLARIS","EM_386","EM_56800EX","EM_68HC05","EM_68HC08","EM_68HC11","EM_68HC12","EM_68HC16","EM_68K","EM_78KOR","EM_8051","EM_860","EM_88K","EM_960","EM_AARCH64","EM_ALPHA","EM_ALTERA_NIOS2","EM_AMDGPU","EM_ARC","EM_ARCA","EM_ARC_COMPACT","EM_ARC_COMPACT2","EM_ARM","EM_AVR","EM_AVR32","EM_BA1","EM_BA2","EM_BLACKFIN","EM_BPF","EM_C166","EM_CDP","EM_CE","EM_CLOUDSHIELD","EM_COGE","EM_COLDFIRE","EM_COOL","EM_COREA_1ST","EM_COREA_2ND","EM_CR","EM_CR16","EM_CRAYNV2","EM_CRIS","EM_CRX","EM_CSKY","EM_CSR_KALIMBA","EM_CUDA","EM_CYPRESS_M8C","EM_D10V","EM_D30V","EM_DSP24","EM_DSPIC30F","EM_DXP","EM_ECOG16","EM_ECOG1X","EM_ECOG2","EM_EMX16","EM_EMX8","EM_ETPU","EM_EXCESS","EM_F2MC16","EM_FAKE_ALPHA","EM_FIREPATH","EM_FR20","EM_FR30","EM_FT32","EM_FX66","EM_H8S","EM_H8_300","EM_H8_300H","EM_H8_500","EM_HEXAGON","EM_HUANY","EM_IAMCU","EM_IA_64","EM_IP2K","EM_JAVELIN","EM_K10M","EM_KM32","EM_KMX32","EM_KVARC","EM_L10M","EM_LATTICEMICO32","EM_LOONGARCH","EM_M16C","EM_M32","EM_M32C","EM_M32R","EM_MANIK","EM_MAX","EM_MAXQ30","EM_MCHP_PIC","EM_MCST_ELBRUS","EM_ME16","EM_METAG","EM_MICROBLAZE","EM_MIPS","EM_MIPS_RS3_LE","EM_MIPS_X","EM_MMA","EM_MMDSP_PLUS","EM_MMIX","EM_MN10200","EM_MN10300","EM_MOXIE","EM_MSP430","EM_NCPU","EM_NDR1","EM_NDS32","EM_NONE","EM_NORC","EM_NS32K","EM_OPEN8","EM_OPENRISC","EM_PARISC","EM_PCP","EM_PDP10","EM_PDP11","EM_PDSP","EM_PJ","EM_PPC","EM_PPC64","EM_PRISM","EM_R32C","EM_RCE","EM_RH32","EM_RISCV","EM_RL78","EM_RS08","EM_RX","EM_S370","EM_S390","EM_SBF","EM_SCORE7","EM_SEP","EM_SE_C17","EM_SE_C33","EM_SH","EM_SHARC","EM_SLE9X","EM_SNP1K","EM_SPARC","EM_SPARC32PLUS","EM_SPARCV9","EM_SPU","EM_ST100","EM_ST19","EM_ST200","EM_ST7","EM_ST9PLUS","EM_STARCORE","EM_STM8","EM_STXP7X","EM_SVX","EM_TILE64","EM_TILEGX","EM_TILEPRO","EM_TINYJ","EM_TI_ARP32","EM_TI_C2000","EM_TI_C5500","EM_TI_C6000","EM_TI_PRU","EM_TMM_GPP","EM_TPC","EM_TRICORE","EM_TRIMEDIA","EM_TSK3000","EM_UNICORE","EM_V800","EM_V850","EM_VAX","EM_VIDEOCORE","EM_VIDEOCORE3","EM_VIDEOCORE5","EM_VISIUM","EM_VPP500","EM_X86_64","EM_XCORE","EM_XGATE","EM_XIMO16","EM_XTENSA","EM_Z80","EM_ZSP","ET_CORE","ET_DYN","ET_EXEC","ET_HIOS","ET_HIPROC","ET_LOOS","ET_LOPROC","ET_NONE","ET_REL","EV_CURRENT","EV_NONE","FileHeader32","FileHeader64","GRP_COMDAT","GnuHashHeader","HashHeader","Ident","LITUSE_ALPHA_ADDR","LITUSE_ALPHA_BASE","LITUSE_ALPHA_BYTOFF","LITUSE_ALPHA_JSR","LITUSE_ALPHA_TLS_GD","LITUSE_ALPHA_TLS_LDM","LL_DELAY_LOAD","LL_DELTA","LL_EXACT_MATCH","LL_EXPORTS","LL_IGNORE_INT_VER","LL_NONE","LL_REQUIRE_MINOR","NT_386_IOPERM","NT_386_TLS","NT_ARM_HW_BREAK","NT_ARM_HW_WATCH","NT_ARM_SVE","NT_ARM_SYSTEM_CALL","NT_ARM_TLS","NT_ARM_VFP","NT_ASRS","NT_AUXV","NT_FILE","NT_FPREGSET","NT_GNU_ABI_TAG","NT_GNU_BUILD_ID","NT_GNU_GOLD_VERSION","NT_GNU_HWCAP","NT_GNU_PROPERTY_TYPE_0","NT_GWINDOWS","NT_LWPSINFO","NT_LWPSTATUS","NT_MIPS_DSP","NT_MIPS_FP_MODE","NT_PLATFORM","NT_PPC_DSCR","NT_PPC_EBB","NT_PPC_PKEY","NT_PPC_PMU","NT_PPC_PPR","NT_PPC_SPE","NT_PPC_TAR","NT_PPC_TM_CDSCR","NT_PPC_TM_CFPR","NT_PPC_TM_CGPR","NT_PPC_TM_CPPR","NT_PPC_TM_CTAR","NT_PPC_TM_CVMX","NT_PPC_TM_CVSX","NT_PPC_TM_SPR","NT_PPC_VMX","NT_PPC_VSX","NT_PRCRED","NT_PRFPREG","NT_PRFPXREG","NT_PRPSINFO","NT_PRSTATUS","NT_PRXFPREG","NT_PRXREG","NT_PSINFO","NT_PSTATUS","NT_S390_CTRS","NT_S390_GS_BC","NT_S390_GS_CB","NT_S390_HIGH_GPRS","NT_S390_LAST_BREAK","NT_S390_PREFIX","NT_S390_RI_CB","NT_S390_SYSTEM_CALL","NT_S390_TDB","NT_S390_TIMER","NT_S390_TODCMP","NT_S390_TODPREG","NT_S390_VXRS_HIGH","NT_S390_VXRS_LOW","NT_SIGINFO","NT_SOLARIS_PAGESIZE_HINT","NT_TASKSTRUCT","NT_UTSNAME","NT_VERSION","NT_VMCOREDD","NT_X86_XSTATE","NoteHeader32","NoteHeader64","ODK_EXCEPTIONS","ODK_FILL","ODK_HWAND","ODK_HWOR","ODK_HWPATCH","ODK_NULL","ODK_PAD","ODK_REGINFO","ODK_TAGS","OEX_DISMISS","OEX_FPDBUG","OEX_FPU_DIV0","OEX_FPU_INEX","OEX_FPU_INVAL","OEX_FPU_MAX","OEX_FPU_MIN","OEX_FPU_OFLO","OEX_FPU_UFLO","OEX_PAGE0","OEX_PRECISEFP","OEX_SMM","OHWA0_R4KEOP_CHECKED","OHWA1_R4KEOP_CLEAN","OHW_R4KEOP","OHW_R5KCVTL","OHW_R5KEOP","OHW_R8KPFETCH","OPAD_POSTFIX","OPAD_PREFIX","OPAD_SYMBOL","PF_ARM_ABS","PF_ARM_PI","PF_ARM_SB","PF_HP_CODE","PF_HP_FAR_SHARED","PF_HP_LAZYSWAP","PF_HP_MODIFY","PF_HP_NEAR_SHARED","PF_HP_PAGE_SIZE","PF_HP_SBP","PF_IA_64_NORECOV","PF_MASKOS","PF_MASKPROC","PF_MIPS_LOCAL","PF_PARISC_SBP","PF_R","PF_W","PF_X","PN_XNUM","PPC64_OPT_LOCALENTRY","PPC64_OPT_MULTI_TOC","PPC64_OPT_TLS","PPC_OPT_TLS","PT_ARM_EXIDX","PT_DYNAMIC","PT_GNU_EH_FRAME","PT_GNU_RELRO","PT_GNU_STACK","PT_HIOS","PT_HIPROC","PT_HP_CORE_COMM","PT_HP_CORE_KERNEL","PT_HP_CORE_LOADABLE","PT_HP_CORE_MMF","PT_HP_CORE_NONE","PT_HP_CORE_PROC","PT_HP_CORE_SHM","PT_HP_CORE_STACK","PT_HP_CORE_VERSION","PT_HP_FASTBIND","PT_HP_HSL_ANNOT","PT_HP_OPT_ANNOT","PT_HP_PARALLEL","PT_HP_STACK","PT_HP_TLS","PT_IA_64_ARCHEXT","PT_IA_64_HP_HSL_ANOT","PT_IA_64_HP_OPT_ANOT","PT_IA_64_HP_STACK","PT_IA_64_UNWIND","PT_INTERP","PT_LOAD","PT_LOOS","PT_LOPROC","PT_MIPS_ABIFLAGS","PT_MIPS_OPTIONS","PT_MIPS_REGINFO","PT_MIPS_RTPROC","PT_NOTE","PT_NULL","PT_PARISC_ARCHEXT","PT_PARISC_UNWIND","PT_PHDR","PT_SHLIB","PT_TLS","ProgramHeader32","ProgramHeader64","RHF_CORD","RHF_DEFAULT_DELAY_LOAD","RHF_DELTA_C_PLUS_PLUS","RHF_GUARANTEE_INIT","RHF_GUARANTEE_START_INIT","RHF_NONE","RHF_NOTPOT","RHF_NO_LIBRARY_REPLACEMENT","RHF_NO_MOVE","RHF_NO_UNRES_UNDEF","RHF_PIXIE","RHF_QUICKSTART","RHF_REQUICKSTART","RHF_REQUICKSTARTED","RHF_RLD_ORDER_SAFE","RHF_SGI_ONLY","R_386_16","R_386_32","R_386_32PLT","R_386_8","R_386_COPY","R_386_GLOB_DAT","R_386_GOT32","R_386_GOT32X","R_386_GOTOFF","R_386_GOTPC","R_386_IRELATIVE","R_386_JMP_SLOT","R_386_NONE","R_386_PC16","R_386_PC32","R_386_PC8","R_386_PLT32","R_386_RELATIVE","R_386_SIZE32","R_386_TLS_DESC","R_386_TLS_DESC_CALL","R_386_TLS_DTPMOD32","R_386_TLS_DTPOFF32","R_386_TLS_GD","R_386_TLS_GD_32","R_386_TLS_GD_CALL","R_386_TLS_GD_POP","R_386_TLS_GD_PUSH","R_386_TLS_GOTDESC","R_386_TLS_GOTIE","R_386_TLS_IE","R_386_TLS_IE_32","R_386_TLS_LDM","R_386_TLS_LDM_32","R_386_TLS_LDM_CALL","R_386_TLS_LDM_POP","R_386_TLS_LDM_PUSH","R_386_TLS_LDO_32","R_386_TLS_LE","R_386_TLS_LE_32","R_386_TLS_TPOFF","R_386_TLS_TPOFF32","R_390_12","R_390_16","R_390_20","R_390_32","R_390_64","R_390_8","R_390_COPY","R_390_GLOB_DAT","R_390_GOT12","R_390_GOT16","R_390_GOT20","R_390_GOT32","R_390_GOT64","R_390_GOTENT","R_390_GOTOFF16","R_390_GOTOFF32","R_390_GOTOFF64","R_390_GOTPC","R_390_GOTPCDBL","R_390_GOTPLT12","R_390_GOTPLT16","R_390_GOTPLT20","R_390_GOTPLT32","R_390_GOTPLT64","R_390_GOTPLTENT","R_390_IRELATIVE","R_390_JMP_SLOT","R_390_NONE","R_390_PC16","R_390_PC16DBL","R_390_PC32","R_390_PC32DBL","R_390_PC64","R_390_PLT16DBL","R_390_PLT32","R_390_PLT32DBL","R_390_PLT64","R_390_PLTOFF16","R_390_PLTOFF32","R_390_PLTOFF64","R_390_RELATIVE","R_390_TLS_DTPMOD","R_390_TLS_DTPOFF","R_390_TLS_GD32","R_390_TLS_GD64","R_390_TLS_GDCALL","R_390_TLS_GOTIE12","R_390_TLS_GOTIE20","R_390_TLS_GOTIE32","R_390_TLS_GOTIE64","R_390_TLS_IE32","R_390_TLS_IE64","R_390_TLS_IEENT","R_390_TLS_LDCALL","R_390_TLS_LDM32","R_390_TLS_LDM64","R_390_TLS_LDO32","R_390_TLS_LDO64","R_390_TLS_LE32","R_390_TLS_LE64","R_390_TLS_LOAD","R_390_TLS_TPOFF","R_68K_16","R_68K_32","R_68K_8","R_68K_COPY","R_68K_GLOB_DAT","R_68K_GOT16","R_68K_GOT16O","R_68K_GOT32","R_68K_GOT32O","R_68K_GOT8","R_68K_GOT8O","R_68K_JMP_SLOT","R_68K_NONE","R_68K_PC16","R_68K_PC32","R_68K_PC8","R_68K_PLT16","R_68K_PLT16O","R_68K_PLT32","R_68K_PLT32O","R_68K_PLT8","R_68K_PLT8O","R_68K_RELATIVE","R_68K_TLS_DTPMOD32","R_68K_TLS_DTPREL32","R_68K_TLS_GD16","R_68K_TLS_GD32","R_68K_TLS_GD8","R_68K_TLS_IE16","R_68K_TLS_IE32","R_68K_TLS_IE8","R_68K_TLS_LDM16","R_68K_TLS_LDM32","R_68K_TLS_LDM8","R_68K_TLS_LDO16","R_68K_TLS_LDO32","R_68K_TLS_LDO8","R_68K_TLS_LE16","R_68K_TLS_LE32","R_68K_TLS_LE8","R_68K_TLS_TPREL32","R_AARCH64_ABS16","R_AARCH64_ABS32","R_AARCH64_ABS64","R_AARCH64_ADD_ABS_LO12_NC","R_AARCH64_ADR_GOT_PAGE","R_AARCH64_ADR_PREL_LO21","R_AARCH64_ADR_PREL_PG_HI21","R_AARCH64_ADR_PREL_PG_HI21_NC","R_AARCH64_CALL26","R_AARCH64_CONDBR19","R_AARCH64_COPY","R_AARCH64_GLOB_DAT","R_AARCH64_GOTREL32","R_AARCH64_GOTREL64","R_AARCH64_GOT_LD_PREL19","R_AARCH64_IRELATIVE","R_AARCH64_JUMP26","R_AARCH64_JUMP_SLOT","R_AARCH64_LD64_GOTOFF_LO15","R_AARCH64_LD64_GOTPAGE_LO15","R_AARCH64_LD64_GOT_LO12_NC","R_AARCH64_LDST128_ABS_LO12_NC","R_AARCH64_LDST16_ABS_LO12_NC","R_AARCH64_LDST32_ABS_LO12_NC","R_AARCH64_LDST64_ABS_LO12_NC","R_AARCH64_LDST8_ABS_LO12_NC","R_AARCH64_LD_PREL_LO19","R_AARCH64_MOVW_GOTOFF_G0","R_AARCH64_MOVW_GOTOFF_G0_NC","R_AARCH64_MOVW_GOTOFF_G1","R_AARCH64_MOVW_GOTOFF_G1_NC","R_AARCH64_MOVW_GOTOFF_G2","R_AARCH64_MOVW_GOTOFF_G2_NC","R_AARCH64_MOVW_GOTOFF_G3","R_AARCH64_MOVW_PREL_G0","R_AARCH64_MOVW_PREL_G0_NC","R_AARCH64_MOVW_PREL_G1","R_AARCH64_MOVW_PREL_G1_NC","R_AARCH64_MOVW_PREL_G2","R_AARCH64_MOVW_PREL_G2_NC","R_AARCH64_MOVW_PREL_G3","R_AARCH64_MOVW_SABS_G0","R_AARCH64_MOVW_SABS_G1","R_AARCH64_MOVW_SABS_G2","R_AARCH64_MOVW_UABS_G0","R_AARCH64_MOVW_UABS_G0_NC","R_AARCH64_MOVW_UABS_G1","R_AARCH64_MOVW_UABS_G1_NC","R_AARCH64_MOVW_UABS_G2","R_AARCH64_MOVW_UABS_G2_NC","R_AARCH64_MOVW_UABS_G3","R_AARCH64_NONE","R_AARCH64_P32_ABS32","R_AARCH64_P32_COPY","R_AARCH64_P32_GLOB_DAT","R_AARCH64_P32_IRELATIVE","R_AARCH64_P32_JUMP_SLOT","R_AARCH64_P32_RELATIVE","R_AARCH64_P32_TLSDESC","R_AARCH64_P32_TLS_DTPMOD","R_AARCH64_P32_TLS_DTPREL","R_AARCH64_P32_TLS_TPREL","R_AARCH64_PREL16","R_AARCH64_PREL32","R_AARCH64_PREL64","R_AARCH64_RELATIVE","R_AARCH64_TLSDESC","R_AARCH64_TLSDESC_ADD","R_AARCH64_TLSDESC_ADD_LO12","R_AARCH64_TLSDESC_ADR_PAGE21","R_AARCH64_TLSDESC_ADR_PREL21","R_AARCH64_TLSDESC_CALL","R_AARCH64_TLSDESC_LD64_LO12","R_AARCH64_TLSDESC_LDR","R_AARCH64_TLSDESC_LD_PREL19","R_AARCH64_TLSDESC_OFF_G0_NC","R_AARCH64_TLSDESC_OFF_G1","R_AARCH64_TLSGD_ADD_LO12_NC","R_AARCH64_TLSGD_ADR_PAGE21","R_AARCH64_TLSGD_ADR_PREL21","R_AARCH64_TLSGD_MOVW_G0_NC","R_AARCH64_TLSGD_MOVW_G1","R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21","R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC","R_AARCH64_TLSIE_LD_GOTTPREL_PREL19","R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC","R_AARCH64_TLSIE_MOVW_GOTTPREL_G1","R_AARCH64_TLSLD_ADD_DTPREL_HI12","R_AARCH64_TLSLD_ADD_DTPREL_LO12","R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC","R_AARCH64_TLSLD_ADD_LO12_NC","R_AARCH64_TLSLD_ADR_PAGE21","R_AARCH64_TLSLD_ADR_PREL21","R_AARCH64_TLSLD_LDST128_DTPREL_LO12","R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC","R_AARCH64_TLSLD_LDST16_DTPREL_LO12","R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC","R_AARCH64_TLSLD_LDST32_DTPREL_LO12","R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC","R_AARCH64_TLSLD_LDST64_DTPREL_LO12","R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC","R_AARCH64_TLSLD_LDST8_DTPREL_LO12","R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC","R_AARCH64_TLSLD_LD_PREL19","R_AARCH64_TLSLD_MOVW_DTPREL_G0","R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC","R_AARCH64_TLSLD_MOVW_DTPREL_G1","R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC","R_AARCH64_TLSLD_MOVW_DTPREL_G2","R_AARCH64_TLSLD_MOVW_G0_NC","R_AARCH64_TLSLD_MOVW_G1","R_AARCH64_TLSLE_ADD_TPREL_HI12","R_AARCH64_TLSLE_ADD_TPREL_LO12","R_AARCH64_TLSLE_ADD_TPREL_LO12_NC","R_AARCH64_TLSLE_LDST128_TPREL_LO12","R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC","R_AARCH64_TLSLE_LDST16_TPREL_LO12","R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC","R_AARCH64_TLSLE_LDST32_TPREL_LO12","R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC","R_AARCH64_TLSLE_LDST64_TPREL_LO12","R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC","R_AARCH64_TLSLE_LDST8_TPREL_LO12","R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC","R_AARCH64_TLSLE_MOVW_TPREL_G0","R_AARCH64_TLSLE_MOVW_TPREL_G0_NC","R_AARCH64_TLSLE_MOVW_TPREL_G1","R_AARCH64_TLSLE_MOVW_TPREL_G1_NC","R_AARCH64_TLSLE_MOVW_TPREL_G2","R_AARCH64_TLS_DTPMOD","R_AARCH64_TLS_DTPREL","R_AARCH64_TLS_TPREL","R_AARCH64_TSTBR14","R_ALPHA_BRADDR","R_ALPHA_COPY","R_ALPHA_DTPMOD64","R_ALPHA_DTPREL16","R_ALPHA_DTPREL64","R_ALPHA_DTPRELHI","R_ALPHA_DTPRELLO","R_ALPHA_GLOB_DAT","R_ALPHA_GOTDTPREL","R_ALPHA_GOTTPREL","R_ALPHA_GPDISP","R_ALPHA_GPREL16","R_ALPHA_GPREL32","R_ALPHA_GPRELHIGH","R_ALPHA_GPRELLOW","R_ALPHA_HINT","R_ALPHA_JMP_SLOT","R_ALPHA_LITERAL","R_ALPHA_LITUSE","R_ALPHA_NONE","R_ALPHA_REFLONG","R_ALPHA_REFQUAD","R_ALPHA_RELATIVE","R_ALPHA_SREL16","R_ALPHA_SREL32","R_ALPHA_SREL64","R_ALPHA_TLSGD","R_ALPHA_TLS_GD_HI","R_ALPHA_TLS_LDM","R_ALPHA_TPREL16","R_ALPHA_TPREL64","R_ALPHA_TPRELHI","R_ALPHA_TPRELLO","R_ARM_ABS12","R_ARM_ABS16","R_ARM_ABS32","R_ARM_ABS32_NOI","R_ARM_ABS8","R_ARM_ALU_PCREL_15_8","R_ARM_ALU_PCREL_23_15","R_ARM_ALU_PCREL_7_0","R_ARM_ALU_PC_G0","R_ARM_ALU_PC_G0_NC","R_ARM_ALU_PC_G1","R_ARM_ALU_PC_G1_NC","R_ARM_ALU_PC_G2","R_ARM_ALU_SBREL_19_12","R_ARM_ALU_SBREL_27_20","R_ARM_ALU_SB_G0","R_ARM_ALU_SB_G0_NC","R_ARM_ALU_SB_G1","R_ARM_ALU_SB_G1_NC","R_ARM_ALU_SB_G2","R_ARM_AMP_VCALL9","R_ARM_BASE_ABS","R_ARM_CALL","R_ARM_COPY","R_ARM_GLOB_DAT","R_ARM_GNU_VTENTRY","R_ARM_GNU_VTINHERIT","R_ARM_GOT32","R_ARM_GOTOFF","R_ARM_GOTOFF12","R_ARM_GOTPC","R_ARM_GOTRELAX","R_ARM_GOT_ABS","R_ARM_GOT_BREL12","R_ARM_GOT_PREL","R_ARM_IRELATIVE","R_ARM_JUMP24","R_ARM_JUMP_SLOT","R_ARM_LDC_PC_G0","R_ARM_LDC_PC_G1","R_ARM_LDC_PC_G2","R_ARM_LDC_SB_G0","R_ARM_LDC_SB_G1","R_ARM_LDC_SB_G2","R_ARM_LDRS_PC_G0","R_ARM_LDRS_PC_G1","R_ARM_LDRS_PC_G2","R_ARM_LDRS_SB_G0","R_ARM_LDRS_SB_G1","R_ARM_LDRS_SB_G2","R_ARM_LDR_PC_G1","R_ARM_LDR_PC_G2","R_ARM_LDR_SBREL_11_0","R_ARM_LDR_SB_G0","R_ARM_LDR_SB_G1","R_ARM_LDR_SB_G2","R_ARM_ME_TOO","R_ARM_MOVT_ABS","R_ARM_MOVT_BREL","R_ARM_MOVT_PREL","R_ARM_MOVW_ABS_NC","R_ARM_MOVW_BREL","R_ARM_MOVW_BREL_NC","R_ARM_MOVW_PREL_NC","R_ARM_NONE","R_ARM_PC13","R_ARM_PC24","R_ARM_PLT32","R_ARM_PLT32_ABS","R_ARM_PREL31","R_ARM_RABS22","R_ARM_RBASE","R_ARM_REL32","R_ARM_REL32_NOI","R_ARM_RELATIVE","R_ARM_RPC24","R_ARM_RREL32","R_ARM_RSBREL32","R_ARM_RXPC25","R_ARM_SBREL31","R_ARM_SBREL32","R_ARM_SWI24","R_ARM_TARGET1","R_ARM_TARGET2","R_ARM_THM_ABS5","R_ARM_THM_ALU_PREL_11_0","R_ARM_THM_GOT_BREL12","R_ARM_THM_JUMP19","R_ARM_THM_JUMP24","R_ARM_THM_JUMP6","R_ARM_THM_MOVT_ABS","R_ARM_THM_MOVT_BREL","R_ARM_THM_MOVT_PREL","R_ARM_THM_MOVW_ABS_NC","R_ARM_THM_MOVW_BREL","R_ARM_THM_MOVW_BREL_NC","R_ARM_THM_MOVW_PREL_NC","R_ARM_THM_PC11","R_ARM_THM_PC12","R_ARM_THM_PC22","R_ARM_THM_PC8","R_ARM_THM_PC9","R_ARM_THM_RPC22","R_ARM_THM_SWI8","R_ARM_THM_TLS_CALL","R_ARM_THM_TLS_DESCSEQ","R_ARM_THM_TLS_DESCSEQ16","R_ARM_THM_TLS_DESCSEQ32","R_ARM_THM_XPC22","R_ARM_TLS_CALL","R_ARM_TLS_DESC","R_ARM_TLS_DESCSEQ","R_ARM_TLS_DTPMOD32","R_ARM_TLS_DTPOFF32","R_ARM_TLS_GD32","R_ARM_TLS_GOTDESC","R_ARM_TLS_IE12GP","R_ARM_TLS_IE32","R_ARM_TLS_LDM32","R_ARM_TLS_LDO12","R_ARM_TLS_LDO32","R_ARM_TLS_LE12","R_ARM_TLS_LE32","R_ARM_TLS_TPOFF32","R_ARM_V4BX","R_ARM_XPC25","R_AVR_13_PCREL","R_AVR_16","R_AVR_16_PM","R_AVR_32","R_AVR_32_PCREL","R_AVR_6","R_AVR_6_ADIW","R_AVR_7_PCREL","R_AVR_8","R_AVR_8_HI8","R_AVR_8_HLO8","R_AVR_8_LO8","R_AVR_CALL","R_AVR_DIFF16","R_AVR_DIFF32","R_AVR_DIFF8","R_AVR_HH8_LDI","R_AVR_HH8_LDI_NEG","R_AVR_HH8_LDI_PM","R_AVR_HH8_LDI_PM_NEG","R_AVR_HI8_LDI","R_AVR_HI8_LDI_GS","R_AVR_HI8_LDI_NEG","R_AVR_HI8_LDI_PM","R_AVR_HI8_LDI_PM_NEG","R_AVR_LDI","R_AVR_LDS_STS_16","R_AVR_LO8_LDI","R_AVR_LO8_LDI_GS","R_AVR_LO8_LDI_NEG","R_AVR_LO8_LDI_PM","R_AVR_LO8_LDI_PM_NEG","R_AVR_MS8_LDI","R_AVR_MS8_LDI_NEG","R_AVR_NONE","R_AVR_PORT5","R_AVR_PORT6","R_BPF_64_32","R_BPF_64_64","R_BPF_NONE","R_CKCORE_ADDR32","R_CKCORE_ADDRGOT","R_CKCORE_ADDRGOT_HI16","R_CKCORE_ADDRGOT_LO16","R_CKCORE_ADDRPLT","R_CKCORE_ADDRPLT_HI16","R_CKCORE_ADDRPLT_LO16","R_CKCORE_ADDR_HI16","R_CKCORE_ADDR_LO16","R_CKCORE_COPY","R_CKCORE_DOFFSET_IMM18","R_CKCORE_DOFFSET_IMM18BY2","R_CKCORE_DOFFSET_IMM18BY4","R_CKCORE_DOFFSET_LO16","R_CKCORE_GLOB_DAT","R_CKCORE_GOT12","R_CKCORE_GOT32","R_CKCORE_GOTOFF","R_CKCORE_GOTOFF_HI16","R_CKCORE_GOTOFF_LO16","R_CKCORE_GOTPC","R_CKCORE_GOTPC_HI16","R_CKCORE_GOTPC_LO16","R_CKCORE_GOT_HI16","R_CKCORE_GOT_IMM18BY4","R_CKCORE_GOT_LO16","R_CKCORE_JUMP_SLOT","R_CKCORE_NONE","R_CKCORE_PCREL32","R_CKCORE_PCRELIMM11BY2","R_CKCORE_PCRELIMM8BY4","R_CKCORE_PCRELJSR_IMM11BY2","R_CKCORE_PCREL_IMM10BY2","R_CKCORE_PCREL_IMM10BY4","R_CKCORE_PCREL_IMM16BY2","R_CKCORE_PCREL_IMM16BY4","R_CKCORE_PCREL_IMM18BY2","R_CKCORE_PCREL_IMM26BY2","R_CKCORE_PCREL_IMM7BY4","R_CKCORE_PCREL_JSR_IMM26BY2","R_CKCORE_PLT12","R_CKCORE_PLT32","R_CKCORE_PLT_HI16","R_CKCORE_PLT_IMM18BY4","R_CKCORE_PLT_LO16","R_CKCORE_RELATIVE","R_CKCORE_TLS_DTPMOD32","R_CKCORE_TLS_DTPOFF32","R_CKCORE_TLS_GD32","R_CKCORE_TLS_IE32","R_CKCORE_TLS_LDM32","R_CKCORE_TLS_LDO32","R_CKCORE_TLS_LE32","R_CKCORE_TLS_TPOFF32","R_CKCORE_TOFFSET_LO16","R_CRIS_16","R_CRIS_16_GOT","R_CRIS_16_GOTPLT","R_CRIS_16_PCREL","R_CRIS_32","R_CRIS_32_GOT","R_CRIS_32_GOTPLT","R_CRIS_32_GOTREL","R_CRIS_32_PCREL","R_CRIS_32_PLT_GOTREL","R_CRIS_32_PLT_PCREL","R_CRIS_8","R_CRIS_8_PCREL","R_CRIS_COPY","R_CRIS_GLOB_DAT","R_CRIS_GNU_VTENTRY","R_CRIS_GNU_VTINHERIT","R_CRIS_JUMP_SLOT","R_CRIS_NONE","R_CRIS_RELATIVE","R_HEX_32","R_IA64_COPY","R_IA64_DIR32LSB","R_IA64_DIR32MSB","R_IA64_DIR64LSB","R_IA64_DIR64MSB","R_IA64_DTPMOD64LSB","R_IA64_DTPMOD64MSB","R_IA64_DTPREL14","R_IA64_DTPREL22","R_IA64_DTPREL32LSB","R_IA64_DTPREL32MSB","R_IA64_DTPREL64I","R_IA64_DTPREL64LSB","R_IA64_DTPREL64MSB","R_IA64_FPTR32LSB","R_IA64_FPTR32MSB","R_IA64_FPTR64I","R_IA64_FPTR64LSB","R_IA64_FPTR64MSB","R_IA64_GPREL22","R_IA64_GPREL32LSB","R_IA64_GPREL32MSB","R_IA64_GPREL64I","R_IA64_GPREL64LSB","R_IA64_GPREL64MSB","R_IA64_IMM14","R_IA64_IMM22","R_IA64_IMM64","R_IA64_IPLTLSB","R_IA64_IPLTMSB","R_IA64_LDXMOV","R_IA64_LTOFF22","R_IA64_LTOFF22X","R_IA64_LTOFF64I","R_IA64_LTOFF_DTPMOD22","R_IA64_LTOFF_DTPREL22","R_IA64_LTOFF_FPTR22","R_IA64_LTOFF_FPTR32LSB","R_IA64_LTOFF_FPTR32MSB","R_IA64_LTOFF_FPTR64I","R_IA64_LTOFF_FPTR64LSB","R_IA64_LTOFF_FPTR64MSB","R_IA64_LTOFF_TPREL22","R_IA64_LTV32LSB","R_IA64_LTV32MSB","R_IA64_LTV64LSB","R_IA64_LTV64MSB","R_IA64_NONE","R_IA64_PCREL21B","R_IA64_PCREL21BI","R_IA64_PCREL21F","R_IA64_PCREL21M","R_IA64_PCREL22","R_IA64_PCREL32LSB","R_IA64_PCREL32MSB","R_IA64_PCREL60B","R_IA64_PCREL64I","R_IA64_PCREL64LSB","R_IA64_PCREL64MSB","R_IA64_PLTOFF22","R_IA64_PLTOFF64I","R_IA64_PLTOFF64LSB","R_IA64_PLTOFF64MSB","R_IA64_REL32LSB","R_IA64_REL32MSB","R_IA64_REL64LSB","R_IA64_REL64MSB","R_IA64_SECREL32LSB","R_IA64_SECREL32MSB","R_IA64_SECREL64LSB","R_IA64_SECREL64MSB","R_IA64_SEGREL32LSB","R_IA64_SEGREL32MSB","R_IA64_SEGREL64LSB","R_IA64_SEGREL64MSB","R_IA64_SUB","R_IA64_TPREL14","R_IA64_TPREL22","R_IA64_TPREL64I","R_IA64_TPREL64LSB","R_IA64_TPREL64MSB","R_LARCH_32","R_LARCH_32_PCREL","R_LARCH_64","R_LARCH_ABS64_HI12","R_LARCH_ABS64_LO20","R_LARCH_ABS_HI20","R_LARCH_ABS_LO12","R_LARCH_ADD16","R_LARCH_ADD24","R_LARCH_ADD32","R_LARCH_ADD64","R_LARCH_ADD8","R_LARCH_B16","R_LARCH_B21","R_LARCH_B26","R_LARCH_COPY","R_LARCH_GNU_VTENTRY","R_LARCH_GNU_VTINHERIT","R_LARCH_GOT64_HI12","R_LARCH_GOT64_LO20","R_LARCH_GOT64_PC_HI12","R_LARCH_GOT64_PC_LO20","R_LARCH_GOT_HI20","R_LARCH_GOT_LO12","R_LARCH_GOT_PC_HI20","R_LARCH_GOT_PC_LO12","R_LARCH_IRELATIVE","R_LARCH_JUMP_SLOT","R_LARCH_MARK_LA","R_LARCH_MARK_PCREL","R_LARCH_NONE","R_LARCH_PCALA64_HI12","R_LARCH_PCALA64_LO20","R_LARCH_PCALA_HI20","R_LARCH_PCALA_LO12","R_LARCH_RELATIVE","R_LARCH_RELAX","R_LARCH_SOP_ADD","R_LARCH_SOP_AND","R_LARCH_SOP_ASSERT","R_LARCH_SOP_IF_ELSE","R_LARCH_SOP_NOT","R_LARCH_SOP_POP_32_S_0_10_10_16_S2","R_LARCH_SOP_POP_32_S_0_5_10_16_S2","R_LARCH_SOP_POP_32_S_10_12","R_LARCH_SOP_POP_32_S_10_16","R_LARCH_SOP_POP_32_S_10_16_S2","R_LARCH_SOP_POP_32_S_10_5","R_LARCH_SOP_POP_32_S_5_20","R_LARCH_SOP_POP_32_U","R_LARCH_SOP_POP_32_U_10_12","R_LARCH_SOP_PUSH_ABSOLUTE","R_LARCH_SOP_PUSH_DUP","R_LARCH_SOP_PUSH_GPREL","R_LARCH_SOP_PUSH_PCREL","R_LARCH_SOP_PUSH_PLT_PCREL","R_LARCH_SOP_PUSH_TLS_GD","R_LARCH_SOP_PUSH_TLS_GOT","R_LARCH_SOP_PUSH_TLS_TPREL","R_LARCH_SOP_SL","R_LARCH_SOP_SR","R_LARCH_SOP_SUB","R_LARCH_SUB16","R_LARCH_SUB24","R_LARCH_SUB32","R_LARCH_SUB64","R_LARCH_SUB8","R_LARCH_TLS_DTPMOD32","R_LARCH_TLS_DTPMOD64","R_LARCH_TLS_DTPREL32","R_LARCH_TLS_DTPREL64","R_LARCH_TLS_GD_HI20","R_LARCH_TLS_GD_PC_HI20","R_LARCH_TLS_IE64_HI12","R_LARCH_TLS_IE64_LO20","R_LARCH_TLS_IE64_PC_HI12","R_LARCH_TLS_IE64_PC_LO20","R_LARCH_TLS_IE_HI20","R_LARCH_TLS_IE_LO12","R_LARCH_TLS_IE_PC_HI20","R_LARCH_TLS_IE_PC_LO12","R_LARCH_TLS_LD_HI20","R_LARCH_TLS_LD_PC_HI20","R_LARCH_TLS_LE64_HI12","R_LARCH_TLS_LE64_LO20","R_LARCH_TLS_LE_HI20","R_LARCH_TLS_LE_LO12","R_LARCH_TLS_TPREL32","R_LARCH_TLS_TPREL64","R_M32R_10_PCREL","R_M32R_10_PCREL_RELA","R_M32R_16","R_M32R_16_RELA","R_M32R_18_PCREL","R_M32R_18_PCREL_RELA","R_M32R_24","R_M32R_24_RELA","R_M32R_26_PCREL","R_M32R_26_PCREL_RELA","R_M32R_26_PLTREL","R_M32R_32","R_M32R_32_RELA","R_M32R_COPY","R_M32R_GLOB_DAT","R_M32R_GNU_VTENTRY","R_M32R_GNU_VTINHERIT","R_M32R_GOT16_HI_SLO","R_M32R_GOT16_HI_ULO","R_M32R_GOT16_LO","R_M32R_GOT24","R_M32R_GOTOFF","R_M32R_GOTOFF_HI_SLO","R_M32R_GOTOFF_HI_ULO","R_M32R_GOTOFF_LO","R_M32R_GOTPC24","R_M32R_GOTPC_HI_SLO","R_M32R_GOTPC_HI_ULO","R_M32R_GOTPC_LO","R_M32R_HI16_SLO","R_M32R_HI16_SLO_RELA","R_M32R_HI16_ULO","R_M32R_HI16_ULO_RELA","R_M32R_JMP_SLOT","R_M32R_LO16","R_M32R_LO16_RELA","R_M32R_NONE","R_M32R_NUM","R_M32R_REL32","R_M32R_RELATIVE","R_M32R_RELA_GNU_VTENTRY","R_M32R_RELA_GNU_VTINHERIT","R_M32R_SDA16","R_M32R_SDA16_RELA","R_METAG_ADDR32","R_METAG_COPY","R_METAG_GETSETOFF","R_METAG_GETSET_GOT","R_METAG_GETSET_GOTOFF","R_METAG_GLOB_DAT","R_METAG_GNU_VTENTRY","R_METAG_GNU_VTINHERIT","R_METAG_GOTOFF","R_METAG_HI16_GOTOFF","R_METAG_HI16_GOTPC","R_METAG_HI16_PLT","R_METAG_HIADDR16","R_METAG_HIOG","R_METAG_JMP_SLOT","R_METAG_LO16_GOTOFF","R_METAG_LO16_GOTPC","R_METAG_LO16_PLT","R_METAG_LOADDR16","R_METAG_LOOG","R_METAG_NONE","R_METAG_PLT","R_METAG_REG16OP1","R_METAG_REG16OP2","R_METAG_REG16OP3","R_METAG_REG32OP1","R_METAG_REG32OP2","R_METAG_REG32OP3","R_METAG_REG32OP4","R_METAG_REL16","R_METAG_REL8","R_METAG_RELATIVE","R_METAG_RELBRANCH","R_METAG_RELBRANCH_PLT","R_METAG_TLS_DTPMOD","R_METAG_TLS_DTPOFF","R_METAG_TLS_GD","R_METAG_TLS_IE","R_METAG_TLS_IENONPIC","R_METAG_TLS_IENONPIC_HI16","R_METAG_TLS_IENONPIC_LO16","R_METAG_TLS_LDM","R_METAG_TLS_LDO","R_METAG_TLS_LDO_HI16","R_METAG_TLS_LDO_LO16","R_METAG_TLS_LE","R_METAG_TLS_LE_HI16","R_METAG_TLS_LE_LO16","R_METAG_TLS_TPOFF","R_MICROBLAZE_32","R_MICROBLAZE_32_LO","R_MICROBLAZE_32_PCREL","R_MICROBLAZE_32_PCREL_LO","R_MICROBLAZE_32_SYM_OP_SYM","R_MICROBLAZE_64","R_MICROBLAZE_64_NONE","R_MICROBLAZE_64_PCREL","R_MICROBLAZE_COPY","R_MICROBLAZE_GLOB_DAT","R_MICROBLAZE_GNU_VTENTRY","R_MICROBLAZE_GNU_VTINHERIT","R_MICROBLAZE_GOTOFF_32","R_MICROBLAZE_GOTOFF_64","R_MICROBLAZE_GOTPC_64","R_MICROBLAZE_GOT_64","R_MICROBLAZE_JUMP_SLOT","R_MICROBLAZE_NONE","R_MICROBLAZE_PLT_64","R_MICROBLAZE_REL","R_MICROBLAZE_SRO32","R_MICROBLAZE_SRW32","R_MICROBLAZE_TLS","R_MICROBLAZE_TLSDTPMOD32","R_MICROBLAZE_TLSDTPREL32","R_MICROBLAZE_TLSDTPREL64","R_MICROBLAZE_TLSGD","R_MICROBLAZE_TLSGOTTPREL32","R_MICROBLAZE_TLSLD","R_MICROBLAZE_TLSTPREL32","R_MIPS_16","R_MIPS_26","R_MIPS_32","R_MIPS_64","R_MIPS_ADD_IMMEDIATE","R_MIPS_CALL16","R_MIPS_CALL_HI16","R_MIPS_CALL_LO16","R_MIPS_COPY","R_MIPS_DELETE","R_MIPS_GLOB_DAT","R_MIPS_GOT16","R_MIPS_GOT_DISP","R_MIPS_GOT_HI16","R_MIPS_GOT_LO16","R_MIPS_GOT_OFST","R_MIPS_GOT_PAGE","R_MIPS_GPREL16","R_MIPS_GPREL32","R_MIPS_HI16","R_MIPS_HIGHER","R_MIPS_HIGHEST","R_MIPS_INSERT_A","R_MIPS_INSERT_B","R_MIPS_JALR","R_MIPS_JUMP_SLOT","R_MIPS_LITERAL","R_MIPS_LO16","R_MIPS_NONE","R_MIPS_PC16","R_MIPS_PJUMP","R_MIPS_REL16","R_MIPS_REL32","R_MIPS_RELGOT","R_MIPS_SCN_DISP","R_MIPS_SHIFT5","R_MIPS_SHIFT6","R_MIPS_SUB","R_MIPS_TLS_DTPMOD32","R_MIPS_TLS_DTPMOD64","R_MIPS_TLS_DTPREL32","R_MIPS_TLS_DTPREL64","R_MIPS_TLS_DTPREL_HI16","R_MIPS_TLS_DTPREL_LO16","R_MIPS_TLS_GD","R_MIPS_TLS_GOTTPREL","R_MIPS_TLS_LDM","R_MIPS_TLS_TPREL32","R_MIPS_TLS_TPREL64","R_MIPS_TLS_TPREL_HI16","R_MIPS_TLS_TPREL_LO16","R_MN10300_16","R_MN10300_24","R_MN10300_32","R_MN10300_8","R_MN10300_ALIGN","R_MN10300_COPY","R_MN10300_GLOB_DAT","R_MN10300_GNU_VTENTRY","R_MN10300_GNU_VTINHERIT","R_MN10300_GOT16","R_MN10300_GOT24","R_MN10300_GOT32","R_MN10300_GOTOFF16","R_MN10300_GOTOFF24","R_MN10300_GOTOFF32","R_MN10300_GOTPC16","R_MN10300_GOTPC32","R_MN10300_JMP_SLOT","R_MN10300_NONE","R_MN10300_PCREL16","R_MN10300_PCREL32","R_MN10300_PCREL8","R_MN10300_PLT16","R_MN10300_PLT32","R_MN10300_RELATIVE","R_MN10300_SYM_DIFF","R_MN10300_TLS_DTPMOD","R_MN10300_TLS_DTPOFF","R_MN10300_TLS_GD","R_MN10300_TLS_GOTIE","R_MN10300_TLS_IE","R_MN10300_TLS_LD","R_MN10300_TLS_LDO","R_MN10300_TLS_LE","R_MN10300_TLS_TPOFF","R_MSP430_16_BYTE","R_MSP430_32","R_NDS32_32_RELA","R_NDS32_COPY","R_NDS32_GLOB_DAT","R_NDS32_JMP_SLOT","R_NDS32_NONE","R_NDS32_RELATIVE","R_NDS32_TLS_DESC","R_NDS32_TLS_TPOFF","R_NIOS2_ALIGN","R_NIOS2_BFD_RELOC_16","R_NIOS2_BFD_RELOC_32","R_NIOS2_BFD_RELOC_8","R_NIOS2_CACHE_OPX","R_NIOS2_CALL16","R_NIOS2_CALL26","R_NIOS2_CALL26_NOAT","R_NIOS2_CALLR","R_NIOS2_CALL_HA","R_NIOS2_CALL_LO","R_NIOS2_CJMP","R_NIOS2_COPY","R_NIOS2_GLOB_DAT","R_NIOS2_GNU_VTENTRY","R_NIOS2_GNU_VTINHERIT","R_NIOS2_GOT16","R_NIOS2_GOTOFF","R_NIOS2_GOTOFF_HA","R_NIOS2_GOTOFF_LO","R_NIOS2_GOT_HA","R_NIOS2_GOT_LO","R_NIOS2_GPREL","R_NIOS2_HI16","R_NIOS2_HIADJ16","R_NIOS2_IMM5","R_NIOS2_IMM6","R_NIOS2_IMM8","R_NIOS2_JUMP_SLOT","R_NIOS2_LO16","R_NIOS2_NONE","R_NIOS2_PCREL16","R_NIOS2_PCREL_HA","R_NIOS2_PCREL_LO","R_NIOS2_RELATIVE","R_NIOS2_S16","R_NIOS2_TLS_DTPMOD","R_NIOS2_TLS_DTPREL","R_NIOS2_TLS_GD16","R_NIOS2_TLS_IE16","R_NIOS2_TLS_LDM16","R_NIOS2_TLS_LDO16","R_NIOS2_TLS_LE16","R_NIOS2_TLS_TPREL","R_NIOS2_U16","R_NIOS2_UJMP","R_PARISC_COPY","R_PARISC_DIR14DR","R_PARISC_DIR14R","R_PARISC_DIR14WR","R_PARISC_DIR16DF","R_PARISC_DIR16F","R_PARISC_DIR16WF","R_PARISC_DIR17F","R_PARISC_DIR17R","R_PARISC_DIR21L","R_PARISC_DIR32","R_PARISC_DIR64","R_PARISC_DPREL14R","R_PARISC_DPREL21L","R_PARISC_EPLT","R_PARISC_FPTR64","R_PARISC_GNU_VTENTRY","R_PARISC_GNU_VTINHERIT","R_PARISC_GPREL14DR","R_PARISC_GPREL14R","R_PARISC_GPREL14WR","R_PARISC_GPREL16DF","R_PARISC_GPREL16F","R_PARISC_GPREL16WF","R_PARISC_GPREL21L","R_PARISC_GPREL64","R_PARISC_HIRESERVE","R_PARISC_IPLT","R_PARISC_LORESERVE","R_PARISC_LTOFF14DR","R_PARISC_LTOFF14R","R_PARISC_LTOFF14WR","R_PARISC_LTOFF16DF","R_PARISC_LTOFF16F","R_PARISC_LTOFF16WF","R_PARISC_LTOFF21L","R_PARISC_LTOFF64","R_PARISC_LTOFF_FPTR14DR","R_PARISC_LTOFF_FPTR14R","R_PARISC_LTOFF_FPTR14WR","R_PARISC_LTOFF_FPTR16DF","R_PARISC_LTOFF_FPTR16F","R_PARISC_LTOFF_FPTR16WF","R_PARISC_LTOFF_FPTR21L","R_PARISC_LTOFF_FPTR32","R_PARISC_LTOFF_FPTR64","R_PARISC_LTOFF_TP14DR","R_PARISC_LTOFF_TP14F","R_PARISC_LTOFF_TP14R","R_PARISC_LTOFF_TP14WR","R_PARISC_LTOFF_TP16DF","R_PARISC_LTOFF_TP16F","R_PARISC_LTOFF_TP16WF","R_PARISC_LTOFF_TP21L","R_PARISC_LTOFF_TP64","R_PARISC_NONE","R_PARISC_PCREL14DR","R_PARISC_PCREL14R","R_PARISC_PCREL14WR","R_PARISC_PCREL16DF","R_PARISC_PCREL16F","R_PARISC_PCREL16WF","R_PARISC_PCREL17F","R_PARISC_PCREL17R","R_PARISC_PCREL21L","R_PARISC_PCREL22F","R_PARISC_PCREL32","R_PARISC_PCREL64","R_PARISC_PLABEL14R","R_PARISC_PLABEL21L","R_PARISC_PLABEL32","R_PARISC_PLTOFF14DR","R_PARISC_PLTOFF14R","R_PARISC_PLTOFF14WR","R_PARISC_PLTOFF16DF","R_PARISC_PLTOFF16F","R_PARISC_PLTOFF16WF","R_PARISC_PLTOFF21L","R_PARISC_SECREL32","R_PARISC_SECREL64","R_PARISC_SEGBASE","R_PARISC_SEGREL32","R_PARISC_SEGREL64","R_PARISC_TLS_DTPMOD32","R_PARISC_TLS_DTPMOD64","R_PARISC_TLS_DTPOFF32","R_PARISC_TLS_DTPOFF64","R_PARISC_TLS_GD14R","R_PARISC_TLS_GD21L","R_PARISC_TLS_GDCALL","R_PARISC_TLS_IE14R","R_PARISC_TLS_IE21L","R_PARISC_TLS_LDM14R","R_PARISC_TLS_LDM21L","R_PARISC_TLS_LDMCALL","R_PARISC_TLS_LDO14R","R_PARISC_TLS_LDO21L","R_PARISC_TLS_LE14R","R_PARISC_TLS_LE21L","R_PARISC_TLS_TPREL32","R_PARISC_TLS_TPREL64","R_PARISC_TPREL14DR","R_PARISC_TPREL14R","R_PARISC_TPREL14WR","R_PARISC_TPREL16DF","R_PARISC_TPREL16F","R_PARISC_TPREL16WF","R_PARISC_TPREL21L","R_PARISC_TPREL32","R_PARISC_TPREL64","R_PPC64_ADDR14","R_PPC64_ADDR14_BRNTAKEN","R_PPC64_ADDR14_BRTAKEN","R_PPC64_ADDR16","R_PPC64_ADDR16_DS","R_PPC64_ADDR16_HA","R_PPC64_ADDR16_HI","R_PPC64_ADDR16_HIGH","R_PPC64_ADDR16_HIGHA","R_PPC64_ADDR16_HIGHER","R_PPC64_ADDR16_HIGHERA","R_PPC64_ADDR16_HIGHEST","R_PPC64_ADDR16_HIGHESTA","R_PPC64_ADDR16_LO","R_PPC64_ADDR16_LO_DS","R_PPC64_ADDR24","R_PPC64_ADDR30","R_PPC64_ADDR32","R_PPC64_ADDR64","R_PPC64_COPY","R_PPC64_DTPMOD64","R_PPC64_DTPREL16","R_PPC64_DTPREL16_DS","R_PPC64_DTPREL16_HA","R_PPC64_DTPREL16_HI","R_PPC64_DTPREL16_HIGH","R_PPC64_DTPREL16_HIGHA","R_PPC64_DTPREL16_HIGHER","R_PPC64_DTPREL16_HIGHERA","R_PPC64_DTPREL16_HIGHEST","R_PPC64_DTPREL16_HIGHESTA","R_PPC64_DTPREL16_LO","R_PPC64_DTPREL16_LO_DS","R_PPC64_DTPREL64","R_PPC64_GLOB_DAT","R_PPC64_GOT16","R_PPC64_GOT16_DS","R_PPC64_GOT16_HA","R_PPC64_GOT16_HI","R_PPC64_GOT16_LO","R_PPC64_GOT16_LO_DS","R_PPC64_GOT_DTPREL16_DS","R_PPC64_GOT_DTPREL16_HA","R_PPC64_GOT_DTPREL16_HI","R_PPC64_GOT_DTPREL16_LO_DS","R_PPC64_GOT_TLSGD16","R_PPC64_GOT_TLSGD16_HA","R_PPC64_GOT_TLSGD16_HI","R_PPC64_GOT_TLSGD16_LO","R_PPC64_GOT_TLSLD16","R_PPC64_GOT_TLSLD16_HA","R_PPC64_GOT_TLSLD16_HI","R_PPC64_GOT_TLSLD16_LO","R_PPC64_GOT_TPREL16_DS","R_PPC64_GOT_TPREL16_HA","R_PPC64_GOT_TPREL16_HI","R_PPC64_GOT_TPREL16_LO_DS","R_PPC64_IRELATIVE","R_PPC64_JMP_IREL","R_PPC64_JMP_SLOT","R_PPC64_NONE","R_PPC64_PLT16_HA","R_PPC64_PLT16_HI","R_PPC64_PLT16_LO","R_PPC64_PLT16_LO_DS","R_PPC64_PLT32","R_PPC64_PLT64","R_PPC64_PLTGOT16","R_PPC64_PLTGOT16_DS","R_PPC64_PLTGOT16_HA","R_PPC64_PLTGOT16_HI","R_PPC64_PLTGOT16_LO","R_PPC64_PLTGOT16_LO_DS","R_PPC64_PLTREL32","R_PPC64_PLTREL64","R_PPC64_REL14","R_PPC64_REL14_BRNTAKEN","R_PPC64_REL14_BRTAKEN","R_PPC64_REL16","R_PPC64_REL16_HA","R_PPC64_REL16_HI","R_PPC64_REL16_LO","R_PPC64_REL24","R_PPC64_REL32","R_PPC64_REL64","R_PPC64_RELATIVE","R_PPC64_SECTOFF","R_PPC64_SECTOFF_DS","R_PPC64_SECTOFF_HA","R_PPC64_SECTOFF_HI","R_PPC64_SECTOFF_LO","R_PPC64_SECTOFF_LO_DS","R_PPC64_TLS","R_PPC64_TLSGD","R_PPC64_TLSLD","R_PPC64_TOC","R_PPC64_TOC16","R_PPC64_TOC16_DS","R_PPC64_TOC16_HA","R_PPC64_TOC16_HI","R_PPC64_TOC16_LO","R_PPC64_TOC16_LO_DS","R_PPC64_TOCSAVE","R_PPC64_TPREL16","R_PPC64_TPREL16_DS","R_PPC64_TPREL16_HA","R_PPC64_TPREL16_HI","R_PPC64_TPREL16_HIGH","R_PPC64_TPREL16_HIGHA","R_PPC64_TPREL16_HIGHER","R_PPC64_TPREL16_HIGHERA","R_PPC64_TPREL16_HIGHEST","R_PPC64_TPREL16_HIGHESTA","R_PPC64_TPREL16_LO","R_PPC64_TPREL16_LO_DS","R_PPC64_TPREL64","R_PPC64_UADDR16","R_PPC64_UADDR32","R_PPC64_UADDR64","R_PPC_ADDR14","R_PPC_ADDR14_BRNTAKEN","R_PPC_ADDR14_BRTAKEN","R_PPC_ADDR16","R_PPC_ADDR16_HA","R_PPC_ADDR16_HI","R_PPC_ADDR16_LO","R_PPC_ADDR24","R_PPC_ADDR32","R_PPC_COPY","R_PPC_DIAB_RELSDA_HA","R_PPC_DIAB_RELSDA_HI","R_PPC_DIAB_RELSDA_LO","R_PPC_DIAB_SDA21_HA","R_PPC_DIAB_SDA21_HI","R_PPC_DIAB_SDA21_LO","R_PPC_DTPMOD32","R_PPC_DTPREL16","R_PPC_DTPREL16_HA","R_PPC_DTPREL16_HI","R_PPC_DTPREL16_LO","R_PPC_DTPREL32","R_PPC_EMB_BIT_FLD","R_PPC_EMB_MRKREF","R_PPC_EMB_NADDR16","R_PPC_EMB_NADDR16_HA","R_PPC_EMB_NADDR16_HI","R_PPC_EMB_NADDR16_LO","R_PPC_EMB_NADDR32","R_PPC_EMB_RELSDA","R_PPC_EMB_RELSEC16","R_PPC_EMB_RELST_HA","R_PPC_EMB_RELST_HI","R_PPC_EMB_RELST_LO","R_PPC_EMB_SDA21","R_PPC_EMB_SDA2I16","R_PPC_EMB_SDA2REL","R_PPC_EMB_SDAI16","R_PPC_GLOB_DAT","R_PPC_GOT16","R_PPC_GOT16_HA","R_PPC_GOT16_HI","R_PPC_GOT16_LO","R_PPC_GOT_DTPREL16","R_PPC_GOT_DTPREL16_HA","R_PPC_GOT_DTPREL16_HI","R_PPC_GOT_DTPREL16_LO","R_PPC_GOT_TLSGD16","R_PPC_GOT_TLSGD16_HA","R_PPC_GOT_TLSGD16_HI","R_PPC_GOT_TLSGD16_LO","R_PPC_GOT_TLSLD16","R_PPC_GOT_TLSLD16_HA","R_PPC_GOT_TLSLD16_HI","R_PPC_GOT_TLSLD16_LO","R_PPC_GOT_TPREL16","R_PPC_GOT_TPREL16_HA","R_PPC_GOT_TPREL16_HI","R_PPC_GOT_TPREL16_LO","R_PPC_IRELATIVE","R_PPC_JMP_SLOT","R_PPC_LOCAL24PC","R_PPC_NONE","R_PPC_PLT16_HA","R_PPC_PLT16_HI","R_PPC_PLT16_LO","R_PPC_PLT32","R_PPC_PLTREL24","R_PPC_PLTREL32","R_PPC_REL14","R_PPC_REL14_BRNTAKEN","R_PPC_REL14_BRTAKEN","R_PPC_REL16","R_PPC_REL16_HA","R_PPC_REL16_HI","R_PPC_REL16_LO","R_PPC_REL24","R_PPC_REL32","R_PPC_RELATIVE","R_PPC_SDAREL16","R_PPC_SECTOFF","R_PPC_SECTOFF_HA","R_PPC_SECTOFF_HI","R_PPC_SECTOFF_LO","R_PPC_TLS","R_PPC_TLSGD","R_PPC_TLSLD","R_PPC_TOC16","R_PPC_TPREL16","R_PPC_TPREL16_HA","R_PPC_TPREL16_HI","R_PPC_TPREL16_LO","R_PPC_TPREL32","R_PPC_UADDR16","R_PPC_UADDR32","R_RISCV_32","R_RISCV_32_PCREL","R_RISCV_64","R_RISCV_ADD16","R_RISCV_ADD32","R_RISCV_ADD64","R_RISCV_ADD8","R_RISCV_ALIGN","R_RISCV_BRANCH","R_RISCV_CALL","R_RISCV_CALL_PLT","R_RISCV_COPY","R_RISCV_GNU_VTENTRY","R_RISCV_GNU_VTINHERIT","R_RISCV_GOT_HI20","R_RISCV_GPREL_I","R_RISCV_GPREL_S","R_RISCV_HI20","R_RISCV_JAL","R_RISCV_JUMP_SLOT","R_RISCV_LO12_I","R_RISCV_LO12_S","R_RISCV_NONE","R_RISCV_PCREL_HI20","R_RISCV_PCREL_LO12_I","R_RISCV_PCREL_LO12_S","R_RISCV_RELATIVE","R_RISCV_RELAX","R_RISCV_RVC_BRANCH","R_RISCV_RVC_JUMP","R_RISCV_RVC_LUI","R_RISCV_SET16","R_RISCV_SET32","R_RISCV_SET6","R_RISCV_SET8","R_RISCV_SUB16","R_RISCV_SUB32","R_RISCV_SUB6","R_RISCV_SUB64","R_RISCV_SUB8","R_RISCV_TLS_DTPMOD32","R_RISCV_TLS_DTPMOD64","R_RISCV_TLS_DTPREL32","R_RISCV_TLS_DTPREL64","R_RISCV_TLS_GD_HI20","R_RISCV_TLS_GOT_HI20","R_RISCV_TLS_TPREL32","R_RISCV_TLS_TPREL64","R_RISCV_TPREL_ADD","R_RISCV_TPREL_HI20","R_RISCV_TPREL_I","R_RISCV_TPREL_LO12_I","R_RISCV_TPREL_LO12_S","R_RISCV_TPREL_S","R_SBF_64_32","R_SBF_64_64","R_SBF_NONE","R_SH_ALIGN","R_SH_CODE","R_SH_COPY","R_SH_COUNT","R_SH_DATA","R_SH_DIR32","R_SH_DIR8BP","R_SH_DIR8L","R_SH_DIR8W","R_SH_DIR8WPL","R_SH_DIR8WPN","R_SH_DIR8WPZ","R_SH_GLOB_DAT","R_SH_GNU_VTENTRY","R_SH_GNU_VTINHERIT","R_SH_GOT32","R_SH_GOTOFF","R_SH_GOTPC","R_SH_IND12W","R_SH_JMP_SLOT","R_SH_LABEL","R_SH_NONE","R_SH_PLT32","R_SH_REL32","R_SH_RELATIVE","R_SH_SWITCH16","R_SH_SWITCH32","R_SH_SWITCH8","R_SH_TLS_DTPMOD32","R_SH_TLS_DTPOFF32","R_SH_TLS_GD_32","R_SH_TLS_IE_32","R_SH_TLS_LDO_32","R_SH_TLS_LD_32","R_SH_TLS_LE_32","R_SH_TLS_TPOFF32","R_SH_USES","R_SPARC_10","R_SPARC_11","R_SPARC_13","R_SPARC_16","R_SPARC_22","R_SPARC_32","R_SPARC_5","R_SPARC_6","R_SPARC_64","R_SPARC_7","R_SPARC_8","R_SPARC_COPY","R_SPARC_DISP16","R_SPARC_DISP32","R_SPARC_DISP64","R_SPARC_DISP8","R_SPARC_GLOB_DAT","R_SPARC_GLOB_JMP","R_SPARC_GNU_VTENTRY","R_SPARC_GNU_VTINHERIT","R_SPARC_GOT10","R_SPARC_GOT13","R_SPARC_GOT22","R_SPARC_GOTDATA_HIX22","R_SPARC_GOTDATA_LOX10","R_SPARC_GOTDATA_OP","R_SPARC_GOTDATA_OP_HIX22","R_SPARC_GOTDATA_OP_LOX10","R_SPARC_H34","R_SPARC_H44","R_SPARC_HH22","R_SPARC_HI22","R_SPARC_HIPLT22","R_SPARC_HIX22","R_SPARC_HM10","R_SPARC_IRELATIVE","R_SPARC_JMP_IREL","R_SPARC_JMP_SLOT","R_SPARC_L44","R_SPARC_LM22","R_SPARC_LO10","R_SPARC_LOPLT10","R_SPARC_LOX10","R_SPARC_M44","R_SPARC_NONE","R_SPARC_OLO10","R_SPARC_PC10","R_SPARC_PC22","R_SPARC_PCPLT10","R_SPARC_PCPLT22","R_SPARC_PCPLT32","R_SPARC_PC_HH22","R_SPARC_PC_HM10","R_SPARC_PC_LM22","R_SPARC_PLT32","R_SPARC_PLT64","R_SPARC_REGISTER","R_SPARC_RELATIVE","R_SPARC_REV32","R_SPARC_SIZE32","R_SPARC_SIZE64","R_SPARC_TLS_DTPMOD32","R_SPARC_TLS_DTPMOD64","R_SPARC_TLS_DTPOFF32","R_SPARC_TLS_DTPOFF64","R_SPARC_TLS_GD_ADD","R_SPARC_TLS_GD_CALL","R_SPARC_TLS_GD_HI22","R_SPARC_TLS_GD_LO10","R_SPARC_TLS_IE_ADD","R_SPARC_TLS_IE_HI22","R_SPARC_TLS_IE_LD","R_SPARC_TLS_IE_LDX","R_SPARC_TLS_IE_LO10","R_SPARC_TLS_LDM_ADD","R_SPARC_TLS_LDM_CALL","R_SPARC_TLS_LDM_HI22","R_SPARC_TLS_LDM_LO10","R_SPARC_TLS_LDO_ADD","R_SPARC_TLS_LDO_HIX22","R_SPARC_TLS_LDO_LOX10","R_SPARC_TLS_LE_HIX22","R_SPARC_TLS_LE_LOX10","R_SPARC_TLS_TPOFF32","R_SPARC_TLS_TPOFF64","R_SPARC_UA16","R_SPARC_UA32","R_SPARC_UA64","R_SPARC_WDISP10","R_SPARC_WDISP16","R_SPARC_WDISP19","R_SPARC_WDISP22","R_SPARC_WDISP30","R_SPARC_WPLT30","R_TILEGX_16","R_TILEGX_16_PCREL","R_TILEGX_32","R_TILEGX_32_PCREL","R_TILEGX_64","R_TILEGX_64_PCREL","R_TILEGX_8","R_TILEGX_8_PCREL","R_TILEGX_BROFF_X1","R_TILEGX_COPY","R_TILEGX_DEST_IMM8_X1","R_TILEGX_GLOB_DAT","R_TILEGX_GNU_VTENTRY","R_TILEGX_GNU_VTINHERIT","R_TILEGX_HW0","R_TILEGX_HW0_LAST","R_TILEGX_HW1","R_TILEGX_HW1_LAST","R_TILEGX_HW2","R_TILEGX_HW2_LAST","R_TILEGX_HW3","R_TILEGX_IMM16_X0_HW0","R_TILEGX_IMM16_X0_HW0_GOT","R_TILEGX_IMM16_X0_HW0_LAST","R_TILEGX_IMM16_X0_HW0_LAST_GOT","R_TILEGX_IMM16_X0_HW0_LAST_PCREL","R_TILEGX_IMM16_X0_HW0_LAST_PLT_PCREL","R_TILEGX_IMM16_X0_HW0_LAST_TLS_GD","R_TILEGX_IMM16_X0_HW0_LAST_TLS_IE","R_TILEGX_IMM16_X0_HW0_LAST_TLS_LE","R_TILEGX_IMM16_X0_HW0_PCREL","R_TILEGX_IMM16_X0_HW0_PLT_PCREL","R_TILEGX_IMM16_X0_HW0_TLS_GD","R_TILEGX_IMM16_X0_HW0_TLS_IE","R_TILEGX_IMM16_X0_HW0_TLS_LE","R_TILEGX_IMM16_X0_HW1","R_TILEGX_IMM16_X0_HW1_LAST","R_TILEGX_IMM16_X0_HW1_LAST_GOT","R_TILEGX_IMM16_X0_HW1_LAST_PCREL","R_TILEGX_IMM16_X0_HW1_LAST_PLT_PCREL","R_TILEGX_IMM16_X0_HW1_LAST_TLS_GD","R_TILEGX_IMM16_X0_HW1_LAST_TLS_IE","R_TILEGX_IMM16_X0_HW1_LAST_TLS_LE","R_TILEGX_IMM16_X0_HW1_PCREL","R_TILEGX_IMM16_X0_HW1_PLT_PCREL","R_TILEGX_IMM16_X0_HW2","R_TILEGX_IMM16_X0_HW2_LAST","R_TILEGX_IMM16_X0_HW2_LAST_PCREL","R_TILEGX_IMM16_X0_HW2_LAST_PLT_PCREL","R_TILEGX_IMM16_X0_HW2_PCREL","R_TILEGX_IMM16_X0_HW2_PLT_PCREL","R_TILEGX_IMM16_X0_HW3","R_TILEGX_IMM16_X0_HW3_PCREL","R_TILEGX_IMM16_X0_HW3_PLT_PCREL","R_TILEGX_IMM16_X1_HW0","R_TILEGX_IMM16_X1_HW0_GOT","R_TILEGX_IMM16_X1_HW0_LAST","R_TILEGX_IMM16_X1_HW0_LAST_GOT","R_TILEGX_IMM16_X1_HW0_LAST_PCREL","R_TILEGX_IMM16_X1_HW0_LAST_PLT_PCREL","R_TILEGX_IMM16_X1_HW0_LAST_TLS_GD","R_TILEGX_IMM16_X1_HW0_LAST_TLS_IE","R_TILEGX_IMM16_X1_HW0_LAST_TLS_LE","R_TILEGX_IMM16_X1_HW0_PCREL","R_TILEGX_IMM16_X1_HW0_PLT_PCREL","R_TILEGX_IMM16_X1_HW0_TLS_GD","R_TILEGX_IMM16_X1_HW0_TLS_IE","R_TILEGX_IMM16_X1_HW0_TLS_LE","R_TILEGX_IMM16_X1_HW1","R_TILEGX_IMM16_X1_HW1_LAST","R_TILEGX_IMM16_X1_HW1_LAST_GOT","R_TILEGX_IMM16_X1_HW1_LAST_PCREL","R_TILEGX_IMM16_X1_HW1_LAST_PLT_PCREL","R_TILEGX_IMM16_X1_HW1_LAST_TLS_GD","R_TILEGX_IMM16_X1_HW1_LAST_TLS_IE","R_TILEGX_IMM16_X1_HW1_LAST_TLS_LE","R_TILEGX_IMM16_X1_HW1_PCREL","R_TILEGX_IMM16_X1_HW1_PLT_PCREL","R_TILEGX_IMM16_X1_HW2","R_TILEGX_IMM16_X1_HW2_LAST","R_TILEGX_IMM16_X1_HW2_LAST_PCREL","R_TILEGX_IMM16_X1_HW2_LAST_PLT_PCREL","R_TILEGX_IMM16_X1_HW2_PCREL","R_TILEGX_IMM16_X1_HW2_PLT_PCREL","R_TILEGX_IMM16_X1_HW3","R_TILEGX_IMM16_X1_HW3_PCREL","R_TILEGX_IMM16_X1_HW3_PLT_PCREL","R_TILEGX_IMM8_X0","R_TILEGX_IMM8_X0_TLS_ADD","R_TILEGX_IMM8_X0_TLS_GD_ADD","R_TILEGX_IMM8_X1","R_TILEGX_IMM8_X1_TLS_ADD","R_TILEGX_IMM8_X1_TLS_GD_ADD","R_TILEGX_IMM8_Y0","R_TILEGX_IMM8_Y0_TLS_ADD","R_TILEGX_IMM8_Y0_TLS_GD_ADD","R_TILEGX_IMM8_Y1","R_TILEGX_IMM8_Y1_TLS_ADD","R_TILEGX_IMM8_Y1_TLS_GD_ADD","R_TILEGX_JMP_SLOT","R_TILEGX_JUMPOFF_X1","R_TILEGX_JUMPOFF_X1_PLT","R_TILEGX_MF_IMM14_X1","R_TILEGX_MMEND_X0","R_TILEGX_MMSTART_X0","R_TILEGX_MT_IMM14_X1","R_TILEGX_NONE","R_TILEGX_RELATIVE","R_TILEGX_SHAMT_X0","R_TILEGX_SHAMT_X1","R_TILEGX_SHAMT_Y0","R_TILEGX_SHAMT_Y1","R_TILEGX_TLS_DTPMOD32","R_TILEGX_TLS_DTPMOD64","R_TILEGX_TLS_DTPOFF32","R_TILEGX_TLS_DTPOFF64","R_TILEGX_TLS_GD_CALL","R_TILEGX_TLS_IE_LOAD","R_TILEGX_TLS_TPOFF32","R_TILEGX_TLS_TPOFF64","R_TILEPRO_16","R_TILEPRO_16_PCREL","R_TILEPRO_32","R_TILEPRO_32_PCREL","R_TILEPRO_8","R_TILEPRO_8_PCREL","R_TILEPRO_BROFF_X1","R_TILEPRO_COPY","R_TILEPRO_DEST_IMM8_X1","R_TILEPRO_GLOB_DAT","R_TILEPRO_GNU_VTENTRY","R_TILEPRO_GNU_VTINHERIT","R_TILEPRO_HA16","R_TILEPRO_HI16","R_TILEPRO_IMM16_X0","R_TILEPRO_IMM16_X0_GOT","R_TILEPRO_IMM16_X0_GOT_HA","R_TILEPRO_IMM16_X0_GOT_HI","R_TILEPRO_IMM16_X0_GOT_LO","R_TILEPRO_IMM16_X0_HA","R_TILEPRO_IMM16_X0_HA_PCREL","R_TILEPRO_IMM16_X0_HI","R_TILEPRO_IMM16_X0_HI_PCREL","R_TILEPRO_IMM16_X0_LO","R_TILEPRO_IMM16_X0_LO_PCREL","R_TILEPRO_IMM16_X0_PCREL","R_TILEPRO_IMM16_X0_TLS_GD","R_TILEPRO_IMM16_X0_TLS_GD_HA","R_TILEPRO_IMM16_X0_TLS_GD_HI","R_TILEPRO_IMM16_X0_TLS_GD_LO","R_TILEPRO_IMM16_X0_TLS_IE","R_TILEPRO_IMM16_X0_TLS_IE_HA","R_TILEPRO_IMM16_X0_TLS_IE_HI","R_TILEPRO_IMM16_X0_TLS_IE_LO","R_TILEPRO_IMM16_X0_TLS_LE","R_TILEPRO_IMM16_X0_TLS_LE_HA","R_TILEPRO_IMM16_X0_TLS_LE_HI","R_TILEPRO_IMM16_X0_TLS_LE_LO","R_TILEPRO_IMM16_X1","R_TILEPRO_IMM16_X1_GOT","R_TILEPRO_IMM16_X1_GOT_HA","R_TILEPRO_IMM16_X1_GOT_HI","R_TILEPRO_IMM16_X1_GOT_LO","R_TILEPRO_IMM16_X1_HA","R_TILEPRO_IMM16_X1_HA_PCREL","R_TILEPRO_IMM16_X1_HI","R_TILEPRO_IMM16_X1_HI_PCREL","R_TILEPRO_IMM16_X1_LO","R_TILEPRO_IMM16_X1_LO_PCREL","R_TILEPRO_IMM16_X1_PCREL","R_TILEPRO_IMM16_X1_TLS_GD","R_TILEPRO_IMM16_X1_TLS_GD_HA","R_TILEPRO_IMM16_X1_TLS_GD_HI","R_TILEPRO_IMM16_X1_TLS_GD_LO","R_TILEPRO_IMM16_X1_TLS_IE","R_TILEPRO_IMM16_X1_TLS_IE_HA","R_TILEPRO_IMM16_X1_TLS_IE_HI","R_TILEPRO_IMM16_X1_TLS_IE_LO","R_TILEPRO_IMM16_X1_TLS_LE","R_TILEPRO_IMM16_X1_TLS_LE_HA","R_TILEPRO_IMM16_X1_TLS_LE_HI","R_TILEPRO_IMM16_X1_TLS_LE_LO","R_TILEPRO_IMM8_X0","R_TILEPRO_IMM8_X0_TLS_GD_ADD","R_TILEPRO_IMM8_X1","R_TILEPRO_IMM8_X1_TLS_GD_ADD","R_TILEPRO_IMM8_Y0","R_TILEPRO_IMM8_Y0_TLS_GD_ADD","R_TILEPRO_IMM8_Y1","R_TILEPRO_IMM8_Y1_TLS_GD_ADD","R_TILEPRO_JMP_SLOT","R_TILEPRO_JOFFLONG_X1","R_TILEPRO_JOFFLONG_X1_PLT","R_TILEPRO_LO16","R_TILEPRO_MF_IMM15_X1","R_TILEPRO_MMEND_X0","R_TILEPRO_MMEND_X1","R_TILEPRO_MMSTART_X0","R_TILEPRO_MMSTART_X1","R_TILEPRO_MT_IMM15_X1","R_TILEPRO_NONE","R_TILEPRO_RELATIVE","R_TILEPRO_SHAMT_X0","R_TILEPRO_SHAMT_X1","R_TILEPRO_SHAMT_Y0","R_TILEPRO_SHAMT_Y1","R_TILEPRO_TLS_DTPMOD32","R_TILEPRO_TLS_DTPOFF32","R_TILEPRO_TLS_GD_CALL","R_TILEPRO_TLS_IE_LOAD","R_TILEPRO_TLS_TPOFF32","R_X86_64_16","R_X86_64_32","R_X86_64_32S","R_X86_64_64","R_X86_64_8","R_X86_64_COPY","R_X86_64_DTPMOD64","R_X86_64_DTPOFF32","R_X86_64_DTPOFF64","R_X86_64_GLOB_DAT","R_X86_64_GOT32","R_X86_64_GOT64","R_X86_64_GOTOFF64","R_X86_64_GOTPC32","R_X86_64_GOTPC32_TLSDESC","R_X86_64_GOTPC64","R_X86_64_GOTPCREL","R_X86_64_GOTPCREL64","R_X86_64_GOTPCRELX","R_X86_64_GOTPLT64","R_X86_64_GOTTPOFF","R_X86_64_IRELATIVE","R_X86_64_JUMP_SLOT","R_X86_64_NONE","R_X86_64_PC16","R_X86_64_PC32","R_X86_64_PC64","R_X86_64_PC8","R_X86_64_PLT32","R_X86_64_PLTOFF64","R_X86_64_RELATIVE","R_X86_64_RELATIVE64","R_X86_64_REX_GOTPCRELX","R_X86_64_SIZE32","R_X86_64_SIZE64","R_X86_64_TLSDESC","R_X86_64_TLSDESC_CALL","R_X86_64_TLSGD","R_X86_64_TLSLD","R_X86_64_TPOFF32","R_X86_64_TPOFF64","R_XTENSA_32","R_XTENSA_32_PCREL","R_XTENSA_ASM_EXPAND","R_XTENSA_ASM_SIMPLIFY","R_XTENSA_DIFF16","R_XTENSA_DIFF32","R_XTENSA_DIFF8","R_XTENSA_GLOB_DAT","R_XTENSA_GNU_VTENTRY","R_XTENSA_GNU_VTINHERIT","R_XTENSA_JMP_SLOT","R_XTENSA_NDIFF16","R_XTENSA_NDIFF32","R_XTENSA_NDIFF8","R_XTENSA_NONE","R_XTENSA_OP0","R_XTENSA_OP1","R_XTENSA_OP2","R_XTENSA_PDIFF16","R_XTENSA_PDIFF32","R_XTENSA_PDIFF8","R_XTENSA_PLT","R_XTENSA_RELATIVE","R_XTENSA_RTLD","R_XTENSA_SLOT0_ALT","R_XTENSA_SLOT0_OP","R_XTENSA_SLOT10_ALT","R_XTENSA_SLOT10_OP","R_XTENSA_SLOT11_ALT","R_XTENSA_SLOT11_OP","R_XTENSA_SLOT12_ALT","R_XTENSA_SLOT12_OP","R_XTENSA_SLOT13_ALT","R_XTENSA_SLOT13_OP","R_XTENSA_SLOT14_ALT","R_XTENSA_SLOT14_OP","R_XTENSA_SLOT1_ALT","R_XTENSA_SLOT1_OP","R_XTENSA_SLOT2_ALT","R_XTENSA_SLOT2_OP","R_XTENSA_SLOT3_ALT","R_XTENSA_SLOT3_OP","R_XTENSA_SLOT4_ALT","R_XTENSA_SLOT4_OP","R_XTENSA_SLOT5_ALT","R_XTENSA_SLOT5_OP","R_XTENSA_SLOT6_ALT","R_XTENSA_SLOT6_OP","R_XTENSA_SLOT7_ALT","R_XTENSA_SLOT7_OP","R_XTENSA_SLOT8_ALT","R_XTENSA_SLOT8_OP","R_XTENSA_SLOT9_ALT","R_XTENSA_SLOT9_OP","R_XTENSA_TLSDESC_ARG","R_XTENSA_TLSDESC_FN","R_XTENSA_TLS_ARG","R_XTENSA_TLS_CALL","R_XTENSA_TLS_DTPOFF","R_XTENSA_TLS_FUNC","R_XTENSA_TLS_TPOFF","Rel32","Rel64","Rela32","Rela64","SHF_ALLOC","SHF_ALPHA_GPREL","SHF_ARM_COMDEF","SHF_ARM_ENTRYSECT","SHF_COMPRESSED","SHF_EXCLUDE","SHF_EXECINSTR","SHF_GROUP","SHF_IA_64_NORECOV","SHF_IA_64_SHORT","SHF_INFO_LINK","SHF_LINK_ORDER","SHF_MASKOS","SHF_MASKPROC","SHF_MERGE","SHF_MIPS_ADDR","SHF_MIPS_GPREL","SHF_MIPS_LOCAL","SHF_MIPS_MERGE","SHF_MIPS_NAMES","SHF_MIPS_NODUPE","SHF_MIPS_NOSTRIP","SHF_MIPS_STRINGS","SHF_OS_NONCONFORMING","SHF_PARISC_HUGE","SHF_PARISC_SBP","SHF_PARISC_SHORT","SHF_STRINGS","SHF_TLS","SHF_WRITE","SHN_ABS","SHN_COMMON","SHN_HIOS","SHN_HIPROC","SHN_HIRESERVE","SHN_LOOS","SHN_LOPROC","SHN_LORESERVE","SHN_MIPS_ACOMMON","SHN_MIPS_DATA","SHN_MIPS_SCOMMON","SHN_MIPS_SUNDEFINED","SHN_MIPS_TEXT","SHN_PARISC_ANSI_COMMON","SHN_PARISC_HUGE_COMMON","SHN_UNDEF","SHN_XINDEX","SHT_ALPHA_DEBUG","SHT_ALPHA_REGINFO","SHT_ARM_ATTRIBUTES","SHT_ARM_EXIDX","SHT_ARM_PREEMPTMAP","SHT_CHECKSUM","SHT_CSKY_ATTRIBUTES","SHT_DYNAMIC","SHT_DYNSYM","SHT_FINI_ARRAY","SHT_GNU_ATTRIBUTES","SHT_GNU_HASH","SHT_GNU_LIBLIST","SHT_GNU_VERDEF","SHT_GNU_VERNEED","SHT_GNU_VERSYM","SHT_GROUP","SHT_HASH","SHT_HIOS","SHT_HIPROC","SHT_HISUNW","SHT_HIUSER","SHT_IA_64_EXT","SHT_IA_64_UNWIND","SHT_INIT_ARRAY","SHT_LOOS","SHT_LOPROC","SHT_LOSUNW","SHT_LOUSER","SHT_MIPS_AUXSYM","SHT_MIPS_CONFLICT","SHT_MIPS_CONTENT","SHT_MIPS_DEBUG","SHT_MIPS_DELTACLASS","SHT_MIPS_DELTADECL","SHT_MIPS_DELTAINST","SHT_MIPS_DELTASYM","SHT_MIPS_DENSE","SHT_MIPS_DWARF","SHT_MIPS_EH_REGION","SHT_MIPS_EVENTS","SHT_MIPS_EXTSYM","SHT_MIPS_FDESC","SHT_MIPS_GPTAB","SHT_MIPS_IFACE","SHT_MIPS_LIBLIST","SHT_MIPS_LINE","SHT_MIPS_LOCSTR","SHT_MIPS_LOCSYM","SHT_MIPS_MSYM","SHT_MIPS_OPTIONS","SHT_MIPS_OPTSYM","SHT_MIPS_PACKAGE","SHT_MIPS_PACKSYM","SHT_MIPS_PDESC","SHT_MIPS_PDR_EXCEPTION","SHT_MIPS_PIXIE","SHT_MIPS_REGINFO","SHT_MIPS_RELD","SHT_MIPS_RFDESC","SHT_MIPS_SHDR","SHT_MIPS_SYMBOL_LIB","SHT_MIPS_TRANSLATE","SHT_MIPS_UCODE","SHT_MIPS_WHIRL","SHT_MIPS_XLATE","SHT_MIPS_XLATE_DEBUG","SHT_MIPS_XLATE_OLD","SHT_NOBITS","SHT_NOTE","SHT_NULL","SHT_PARISC_DOC","SHT_PARISC_EXT","SHT_PARISC_UNWIND","SHT_PREINIT_ARRAY","SHT_PROGBITS","SHT_REL","SHT_RELA","SHT_SHLIB","SHT_STRTAB","SHT_SUNW_COMDAT","SHT_SUNW_move","SHT_SUNW_syminfo","SHT_SYMTAB","SHT_SYMTAB_SHNDX","SHT_X86_64_UNWIND","STB_GLOBAL","STB_GNU_UNIQUE","STB_HIOS","STB_HIPROC","STB_LOCAL","STB_LOOS","STB_LOPROC","STB_MIPS_SPLIT_COMMON","STB_WEAK","STO_ALPHA_NOPV","STO_ALPHA_STD_GPLOAD","STO_MIPS_PLT","STO_MIPS_SC_ALIGN_UNUSED","STO_PPC64_LOCAL_BIT","STO_PPC64_LOCAL_MASK","STT_ARM_16BIT","STT_ARM_TFUNC","STT_COMMON","STT_FILE","STT_FUNC","STT_GNU_IFUNC","STT_HIOS","STT_HIPROC","STT_HP_OPAQUE","STT_HP_STUB","STT_LOOS","STT_LOPROC","STT_NOTYPE","STT_OBJECT","STT_PARISC_MILLICODE","STT_SECTION","STT_SPARC_REGISTER","STT_TLS","STV_DEFAULT","STV_HIDDEN","STV_INTERNAL","STV_PROTECTED","SYMINFO_BT_LOWRESERVE","SYMINFO_BT_PARENT","SYMINFO_BT_SELF","SYMINFO_CURRENT","SYMINFO_FLG_COPY","SYMINFO_FLG_DIRECT","SYMINFO_FLG_LAZYLOAD","SYMINFO_FLG_PASSTHRU","SYMINFO_NONE","SYMINFO_NUM","SectionHeader32","SectionHeader64","Sym32","Sym64","Syminfo32","Syminfo64","VERSYM_HIDDEN","VERSYM_VERSION","VER_DEF_CURRENT","VER_DEF_NONE","VER_FLG_BASE","VER_FLG_WEAK","VER_NDX_GLOBAL","VER_NDX_LOCAL","VER_NEED_CURRENT","VER_NEED_NONE","Verdaux","Verdef","Vernaux","Verneed","Versym","abi_version","bloom_count","bloom_shift","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bucket_count","bucket_count","ch_addralign","ch_addralign","ch_addralign","ch_addralign","ch_reserved","ch_size","ch_size","ch_size","ch_size","ch_type","ch_type","ch_type","ch_type","chain_count","class","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","d_tag","d_tag","d_tag","d_tag","d_val","d_val","d_val","d_val","data","default","default","default","default","e_ehsize","e_ehsize","e_ehsize","e_ehsize","e_entry","e_entry","e_entry","e_entry","e_flags","e_flags","e_flags","e_flags","e_ident","e_ident","e_ident","e_ident","e_machine","e_machine","e_machine","e_machine","e_phentsize","e_phentsize","e_phentsize","e_phentsize","e_phnum","e_phnum","e_phnum","e_phnum","e_phoff","e_phoff","e_phoff","e_phoff","e_shentsize","e_shentsize","e_shentsize","e_shentsize","e_shnum","e_shnum","e_shnum","e_shnum","e_shoff","e_shoff","e_shoff","e_shoff","e_shstrndx","e_shstrndx","e_shstrndx","e_shstrndx","e_type","e_type","e_type","e_type","e_version","e_version","e_version","e_version","file","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","gnu_hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_type_64","is_type_64","magic","n_descsz","n_descsz","n_descsz","n_descsz","n_namesz","n_namesz","n_namesz","n_namesz","n_type","n_type","n_type","n_type","name","name","os_abi","p_align","p_align","p_align","p_align","p_filesz","p_filesz","p_filesz","p_filesz","p_flags","p_flags","p_flags","p_flags","p_memsz","p_memsz","p_memsz","p_memsz","p_offset","p_offset","p_offset","p_offset","p_paddr","p_paddr","p_paddr","p_paddr","p_type","p_type","p_type","p_type","p_vaddr","p_vaddr","p_vaddr","p_vaddr","padding","r_addend","r_addend","r_addend","r_addend","r_info","r_info","r_info","r_info","r_info","r_info","r_info","r_info","r_info","r_info","r_info","r_info","r_offset","r_offset","r_offset","r_offset","r_offset","r_offset","r_offset","r_offset","r_sym","r_sym","r_sym","r_sym","r_sym","r_sym","r_sym","r_sym","r_type","r_type","r_type","r_type","r_type","r_type","r_type","r_type","set_r_info","set_r_info","set_r_info","set_r_info","set_st_info","set_st_info","sh_addr","sh_addr","sh_addr","sh_addr","sh_addralign","sh_addralign","sh_addralign","sh_addralign","sh_entsize","sh_entsize","sh_entsize","sh_entsize","sh_flags","sh_flags","sh_flags","sh_flags","sh_info","sh_info","sh_info","sh_info","sh_link","sh_link","sh_link","sh_link","sh_name","sh_name","sh_name","sh_name","sh_offset","sh_offset","sh_offset","sh_offset","sh_size","sh_size","sh_size","sh_size","sh_type","sh_type","sh_type","sh_type","si_boundto","si_boundto","si_flags","si_flags","st_bind","st_bind","st_bind","st_bind","st_info","st_info","st_info","st_info","st_name","st_name","st_name","st_name","st_other","st_other","st_other","st_other","st_shndx","st_shndx","st_shndx","st_shndx","st_size","st_size","st_size","st_size","st_type","st_type","st_type","st_type","st_value","st_value","st_value","st_value","st_visibility","st_visibility","st_visibility","st_visibility","symbol_base","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vd_aux","vd_cnt","vd_flags","vd_hash","vd_ndx","vd_next","vd_version","vda_name","vda_next","version","vn_aux","vn_cnt","vn_file","vn_next","vn_version","vna_flags","vna_hash","vna_name","vna_next","vna_other","Big","BigEndian","Endian","Endianness","I16","I16Bytes","I32","I32Bytes","I64","I64Bytes","Little","LittleEndian","NativeEndian","U16","U16Bytes","U32","U32Bytes","U64","U64Bytes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","default","default","default","default","default","default","default","default","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_big_endian","from_big_endian","from_big_endian","from_big_endian","from_little_endian","get","get","get","get","get","get","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","is_big_endian","is_big_endian","is_big_endian","is_big_endian","is_little_endian","new","new","new","new","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","read_i16","read_i16_bytes","read_i32","read_i32_bytes","read_i64","read_i64_bytes","read_u16","read_u16_bytes","read_u32","read_u32_bytes","read_u64","read_u64_bytes","set","set","set","set","set","set","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write_i16","write_i16_bytes","write_i32","write_i32_bytes","write_i64","write_i64_bytes","write_u16","write_u16_bytes","write_u32","write_u32_bytes","write_u64","write_u64_bytes","Pod","bytes_of","bytes_of_mut","bytes_of_slice","bytes_of_slice_mut","from_bytes","from_bytes_mut","slice_from_bytes","slice_from_bytes_mut","Absolute","Absolute","Bytes","CodeView","Comdat","Comdat","ComdatIterator","ComdatIterator","ComdatSectionIterator","Common","CompressedData","CompressedFileRange","CompressionFormat","Core","Dynamic","DynamicRelocationIterator","DynamicRelocationIterator","Elf32","Elf64","Error","Executable","Export","File","FileKind","Import","NoDynamicRelocationIterator","None","None","Object","ObjectComdat","ObjectKind","ObjectMap","ObjectMapEntry","ObjectSection","ObjectSegment","ObjectSymbol","ObjectSymbolTable","ReadRef","Relocatable","Relocation","RelocationIterator","RelocationTarget","Result","Section","Section","Section","Section","SectionIndex","SectionIterator","SectionIterator","SectionIterator","SectionRelocationIterator","Segment","Segment","SegmentIterator","SegmentIterator","StringTable","Symbol","Symbol","Symbol","Symbol","SymbolIndex","SymbolIterator","SymbolIterator","SymbolIterator","SymbolMap","SymbolMapEntry","SymbolMapName","SymbolSection","SymbolTable","SymbolTable","Undefined","Unknown","Unknown","Unknown","Zlib","addend","address","address","address","address","address","address","address","address","address","address","address","address","age","align","align","align","align","architecture","architecture","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_id","build_id","build_id","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","comdats","comdats","compressed_data","compressed_data","compressed_file_range","compressed_file_range","compressed_size","data","data","data","data","data","data","data_range","data_range","data_range","data_range","decompress","default","default","default","default","default","dynamic_relocations","dynamic_relocations","dynamic_symbol_table","dynamic_symbol_table","dynamic_symbols","dynamic_symbols","elf","encoding","endianness","endianness","entry","entry","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","exports","exports","file_range","file_range","file_range","file_range","flags","flags","flags","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get","get","gnu_debugaltlink","gnu_debugaltlink","gnu_debugaltlink","gnu_debuglink","gnu_debuglink","gnu_debuglink","guid","has_debug_symbols","has_debug_symbols","has_implicit_addend","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","imports","imports","index","index","index","index","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_64","is_64","is_common","is_common","is_definition","is_definition","is_empty","is_global","is_global","is_little_endian","is_little_endian","is_local","is_local","is_undefined","is_undefined","is_weak","is_weak","kind","kind","kind","kind","kind","kind","kind","kind","kind","len","len","library","mach_uuid","mach_uuid","mach_uuid","name","name","name","name","name","name","name","name","name","name","name","name","name_bytes","name_bytes","name_bytes","name_bytes","name_bytes","name_bytes","name_bytes","name_bytes","new","new","new","next","next","next","next","next","next","next","next","none","none","object","object_index","object_map","object_map","object_map","objects","offset","parse","parse","parse_at","path","pdb_info","pdb_info","pdb_info","read","read","read","read_at","read_at","read_at","read_bytes","read_bytes","read_bytes","read_bytes_at","read_bytes_at","read_bytes_at_until","read_slice","read_slice","read_slice","read_slice_at","read_slice_at","read_slice_at","read_string","read_string_at","relative_address_base","relative_address_base","relocations","relocations","scope","scope","section","section","section_by_index","section_by_index","section_by_name","section_by_name","section_by_name_bytes","section_by_name_bytes","section_index","section_index","sections","sections","sections","sections","segment_name","segment_name","segment_name_bytes","segment_name_bytes","segments","segments","set_addend","size","size","size","size","size","size","size","size","skip","symbol","symbol","symbol_by_index","symbol_by_index","symbol_by_index","symbol_by_index","symbol_map","symbol_map","symbol_map","symbol_table","symbol_table","symbols","symbols","symbols","symbols","symbols","symbols","target","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uncompressed_data","uncompressed_data","uncompressed_size","uncompressed_size","CompressionHeader","CompressionHeader","Dyn","Dyn","Elf","Elf","ElfComdat","ElfComdat32","ElfComdat64","ElfComdatIterator","ElfComdatIterator32","ElfComdatIterator64","ElfComdatSectionIterator","ElfComdatSectionIterator32","ElfComdatSectionIterator64","ElfDynamicRelocationIterator","ElfDynamicRelocationIterator32","ElfDynamicRelocationIterator64","ElfFile","ElfFile32","ElfFile64","ElfSection","ElfSection32","ElfSection64","ElfSectionIterator","ElfSectionIterator32","ElfSectionIterator64","ElfSectionRelocationIterator","ElfSectionRelocationIterator32","ElfSectionRelocationIterator64","ElfSegment","ElfSegment32","ElfSegment64","ElfSegmentIterator","ElfSegmentIterator32","ElfSegmentIterator64","ElfSymbol","ElfSymbol32","ElfSymbol64","ElfSymbolIterator","ElfSymbolIterator32","ElfSymbolIterator64","ElfSymbolTable","ElfSymbolTable32","ElfSymbolTable64","Endian","Endian","Endian","Endian","Endian","Endian","Endian","Endian","Endian","FileHeader","GnuHashTable","HashTable","Note","NoteHeader","NoteHeader","NoteIterator","ProgramHeader","ProgramHeader","Rel","Rel","Rela","Rela","RelocationSections","SectionHeader","SectionHeader","SectionTable","Sword","Sword","Sword","Sym","Sym","SymbolTable","VerdauxIterator","VerdefIterator","VernauxIterator","VerneedIterator","Version","VersionIndex","VersionTable","Word","Word","Word","Word","Word","Word","Word","Word","address","address","address","align","align","architecture","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_id","ch_addralign","ch_size","ch_type","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","comdats","compressed_data","compressed_file_range","d_tag","d_val","data","data","data","data","data","data","data","data_as_array","data_as_array","data_as_array","data_as_array","data_range","data_range","data_range","data_range","default","default","default","default","default","desc","dynamic","dynamic","dynamic","dynamic","dynamic","dynamic_relocations","dynamic_symbol_table","dynamic_symbols","e_ehsize","e_entry","e_flags","e_ident","e_machine","e_phentsize","e_phnum","e_phoff","e_shentsize","e_shnum","e_shoff","e_shstrndx","e_type","e_version","endian","endian","endian","entry","exports","file_range","file_range","file_range","file_range","file_range","file_range","find","find","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","gnu_debugaltlink","gnu_debuglink","gnu_hash","gnu_hash","gnu_hash","gnu_hash_header","gnu_hash_header","gnu_hash_header","gnu_verdef","gnu_verdef","gnu_verdef","gnu_verneed","gnu_verneed","gnu_verneed","gnu_versym","gnu_versym","gnu_versym","group","group","has_debug_symbols","hash","hash","hash","hash","hash_header","hash_header","hash_header","imports","index","index","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_64","is_address","is_address","is_big_endian","is_big_endian","is_class_32","is_class_32","is_class_64","is_class_64","is_common","is_definition","is_definition","is_definition","is_empty","is_empty","is_empty","is_global","is_global","is_hidden","is_little_endian","is_little_endian","is_little_endian","is_local","is_local","is_mips64el","is_mips64el","is_string","is_string","is_supported","is_supported","is_type_64","is_undefined","is_undefined","is_undefined","is_weak","iter","iter","kind","kind","kind","kind","len","len","map","matches","n_descsz","n_descsz","n_namesz","n_namesz","n_type","n_type","name","name","name","name","name","name","name","name","name","name","name_bytes","name_bytes","name_bytes","name_bytes","new","next","next","next","next","next","next","next","next","next","next","next","next","notes","notes","notes","notes","p_align","p_filesz","p_flags","p_memsz","p_offset","p_paddr","p_type","p_vaddr","parse","parse","parse","parse","parse","parse","parse","parse","phnum","phnum","program_headers","program_headers","r_addend","r_info","r_info","r_offset","r_offset","r_sym","r_sym","r_type","r_type","raw_header","raw_segments","rel","rel","rela","rela","relative_address_base","relocation_sections","relocations","scope","section","section","section","section_0","section_0","section_by_index","section_by_name","section_by_name_bytes","section_headers","section_headers","section_name","section_strings","section_strings","sections","sections","sections","sections","segment_name","segment_name_bytes","segments","sh_addr","sh_addralign","sh_entsize","sh_flags","sh_info","sh_link","sh_name","sh_offset","sh_size","sh_type","shndx","shndx_section","shnum","shnum","shstrndx","shstrndx","size","size","size","st_bind","st_info","st_name","st_other","st_shndx","st_size","st_type","st_value","st_visibility","string","string","string_section","strings","strings","strings","strings","symbol","symbol","symbol_base","symbol_by_index","symbol_by_index","symbol_name","symbol_section","symbol_table","symbol_table_by_index","symbol_table_length","symbol_table_length","symbols","symbols","symbols","symbols","symbols","symbols","tag32","tag32","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","val32","val32","version","version_index","versions"],"q":["objectobject::FileFlags","","","","","","object::RelocationKind","","object::SectionFlags","","","","object::SegmentFlags","","","","","object::SymbolFlags","","","","","object::elfobject::endianobject::pod","","","","","","","","","object::readobject::read::elfd":["AArch64 call target.","","","S + A","The size of an address value for an architecture.","Multiple definitions are allowed.","A CPU architecture.","","","A binary file format.","","","Some other COFF relocation. The value is dependent on the …","COFF file flags.","COFF segment flags.","COFF section flags.","COFF flags for a section symbol.","The selection kind for a COMDAT section group.","An uninitialized common data section.","Symbol is visible to the compilation unit.","A data section.","The symbol is for a data object.","Debug information.","Symbol is visible to dynamically linked objects.","","Some other ELF section type.","Some other ELF relocation. The value is dependent on the …","ELF file flags.","ELF segment flags.","ELF section flags.","ELF symbol flags.","Multiple definitions must match exactly.","The symbol is the name of a file. It precedes symbols …","File flags that are specific to each file format.","Generic encoding.","G + A - GotBase","S + A - GotBase","GotBase + A - P","G + A - P","","","S + A - Image","The symbol is for a code label.","Multiple definitions are allowed, and the largest is …","Symbol is visible to the static linkage unit.","Information for the linker.","","LoongArch branch offset with two trailing zeros.","","Some other Mach-O relocation. The value is dependent on …","Mach-O file flags.","Mach-O segment flags.","Mach-O section flags.","Mach-O symbol flags.","Metadata such as symbols or relocations.","","","","Multiple definitions are allowed, and the newest is …","Multiple definitions are not allowed.","No file flags.","No segment flags.","No section flags.","No symbol flags.","ELF note section.","The symbol is a null placeholder.","Some other non-loadable section.","A non-loadable string section.","","L + A - P","","","A read only data section.","A read only data section with relocations.","A loadable string section.","S + A - P","Information about how the result of the relocation …","The operation used to calculate the result of the …","","","","s390x PC-relative offset shifted right by one bit.","Multiple definitions must have the same size.","","The symbol is for a section.","Section flags that are specific to each file format.","The index of the section containing the symbol.","The kind of a section.","S + A - Section","Segment flags that are specific to each file format.","","Symbol flags that are specific to each file format.","The kind of a symbol.","A symbol scope.","An executable code section.","The symbol is for executable code.","A TLS data section.","The symbol is for a thread local storage entity.","A TLS variables section.","","","","","An uninitialized data section.","An uninitialized TLS data section.","","The section kind is unknown.","The selection kind is unknown.","The symbol kind is unknown.","Unknown scope.","","","x86 branch instruction.","x86 rip-relative addressing.","x86 rip-relative addressing in movq instruction.","x86 sign extension at runtime.","","","","Some other XCOFF relocation.","XCOFF file flags.","XCOFF section flags.","","The size of an address value for this architecture.","","","","","","","","","","","","","","","","","","","","","","","","","","","The size in bytes of an address value.","","","","","","","","","","","","","","","","","","","","","","","","","","","ELF definitions.","Types for compile-time and run-time endianness.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return true if this section contains zerofill data.","Tools for converting file format structures to and from …","Interface for reading object files.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>abi_version</code> field in the ELF file header.","<code>Characteristics</code> field in the COFF file header.","<code>e_flags</code> field in the ELF file header.","<code>f_flags</code> field in the XCOFF file header.","<code>flags</code> field in the Mach-O file header.","<code>os_abi</code> field in the ELF file header.","Whether the relocation is relative to the place.","The relocation type.","<code>Characteristics</code> field in the section header.","<code>flags</code> field in the section header.","<code>s_flags</code> field in the section header.","<code>sh_flags</code> field in the section header.","<code>Characteristics</code> field in the segment header.","<code>flags</code> field in the segment header.","<code>initprot</code> field in the segment header.","<code>maxprot</code> field in the segment header.","<code>p_flags</code> field in the segment header.","<code>Number</code> field in the auxiliary symbol for the section.","<code>n_desc</code> field in the Mach-O symbol.","<code>Selection</code> field in the auxiliary symbol for the section.","<code>st_info</code> field in the ELF symbol.","<code>st_other</code> field in the ELF symbol.","Section compression header.","Section compression header.","Configuration alternative created.","Direct binding enabled.","Disp reloc applied at build time.","Disp reloc applied at run-time.","Object is modified after built.","Filtee terminates filters search.","Set RTLD_GLOBAL for this object.","Global auditing required.","Set RTLD_GROUP for this object.","","Set RTLD_INITFIRST for this object.","Object is used to interpose.","Trigger filtee loading at runtime.","Ignore default lib search path.","Set RTLD_NODELETE for this object.","Object has no-direct binding.","Object can’t be dldump’ed.","","","Set RTLD_NOOPEN for this object.","","Set RTLD_NOW for this object.","$ORIGIN must be handled.","","Singleton symbols are used.","","Object has individual interposers.","","No lazy binding for this object","Object may use DF_ORIGIN","Module uses the static TLS model","Symbol resolutions starts here","Object contains text relocations","","","","Object auditing.","Shared object to load before self","Process relocations of object","","Configuration information.","For debugging; unspecified","Dependency auditing.","Start of encoded range","Feature selection (DTF_*).","Shared object to get values from","Address of termination function","Array with addresses of fini fct","Size in bytes of DT_FINI_ARRAY","Flags for the object being loaded","State flags, see DF_1_* below.","Start of conflict section","Size of conflict section","GNU-style hash table.","Library list","Size of library list","Prelinking timestamp","Address of symbol hash table","End of OS-specific","End of processor-specific","","Address of init function","Array with addresses of init fct","Size in bytes of DT_INIT_ARRAY","Address of PLT relocs","Start of OS-specific","Start of processor-specific","Address of aux .dynamic.","Base address","(O32)Size of compact rel section.","Address of CONFLICT section","Number of CONFLICT entries","Flags indicating for C++ flavor.","Delta C++ class definition.","Delta symbols that hold the class declaration.","Number of entries in DT_MIPS_DELTA_CLASSSYM.","Number of entries in DT_MIPS_DELTA_CLASS.","Delta C++ class instances.","Number of entries in DT_MIPS_DELTA_INSTANCE.","Delta relocations.","Number of entries in DT_MIPS_DELTA_RELOC.","Delta symbols that Delta relocations refer to.","Number of entries in DT_MIPS_DELTA_SYM.","","Flags","First GOT entry in DYNSYM","GP value for aux GOTs.","","Number of GOT page table entries","Checksum","Address of .interface.","Size of the .interface section.","Version string (string tbl index)","Address of LIBLIST section","Number of LIBLIST entries","","","Number of local GOT entries","","Address of .options.","Default suffix of dso to be added by rld on dlopen() calls.","","The address of .got.plt in an executable using the new …","","Address of run time loader map.","An alternative description of the classic MIPS RLD_MAP …","Address of rld_text_rsolve function stored in GOT.","Runtime linker interface version","The base of the PLT in an executable using the new non-PIC …","","Number of DYNSYM entries","Timestamp","First external DYNSYM","","","Move table.","Name of needed library","Address of _gp.","Marks end of dynamic section","Processor defined value","PLT padding.","","Type of reloc in PLT","Size in bytes of PLT relocs","Flags for DT_* entries, affecting the following DT_* entry.","","","","","","","Array with addresses of preinit fct","size in bytes of DT_PREINIT_ARRAY","Address of Rel relocs","Address of Rela relocs","","Size of one Rela reloc","Total size of Rela relocs","","Size of one Rel reloc","Total size of Rel relocs","Library search path (deprecated)","Library search path","Name of shared object","","Size of string table","Address of string table","Start symbol search here","Size of one symbol table entry","Entry size of syminfo","Syminfo table.","Size of syminfo table (in bytes)","Address of symbol table","Address of SYMTAB_SHNDX section","Reloc might modify .text","","","","","Address of version definition table","Number of version definitions","Address of table with needed versions","Number of needed versions","","Dynamic section entry.","Dynamic section entry.","PA-RISC 1.0 big-endian.","PA-RISC 1.1 big-endian.","PA-RISC 2.0 big-endian.","All addresses must be &lt; 2GB.","Relocations for relaxing exist.","NB conflicts with EF_ARM_VFP_FLOAT","NB conflicts with EF_ARM_SOFT_FLOAT","8-bit structure alignment is in use","","","","","","","","","","","","","","","","","","","","","","","","Bitmask for <code>EF_AVR_ARCH_*</code>.","","","","","","","","","","","","","","","","","","","If set, it is assumed that the elf file uses local symbols …","","","","","","64-bit ABI","arch. version mask","os-specific flags","Uses GPRs, 64-bit FPRs and the stack for parameter passing","Additional properties of the base ABI type, including the …","Uses GPRs, 32-bit FPRs and the stack for parameter passing","Uses GPRs and the stack for parameter passing","Uses relocation types directly writing to immediate slots","","Mask for selecting EF_MIPS_ABI_ variant","","EABI in 32-bit mode","EABI in 64-bit mode","The first MIPS 32 bit ABI","O32 ABI extended for 64-bit architectures","","MIPS architecture level.","-mips1 code.","-mips2 code.","-mips3 code.","MIPS32 code.","MIPS32r2 code.","MIPS32r6 code","-mips4 code.","-mips5 code.","MIPS64 code.","MIPS64r2 code.","MIPS64r6 code","Uses PIC calling sequence.","Uses FP64 (12 callee-saved).","Uses IEEE 754-2008 NaN encoding.","A .noreorder directive was used.","Contains PIC code.","","Architecture version.","Program uses arch. extensions.","Allow lazy swapping.","Program expects little endian.","No kernel assisted branch prediction.","Trap nil pointer dereference.","Program expects wide mode.","PowerPC64 bits specifying ABI.","PowerPC embedded flag","PowerPC -mrelocatable flag","PowerPC -mrelocatable-lib flag","","","","","","","High GPRs kernel facility needed.","","","","","","","","","","","","","","","","","","","","","","","","","","","generic V8+ features","","HAL R1 extensions","little endian data","Sun UltraSPARC1 extensions","Sun UltraSPARCIII extensions","32-bit object.","64-bit object.","Invalid class.","End of OS-specific compression types.","End of processor-specific compression types.","Start of OS-specific compression types.","Start of processor-specific compression types.","ZLIB/DEFLATE algorithm.","2’s complement, little endian.","2’s complement, big endian.","Invalid data encoding.","File identification bytes stored in <code>Ident::magic</code>.","IBM AIX.","ARM.","ARM EABI.","AROS","Nuxi CloudABI","FenixOS","FreeBSD.","Object uses GNU ELF extensions.","HP-UX.","GNU/Hurd.","SGI Irix.","Object uses GNU ELF extensions.","Novell Modesto.","NetBSD.","UNIX System V ABI.","Hewlett-Packard Non-Stop Kernel.","OpenBSD.","OpenVMS.","Sun Solaris.","Standalone (embedded) application.","UNIX System V ABI.","Compaq TRU64 UNIX.","Note name for core files.","GNU entries in the note section have this name.","Note name for linux core files.","OS descriptor for <code>NT_GNU_ABI_TAG</code>.","OS descriptor for <code>NT_GNU_ABI_TAG</code>.","OS descriptor for <code>NT_GNU_ABI_TAG</code>.","OS descriptor for <code>NT_GNU_ABI_TAG</code>.","Solaris entries in the note section have this name.","Intel 80386","Freescale 56800EX DSC","Motorola MC68HC05 microcontroller","Motorola MC68HC08 microcontroller","Motorola MC68HC11 microcontroller","Motorola M68HC12","Motorola MC68HC16 microcontroller","Motorola m68k family","Renesas 78KOR","Intel 8051 and variants","Intel 80860","Motorola m88k family","Intel 80960","ARM AARCH64","Digital Alpha","Altera Nios II","AMD GPU","Argonaut RISC Core","Arca RISC","ARC International ARCompact","Synopsys ARCompact V2","ARM","Atmel AVR 8-bit microcontroller","Amtel 32-bit microprocessor","Beyond BA1","Beyond BA2","Analog Devices Blackfin DSP","Linux BPF – in-kernel virtual machine","Infineon C16x/XC16x","Paneve CDP","Freescale Communication Engine RISC","CloudShield","Cognitive Smart Memory Processor","Motorola Coldfire","Bluechip CoolEngine","KIPO-KAIST Core-A 1st gen.","KIPO-KAIST Core-A 2nd gen.","National Semi. CompactRISC","National Semi. CompactRISC CR16","Cray NV2 vector architecture","Axis Communications 32-bit emb.proc","National Semi. CompactRISC CRX","C-SKY","CSR Kalimba","NVIDIA CUDA","Cypress M8C","Mitsubishi D10V","Mitsubishi D30V","New Japan Radio (NJR) 24-bit DSP","Microchip Technology dsPIC30F","Icera Semi. Deep Execution Processor","Cyan Technology eCOG16","Cyan Technology eCOG1X","Cyan Technology eCOG2","KM211 KMX16","KM211 KMX8","Freescale Extended Time Processing Unit","eXcess configurable cpu","Fujitsu F2MC16","Digital Alpha","Element 14 64-bit DSP Processor","Fujitsu FR20","Fujitsu FR30","FTDI Chip FT32","Siemens FX66 microcontroller","Hitachi H8S","Hitachi H8/300","Hitachi H8/300H","Hitachi H8/500","QUALCOMM Hexagon","Harvard University machine-independent object files","Intel MCU","Intel Merced","Ubicom IP2xxx","Infineon Technologies 32-bit emb.proc","Intel K10M","KM211 KM32","KM211 KMX32","KM211 KVARC","Intel L10M","RISC for Lattice FPGA","Loongson LoongArch","Renesas M16C","AT&amp;T WE 32100","Renesas M32C","Mitsubishi M32R","M2000 Reconfigurable RISC","MAX processor","Dallas Semi. MAXQ30 mc","Microchip 8-bit PIC(r)","MCST Elbrus","Toyota ME16 processor","Imagination Tech. META","Xilinx MicroBlaze","MIPS R3000 big-endian","MIPS R3000 little-endian","Stanford MIPS-X","Fujitsu MMA Multimedia Accelerator","STMicroelectronics 64bit VLIW DSP","Donald Knuth’s educational 64-bit proc","Matsushita MN10200","Matsushita MN10300","Moxie processor","Texas Instruments msp430","Sony nCPU embeeded RISC","Denso NDR1 microprocessor","Andes Tech. compact code emb. RISC","No machine","Nanoradio Optimized RISC","National Semi. 32000","Open8 RISC","OpenRISC 32-bit embedded processor","HPPA","Siemens PCP","Digital PDP-10","Digital PDP-11","Sony DSP Processor","picoJava","PowerPC","PowerPC 64-bit","SiTera Prism","Renesas R32C","Motorola RCE","TRW RH-32","RISC-V","Renesas RL78","Freescale RS08","Renesas RX","IBM System/370","IBM S390","Solana Binary Format","Sunplus S+core7 RISC","Sharp embedded microprocessor","Seiko Epson C17","Seiko Epson S1C33 family","Hitachi SH","Analog Devices SHARC family","Infineon Tech. SLE9X","Trebia SNP 1000","SUN SPARC","Sun’s “v8plus”","SPARC v9 64-bit","IBM SPU/SPC","STMicroelectronic ST100 processor","STMicroelectronics ST19 8 bit mc","STMicroelectronics ST200","STmicroelectronics ST7 8 bit mc","STMicroelectronics ST9+ 8/16 mc","Motorola Start*Core processor","STMicroelectronics STM8","STMicroelectronics STxP7x","Silicon Graphics SVx","Tileta TILE64","Tilera TILE-Gx","Tilera TILEPro","Advanced Logic Corp. Tinyj emb.fam","Texas Instruments App. Specific RISC","Texas Instruments TMS320C2000 DSP","Texas Instruments TMS320C55x DSP","Texas Instruments TMS320C6000 DSP","Texas Instruments Prog. Realtime Unit","Thompson Multimedia General Purpose Proc","Tenor Network TPC","Siemens Tricore","NXP Semi. TriMedia","Altium TSK3000","PKU-Unity &amp; MPRC Peking Uni. mc series","NEC V800 series","NEC v850","Digital VAX","Alphamosaic VideoCore","Broadcom VideoCore III","Broadcom VideoCore V","Controls and Data Services VISIUMcore","Fujitsu VPP500","AMD x86-64 architecture","XMOS xCORE","Motorola XGATE","New Japan Radio (NJR) 16-bit DSP","Tensilica Xtensa Architecture","Zilog Z80","LSI Logic 16-bit DSP Processor","Core file.","Shared object file.","Executable file.","OS-specific range end.","Processor-specific range end.","OS-specific range start.","Processor-specific range start.","No file type.","Relocatable file.","Current ELF version.","Invalid ELF version.","The header at the start of every 32-bit ELF file.","The header at the start of every 64-bit ELF file.","Mark group as COMDAT.","Header of <code>SHT_GNU_HASH</code> section.","Header of <code>SHT_HASH</code> section.","Magic number and other information.","","","","","","","","","Require exact match","","Ignore interface version","","","x86 io permission bitmap (1=deny).","i386 TLS slots (struct user_desc).","ARM hardware breakpoint registers.","ARM hardware watchpoint registers.","ARM Scalable Vector Extension registers.","ARM system call number.","ARM TLS register.","ARM VFP/NEON registers.","Contains copy of asrset struct.","Contains copy of auxv array.","Contains information about mapped files.","Contains copy of fpregset struct.","ABI information.","Build ID bits as generated by <code>ld --build-id</code>.","Version note generated by GNU gold containing a version …","Synthetic hwcap information.","Program property.","Contains copy of gwindows struct.","Contains copy of lwpinfo struct.","Contains copy of lwpstatus struct.","MIPS DSP ASE registers.","MIPS floating-point mode.","String from sysinfo(SI_PLATFORM).","Data Stream Control Register.","Event Based Branch Registers.","Memory Protection Keys registers.","Performance Monitor Registers.","Program Priority Register.","PowerPC SPE/EVR registers.","Target Address Register.","TM checkpointed Data Stream Control Register.","TM checkpointed FPR Registers.","TM checkpointed GPR Registers.","TM checkpointed Program Priority Register.","TM checkpointed Target Address Register.","TM checkpointed VMX Registers.","TM checkpointed VSX Registers.","TM Special Purpose Registers.","PowerPC Altivec/VMX registers.","PowerPC VSX registers.","Contains copy of prcred struct.","Contains copy of fpregset struct.","Contains copy of fprxregset struct.","Contains copy of prpsinfo struct.","Contains copy of prstatus struct.","Contains copy of user_fxsr_struct.","Contains copy of prxregset struct.","Contains copy of psinfo struct.","Contains copy of pstatus struct.","s390 control registers.","s390 guarded storage broadcast control block.","s390 guarded storage registers.","s390 upper register halves.","s390 breaking event address.","s390 prefix register.","s390 runtime instrumentation.","s390 system call restart data.","s390 transaction diagnostic block.","s390 timer register.","s390 TOD clock comparator register.","s390 TOD programmable register.","s390 vector registers 16-31.","s390 vector registers 0-15 upper half.","Contains copy of siginfo_t, size might increase.","Desired pagesize for the binary.","Contains copy of task structure.","Contains copy of utsname struct.","Note type for version string.","Vmcore Device Dump Note.","x86 extended state using xsave.","Note section entry header.","Note section entry header.","Exception processing options.","record the fill value used by the linker.","HW workarounds.  ‘AND’ bits when merging.","HW workarounds.  ‘OR’ bits when merging.","Hardware workarounds performed","Undefined.","Section padding options.","Register usage information.","reserve space for desktop tools to write.","Dismiss invalid address faults?","Force floating point debug mode?","","","","FPE’s which MAY be enabled.","FPE’s which MUST be enabled.","","","page zero must be mapped.","","Force sequential memory mode?","","","R4000 end-of-page patch.","R5000 cvt.[ds].l bug.  clean=1.","R5000 end-of-page patch.","may need R8000 prefetch patch.","","","","Absolute segment.","Position-independent segment.","Segment contains the location addressed by the static base.","","","","","","","","spec insns w/o recovery","OS-specific segment flags.","Processor-specific segment flags.","","","Segment is readable.","Segment is writable.","Segment is executable.","Special value for <code>FileHeader*::e_phnum</code>.","","","","","ARM unwind segment.","Dynamic linking information.","GCC <code>.eh_frame_hdr</code> segment.","Read-only after relocation.","Indicates stack executability.","End of OS-specific segment types.","End of processor-specific segment types.","","","","","","","","","","","","","","","","arch extension bits","","","","ia64 unwind bits","Program interpreter.","Loadable program segment.","Start of OS-specific segment types.","Start of processor-specific segment types.","FP mode requirement.","","Register usage information.","Runtime procedure table.","Auxiliary information.","Program header table entry is unused.","","","Segment contains the program header table.","Reserved.","Thread-local storage segment.","Program segment header.","Program segment header.","","","","","","No flags","Hash size not power of 2","Ignore LD_LIBRARY_PATH","","","","Use quickstart","","","","","Direct 16 bit","Direct 32 bit","Direct 32 bit PLT address","Direct 8 bit","Copy symbol at runtime","Create GOT entry","32 bit GOT entry","Load from 32 bit GOT entry, relaxable.","32 bit offset to GOT","32 bit PC relative offset to GOT","Adjust indirectly by program base","Create PLT entry","No reloc","PC relative 16 bit","PC relative 32 bit","PC relative 8 bit","32 bit PLT address","Adjust by program base","32-bit symbol size","TLS descriptor containing pointer to code and to argument, …","Marker of call through TLS descriptor for relaxation.","ID of module containing symbol","Offset in TLS block","Direct 32 bit for GNU version of general dynamic thread …","Direct 32 bit for general dynamic thread local data","Relocation for call to __tls_get_addr()","Tag for popl in GD TLS code","Tag for pushl in GD TLS code","GOT offset for TLS descriptor.","GOT entry for static TLS block offset","Address of GOT entry for static TLS block offset","GOT entry for negated static TLS block offset","Direct 32 bit for GNU version of local dynamic thread …","Direct 32 bit for local dynamic thread local data in LE …","Relocation for call to __tls_get_addr() in LDM code","Tag for popl in LDM TLS code","Tag for pushl in LDM TLS code","Offset relative to TLS block","Offset relative to static TLS block","Negated offset relative to static TLS block","Offset in static TLS block","Negated offset in static TLS block","Direct 12 bit.","Direct 16 bit.","Direct 20 bit.","Direct 32 bit.","Direct 64 bit.","Direct 8 bit.","Copy symbol at runtime.","Create GOT entry.","12 bit GOT offset.","16 bit GOT offset.","20 bit GOT offset.","32 bit GOT offset.","64 bit GOT offset.","32 bit PC rel. to GOT entry &gt;&gt; 1.","16 bit offset to GOT.","32 bit offset to GOT.","64 bit offset to GOT.","32 bit PC relative offset to GOT.","32 bit PC rel. GOT shifted by 1.","12 bit offset to jump slot.","16 bit offset to jump slot.","20 bit offset to jump slot.","32 bit offset to jump slot.","64 bit offset to jump slot.","32 bit rel. offset to jump slot.","STT_GNU_IFUNC relocation.","Create PLT entry.","No reloc.","PC relative 16 bit.","PC relative 16 bit shifted by 1.","PC relative 32 bit.","PC relative 32 bit shifted by 1.","PC relative 64 bit.","16 bit PC rel. PLT shifted by 1.","32 bit PC relative PLT address.","32 bit PC rel. PLT shifted by 1.","64 bit PC relative PLT address.","16 bit offset from GOT to PLT.","32 bit offset from GOT to PLT.","16 bit offset from GOT to PLT.","Adjust by program base.","ID of module containing symbol.","Offset in TLS block.","Direct 32 bit for general dynamic thread local data.","Direct 64 bit for general dynamic thread local data.","Tag for function call in general dynamic TLS code.","12 bit GOT offset for static TLS block offset.","20 bit GOT offset for static TLS block offset.","32 bit GOT offset for static TLS block offset.","64 bit GOT offset for static TLS block offset.","32 bit address of GOT entry for negated static TLS block …","64 bit address of GOT entry for negated static TLS block …","32 bit rel. offset to GOT entry for negated static TLS …","Tag for function call in local dynamic TLS code.","Direct 32 bit for local dynamic thread local data in LE …","Direct 64 bit for local dynamic thread local data in LE …","32 bit offset relative to TLS block.","64 bit offset relative to TLS block.","32 bit negated offset relative to static TLS block.","64 bit negated offset relative to static TLS block.","Tag for load insn in TLS code.","Negated offset in static TLS block.","Direct 16 bit","Direct 32 bit","Direct 8 bit","Copy symbol at runtime","Create GOT entry","16 bit PC relative GOT entry","16 bit GOT offset","32 bit PC relative GOT entry","32 bit GOT offset","8 bit PC relative GOT entry","8 bit GOT offset","Create PLT entry","No reloc","PC relative 16 bit","PC relative 32 bit","PC relative 8 bit","16 bit PC relative PLT address","16 bit PLT offset","32 bit PC relative PLT address","32 bit PLT offset","8 bit PC relative PLT address","8 bit PLT offset","Adjust by program base","32 bit module number","32 bit module-relative offset","16 bit GOT offset for GD","32 bit GOT offset for GD","8 bit GOT offset for GD","16 bit GOT offset for IE","32 bit GOT offset for IE","8 bit GOT offset for IE","16 bit GOT offset for LDM","32 bit GOT offset for LDM","8 bit GOT offset for LDM","16 bit module-relative offset","32 bit module-relative offset","8 bit module-relative offset","16 bit offset relative to static TLS block","32 bit offset relative to static TLS block","8 bit offset relative to static TLS block","32 bit TP-relative offset","Direct 16-bit.","Direct 32 bit.","Direct 64 bit.","Dir. ADD imm. from bits 11:0.","P-page-rel. GOT off. ADRP 32:12.","PC-rel. ADR imm. from bits 20:0.","Page-rel. ADRP imm. from 32:12.","Likewise; no overflow check.","Likewise for CALL.","PC-rel. cond. br. imm. from 20:2.","Copy symbol at runtime.","Create GOT entry.","GOT-relative 32-bit.","GOT-relative 64-bit.","PC-rel. GOT off. load imm. 20:2.","STT_GNU_IFUNC relocation.","PC-rel. B imm. from bits 27:2.","Create PLT entry.","GOT-rel. off. LD/ST imm. 14:3.","GOT-page-rel. GOT off. LD/ST 14:3","Dir. GOT off. LD/ST imm. 11:3.","Dir. ADD imm. from bits 11:4.","Dir. ADD imm. from bits 11:1.","Likewise for bits 11:2.","Likewise for bits 11:3.","Likewise for LD/ST; no check.","PC-rel. LD imm. from bits 20:2.","GOT-rel. off. MOV{N,Z} imm. 15:0.","Likewise for MOVK; no check.","GOT-rel. o. MOV{N,Z} imm. 31:16.","Likewise for MOVK; no check.","GOT-rel. o. MOV{N,Z} imm. 47:32.","Likewise for MOVK; no check.","GOT-rel. o. MOV{N,Z} imm. 63:48.","PC-rel. MOV{N,Z} imm. from 15:0.","Likewise for MOVK; no check.","PC-rel. MOV{N,Z} imm. from 31:16.","Likewise for MOVK; no check.","PC-rel. MOV{N,Z} imm. from 47:32.","Likewise for MOVK; no check.","PC-rel. MOV{N,Z} imm. from 63:48.","Dir. MOV{N,Z} imm. from 15:0.","Dir. MOV{N,Z} imm. from 31:16.","Dir. MOV{N,Z} imm. from 47:32.","Dir. MOVZ imm. from bits 15:0.","Likewise for MOVK; no check.","Dir. MOVZ imm. from bits 31:16.","Likewise for MOVK; no check.","Dir. MOVZ imm. from bits 47:32.","Likewise for MOVK; no check.","Dir. MOV{K,Z} imm. from 63:48.","No relocation.","Direct 32 bit.","Copy symbol at runtime.","Create GOT entry.","STT_GNU_IFUNC relocation.","Create PLT entry.","Adjust by program base.","TLS Descriptor.","Module number, 32 bit.","Module-relative offset, 32 bit.","TP-relative offset, 32 bit.","PC-relative 16-bit.","PC-relative 32-bit.","PC-relative 64-bit.","Adjust by program base.","TLS Descriptor.","Relax ADD.","Direct ADD imm. from 11:0.","Page-rel. ADRP imm. 32:12.","PC-rel. ADR immediate 20:0.","Relax BLR.","Direct LD off. from 11:3.","Relax LDR.","PC-rel. load immediate 20:2.","GOT-rel. MOVK imm. 15:0; no ck.","GOT-rel. MOV{N,Z} imm. 31:16.","direct ADD imm. from 11:0.","page-rel. ADRP imm. 32:12.","PC-relative ADR imm. 20:0.","GOT-rel. MOVK imm. 15:0.","GOT-rel. MOV{N,Z} 31:16.","Page-rel. ADRP 32:12.","Direct LD off. 11:3.","PC-rel. load imm. 20:2.","GOT-rel. MOVK 15:0.","GOT-rel. MOV{N,Z} 31:16.","DTP-rel. ADD imm. from 23:12.","DTP-rel. ADD imm. from 11:0.","Likewise; no ovfl. check.","Like 514; local dynamic model.","Like 513; local dynamic model.","Like 512; local dynamic model.","DTP-rel. LD/ST imm. 11:4.","Likewise; no check.","DTP-rel. LD/ST imm. 11:1.","Likewise; no check.","DTP-rel. LD/ST imm. 11:2.","Likewise; no check.","DTP-rel. LD/ST imm. 11:3.","Likewise; no check.","DTP-rel. LD/ST imm. 11:0.","Likewise; no check.","TLS PC-rel. load imm. 20:2.","TLS DTP-rel. MOV{N,Z} 15:0.","Likewise; MOVK; no check.","TLS DTP-rel. MOV{N,Z} 31:16.","Likewise; MOVK; no check.","TLS DTP-rel. MOV{N,Z} 47:32.","Like 516; local dynamic model.","Like 515; local dynamic model.","TP-rel. ADD imm. 23:12.","TP-rel. ADD imm. 11:0.","Likewise; no ovfl. check.","TP-rel. LD/ST off. 11:4.","Likewise; no check.","TP-rel. LD/ST off. 11:1.","Likewise; no check.","TP-rel. LD/ST off. 11:2.","Likewise; no check.","TP-rel. LD/ST off. 11:3.","Likewise; no check.","TP-rel. LD/ST off. 11:0.","Likewise; no ovfl. check.","TLS TP-rel. MOV{N,Z} 15:0.","Likewise; MOVK; no check.","TLS TP-rel. MOV{N,Z} 31:16.","Likewise; MOVK; no check.","TLS TP-rel. MOV{N,Z} 47:32.","Module number, 64 bit.","Module-relative offset, 64 bit.","TP-relative offset, 64 bit.","PC-rel. TBZ/TBNZ imm. from 15:2.","PC+4 relative 23 bit shifted","Copy symbol at runtime","","","","","","Create GOT entry","","","Add displacement to GP","GP relative 16 bit","GP relative 32 bit","GP relative 32 bit, high 16 bits","GP relative 32 bit, low 16 bits","PC+4 relative 16 bit shifted","Create PLT entry","GP relative 16 bit w/optimization","Optimization hint for LITERAL","No reloc","Direct 32 bit","Direct 64 bit","Adjust by program base","PC relative 16 bit","PC relative 32 bit","PC relative 64 bit","","","","","","","","Direct 12 bit","Direct 16 bit","Direct 32 bit","Direct 32-bit.","Direct 8 bit","Obsolete.","Obsolete.","Obsolete.","PC relative (ADD, SUB).","PC relative (ADD, SUB).","PC relative (ADD, SUB).","PC relative (ADD, SUB).","PC relative (ADD, SUB).","Deprecated, prog. base relative.","Deprecated, prog. base relative.","Program base relative (ADD,SUB).","Program base relative (ADD,SUB).","Program base relative (ADD,SUB).","Program base relative (ADD,SUB).","Program base relative (ADD,SUB).","","Adjust by program base.","PC relative 24 bit (BL, BLX).","Copy symbol at runtime","Create GOT entry","","","32 bit GOT entry","32 bit offset to GOT","12 bit, GOT entry relative to GOT origin (LDR, STR).","32 bit PC relative offset to GOT","","GOT entry.","GOT entry relative to GOT origin (LDR).","PC relative GOT entry.","","PC relative 24 bit (B, BL).","Create PLT entry","PC relative (LDC, STC).","PC relative (LDC, STC).","PC relative (LDC, STC).","Program base relative (LDC,STC).","Program base relative (LDC,STC).","Program base relative (LDC,STC).","PC relative (STR{D,H}, LDR{D,SB,H,SH}).","PC relative (STR{D,H}, LDR{D,SB,H,SH}).","PC relative (STR{D,H}, LDR{D,SB,H,SH}).","Program base relative (LDR, STR, LDRB, STRB).","Program base relative (LDR, STR, LDRB, STRB).","Program base relative (LDR, STR, LDRB, STRB).","PC relative (LDR,STR,LDRB,STRB).","PC relative (LDR,STR,LDRB,STRB).","Deprecated, prog. base relative.","Program base relative (LDR, STR, LDRB, STRB).","Program base relative (LDR, STR, LDRB, STRB).","Program base relative (LDR, STR, LDRB, STRB).","Obsolete.","Direct high 16-bit (MOVT).","Program base relative high 16 bit (MOVT).","PC relative (MOVT).","Direct 16-bit (MOVW).","Program base relative 16 bit (MOVW).","Program base relative 16 bit (MOVW).","PC relative 16-bit (MOVW).","No reloc","","Deprecated PC relative 26 bit branch.","Deprecated, 32 bit PLT address.","","32 bit PC relative.","","","PC relative 32 bit","PC relative 32-bit.","Adjust by program base","","","","","Program base relative.","","Obsolete static relocation.","","","Direct &amp; 0x7C (LDR, STR).","PC relative 12 bit (Thumb32 ADR.W).","GOT entry relative to GOT origin, 12 bit (Thumb32 LDR).","PC relative 20 bit (Thumb32 B.W).","PC relative 24 bit (Thumb32 B.W).","PC relative X &amp; 0x7E (Thumb16 CBZ, CBNZ).","Direct high 16 bit (Thumb32 MOVT).","Program base relative high 16 bit (Thumb32 MOVT).","PC relative high 16 bit (Thumb32 MOVT).","Direct 16 bit (Thumb32 MOVW).","Program base relative 16 bit (Thumb32 MOVW).","Program base relative 16 bit (Thumb32 MOVW).","PC relative 16 bit (Thumb32 MOVW).","PC relative &amp; 0xFFE (Thumb16 B).","PC relative 12 bit (Thumb32 LDR{D,SB,H,SH}).","PC relative 24 bit (Thumb32 BL).","PC relative &amp; 0x3FC (Thumb16 LDR, ADD, ADR).","PC relative &amp; 0x1FE (Thumb16 B/B).","","Reserved.","","","","","Reserved.","","Dynamic relocation.","TLS relaxation.","ID of module containing symbol","Offset in TLS block","PC-rel 32 bit for global dynamic thread local data","","12 bit GOT entry relative to GOT origin (LDR).","PC-rel 32 bit for GOT entry of static TLS block offset","PC-rel 32 bit for local dynamic thread local data","12 bit relative to TLS block (LDR, STR).","32 bit offset relative to TLS block","12 bit relative to static TLS block (LDR, STR).","32 bit offset relative to static TLS block","Offset in static TLS block","","Reserved.","","Direct 16 bit","","Direct 32 bit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","No reloc","direct 32 bit (S + A)","GOT entry in GLOB_DAT (GOT + G)","high &amp; low 16 bit ADDRGOT, (GOT + G * 4) &amp; 0xffff","(GOT + G * 4) &amp; 0xffff","PLT entry in GLOB_DAT (GOT + G)","high &amp; low 16 bit ADDRPLT, ((GOT + G * 4) &gt;&gt; 16) &amp; 0xFFFF","(GOT+G*4) &amp; 0xffff","high &amp; low 16 bit ADDR, ((S + A) &gt;&gt; 16) &amp; 0xffff","(S + A) &amp; 0xffff","32 bit adjust by program base","disp (S+A-BDATA) &amp; 0x3ffff","disp ((S+A-BDATA)&gt;&gt;1) &amp; 0x3ffff","disp ((S+A-BDATA)&gt;&gt;2) &amp; 0x3ffff","(S+A-BTEXT) &amp; 0xffff","off between got and sym (S)","12 bit disp GOT entry (G)","32 bit GOT entry (G)","offset to GOT (S + A - GOT)","high &amp; low 16 bit GOTOFF, ((S + A - GOT) &gt;&gt; 16) &amp; 0xffff","(S + A - GOT) &amp; 0xffff","PC offset to GOT (GOT + A - P)","high &amp; low 16 bit GOTPC, ((GOT + A - P) &gt;&gt; 16) &amp; 0xffff","(GOT + A - P) &amp; 0xffff","high &amp; low 16 bit GOT, (G &gt;&gt; 16) &amp; 0xffff","disp (G &gt;&gt; 2)","(G &amp; 0xffff)","PLT entry (S)","no reloc","32-bit rel (S + A - P)","disp ((S + A - P) &gt;&gt; 1) &amp; 0x7ff","disp ((S + A - P) &gt;&gt; 2) &amp; 0xff","disp ((S + A - P) &gt;&gt;1) &amp; 0x7ff","disp ((S + A - P) &gt;&gt; 1) &amp; 0x3ff","disp ((S + A - P) &gt;&gt; 2) &amp; 0x3ff","disp ((S + A - P) &gt;&gt; 1) &amp; 0xffff","disp ((S + A - P) &gt;&gt; 2) &amp; 0xffff","disp ((S+A-P) &gt;&gt;1) &amp; 0x3ffff","((S + A - P) &gt;&gt; 1) &amp; 0x3ff_ffff","disp ((S+A-P) &gt;&gt;2) &amp; 0x7f","disp ((S+A-P) &gt;&gt;1) &amp; x3ff_ffff","12 bit disp PLT entry (G)","32 bit PLT entry (G)","high &amp; low 16 bit PLT, (G &gt;&gt; 16) &amp; 0xffff","disp (G &gt;&gt; 2)","G &amp; 0xffff","32 bit adjust program base(B + A)","","","","","","","32 bit offset to TLS block","","(S+A-BTEXT) &amp; 0xffff","","","","","","","","","","","","","","","","","","","","","Direct 32 bit","copy relocation","symbol + addend, data4 LSB","symbol + addend, data4 MSB","symbol + addend, data8 LSB","symbol + addend, data8 MSB","@dtpmod(sym + add), data8 LSB","@dtpmod(sym + add), data8 MSB","@dtprel(sym + add), imm14","@dtprel(sym + add), imm22","@dtprel(sym + add), data4 LSB","@dtprel(sym + add), data4 MSB","@dtprel(sym + add), imm64","@dtprel(sym + add), data8 LSB","@dtprel(sym + add), data8 MSB","@fptr(sym + add), data4 LSB","@fptr(sym + add), data4 MSB","@fptr(sym + add), mov imm64","@fptr(sym + add), data8 LSB","@fptr(sym + add), data8 MSB","@gprel(sym + add), add imm22","@gprel(sym + add), data4 LSB","@gprel(sym + add), data4 MSB","@gprel(sym + add), mov imm64","@gprel(sym + add), data8 LSB","@gprel(sym + add), data8 MSB","symbol + addend, add imm14","symbol + addend, add imm22","symbol + addend, mov imm64","dynamic reloc, imported PLT, LSB","dynamic reloc, imported PLT, MSB","Use of LTOFF22X.","@ltoff(sym + add), add imm22","LTOFF22, relaxable.","@ltoff(sym + add), mov imm64","@ltoff(@dtpmod(sym + add)), imm22","@ltoff(@dtprel(s+a)), imm22","@ltoff(@fptr(s+a)), imm22","@ltoff(@fptr(s+a)), data4 LSB","@ltoff(@fptr(s+a)), data4 MSB","@ltoff(@fptr(s+a)), imm64","@ltoff(@fptr(s+a)), data8 LSB","@ltoff(@fptr(s+a)), data8 MSB","@ltoff(@tprel(s+a)), imm2","symbol + addend, data4 LSB","symbol + addend, data4 MSB","symbol + addend, data8 LSB","symbol + addend, data8 MSB","none","@pcrel(sym + add), ptb, call","@pcrel(sym + add), 21bit inst","@pcrel(sym + add), fchkf","@pcrel(sym + add), chk.s","@pcrel(sym + add), 22bit inst","@pcrel(sym + add), data4 LSB","@pcrel(sym + add), data4 MSB","@pcrel(sym + add), brl","@pcrel(sym + add), 64bit inst","@pcrel(sym + add), data8 LSB","@pcrel(sym + add), data8 MSB","@pltoff(sym + add), add imm22","@pltoff(sym + add), mov imm64","@pltoff(sym + add), data8 LSB","@pltoff(sym + add), data8 MSB","data 4 + REL","data 4 + REL","data 8 + REL","data 8 + REL","@secrel(sym + add), data4 LSB","@secrel(sym + add), data4 MSB","@secrel(sym + add), data8 LSB","@secrel(sym + add), data8 MSB","@segrel(sym + add), data4 LSB","@segrel(sym + add), data4 MSB","@segrel(sym + add), data8 LSB","@segrel(sym + add), data8 MSB","Addend and symbol difference","@tprel(sym + add), imm14","@tprel(sym + add), imm22","@tprel(sym + add), imm64","@tprel(sym + add), data8 LSB","@tprel(sym + add), data8 MSB","Runtime address resolving","32-bit PC relative","Runtime address resolving","52..=63 bits of 64-bit absolute address","32..=51 bits of 64-bit absolute address","12..=31 bits of 32/64-bit absolute address","0..=11 bits of 32/64-bit absolute address","16-bit in-place addition","24-bit in-place addition","32-bit in-place addition","64-bit in-place addition","8-bit in-place addition","18-bit PC-relative jump offset with two trailing zeros","23-bit PC-relative jump offset with two trailing zeros","28-bit PC-relative jump offset with two trailing zeros","Runtime memory copy in executable","GNU C++ vtable member usage","GNU C++ vtable hierarchy","52..=63 bits of 64-bit GOT entry absolute address","32..=51 bits of 64-bit GOT entry absolute address","52..=63 bits of the 64-bit offset from the PC relative …","32..=51 bits of the 64-bit offset from the PC relative …","12..=31 bits of 32/64-bit GOT entry absolute address","0..=11 bits of 32/64-bit GOT entry absolute address","The signed 32-bit offset <code>offs</code> from <code>PC &amp; 0xfffff000</code> to …","0..=11 bits of the 32/64-bit offset from the PC relative …","Runtime local indirect function resolving","Runtime PLT supporting","Mark la.abs: load absolute address for static link.","Mark external label branch: access PC relative address for …","No reloc","52..=63 bits of the 64-bit offset from the PC relative …","32..=51 bits of the 64-bit offset from the PC relative …","The signed 32-bit offset <code>offs</code> from <code>PC &amp; 0xfffff000</code> to …","Same as R_LARCH_ABS_LO12.  0..=11 bits of the 32/64-bit …","Runtime fixup for load-address","Paired with a normal relocation at the same address to …","Stack top addition (binary)","Stack top bitwise and (binary)","Assert stack top","Stack top selection (tertiary)","Stack top logical not (unary)","Pop stack top to fill 28-bit signed immediate operand with …","Pop stack top to fill 23-bit signed immediate operand with …","Pop stack top to fill 12-bit signed immediate operand","Pop stack top to fill 16-bit signed immediate operand","Pop stack top to fill 18-bit signed immediate operand with …","Pop stack top to fill 5-bit signed immediate operand","Pop stack top to fill 20-bit signed immediate operand","Pop stack top to fill an instruction","Pop stack top to fill 12-bit unsigned immediate operand","Push constant or absolute address","Duplicate stack top","Push for access GOT entry","Push PC-relative offset","Push for external function calling","Push for TLS-GD","Push for TLS-IE","Push for TLS-LE","Stack top left shift (binary)","Stack top right shift (binary)","Stack top subtraction (binary)","16-bit in-place subtraction","24-bit in-place subtraction","32-bit in-place subtraction","64-bit in-place subtraction","8-bit in-place subtraction","Runtime relocation for TLS-GD","Runtime relocation for TLS-GD","Runtime relocation for TLS-GD","Runtime relocation for TLS-GD","12..=31 bits of TLS GD GOT entry 32/64-bit absolute address","12..=31 bits of the 32/64-bit PC-relative offset to the …","51..=63 bits of TLS IE GOT entry 64-bit absolute address","32..=51 bits of TLS IE GOT entry 64-bit absolute address","52..=63 bits of the 64-bit offset from the PC-relative …","32..=51 bits of the 64-bit offset from the PC-relative …","12..=31 bits of TLS IE GOT entry 32/64-bit absolute address","0..=11 bits of TLS IE GOT entry 32/64-bit absolute address","The signed 32-bit offset <code>offs</code> from <code>PC &amp; 0xfffff000</code> to …","0..=12 bits of the 32/64-bit offset from the PC-relative …","12..=31 bits of TLS LD GOT entry 32/64-bit absolute address","12..=31 bits of the offset from <code>PC</code> to <code>GP + GD + 0x800</code>, …","52..=63 bits of TLS LE 64-bit offset from thread pointer","32..=51 bits of TLS LE 64-bit offset from thread pointer","12..=31 bits of TLS LE 32/64-bit offset from thread pointer","0..=11 bits of TLS LE 32/64-bit offset from thread pointer","Runtime relocation for TLE-IE","Runtime relocation for TLE-IE","PC relative 10 bit shifted.","PC relative 10 bit shifted.","Direct 16 bit.","Direct 16 bit.","PC relative 18 bit shifted.","PC relative 18 bit shifted.","Direct 24 bit.","Direct 24 bit.","PC relative 26 bit shifted.","PC relative 26 bit shifted.","26 bit PC relative to PLT shifted","Direct 32 bit.","Direct 32 bit.","Copy symbol at runtime","Create GOT entry","","","High 16 bit GOT entry with signed low","High 16 bit GOT entry with unsigned low","Low 16 bit GOT entry","24 bit GOT entry","24 bit offset to GOT","High 16 bit offset to GOT with signed low","High 16 bit offset to GOT with unsigned low","Low 16 bit offset to GOT","24 bit PC relative offset to GOT","High 16 bit PC relative offset to GOT with signed low","High 16 bit PC relative offset to GOT with unsigned low","Low 16 bit PC relative offset to GOT","High 16 bit with signed low.","High 16 bit with signed low","High 16 bit with unsigned low.","High 16 bit with unsigned low","Create PLT entry","Low 16 bit.","Low 16 bit","No reloc.","Keep this the last entry.","PC relative 32 bit.","Adjust by program base","","","16 bit offset in SDA.","16 bit offset in SDA","32bit absolute address","","","","","","","","","","","","","","","","","","","","No reloc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Direct 32 bit.","Low 16 bit.","PC relative 32 bit.","Low 16 bits of PCREL32.","Symbol Op Symbol relocation.","Direct 64 bit.","No reloc.","PC relative 64 bit.","Runtime copy.","Create GOT entry.","GNU C++ vtable member usage.","GNU C++ vtable hierarchy.","32 bit offset to GOT.","64 bit offset to GOT.","PC-relative GOT offset.","GOT entry offset.","Create PLT entry.","No reloc.","PLT offset (PC-relative).","Adjust by program base.","Read-only small data area.","Read-write small data area.","TLS Reloc.","TLS Module ID.","TLS Offset Within TLS Block.","TLS Offset Within TLS Block.","TLS General Dynamic.","TLS Offset From Thread Pointer.","TLS Local Dynamic.","TLS Offset From Thread Pointer.","Direct 16 bit","Direct 26 bit shifted","Direct 32 bit","","","16 bit GOT entry for function","","","","","","16 bit GOT entry","","","","","","GP relative 16 bit","GP relative 32 bit","High 16 bit","","","","","","","16 bit literal entry","Low 16 bit","No reloc","PC relative 16 bit","","","PC relative 32 bit","","","","","","Module number 32 bit","Module number 64 bit","Module-relative offset 32 bit","Module-relative offset 64 bit","Module-relative offset, high 16 bits","Module-relative offset, low 16 bits","16 bit GOT offset for GD","16 bit GOT offset for IE","16 bit GOT offset for LDM","TP-relative offset, 32 bit","TP-relative offset, 64 bit","TP-relative offset, high 16 bits","TP-relative offset, low 16 bits","Direct 16 bit.","Direct 24 bit.","Direct 32 bit.","Direct 8 bit.","Alignment requirement for linker relaxation.","Copy symbol at runtime.","Create GOT entry.","… collection annotation.","Ancient C++ vtable garbage…","16-bit offset to GOT entry.","24-bit offset to GOT entry.","32-bit offset to GOT entry.","16-bit offset from GOT.","24-bit offset from GOT.","32-bit offset from GOT.","16-bit PCrel offset to GOT.","32-bit PCrel offset to GOT.","Create PLT entry.","No reloc.","PC-relative 16-bit signed.","PC-relative 32-bit.","PC-relative 8-bit signed.","16-bit PCrel to PLT entry.","32-bit PCrel to PLT entry.","Adjust by program base.","Adjustment for next reloc as needed by linker relaxation.","ID of module containing symbol.","Offset in module TLS block.","32-bit offset for global dynamic.","GOT offset for static TLS block offset.","GOT address for static TLS block offset.","32-bit offset for local dynamic.","Module-relative offset.","Offset relative to static TLS block.","Offset in static TLS block.","Direct 16 bit","Direct 32 bit","","","","","","","","","Alignment requirement for linker relaxation.","16 bit symbol value + addend.","32 bit symbol value + addend.","8 bit symbol value + addend.","5 bit expression, shift 22.","16 bit GOT entry for function.","Direct call.","Direct call in .noat section.","Indirect call through register.","%hiadj() of function GOT entry.","%lo() of function GOT entry.","Conditional branch.","Copy symbol at runtime.","Create GOT entry.","GNU C++ vtable member usage.","GNU C++ vtable hierarchy.","16 bit GOT entry.","16 bit offset to GOT pointer.","%hiadj of offset to GOT pointer.","%lo of offset to GOT pointer.","%hiadj() of GOT entry.","%lo() of GOT entry.","16 bit GP pointer offset.","High 16 bit.","High 16 bit, adjusted.","5 bit constant expression.","6 bit constant expression.","8 bit constant expression.","Create PLT entry.","Low 16 bit.","No reloc.","PC relative 16 bit.","%hiadj of PC relative offset.","%lo of PC relative offset.","Adjust by program base.","Direct signed 16 bit.","Module number.","Module-relative offset.","16 bit GOT offset for TLS GD.","16 bit GOT offset for TLS IE.","16 bit GOT offset for TLS LDM.","16 bit module relative offset.","16 bit LE TP-relative offset.","TP-relative offset.","Direct unsigned 16 bit.","Unconditional branch.","Copy relocation.","14 bits of eff. address.","Right 14 bits of eff. address.","14 bits of eff. address.","16 bits of eff. address.","16 bits of eff. address.","16 bits of eff. address.","17 bits of eff. address.","Right 17 bits of eff. address.","Left 21 bits of eff. address.","Direct 32-bit reference.","64 bits of eff. address.","Right 14 bits of rel. address.","Left 21 bits of rel. address.","Dynamic reloc, exported PLT","64 bits function address.","","","GP-rel. address, right 14 bits.","GP-relative, right 14 bits.","GP-rel. address, right 14 bits.","16 bits GP-rel. address.","16 bits GP-rel. address.","16 bits GP-rel. address.","GP-relative, left 21 bits.","64 bits of GP-rel. address.","","Dynamic reloc, imported PLT","","LT-rel. address, right 14 bits.","LT-relative, right 14 bits.","LT-rel. address, right 14 bits.","16 bits LT-rel. address.","16 bits LT-rel. address.","16 bits LT-rel. address.","LT-relative, left 21 bits.","64 bits LT-rel. address.","LT-rel. fct. ptr., right 14 bits.","LT-rel. fct ptr, right 14 bits.","LT-rel. fct. ptr., right 14 bits.","16 bits LT-rel. function ptr.","16 bits LT-rel. function ptr.","16 bits LT-rel. function ptr.","LT-rel. fct ptr, left 21 bits.","32 bits LT-rel. function pointer.","64 bits LT-rel. function ptr.","LT-TP-rel. address, right 14 bits.","14 bits LT-TP-rel. address.","LT-TP-rel. address, right 14 bits.","LT-TP-rel. address, right 14 bits.","16 bits LT-TP-rel. address.","16 bits LT-TP-rel. address.","16 bits LT-TP-rel. address.","LT-TP-rel. address, left 21 bits.","64 bits LT-TP-rel. address.","No reloc.","PC rel. address, right 14 bits.","Right 14 bits of rel. address.","PC-rel. address, right 14 bits.","16 bits PC-rel. address.","16 bits PC-rel. address.","16 bits PC-rel. address.","17 bits of rel. address.","Right 17 bits of rel. address.","Left 21 bits of rel. address.","22 bits PC-rel. address.","32-bit rel. address.","64 bits PC-rel. address.","Right 14 bits of fdesc address.","Left 21 bits of fdesc address.","32 bits function address.","PLT-rel. address, right 14 bits.","PLT rel. address, right 14 bits.","PLT-rel. address, right 14 bits.","16 bits PLT-rel. address.","16 bits LT-rel. address.","16 bits PLT-rel. address.","PLT rel. address, left 21 bits.","32 bits section rel. address.","64 bits section rel. address.","No relocation, set segment base.","32 bits segment rel. address.","64 bits segment rel. address.","DTP module 32-bit.","DTP module 64-bit.","DTP offset 32-bit.","DTP offset 32-bit.","GD 14-bit right.","GD 21-bit left.","GD call to __t_g_a.","","","LD module 14-bit right.","LD module 21-bit left.","LD module call to __t_g_a.","LD offset 14-bit right.","LD offset 21-bit left.","","","","","TP-rel. address, right 14 bits.","TP-rel. address, right 14 bits.","TP-rel. address, right 14 bits.","16 bits TP-rel. address.","16 bits TP-rel. address.","16 bits TP-rel. address.","TP-rel. address, left 21 bits.","32 bits TP-rel. address.","64 bits TP-rel. address.","16bit address, word aligned","","","16bit absolute address","half16ds* (S + A) &gt;&gt; 2","adjusted high 16bits.","high 16bits of address.","","","half16 #higher(S + A)","half16 #highera(S + A)","half16 #highest(S + A)","half16 #highesta(S + A)","lower 16bits of address","half16ds  #lo(S + A) &gt;&gt; 2","26bit address, word aligned","word30 (S + A - P) &gt;&gt; 2","32bit absolute address","doubleword64 S + A","","doubleword64 (sym+add)@dtpmod","half16* (sym+add)@dtprel","half16ds* (sym+add)@dtprel","half16  (sym+add)@dtprel@ha","half16  (sym+add)@dtprel@h","","","half16  (sym+add)@dtprel@higher","half16  (sym+add)@dtprel@highera","half16  (sym+add)@dtprel@highest","half16  (sym+add)@dtprel@highesta","half16  (sym+add)@dtprel@l","half16ds (sym+add)@dtprel@l","doubleword64 (sym+add)@dtprel","","","half16ds* (G + A) &gt;&gt; 2","","","","half16ds  #lo(G + A) &gt;&gt; 2","half16ds* (sym+add)@got@dtprel","half16  (sym+add)@got@dtprel@ha","half16  (sym+add)@got@dtprel@h","half16ds (sym+add)@got@dtprel@l","half16* (sym+add)@got@tlsgd","half16  (sym+add)@got@tlsgd@ha","half16  (sym+add)@got@tlsgd@h","half16  (sym+add)@got@tlsgd@l","half16* (sym+add)@got@tlsld","half16  (sym+add)@got@tlsld@ha","half16  (sym+add)@got@tlsld@h","half16  (sym+add)@got@tlsld@l","half16ds* (sym+add)@got@tprel","half16  (sym+add)@got@tprel@ha","half16  (sym+add)@got@tprel@h","half16ds (sym+add)@got@tprel@l","GNU extension to support local ifunc.","GNU extension to support local ifunc.","","","","","","half16ds  #lo(L + A) &gt;&gt; 2","","doubleword64 L + A","half16* M + A","half16ds* (M + A) &gt;&gt; 2","half16 #ha(M + A)","half16 #hi(M + A)","half16 #lo(M + A)","half16ds  #lo(M + A) &gt;&gt; 2","","doubleword64 L + A - P","PC relative 16 bit","","","half16   (sym+add-.)","half16   (sym+add-.)@ha","half16   (sym+add-.)@h","half16   (sym+add-.)@l","PC-rel. 26 bit, word aligned","","doubleword64 S + A - P","","","half16ds* (R + A) &gt;&gt; 2","","","","half16ds  #lo(R + A) &gt;&gt; 2","none    (sym+add)@tls","none    (sym+add)@tlsgd","none    (sym+add)@tlsld","doubleword64 .TOC","half16* S + A - .TOC","half16ds* (S + A - .TOC.) &gt;&gt; 2","half16 #ha(S + A - .TOC.)","half16 #hi(S + A - .TOC.)","half16 #lo(S + A - .TOC.)","half16ds  #lo(S + A - .TOC.) &gt;&gt; 2","none","half16* (sym+add)@tprel","half16ds* (sym+add)@tprel","half16  (sym+add)@tprel@ha","half16  (sym+add)@tprel@h","","","half16  (sym+add)@tprel@higher","half16  (sym+add)@tprel@highera","half16  (sym+add)@tprel@highest","half16  (sym+add)@tprel@highesta","half16  (sym+add)@tprel@l","half16ds (sym+add)@tprel@l","doubleword64 (sym+add)@tprel","","","doubleword64 S + A","16bit address, 2 bits ignored","","","16bit absolute address","adjusted high 16bit","high 16bit of absolute address","lower 16bit of absolute address","26bit address, 2 bits ignored.","32bit absolute address","","like EMB_RELSDA, adjusted high 16","like EMB_RELSDA, but high 16 bit","like EMB_RELSDA, but lower 16 bit","like EMB_SDA21, adjusted high 16","like EMB_SDA21, but high 16 bit","like EMB_SDA21, but lower 16 bit","word32  (sym+add)@dtpmod","half16*(sym+add)@dtprel","half16  (sym+add)@dtprel@ha","half16  (sym+add)@dtprel@h","half16  (sym+add)@dtprel@l","word32  (sym+add)@dtprel","","","","","","","","16 bit relative offset in SDA","","","","","16 bit offset in SDA","","","","","","","","","half16* (sym+add)@got@dtprel","half16* (sym+add)@got@dtprel@ha","half16* (sym+add)@got@dtprel@h","half16* (sym+add)@got@dtprel@l","half16* (sym+add)@got@tlsgd","half16  (sym+add)@got@tlsgd@ha","half16  (sym+add)@got@tlsgd@h","half16  (sym+add)@got@tlsgd@l","half16* (sym+add)@got@tlsld","half16  (sym+add)@got@tlsld@ha","half16  (sym+add)@got@tlsld@h","half16  (sym+add)@got@tlsld@l","half16* (sym+add)@got@tprel","half16  (sym+add)@got@tprel@ha","half16  (sym+add)@got@tprel@h","half16  (sym+add)@got@tprel@l","GNU extension to support local ifunc.","","","","","","","","","","PC relative 16 bit","","","half16   (sym+add-.)","half16   (sym+add-.)@ha","half16   (sym+add-.)@h","half16   (sym+add-.)@l","PC relative 26 bit","","","","","","","","none    (sym+add)@tls","none    (sym+add)@tlsgd","none    (sym+add)@tlsld","This is a phony reloc to handle any old fashioned TOC16 …","half16* (sym+add)@tprel","half16  (sym+add)@tprel@ha","half16  (sym+add)@tprel@h","half16  (sym+add)@tprel@l","word32  (sym+add)@tprel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","No reloc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Direct 10 bit","Direct 11 bit","Direct 13 bit","Direct 16 bit","Direct 22 bit","Direct 32 bit","Direct 5 bit","Direct 6 bit","Direct 64 bit","Direct 7 bit","Direct 8 bit","Copy symbol at runtime","PC relative 16 bit","PC relative 32 bit","PC relative 64 bit","PC relative 8 bit","Create GOT entry","was part of v9 ABI but was removed","","","Truncated 10 bit GOT entry","13 bit GOT entry","22 bit GOT entry shifted","","","","","","","Direct high 12 of 44 bit","Top 22 bits of direct 64 bit","High 22 bit","High 22 bit PLT entry","High 22 bit complemented","High middle 10 bits of …","","","Create PLT entry","Direct low 10 of 44 bit","Low middle 22 bits of …","Truncated 10 bit","Truncated 10 bit PLT entry","Truncated 11 bit complemented","Direct mid 22 of 44 bit","No reloc","10bit with secondary 13bit addend","PC relative 10 bit truncated","PC relative 22 bit shifted","PC rel trunc 10 bit PLT entry","PC rel high 22 bit PLT entry","PC rel 32 bit ref to PLT entry","Top 22 bits of pc rel 64 bit","High middle 10 bit of …","Low miggle 22 bits of …","Direct 32 bit ref to PLT entry","Direct 64 bit ref to PLT entry","Global register usage","Adjust by program base","","","","","","","","","","","","","","","","","","","","","","","","","","","","Direct 16 bit unaligned","Direct 32 bit unaligned","Direct 64 bit unaligned","","PC relative 16 bit shifted","PC relative 19 bit shifted","PC relative 22 bit shifted","PC relative 30 bit shifted","30 bit PC relative PLT address","Direct 16 bit","PC relative 16 bit","Direct 32 bit","PC relative 32 bit","Direct 64 bit","PC relative 64 bit","Direct 8 bit","PC relative 8 bit","X1 pipe branch offset","Copy relocation","X1 pipe destination 8-bit","Create GOT entry","GNU C++ vtable member usage","GNU C++ vtable hierarchy","hword 0 16-bit","last hword 0 16-bit","hword 1 16-bit","last hword 1 16-bit","hword 2 16-bit","last hword 2 16-bit","hword 3 16-bit","X0 pipe hword 0","X0 pipe hword 0 GOT offset","X0 pipe last hword 0","X0 pipe last hword 0 GOT offset","X0 pipe PC-rel last hword 0","X0 pipe PC-rel PLT last hword 0","X0 pipe last hword 0 GD off","X0 pipe last hword 0 IE off","X0 pipe last hword 0 LE off","X0 pipe PC relative hword 0","X0 pipe PC-rel PLT hword 0","X0 pipe hword 0 TLS GD offset","X0 pipe hword 0 TLS IE offset","X0 pipe hword 0 TLS LE offset","X0 pipe hword 1","X0 pipe last hword 1","X0 pipe last hword 1 GOT offset","X0 pipe PC-rel last hword 1","X0 pipe PC-rel PLT last hword 1","X0 pipe last hword 1 GD off","X0 pipe last hword 1 IE off","X0 pipe last hword 1 LE off","X0 pipe PC relative hword 1","X0 pipe PC-rel PLT hword 1","X0 pipe hword 2","X0 pipe last hword 2","X0 pipe PC-rel last hword 2","X0 pipe PC-rel PLT last hword 2","X0 pipe PC relative hword 2","X0 pipe PC-rel PLT hword 2","X0 pipe hword 3","X0 pipe PC relative hword 3","X0 pipe PC-rel PLT hword 3","X1 pipe hword 0","X1 pipe hword 0 GOT offset","X1 pipe last hword 0","X1 pipe last hword 0 GOT offset","X1 pipe PC-rel last hword 0","X1 pipe PC-rel PLT last hword 0","X1 pipe last hword 0 GD off","X1 pipe last hword 0 IE off","X1 pipe last hword 0 LE off","X1 pipe PC relative hword 0","X1 pipe PC-rel PLT hword 0","X1 pipe hword 0 TLS GD offset","X1 pipe hword 0 TLS IE offset","X1 pipe hword 0 TLS LE offset","X1 pipe hword 1","X1 pipe last hword 1","X1 pipe last hword 1 GOT offset","X1 pipe PC-rel last hword 1","X1 pipe PC-rel PLT last hword 1","X1 pipe last hword 1 GD off","X1 pipe last hword 1 IE off","X1 pipe last hword 1 LE off","X1 pipe PC relative hword 1","X1 pipe PC-rel PLT hword 1","X1 pipe hword 2","X1 pipe last hword 2","X1 pipe PC-rel last hword 2","X1 pipe PC-rel PLT last hword 2","X1 pipe PC relative hword 2","X1 pipe PC-rel PLT hword 2","X1 pipe hword 3","X1 pipe PC relative hword 3","X1 pipe PC-rel PLT hword 3","X0 pipe 8-bit","X0 pipe “addi” for TLS GD/IE","X0 pipe “addi” for TLS GD","X1 pipe 8-bit","X1 pipe “addi” for TLS GD/IE","X1 pipe “addi” for TLS GD","Y0 pipe 8-bit","Y0 pipe “addi” for TLS GD/IE","Y0 pipe “addi” for TLS GD","Y1 pipe 8-bit","Y1 pipe “addi” for TLS GD/IE","Y1 pipe “addi” for TLS GD","Create PLT entry","X1 pipe jump offset","X1 pipe jump offset to PLT","X1 pipe mfspr","X0 pipe mm “end”","X0 pipe mm “start”","X1 pipe mtspr","No reloc","Adjust by program base","X0 pipe shift amount","X1 pipe shift amount","Y0 pipe shift amount","Y1 pipe shift amount","32-bit ID of symbol’s module","64-bit ID of symbol’s module","32-bit offset in TLS block","64-bit offset in TLS block","“jal” for TLS GD","“ld_tls” for TLS IE","32-bit offset in static TLS block","64-bit offset in static TLS block","Direct 16 bit","PC relative 16 bit","Direct 32 bit","PC relative 32 bit","Direct 8 bit","PC relative 8 bit","X1 pipe branch offset","Copy relocation","X1 pipe destination 8-bit","Create GOT entry","GNU C++ vtable member usage","GNU C++ vtable hierarchy","High 16 bit, adjusted","High 16 bit","X0 pipe 16-bit","X0 pipe 16-bit GOT offset","X0 pipe ha() 16-bit GOT offset","X0 pipe high 16-bit GOT offset","X0 pipe low 16-bit GOT offset","X0 pipe high 16-bit, adjusted","X0 pipe PC relative ha() 16 bit","X0 pipe high 16-bit","X0 pipe PC relative high 16 bit","X0 pipe low 16-bit","X0 pipe PC relative low 16 bit","X0 pipe PC relative 16 bit","X0 pipe 16-bit TLS GD offset","X0 pipe ha() 16-bit TLS GD offset","X0 pipe high 16-bit TLS GD offset","X0 pipe low 16-bit TLS GD offset","X0 pipe 16-bit TLS IE offset","X0 pipe ha() 16-bit TLS IE offset","X0 pipe high 16-bit TLS IE offset","X0 pipe low 16-bit TLS IE offset","X0 pipe 16-bit TLS LE offset","X0 pipe ha() 16-bit TLS LE offset","X0 pipe high 16-bit TLS LE offset","X0 pipe low 16-bit TLS LE offset","X1 pipe 16-bit","X1 pipe 16-bit GOT offset","X1 pipe ha() 16-bit GOT offset","X1 pipe high 16-bit GOT offset","X1 pipe low 16-bit GOT offset","X1 pipe high 16-bit, adjusted","X1 pipe PC relative ha() 16 bit","X1 pipe high 16-bit","X1 pipe PC relative high 16 bit","X1 pipe low 16-bit","X1 pipe PC relative low 16 bit","X1 pipe PC relative 16 bit","X1 pipe 16-bit TLS GD offset","X1 pipe ha() 16-bit TLS GD offset","X1 pipe high 16-bit TLS GD offset","X1 pipe low 16-bit TLS GD offset","X1 pipe 16-bit TLS IE offset","X1 pipe ha() 16-bit TLS IE offset","X1 pipe high 16-bit TLS IE offset","X1 pipe low 16-bit TLS IE offset","X1 pipe 16-bit TLS LE offset","X1 pipe ha() 16-bit TLS LE offset","X1 pipe high 16-bit TLS LE offset","X1 pipe low 16-bit TLS LE offset","X0 pipe 8-bit","X0 pipe “addi” for TLS GD","X1 pipe 8-bit","X1 pipe “addi” for TLS GD","Y0 pipe 8-bit","Y0 pipe “addi” for TLS GD","Y1 pipe 8-bit","Y1 pipe “addi” for TLS GD","Create PLT entry","X1 pipe jump offset","X1 pipe jump offset to PLT","Low 16 bit","X1 pipe mfspr","X0 pipe mm “end”","X1 pipe mm “end”","X0 pipe mm “start”","X1 pipe mm “start”","X1 pipe mtspr","No reloc","Adjust by program base","X0 pipe shift amount","X1 pipe shift amount","Y0 pipe shift amount","Y1 pipe shift amount","ID of module containing symbol","Offset in TLS block","“jal” for TLS GD","“lw_tls” for TLS IE","Offset in static TLS block","Direct 16 bit zero extended","Direct 32 bit zero extended","Direct 32 bit sign extended","Direct 64 bit","Direct 8 bit sign extended","Copy symbol at runtime","ID of module containing symbol","Offset in TLS block","Offset in module’s TLS block","Create GOT entry","32 bit GOT entry","64-bit GOT entry offset","64 bit offset to GOT","32 bit signed pc relative offset to GOT","GOT offset for TLS descriptor.","64-bit PC relative offset to GOT","32 bit signed PC relative offset to GOT","64-bit PC relative offset to GOT entry","Load from 32 bit signed pc relative offset to GOT entry …","like GOT64, says PLT entry needed","32 bit signed PC relative offset to GOT entry for IE symbol","Adjust indirectly by program base","Create PLT entry","No reloc","16 bit sign extended pc relative","PC relative 32 bit signed","PC relative 64 bit","8 bit sign extended pc relative","32 bit PLT address","64-bit GOT relative offset to PLT entry","Adjust by program base","64-bit adjust by program base","Load from 32 bit signed pc relative offset to GOT entry …","Size of symbol plus 32-bit addend","Size of symbol plus 64-bit addend","TLS descriptor.","Marker for call through TLS descriptor.","32 bit signed PC relative offset to two GOT entries for GD …","32 bit signed PC relative offset to two GOT entries for LD …","Offset in initial TLS block","Offset in initial TLS block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Relocation table entry without explicit addend.","Relocation table entry without explicit addend.","Relocation table entry with explicit addend.","Relocation table entry with explicit addend.","Section occupies memory during execution.","","Section may be multiply defined in the input to a link …","Section contains an entry point","Section is compressed.","This section is excluded from the final executable or …","Section is executable.","Section is a member of a group.","spec insns w/o recovery","section near gp","The <code>sh_info</code> field contains a section header table index.","Section has special ordering requirements when combining …","OS-specific section flags.","Processor-specific section flags.","Section may be be merged to eliminate duplication.","","Must be in global data area.","","","","","","","Section requires special OS-specific handling.","Section far from gp.","Static branch prediction code.","Section with short addressing.","Section contains nul-terminated strings.","Section holds thread-local storage.","Section is writable.","Associated symbol is absolute.","Associated symbol is common.","End of OS-specific section indices.","End of processor-specific section indices.","End of reserved section indices.","Start of OS-specific section indices.","Start of processor-specific section indices.","OS-specific range start. Start of reserved section indices.","Allocated common symbols.","Allocated data symbols.","Small common symbols.","Small undefined symbols.","Allocated test symbols.","Section for tenatively declared symbols in ANSI C.","Common blocks in huge model.","Undefined section.","Section index is in the <code>SHT_SYMTAB_SHNDX</code> section.","","","ARM attributes section.","ARM unwind section.","Preemption details.","Checksum for DSO content.","C-SKY attributes section.","Dynamic linking information.","Dynamic linker symbol table.","Array of destructors.","Object attributes.","GNU-style hash table.","Prelink library list","Version definition section.","Version needs section.","Version symbol table.","Section group.","Symbol hash table.","End of OS-specific section types.","End of processor-specific section types.","Sun-specific high bound.","End of application-specific section types.","extension bits","unwind bits","Array of constructors.","Start of OS-specific section types.","Start of processor-specific section types.","Sun-specific low bound.","Start of application-specific section types.","","Conflicting symbols.","","MIPS ECOFF debugging info.","","","","","","DWARF debugging information.","","Event section.","","","Global data area sizes.","","Shared objects used in link.","","","","","Miscellaneous options.","","","","","","","Register usage information.","","","","","","Reserved for SGI/MIPS compilers","","","","","Program space with no data (bss).","Notes.","Section header table entry is unused.","Debug info for optimized code.","Contains product specific ext.","Unwind information.","Array of pre-constructors.","Program data.","Relocation entries without explicit addends.","Relocation entries with explicit addends.","Reserved section type.","String table.","","","","Symbol table.","Extended section indices for a symbol table.","Unwind information.","Global symbol.","Unique symbol.","End of OS-specific symbol binding.","End of processor-specific symbol binding.","Local symbol.","Start of OS-specific symbol binding.","Start of processor-specific symbol binding.","","Weak symbol.","No PV required.","PV only used for initial ldgp.","","Only valid for <code>STB_MIPS_SPLIT_COMMON</code>.","","","A Thumb label.","A Thumb function.","Symbol is a common data object.","Symbol’s name is a file name.","Symbol is a code object.","Symbol is an indirect code object.","End of OS-specific symbol types.","End of processor-specific symbol types.","","","Start of OS-specific symbol types.","Start of processor-specific symbol types.","Symbol type is unspecified.","Symbol is a data object.","Millicode function entry point.","Symbol is associated with a section.","Global register reserved to app.","Symbol is a thread-local storage object.","Default symbol visibility rules.","Symbol is not visible to other components.","Processor specific hidden class.","Symbol is visible to other components, but is not …","Beginning of reserved entries","Symbol bound to parent","Symbol bound to self","","Symbol is a copy-reloc","Direct bound symbol","Symbol bound to object to be lazy loaded","Pass-thru symbol for translator","","","Section header.","Section header.","Symbol table entry.","Symbol table entry.","Additional information about a <code>Sym32</code>.","Additional information about a <code>Sym64</code>.","Symbol is hidden.","Symbol version index.","Current version","No version","Version definition of file itself","Weak version identifier","Symbol is global.","Symbol is local.","Current version","No version","Auxiliary version information.","Version definition sections","Auxiliary needed version information.","Version dependency.","Version symbol information","ABI version.","The number of words in the bloom filter.","The bit shift count for the bloom filter.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The number of hash buckets.","The number of hash buckets.","","","Uncompressed data alignment.","Uncompressed data alignment.","Reserved.","","","Uncompressed data size.","Uncompressed data size.","","","Compression format. One of the <code>ELFCOMPRESS_*</code> values.","Compression format. One of the <code>ELFCOMPRESS_*</code> values.","The number of chain values.","File class. One of the <code>ELFCLASS*</code> constants.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Dynamic entry type.","Dynamic entry type.","","","Value (integer or address).","Value (integer or address).","Data encoding. One of the <code>ELFDATA*</code> constants.","","","","","","","Size in bytes of this header.","Size in bytes of this header.","","","Entry point virtual address.","Entry point virtual address.","","","Processor-specific flags.","Processor-specific flags.","","","Magic number and other information.","Magic number and other information.","","","Architecture. One of the <code>EM_*</code> constants.","Architecture. One of the <code>EM_*</code> constants.","","","Program header table entry size.","Program header table entry size.","","","Program header table entry count.","Program header table entry count.","","","Program header table file offset.","Program header table file offset.","","","Section header table entry size.","Section header table entry size.","","","Section header table entry count.","Section header table entry count.","","","Section header table file offset.","Section header table file offset.","","","Section header string table index.","Section header string table index.","","","Object file type. One of the <code>ET_*</code> constants.","Object file type. One of the <code>ET_*</code> constants.","","","Object file version. Must be <code>EV_CURRENT</code>.","Object file version. Must be <code>EV_CURRENT</code>.","Parse the file from the string table.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calculate the GNU hash for a symbol name.","Calculate the SysV hash for a symbol name.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Magic number. Must be <code>ELFMAG</code>.","","","Length of the note’s descriptor.","Length of the note’s descriptor.","","","Length of the note’s name.","Length of the note’s name.","","","Type of the note.","Type of the note.","Parse the version name from the string table.","Parse the version name from the string table.","OS ABI identification. One of the <code>ELFOSABI*</code> constants.","","","Segment alignment.","Segment alignment.","","","Segment size in the file.","Segment size in the file.","","","Segment flags. A combination of the <code>PF_*</code> constants.","Segment flags. A combination of the <code>PF_*</code> constants.","","","Segment size in memory.","Segment size in memory.","","","Segment file offset.","Segment file offset.","","","Segment physical address.","Segment physical address.","","","Segment type. One of the <code>PT_*</code> constants.","Segment type. One of the <code>PT_*</code> constants.","","","Segment virtual address.","Segment virtual address.","Padding bytes.","","","Explicit addend.","Explicit addend.","","Calculate the <code>r_info</code> field given the <code>r_sym</code> and <code>r_type</code> …","Calculate the <code>r_info</code> field given the <code>r_sym</code> and <code>r_type</code> …","","Calculate the <code>r_info</code> field given the <code>r_sym</code> and <code>r_type</code> …","","Calculate the <code>r_info</code> field given the <code>r_sym</code> and <code>r_type</code> …","","Relocation type and symbol index.","Relocation type and symbol index.","Relocation type and symbol index.","Relocation type and symbol index.","","","","","Relocation address.","Relocation address.","Relocation address.","Relocation address.","Get the <code>r_sym</code> component of the <code>r_info</code> field.","","Get the <code>r_sym</code> component of the <code>r_info</code> field.","","","Get the <code>r_sym</code> component of the <code>r_info</code> field.","","Get the <code>r_sym</code> component of the <code>r_info</code> field.","Get the <code>r_type</code> component of the <code>r_info</code> field.","","Get the <code>r_type</code> component of the <code>r_info</code> field.","","Get the <code>r_type</code> component of the <code>r_info</code> field.","","Get the <code>r_type</code> component of the <code>r_info</code> field.","","Set the <code>r_info</code> field given the <code>r_sym</code> and <code>r_type</code> components.","Set the <code>r_info</code> field given the <code>r_sym</code> and <code>r_type</code> components.","Set the <code>r_info</code> field given the <code>r_sym</code> and <code>r_type</code> components.","Set the <code>r_info</code> field given the <code>r_sym</code> and <code>r_type</code> components.","Set the <code>st_info</code> field given the <code>st_bind</code> and <code>st_type</code> …","Set the <code>st_info</code> field given the <code>st_bind</code> and <code>st_type</code> …","","","Section virtual address at execution.","Section virtual address at execution.","","","Section alignment.","Section alignment.","","","Entry size if the section holds a table.","Entry size if the section holds a table.","","","Section flags. A combination of the <code>SHF_*</code> constants.","Section flags. A combination of the <code>SHF_*</code> constants.","","","Additional section information.","Additional section information.","","","Link to another section.","Link to another section.","","","Section name.","Section name.","","","Section file offset.","Section file offset.","","","Section size in bytes.","Section size in bytes.","","","Section type. One of the <code>SHT_*</code> constants.","Section type. One of the <code>SHT_*</code> constants.","Direct bindings, symbol bound to.","Direct bindings, symbol bound to.","Per symbol flags.","Per symbol flags.","","Get the <code>st_bind</code> component of the <code>st_info</code> field.","","Get the <code>st_bind</code> component of the <code>st_info</code> field.","","","Symbol type and binding.","Symbol type and binding.","","","Symbol name.","Symbol name.","","","Symbol visibility.","Symbol visibility.","","","Section index or one of the <code>SHN_*</code> values.","Section index or one of the <code>SHN_*</code> values.","","","Symbol size.","Symbol size.","","Get the <code>st_type</code> component of the <code>st_info</code> field.","","Get the <code>st_type</code> component of the <code>st_info</code> field.","","","Symbol value.","Symbol value.","","Get the <code>st_visibility</code> component of the <code>st_info</code> field.","Get the <code>st_visibility</code> component of the <code>st_info</code> field.","","The symbol table index of the first symbol in the hash.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Offset in bytes to verdaux array","Number of associated aux entries","Version information","Version name hash value","Version Index","Offset in bytes to next verdef entry","Version revision","Version or dependency names","Offset in bytes to next verdaux","ELF version. Must be <code>EV_CURRENT</code>.","Offset in bytes to vernaux array","Number of associated aux entries","Offset of filename for this dependency","Offset in bytes to next verneed entry","Version of structure","Dependency specific information","Hash value of dependency name","Dependency name string offset","Offset in bytes to next vernaux entry","Version Index","Big endian byte order.","Compile-time big endian byte order.","A trait for using an endianness specification.","An endianness that is selectable at run-time.","An <code>i16</code> value with an externally specified endianness of …","An unaligned <code>i16</code> value with an externally specified …","An <code>i32</code> value with an externally specified endianness of …","An unaligned <code>i32</code> value with an externally specified …","An <code>i64</code> value with an externally specified endianness of …","An unaligned <code>i64</code> value with an externally specified …","Little endian byte order.","Compile-time little endian byte order.","The native endianness for the target platform.","A <code>u16</code> value with an externally specified endianness of …","An unaligned <code>u16</code> value with an externally specified …","A <code>u32</code> value with an externally specified endianness of …","An unaligned <code>u32</code> value with an externally specified …","A <code>u64</code> value with an externally specified endianness of …","An unaligned <code>u64</code> value with an externally specified …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Construct a specification for the endianness of some …","","","","Construct a specification for the endianness of some …","Return the value as a native endian value.","Return the value as a native endian value.","Return the value as a native endian value.","Return the value as a native endian value.","Return the value as a native endian value.","Return the value as a native endian value.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return true for big endian byte order.","","","","Return true for little endian byte order.","Construct a new value given a native endian value.","Construct a new value given a native endian value.","Construct a new value given a native endian value.","Construct a new value given a native endian value.","Construct a new value given a native endian value.","Construct a new value given a native endian value.","","","","","","","Converts a signed 16 bit integer to native endian.","Converts an unaligned signed 16 bit integer to native …","Converts a signed 32 bit integer to native endian.","Converts an unaligned signed 32 bit integer to native …","Converts a signed 64 bit integer to native endian.","Converts an unaligned signed 64 bit integer to native …","Converts an unsigned 16 bit integer to native endian.","Converts an unaligned unsigned 16 bit integer to native …","Converts an unsigned 32 bit integer to native endian.","Converts an unaligned unsigned 32 bit integer to native …","Converts an unsigned 64 bit integer to native endian.","Converts an unaligned unsigned 64 bit integer to native …","Set the value given a native endian value.","Set the value given a native endian value.","Set the value given a native endian value.","Set the value given a native endian value.","Set the value given a native endian value.","Set the value given a native endian value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a signed 16 bit integer from native endian.","Converts an unaligned signed 16 bit integer from native …","Converts a signed 32 bit integer from native endian.","Converts an unaligned signed 32 bit integer from native …","Converts a signed 64 bit integer from native endian.","Converts an unaligned signed 64 bit integer from native …","Converts an unsigned 16 bit integer from native endian.","Converts an unaligned unsigned 16 bit integer from native …","Converts an unsigned 32 bit integer from native endian.","Converts an unaligned unsigned 32 bit integer from native …","Converts an unsigned 64 bit integer from native endian.","Converts an unaligned unsigned 64 bit integer from native …","A trait for types that can safely be converted from and to …","Cast a <code>Pod</code> type to a byte slice.","Cast a <code>Pod</code> type to a mutable byte slice.","Cast a slice of a <code>Pod</code> type to a byte slice.","Cast a slice of a <code>Pod</code> type to a mutable byte slice.","Cast a byte slice to a <code>Pod</code> type.","Cast a mutable byte slice to a <code>Pod</code> type.","Cast a byte slice to a slice of a <code>Pod</code> type.","Cast a mutable byte slice to a slice of a <code>Pod</code> type.","The symbol has an absolute value.","The offset is an absolute address.","A newtype for byte slices.","PDB Information","A COMDAT section group of a <code>File</code>.","A COMDAT section group in the object file.","An iterator of the COMDAT section groups of a <code>File</code>.","An iterator over the COMDAT section groups in the object …","An iterator over COMDAT section entries.","The symbol is a zero-initialized symbol that will be …","Data that may be compressed.","A range in a file that may be compressed.","A data compression format.","Core.","Dynamic shared object.","An iterator over dynamic relocation entries.","An iterator over dynamic relocations in the file.","A 32-bit ELF file.","A 64-bit ELF file.","The error type used within the read module.","Executable.","An exported symbol.","An object file.","A file format kind.","An imported symbol.","An iterator for files that don’t have dynamic …","The section is not applicable for this symbol (such as …","The data is uncompressed.","An object file.","A COMDAT section group defined in an object file.","An object kind.","A map from addresses to symbol names and object files.","A <code>ObjectMap</code> entry.","A section defined in an object file.","A loadable segment defined in an object file.","A symbol table entry.","A symbol table.","A trait for reading references to <code>Pod</code> types from a block …","Relocatable object.","A relocation entry.","An iterator over the relocations for a section.","The target referenced by a relocation.","The result type used within the read module.","A Section of a File","The symbol is defined in the given section.","The target is a section.","A section in the object file.","The index used to identify a section of a file.","An iterator of the sections of a <code>File</code>.","An iterator over the sections in the object file.","An iterator over the sections in the object file.","An iterator over section relocation entries.","A segment of a <code>File</code>.","A segment in the object file.","An iterator over the segments of a <code>File</code>.","An iterator over the segments in the object file.","A table of zero-terminated strings.","A symbol table entry.","The target is a symbol.","A symbol in the object file.","A symbol table entry.","The index used to identify a symbol of a file.","An iterator over symbol table entries.","An iterator over symbols in the object file.","An iterator over the symbols in a symbol table.","A map from addresses to symbols.","An entry in a <code>SymbolMap</code>.","A <code>SymbolMap</code> entry for symbol names.","The section where a symbol is defined.","A symbol table.","A symbol table in the object file.","The symbol is undefined.","The object kind is unknown.","The section is unknown.","The data is compressed, but the compression format is …","ZLIB/DEFLATE.","The addend to use in the relocation calculation.","Returns the virtual address of the segment.","Returns the address of the section.","The address of the symbol. May be zero if the address is …","The symbol address.","","","","The symbol address.","","","Get the symbol address.","The virtual address of the symbol.","The age of the PDB","Returns the alignment of the segment in memory.","Returns the alignment of the section in memory.","","","Get the architecture type of the file.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The build ID from an ELF <code>NT_GNU_BUILD_ID</code> note.","The build ID from an ELF <code>NT_GNU_BUILD_ID</code> note.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get an iterator over the COMDAT section groups in the file.","","Returns the potentially compressed contents of the section,","","Returns the potentially compressed file range of the …","","The compressed data size.","Returns a reference to the file contents of the segment.","Returns the raw contents of the section.","","","Convert to <code>CompressedData</code> by reading from the file.","The compressed data.","Return the segment data in the given range.","Return the raw contents of the section data in the given …","","","Return the uncompressed data.","","","","","","Get the dynamic relocations for this file.","","Get the dynamic linking symbol table, if any.","","Get an iterator over the dynamic linking symbols in the …","","Support for reading ELF files.","Information about how the result of the relocation …","Get the endianness of the file.","Get the endianness of the file.","Get the virtual address of the entry point of the binary","","","","","","","","","","","","","","","","","","Get the exported symbols that expose both a name and an …","","Returns the offset and size of the segment in the file.","Returns offset and size of on-disk segment (if any).","","","File flags that are specific to each file format.","Return the flags of segment.","Section flags that are specific to each file format.","Symbol flags that are specific to each file format.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the file format.","The data compression format.","The data compression format.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Return the string at the given offset.","Get the symbol before the given address.","Get the entry containing the given address.","The filename and build ID from a <code>.gnu_debugaltlink</code> section.","The filename and build ID from a <code>.gnu_debugaltlink</code> section.","","The filename and CRC from a <code>.gnu_debuglink</code> section.","The filename and CRC from a <code>.gnu_debuglink</code> section.","","The GUID of the PDB.","Return true if the file contains debug information …","","Returns true if there is an implicit addend stored in the …","","","","","","","","","","","","Get the imported symbols.","","Returns the section index.","The index of the symbol.","","","Returns the section index for the section where the symbol …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Return true if the file can contain 64-bit addresses.","","Return true if the symbol is common data.","","Return true if the symbol is a definition of a function or …","","Return true if the byte slice is empty.","Return true if the symbol visible outside of the …","","Return true if the file is little endian, false if it is …","","Return true if the symbol is only visible within the …","","Return true if the symbol is undefined.","","Return true if the symbol is weak.","","Return the kind of this object.","Return the kind of this section.","Returns the COMDAT selection kind.","Return the kind of this symbol.","","","","","The operation used to calculate the result of the …","The total size of the block of data.","Return the length of the byte slice.","The name of the library to import the symbol from.","The UUID from a Mach-O <code>LC_UUID</code> load command.","The UUID from a Mach-O <code>LC_UUID</code> load command.","","Returns the name of the segment.","Returns the name of the section.","Returns the name of the COMDAT section group.","The name of the symbol.","","","","","The symbol name.","Get the symbol name.","The symbol name.","The symbol name.","Returns the name of the segment.","Returns the name of the section.","Returns the name of the COMDAT section group.","The name of the symbol.","","","","","Interpret the given data as a string table.","Construct a new symbol map.","Construct a <code>SymbolMapName</code>.","","","","","","","","","Data that is uncompressed.","Data that is uncompressed.","Get the object file name.","Get the index of the object file name.","Construct a map from addresses to symbol names and object …","Construct a map from addresses to symbol names and object …","","Get all objects in the map.","The file offset of the compressed data.","Parse the raw file data.","Determine a file kind by parsing the start of the file.","Determine a file kind by parsing at the given offset.","The path to the PDB as stored in CodeView","The filename and GUID from the PE CodeView section","The filename and GUID from the PE CodeView section","","Get a reference to a <code>Pod</code> type at the given offset, and …","Get a reference to a <code>Pod</code> type at the given offset, and …","Return a reference to a <code>Pod</code> struct at the start of the …","Get a reference to a <code>Pod</code> type at the given offset.","Get a reference to a <code>Pod</code> type at the given offset.","Return a reference to a <code>Pod</code> struct at the given offset of …","Get a reference to a <code>u8</code> slice at the given offset, and …","Get a reference to a <code>u8</code> slice at the given offset, and …","Return a reference to the given number of bytes at the …","Get a reference to a <code>u8</code> slice at the given offset.","Return a reference to the given number of bytes at the …","Get a reference to a delimited <code>u8</code> slice which starts at …","Get a reference to a slice of a <code>Pod</code> type at the given …","Get a reference to a slice of a <code>Pod</code> type at the given …","Return a reference to a slice of <code>Pod</code> structs at the start …","Get a reference to a slice of a <code>Pod</code> type at the given …","Get a reference to a slice of a <code>Pod</code> type at the given …","Return a reference to a slice of <code>Pod</code> structs at the given …","Read a null terminated string.","Read a null terminated string at an offset.","Get the base address used for relative virtual addresses.","","Get the relocations for this section.","","Returns the symbol scope.","","Returns the section where the symbol is defined.","","Get the section at the given index.","","Get the section named <code>section_name</code>, if such a section …","Get the section named <code>section_name</code>, if such a section …","Like <code>Self::section_by_name</code>, but allows names that are not …","","Returns the section index for the section containing this …","Returns the section index for the section containing this …","Get an iterator over the sections in the file.","Get the sections in this section group.","","","Returns the name of the segment for this section.","","Returns the name of the segment for this section.","","Get an iterator over the segments in the file.","","Set the addend to use in the relocation calculation.","Returns the size of the segment in memory.","Returns the size of the section in memory.","The size of the symbol. May be zero if the size is unknown.","","","","Get the symbol size.","The size in bits of the place of the relocation.","Skip over the given number of bytes at the start of the …","Returns the index of the symbol used for the name of …","","Get the debugging symbol at the given index.","Get the symbol at the given index.","","","Construct a map from addresses to symbol names.","Construct a map from addresses to symbol names.","","Get the symbol table, if any.","","Get an iterator over the debugging symbols in the file.","Get an iterator over the symbols in the table.","","","Get all symbols in the map.","Get all symbols in the map.","The target of the relocation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the uncompressed contents of the section.","Returns the uncompressed contents of the section.","The uncompressed data size.","The uncompressed data size.","A trait for generic access to <code>CompressionHeader32</code> and …","","A trait for generic access to <code>Dyn32</code> and <code>Dyn64</code>.","","","","A COMDAT section group of an <code>ElfFile</code>.","A COMDAT section group of an <code>ElfFile32</code>.","A COMDAT section group of an <code>ElfFile64</code>.","An iterator over the COMDAT section groups of an <code>ElfFile</code>.","An iterator over the COMDAT section groups of an <code>ElfFile32</code>.","An iterator over the COMDAT section groups of an <code>ElfFile64</code>.","An iterator over the sections in a COMDAT section group of …","An iterator over the sections in a COMDAT section group of …","An iterator over the sections in a COMDAT section group of …","An iterator over the dynamic relocations for an <code>ElfFile</code>.","An iterator over the dynamic relocations for an <code>ElfFile32</code>.","An iterator over the dynamic relocations for an <code>ElfFile64</code>.","A partially parsed ELF file.","A 32-bit ELF object file.","A 64-bit ELF object file.","A section of an <code>ElfFile</code>.","A section of an <code>ElfFile32</code>.","A section of an <code>ElfFile64</code>.","An iterator over the sections of an <code>ElfFile</code>.","An iterator over the sections of an <code>ElfFile32</code>.","An iterator over the sections of an <code>ElfFile64</code>.","An iterator over the relocations for an <code>ElfSection</code>.","An iterator over the relocations for an <code>ElfSection32</code>.","An iterator over the relocations for an <code>ElfSection64</code>.","A segment of an <code>ElfFile</code>.","A segment of an <code>ElfFile32</code>.","A segment of an <code>ElfFile64</code>.","An iterator over the segments of an <code>ElfFile</code>.","An iterator over the segments of an <code>ElfFile32</code>.","An iterator over the segments of an <code>ElfFile64</code>.","A symbol of an <code>ElfFile</code>.","A symbol of an <code>ElfFile32</code>.","A symbol of an <code>ElfFile64</code>.","An iterator over the symbols of an <code>ElfFile</code>.","An iterator over the symbols of an <code>ElfFile32</code>.","An iterator over the symbols of an <code>ElfFile64</code>.","A symbol table of an <code>ElfFile</code>.","A symbol table of an <code>ElfFile32</code>.","A symbol table of an <code>ElfFile32</code>.","","","","","","","","","","A trait for generic access to <code>FileHeader32</code> and <code>FileHeader64</code>…","A GNU symbol hash table in an ELF file.","A SysV symbol hash table in an ELF file.","A parsed <code>NoteHeader</code>.","A trait for generic access to <code>NoteHeader32</code> and <code>NoteHeader64</code>…","","An iterator over the notes in an ELF section or segment.","A trait for generic access to <code>ProgramHeader32</code> and …","","A trait for generic access to <code>Rel32</code> and <code>Rel64</code>.","","A trait for generic access to <code>Rela32</code> and <code>Rela64</code>.","","A mapping from section index to associated relocation …","A trait for generic access to <code>SectionHeader32</code> and …","","The table of section headers in an ELF file.","","","","A trait for generic access to <code>Sym32</code> and <code>Sym64</code>.","","A table of symbol entries in an ELF file.","An iterator over the auxiliary records for an entry in an …","An iterator over the entries in an ELF <code>SHT_GNU_verdef</code> …","An iterator over the auxiliary records for an entry in an …","An iterator over the entries in an ELF <code>SHT_GNU_verneed</code> …","A version definition or requirement.","A version index.","A table of version definitions and requirements.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the segment data.","Return the segment data.","Return the section data.","Return the section data.","Returns the raw data.","","","Return the segment data as a slice of the given type.","Return the segment data as a slice of the given type.","Return the section data as a slice of the given type.","Return the section data as a slice of the given type.","Return the segment data in the given virtual address range","Return the segment data in the given virtual address range","","","","","","","","Return the bytes for the desc field following the …","Return entries in a dynamic segment.","Return entries in a dynamic segment.","Return entries in a dynamic section.","Return entries in a dynamic section.","Return the contents of a dynamic section.","","","","","","","","","","","","","","","","","","","","Returns the endianness.","","Get the exported symbols.","Return the offset and size of the segment in the file.","Return the offset and size of the segment in the file.","Return the offset and size of the section in the file.","Return the offset and size of the section in the file.","","","Use the hash table to find the symbol table entry with the …","Use the hash table to find the symbol table entry with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Given a section index, return the section index of the …","","","Return the contents of a GNU hash section.","Return the contents of a GNU hash section.","Return the contents of a GNU hash section.","Return the header of a GNU hash section.","Return the header of a GNU hash section.","Return the header of a GNU hash section.","Return an iterator for the entries of a <code>SHT_GNU_VERDEF</code> …","Return an iterator for the entries of a <code>SHT_GNU_VERDEF</code> …","Return the contents of a <code>SHT_GNU_VERDEF</code> section.","Return an iterator for the entries of a <code>SHT_GNU_VERNEED</code> …","Return an iterator for the entries of a <code>SHT_GNU_VERNEED</code> …","Return the contents of a <code>SHT_GNU_VERNEED</code> section.","Return the contents of a <code>SHT_GNU_VERSYM</code> section.","Return the contents of a <code>SHT_GNU_VERSYM</code> section.","Return the contents of a <code>SHT_GNU_VERSYM</code> section.","Return the contents of a group section.","Return the contents of a group section.","","Return the contents of a SysV hash section.","Return the contents of a SysV hash section.","Return the contents of a SysV hash section.","Return hash of the version name.","Return the header of a SysV hash section.","Return the header of a SysV hash section.","Return the header of a SysV hash section.","Get the imported symbols.","","","Return the version index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Return true if the value is an address.","Return true if the value is an address.","","","","","","","","Return true if the symbol is a definition of a function or …","Return true if the symbol is a definition of a function or …","","Return true if the section table is empty.","Return true if the symbol table is empty.","Return true if the version table is empty.","","Return true if it is the global index.","Return the hidden flag.","","","","","Return true if it is the local index.","Returns whether this is a mips64el elf file.","Returns whether this is a mips64el elf file.","Return true if the value is an offset in the dynamic …","Return true if the value is an offset in the dynamic …","Check that the ident field in the file header is a …","Check that the ident field in the file header is a …","Return true if this type is a 64-bit header.","Return true if the symbol is undefined.","Return true if the symbol is undefined.","","","Iterate over the section headers.","Iterate over the symbols.","","","","","The number of section headers.","The number of symbols.","Construct a map from addresses to a user-defined map entry.","Return true if the given symbol index satisifies the …","","Return the <code>n_descsz</code> field of the <code>NoteHeader</code>.","","Return the <code>n_namesz</code> field of the <code>NoteHeader</code>.","","Return the <code>n_type</code> field of the <code>NoteHeader</code>.","Parse the section name from the string table.","Parse the section name from the string table.","Parse the symbol name from the string table.","Parse the symbol name from the string table.","","","","","Return the bytes for the name field following the …","Return the version name.","","","","","Create a new section table.","","","","","","","","Returns the next note.","Return the next <code>Verdef</code> entry.","Return the next <code>Verdaux</code> entry.","Return the next <code>Verneed</code> entry.","Return the next <code>Vernaux</code> entry.","Return a note iterator for the segment data.","Return a note iterator for the segment data.","Return a note iterator for the section data.","Return a note iterator for the section data.","","","","","","","","","Read the file header.","Read the file header.","Parse the raw ELF file data.","Parse the given symbol table section.","Create a new mapping using the section table.","Parse a SysV hash table.","Parse a GNU hash table.","Parse the version sections.","Return the <code>e_phnum</code> field of the header. Handles extended …","Return the <code>e_phnum</code> field of the header. Handles extended …","Return the slice of program headers.","Return the slice of program headers.","","","","","","","","","","Returns the raw ELF file header.","Returns the raw ELF segments.","Return the <code>Elf::Rel</code> entries in the section.","Return the <code>Elf::Rel</code> entries in the section.","Return the <code>Elf::Rela</code> entries in the section.","Return the <code>Elf::Rela</code> entries in the section.","","Create a mapping from section index to associated …","","","Return the section header at the given index.","Return the section index of this symbol table.","","Return the first section header, if present.","Return the first section header, if present.","","Return the section header with the given name.","","Return the slice of section headers.","Return the slice of section headers.","Return the section name for the given section header.","Return the string table for the section headers.","Return the string table for the section headers.","Return the section table.","Return the section table.","","","","","","","","","","","","","","","","Return the extended section index for the given symbol if …","Return the section index of the shndx table.","Return the <code>e_shnum</code> field of the header. Handles extended …","Return the <code>e_shnum</code> field of the header. Handles extended …","Return the <code>e_shstrndx</code> field of the header. Handles …","Return the <code>e_shstrndx</code> field of the header. Handles …","","","","","","","","","","","","","Use the value to get a string in a string table.","Use the value to get a string in a string table.","Return the section index of the linked string table.","Return the strings in the section.","Return the strings in the section.","Return the string table at the given section index.","Return the string table used for the symbol names.","Return the symbol at the given index.","","Return the symbol table index of the first symbol in the …","","","Return the symbol name for the given symbol.","Return the section index for the given symbol.","","Return the symbol table at the given section index.","Return the symbol table length.","Determine the symbol table length by finding the last …","Return the symbols in the section.","Return the symbols in the section.","","Return the symbol table of the given section type.","Return the symbol table.","","Try to convert the tag to a <code>u32</code>.","Try to convert the tag to a <code>u32</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to convert the value to a <code>u32</code>.","Try to convert the value to a <code>u32</code>.","Return version information for a given symbol version …","Return version index for a given symbol index.","Returns the symbol version table."],"i":[11,1,1,10,0,7,0,1,1,0,1,5,10,12,13,14,16,0,6,9,6,8,6,9,5,6,10,12,13,14,16,7,8,0,11,10,10,10,10,1,1,10,8,7,9,6,1,11,5,10,12,13,14,16,6,1,1,1,7,7,12,13,14,16,6,8,6,6,5,10,1,1,6,6,6,10,0,0,1,1,1,11,7,1,8,0,10,0,10,0,1,0,0,0,6,8,6,8,6,2,2,2,2,6,6,1,6,7,8,9,5,1,11,11,11,11,1,1,5,10,12,14,1,1,1,2,5,6,7,8,9,10,11,12,13,14,16,1,2,5,6,7,8,9,10,11,12,13,14,16,2,1,2,5,6,7,8,9,10,11,12,13,14,16,1,2,5,6,7,8,9,10,11,12,13,14,16,0,0,1,2,5,6,7,8,9,10,11,12,13,14,16,1,2,5,6,7,8,9,10,11,12,13,14,16,1,2,5,6,7,8,9,10,11,12,13,14,16,1,2,5,6,7,8,9,10,11,12,13,14,16,1,2,5,6,7,8,9,10,11,12,13,14,16,6,0,0,1,2,5,6,7,8,9,10,11,12,13,14,16,1,2,5,6,7,8,9,10,11,12,13,14,16,1,2,5,6,7,8,9,10,11,12,13,14,16,1,2,5,6,7,8,9,10,11,12,13,14,16,148,149,148,150,151,148,152,152,153,154,155,156,157,158,158,158,159,160,161,160,162,162,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,54,54,29,30,31,32,33,26,27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,29,30,31,32,33,26,27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,53,54,26,27,26,27,27,26,27,26,27,26,27,26,27,53,31,29,30,31,32,33,26,27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,29,30,31,32,33,26,27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,44,45,44,45,44,45,44,45,31,26,27,34,35,29,30,29,30,29,30,29,30,29,30,29,30,29,30,29,30,29,30,29,30,29,30,29,30,29,30,29,30,29,30,29,30,29,30,29,30,29,30,29,30,29,30,29,30,29,30,29,30,29,30,29,30,29,30,29,30,49,29,30,31,32,33,26,27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,29,30,31,32,33,26,27,34,35,36,37,38,39,39,40,41,41,42,43,44,45,46,47,48,49,50,51,52,53,54,0,0,29,30,31,32,33,26,27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,29,30,31,51,52,51,52,51,52,51,52,51,52,51,52,48,50,31,42,43,42,43,42,43,42,43,42,43,42,43,42,43,42,43,42,43,42,43,42,43,42,43,42,43,42,43,42,43,42,43,31,39,41,39,41,38,38,39,39,40,40,41,41,38,39,40,41,38,39,40,41,38,39,40,41,38,38,39,39,40,40,41,41,38,38,39,39,40,40,41,41,38,39,40,41,34,35,32,33,32,33,32,33,32,33,32,33,32,33,32,33,32,33,32,33,32,33,32,33,32,33,32,33,32,33,32,33,32,33,32,33,32,33,32,33,32,33,36,37,36,37,34,34,35,35,34,35,34,35,34,35,34,35,34,35,34,35,34,35,34,35,34,35,34,35,34,34,35,35,34,35,34,35,34,34,35,35,54,29,30,31,32,33,26,27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,29,30,31,32,33,26,27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,29,30,31,32,33,26,27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,29,30,31,32,33,26,27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,47,47,47,47,47,47,47,48,48,31,49,49,49,49,49,50,50,50,50,50,62,0,0,0,0,0,0,0,0,0,62,0,0,0,0,0,0,0,0,62,63,64,65,66,67,68,69,70,62,63,64,65,66,67,68,69,70,62,63,64,65,66,67,68,69,70,62,63,64,65,66,67,68,69,70,65,66,67,68,69,70,62,63,64,65,66,67,68,69,70,62,63,64,65,66,67,68,69,70,62,63,64,65,66,67,68,69,70,62,63,64,65,66,67,68,69,70,25,62,63,64,25,65,66,67,68,69,70,62,63,64,65,66,67,68,69,70,62,63,64,65,66,67,68,69,70,25,62,63,64,25,65,66,67,68,69,70,65,66,67,68,69,70,25,25,25,25,25,25,25,25,25,25,25,25,65,66,67,68,69,70,62,63,64,65,66,67,68,69,70,62,63,64,65,66,67,68,69,70,62,63,64,65,66,67,68,69,70,62,63,64,65,66,67,68,69,70,25,25,25,25,25,25,25,25,25,25,25,25,0,0,0,0,0,0,0,0,0,94,99,0,0,0,163,0,163,0,94,0,0,0,91,91,0,163,90,90,0,91,0,0,0,0,0,94,100,0,0,0,0,0,0,0,0,0,0,91,0,164,0,0,0,94,99,163,0,0,163,165,0,0,163,0,163,0,0,99,163,166,0,0,163,166,0,0,0,0,0,163,94,91,94,100,100,79,167,164,168,95,80,81,82,83,83,84,84,85,86,167,164,80,81,163,87,80,81,109,82,88,58,87,110,111,103,112,106,107,105,113,114,89,90,91,92,93,94,96,83,97,84,98,85,86,99,79,100,101,102,80,81,109,82,88,58,87,110,111,103,112,106,107,105,113,114,89,90,91,92,93,94,96,83,97,84,98,85,86,99,79,100,101,102,163,163,87,88,58,89,90,91,92,93,94,96,83,97,84,98,85,86,99,100,101,102,88,58,89,90,91,92,93,94,96,83,97,84,98,85,86,99,100,101,102,163,87,164,81,164,81,101,167,164,80,81,101,102,167,164,80,81,102,88,58,96,97,84,163,87,163,87,163,87,0,79,163,163,163,87,88,89,90,91,92,93,94,83,84,98,85,86,99,100,101,102,163,87,167,164,80,81,163,167,164,168,80,81,82,87,80,81,109,82,88,58,87,110,111,103,112,106,107,105,113,114,89,89,90,91,92,93,94,96,83,97,84,98,85,86,99,79,100,101,102,87,101,102,80,81,109,82,88,58,87,110,111,103,112,106,107,105,113,114,89,90,91,92,93,94,96,83,97,84,98,85,86,99,79,100,101,102,58,96,97,163,163,87,163,163,87,86,163,87,79,90,91,92,93,94,83,84,99,100,101,102,163,87,164,168,81,82,94,80,81,109,82,88,58,87,110,111,103,112,106,107,105,113,114,89,90,91,92,93,94,96,83,97,84,98,85,86,99,79,100,101,102,110,111,103,112,107,105,113,114,163,87,168,82,168,82,88,168,82,163,87,168,82,168,82,168,82,163,164,165,168,81,109,82,87,79,57,88,98,163,163,87,167,164,165,168,80,81,109,82,83,84,98,85,167,164,165,168,80,81,109,82,58,96,83,110,111,103,112,107,105,113,114,101,102,84,84,163,163,87,97,101,87,90,90,86,163,163,87,57,57,88,57,57,88,57,57,88,57,88,57,57,57,88,57,57,88,88,88,163,87,164,81,168,82,168,82,163,87,163,163,163,87,168,168,163,165,109,87,164,81,164,81,163,87,79,167,164,168,80,81,82,84,79,88,165,109,163,166,87,106,163,163,87,163,87,163,166,87,106,96,97,79,88,58,89,90,91,92,93,94,96,83,97,84,98,85,86,99,100,101,102,89,80,81,109,82,88,58,87,110,111,103,112,106,107,105,113,114,89,90,91,92,93,94,96,83,97,84,98,85,86,99,79,100,101,102,80,81,109,82,88,58,87,110,111,103,112,106,107,105,113,114,89,90,91,92,93,94,96,83,97,84,98,85,86,99,79,100,101,102,80,81,109,82,88,58,87,110,111,103,112,106,107,105,113,114,89,90,91,92,93,94,96,83,97,84,98,85,86,99,79,100,101,102,164,164,101,102,0,120,0,120,169,170,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,169,170,171,172,173,174,175,176,0,0,0,0,0,120,0,0,120,0,120,0,120,0,0,120,0,120,172,173,0,120,0,0,0,0,0,0,0,0,120,169,170,171,172,173,174,175,118,119,121,118,119,122,136,135,139,122,140,118,123,141,119,124,125,121,142,133,143,144,145,134,137,138,126,127,128,129,130,131,132,136,135,139,122,140,118,123,141,119,124,125,121,142,133,143,144,145,134,137,138,126,127,128,129,130,131,132,122,175,175,175,123,124,125,121,126,127,128,129,130,131,132,123,124,125,121,126,127,128,129,130,131,132,122,119,119,174,174,169,169,170,170,122,118,119,169,169,170,170,169,169,118,119,123,124,126,127,128,134,169,169,170,170,123,122,122,122,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,122,122,122,169,169,170,170,118,119,137,138,122,118,119,121,136,135,139,122,140,118,123,141,119,124,125,121,142,133,143,144,145,134,137,138,126,127,128,129,130,131,132,136,135,139,122,140,118,123,141,119,124,125,121,142,133,143,144,145,134,137,138,126,127,128,129,130,131,132,142,122,122,170,170,123,170,170,123,170,170,123,170,170,123,170,170,123,170,170,122,170,170,123,127,170,170,123,122,119,121,126,136,135,139,122,140,118,123,141,119,124,125,121,142,133,143,144,145,134,137,138,126,127,128,129,130,131,132,136,135,139,140,141,133,144,122,174,174,120,120,120,120,120,120,121,171,171,121,123,124,128,121,126,126,120,120,122,121,126,120,120,174,174,120,120,120,171,171,121,121,123,124,122,119,121,143,123,124,124,128,176,134,176,134,176,134,170,170,171,171,118,119,121,143,134,127,118,119,121,143,123,136,135,139,140,141,133,144,145,129,130,131,132,169,169,170,170,169,169,169,169,169,169,169,169,120,120,122,124,142,137,138,128,120,120,120,120,173,172,173,172,173,172,173,172,173,122,122,170,170,170,170,122,123,119,121,123,124,121,120,120,122,123,122,120,120,123,120,120,120,120,122,143,119,119,122,170,170,170,170,170,170,170,170,170,170,124,124,120,120,120,120,118,119,121,171,171,171,171,171,171,171,171,171,174,174,124,170,170,123,124,124,143,138,122,125,124,124,122,123,137,138,170,170,122,123,124,125,174,174,123,124,125,121,126,127,128,129,130,131,132,136,135,139,122,140,118,123,141,119,124,125,121,142,133,143,144,145,134,137,138,126,127,128,129,130,131,132,136,135,139,122,140,118,123,141,119,124,125,121,142,133,143,144,145,134,137,138,126,127,128,129,130,131,132,136,135,139,122,140,118,123,141,119,124,125,121,142,133,143,144,145,134,137,138,126,127,128,129,130,131,132,174,174,128,128,123],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,4],[1,1],[2,2],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[[[16,[15]]],[[16,[15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[1,1],17],[[2,2],17],[[5,5],17],[[6,6],17],[[7,7],17],[[8,8],17],[[9,9],17],[[10,10],17],[[11,11],17],[[12,12],17],[[13,13],17],[[14,14],17],[[[16,[18]],16],17],[[1,19],20],[[2,19],20],[[5,19],20],[[6,19],20],[[7,19],20],[[8,19],20],[[9,19],20],[[10,19],20],[[11,19],20],[[12,19],20],[[13,19],20],[[14,19],20],[[[16,[21]],19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[2],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[[[16,[22]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,17],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[26,[25]]]],[[[27,[25]]]],0,0,0,[[[26,[25]]]],[[[27,[25]]]],0,0,[[[26,[25]]],28],[[[27,[25]]],28],0,0,0,0,[[[29,[[0,[15,25]]]]],[[29,[[0,[15,25]]]]]],[[[30,[[0,[15,25]]]]],[[30,[[0,[15,25]]]]]],[31,31],[[[32,[[0,[15,25]]]]],[[32,[[0,[15,25]]]]]],[[[33,[[0,[15,25]]]]],[[33,[[0,[15,25]]]]]],[[[26,[[0,[15,25]]]]],[[26,[[0,[15,25]]]]]],[[[27,[[0,[15,25]]]]],[[27,[[0,[15,25]]]]]],[[[34,[[0,[15,25]]]]],[[34,[[0,[15,25]]]]]],[[[35,[[0,[15,25]]]]],[[35,[[0,[15,25]]]]]],[[[36,[[0,[15,25]]]]],[[36,[[0,[15,25]]]]]],[[[37,[[0,[15,25]]]]],[[37,[[0,[15,25]]]]]],[[[38,[[0,[15,25]]]]],[[38,[[0,[15,25]]]]]],[[[39,[[0,[15,25]]]]],[[39,[[0,[15,25]]]]]],[[[40,[[0,[15,25]]]]],[[40,[[0,[15,25]]]]]],[[[41,[[0,[15,25]]]]],[[41,[[0,[15,25]]]]]],[[[42,[[0,[15,25]]]]],[[42,[[0,[15,25]]]]]],[[[43,[[0,[15,25]]]]],[[43,[[0,[15,25]]]]]],[[[44,[[0,[15,25]]]]],[[44,[[0,[15,25]]]]]],[[[45,[[0,[15,25]]]]],[[45,[[0,[15,25]]]]]],[[[46,[[0,[15,25]]]]],[[46,[[0,[15,25]]]]]],[[[47,[[0,[15,25]]]]],[[47,[[0,[15,25]]]]]],[[[48,[[0,[15,25]]]]],[[48,[[0,[15,25]]]]]],[[[49,[[0,[15,25]]]]],[[49,[[0,[15,25]]]]]],[[[50,[[0,[15,25]]]]],[[50,[[0,[15,25]]]]]],[[[51,[[0,[15,25]]]]],[[51,[[0,[15,25]]]]]],[[[52,[[0,[15,25]]]]],[[52,[[0,[15,25]]]]]],[[[53,[[0,[15,25]]]]],[[53,[[0,[15,25]]]]]],[[[54,[[0,[15,25]]]]],[[54,[[0,[15,25]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[44,[25]]]],[[[45,[25]]]],0,0,[[[44,[25]]]],[[[45,[25]]]],0,0,0,[[],[[26,[[0,[55,25]]]]]],[[],[[27,[[0,[55,25]]]]]],[[],[[34,[[0,[55,25]]]]]],[[],[[35,[[0,[55,25]]]]]],[[[29,[25]]],56],[[[30,[25]]],56],0,0,[[[29,[25]]]],[[[30,[25]]]],0,0,[[[29,[25]]],28],[[[30,[25]]],28],0,0,[[[29,[25]]],31],[[[30,[25]]],31],0,0,[[[29,[25]]],56],[[[30,[25]]],56],0,0,[[[29,[25]]],56],[[[30,[25]]],56],0,0,[[[29,[25]]],56],[[[30,[25]]],56],0,0,[[[29,[25]]]],[[[30,[25]]]],0,0,[[[29,[25]]],56],[[[30,[25]]],56],0,0,[[[29,[25]]],56],[[[30,[25]]],56],0,0,[[[29,[25]]]],[[[30,[25]]]],0,0,[[[29,[25]]],56],[[[30,[25]]],56],0,0,[[[29,[25]]],56],[[[30,[25]]],56],0,0,[[[29,[25]]],28],[[[30,[25]]],28],0,0,[[[49,[25]],25,[58,[57]]],59],[[[29,[[0,[21,25]]]],19],20],[[[30,[[0,[21,25]]]],19],20],[[31,19],20],[[[32,[[0,[21,25]]]],19],20],[[[33,[[0,[21,25]]]],19],20],[[[26,[[0,[21,25]]]],19],20],[[[27,[[0,[21,25]]]],19],20],[[[34,[[0,[21,25]]]],19],20],[[[35,[[0,[21,25]]]],19],20],[[[36,[[0,[21,25]]]],19],20],[[[37,[[0,[21,25]]]],19],20],[[[38,[[0,[21,25]]]],19],20],[[[39,[[0,[21,25]]]],19],20],[[[40,[[0,[21,25]]]],19],20],[[[41,[[0,[21,25]]]],19],20],[[[42,[[0,[21,25]]]],19],20],[[[43,[[0,[21,25]]]],19],20],[[[44,[[0,[21,25]]]],19],20],[[[45,[[0,[21,25]]]],19],20],[[[46,[[0,[21,25]]]],19],20],[[[47,[[0,[21,25]]]],19],20],[[[48,[[0,[21,25]]]],19],20],[[[49,[[0,[21,25]]]],19],20],[[[50,[[0,[21,25]]]],19],20],[[[51,[[0,[21,25]]]],19],20],[[[52,[[0,[21,25]]]],19],20],[[[53,[[0,[21,25]]]],19],20],[[[54,[[0,[21,25]]]],19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[38,[25]]],[[39,[25]]]],[[]],[[]],[[[40,[25]]],[[41,[25]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],28],[[],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[29,[25]]],17],[[[30,[25]]],17],0,[[[51,[25]]],28],[[[52,[25]]],28],0,0,[[[51,[25]]],28],[[[52,[25]]],28],0,0,[[[51,[25]]],28],[[[52,[25]]],28],0,0,[[[48,[25]],25,[58,[57]]],59],[[[50,[25]],25,[58,[57]]],59],0,[[[42,[25]]]],[[[43,[25]]]],0,0,[[[42,[25]]]],[[[43,[25]]]],0,0,[[[42,[25]]],28],[[[43,[25]]],28],0,0,[[[42,[25]]]],[[[43,[25]]]],0,0,[[[42,[25]]]],[[[43,[25]]]],0,0,[[[42,[25]]]],[[[43,[25]]]],0,0,[[[42,[25]]],28],[[[43,[25]]],28],0,0,[[[42,[25]]]],[[[43,[25]]]],0,0,0,[[[39,[25]]]],[[[41,[25]]]],0,0,[[[38,[25]]]],[[25,28,4],[[60,[25]]]],[[25,28,4],[[60,[25]]]],[[[39,[25]],17]],[[25,28,28],[[61,[25]]]],[[[40,[25]]]],[[25,17,28,28],[[61,[25]]]],[[[41,[25]],17]],0,0,0,0,[[[38,[25]]]],[[[39,[25]]]],[[[40,[25]]]],[[[41,[25]]]],0,0,0,0,[[[38,[25]],25],28],[[[38,[25]]],28],[[[39,[25]],25],28],[[[39,[25]],17],28],[[[40,[25]]],28],[[[40,[25]],25],28],[[[41,[25]],17],28],[[[41,[25]],25,17],28],[[[38,[25]],25],28],[[[38,[25]]],28],[[[39,[25]],25],28],[[[39,[25]],17],28],[[[40,[25]],25],28],[[[40,[25]]],28],[[[41,[25]],25,17],28],[[[41,[25]],17],28],[[[38,[25]],25,28,4]],[[[39,[25]],25,28,4]],[[[40,[25]],25,28,28]],[[[41,[25]],25,17,28,28]],[[[34,[25]],4,4]],[[[35,[25]],4,4]],[[[32,[25]]]],[[[33,[25]]]],0,0,[[[32,[25]]]],[[[33,[25]]]],0,0,[[[32,[25]]]],[[[33,[25]]]],0,0,[[[32,[25]]]],[[[33,[25]]]],0,0,[[[32,[25]]],28],[[[33,[25]]],28],0,0,[[[32,[25]]],28],[[[33,[25]]],28],0,0,[[[32,[25]]],28],[[[33,[25]]],28],0,0,[[[32,[25]]]],[[[33,[25]]]],0,0,[[[32,[25]]]],[[[33,[25]]]],0,0,[[[32,[25]]],28],[[[33,[25]]],28],0,0,0,0,0,0,[[[34,[25]]],4],[[[34,[25]]],4],[[[35,[25]]],4],[[[35,[25]]],4],[[[34,[25]]],4],[[[35,[25]]],4],0,0,[[[34,[25]]],28],[[[35,[25]]],28],0,0,[[[34,[25]]],4],[[[35,[25]]],4],0,0,[[[34,[25]]],56],[[[35,[25]]],56],0,0,[[[34,[25]]]],[[[35,[25]]]],0,0,[[[34,[25]]],4],[[[34,[25]]],4],[[[35,[25]]],4],[[[35,[25]]],4],[[[34,[25]]]],[[[35,[25]]]],0,0,[[[34,[25]]],4],[[[34,[25]]],4],[[[35,[25]]],4],[[[35,[25]]],4],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[62,62],[63,63],[64,64],[[[65,[[0,[15,25]]]]],[[65,[[0,[15,25]]]]]],[[[66,[[0,[15,25]]]]],[[66,[[0,[15,25]]]]]],[[[67,[[0,[15,25]]]]],[[67,[[0,[15,25]]]]]],[[[68,[[0,[15,25]]]]],[[68,[[0,[15,25]]]]]],[[[69,[[0,[15,25]]]]],[[69,[[0,[15,25]]]]]],[[[70,[[0,[15,25]]]]],[[70,[[0,[15,25]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[65,[[0,[71,25]]]],65],72],[[[66,[[0,[71,25]]]],66],72],[[[67,[[0,[71,25]]]],67],72],[[[68,[[0,[71,25]]]],68],72],[[[69,[[0,[71,25]]]],69],72],[[[70,[[0,[71,25]]]],70],72],[[],62],[[],63],[[],64],[[],[[65,[[0,[55,25]]]]]],[[],[[66,[[0,[55,25]]]]]],[[],[[67,[[0,[55,25]]]]]],[[],[[68,[[0,[55,25]]]]]],[[],[[69,[[0,[55,25]]]]]],[[],[[70,[[0,[55,25]]]]]],[[62,62],17],[[63,63],17],[[64,64],17],[[[65,[[0,[18,25]]]],65],17],[[[66,[[0,[18,25]]]],66],17],[[[67,[[0,[18,25]]]],67],17],[[[68,[[0,[18,25]]]],68],17],[[[69,[[0,[18,25]]]],69],17],[[[70,[[0,[18,25]]]],70],17],[[62,19],20],[[63,19],20],[[64,19],20],[[[65,[25]],19],20],[[[66,[25]],19],20],[[[67,[25]],19],20],[[[68,[25]],19],20],[[[69,[25]],19],20],[[[70,[25]],19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17,3],[17,[[3,[62]]]],[17,[[3,[63]]]],[17,[[3,[64]]]],[17,3],[[[65,[25]],25],56],[[[66,[25]],25],28],[[[67,[25]],25],73],[[[68,[25]],25],74],[[[69,[25]],25],75],[[[70,[25]],25],76],[62],[63],[64],[[[65,[[0,[22,25]]]]]],[[[66,[[0,[22,25]]]]]],[[[67,[[0,[22,25]]]]]],[[[68,[[0,[22,25]]]]]],[[[69,[[0,[22,25]]]]]],[[[70,[[0,[22,25]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[62,17],[63,17],[64,17],[[],17],[[25,56],[[65,[25]]]],[[25,28],[[66,[25]]]],[[25,73],[[67,[25]]]],[[25,74],[[68,[25]]]],[[25,75],[[69,[25]]]],[[25,76],[[70,[25]]]],[[[65,[[0,[77,25]]]],65],[[3,[72]]]],[[[66,[[0,[77,25]]]],66],[[3,[72]]]],[[[67,[[0,[77,25]]]],67],[[3,[72]]]],[[[68,[[0,[77,25]]]],68],[[3,[72]]]],[[[69,[[0,[77,25]]]],69],[[3,[72]]]],[[[70,[[0,[77,25]]]],70],[[3,[72]]]],[74,74],[[],74],[75,75],[[],75],[76,76],[[],76],[56,56],[[],56],[28,28],[[],28],[73,73],[[],73],[[[65,[25]],25,56]],[[[66,[25]],25,28]],[[[67,[25]],25,73]],[[[68,[25]],25,74]],[[[69,[25]],25,75]],[[[70,[25]],25,76]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[74,74],[74],[75,75],[75],[76,76],[76],[56,56],[56],[28,28],[28],[73,73],[73],0,[[]],[[]],[[]],[[]],[[],23],[[],23],[78,23],[78,23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[79,76],[[],73],[[],73],[[],73],[[],73],[[[80,[57]]],73],[[[81,[57]]],73],[[[82,[57]]],73],[83,73],[83,73],[84,73],[84,73],[85,73],[86,28],[[],73],[[],73],[[[80,[57]]],73],[[[81,[57]]],73],[[],1],[87,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[59,[3]]]],[[],[[59,[3]]]],[87,[[59,[3]]]],[88,88],[58,58],[89,89],[90,90],[91,91],[92,92],[93,93],[94,94],[[[96,[[0,[15,95]]]]],[[96,[[0,[15,95]]]]]],[83,83],[97,97],[84,84],[98,98],[85,85],[86,86],[99,99],[100,100],[101,101],[102,102],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[87,103],[[],[[59,[102]]]],[[[81,[57]]],[[59,[102]]]],[[],[[59,[101]]]],[[[81,[57]]],[[59,[101]]]],0,[[],59],[[],59],[[[80,[57]]],59],[[[81,[57]]],59],[[101,57],[[59,[102]]]],0,[[73,73],[[59,[3]]]],[[73,73],[[59,[3]]]],[[[80,[57]],73,73],[[59,[3]]]],[[[81,[57]],73,73],[[59,[3]]]],[102,[[59,[104]]]],[[],88],[[],[[58,[57]]]],[[],[[96,[[0,[55,95]]]]]],[[],97],[[],84],[[],3],[87,[[3,[105]]]],[[],3],[87,[[3,[106]]]],[[]],[87,107],0,[79,11],[[],62],[[],62],[[],73],[87,73],[[88,88],17],[[89,89],17],[[90,90],17],[[91,91],17],[[92,92],17],[[93,93],17],[[94,94],17],[[83,83],17],[[84,84],17],[[98,98],17],[[85,85],17],[[86,86],17],[[99,99],17],[[100,100],17],[[101,101],17],[[102,102],17],[[],[[59,[[108,[85]]]]]],[87,[[59,[[108,[85]]]]]],[[]],[[],3],[[[80,[57]]]],[[[81,[57]]],3],[[],12],[[],13],[[],14],[[],[[16,[92]]]],[[[80,[57]]],13],[[[81,[57]]],14],[[[82,[57]]],[[16,[92]]]],[87,12],[[[80,[57]],19],20],[[[81,[57]],19],20],[[[109,[57]],19],20],[[[82,[57]],19],20],[[88,19],20],[[58,19],20],[[[87,[[0,[21,57]]]],19],20],[[[110,[[0,[21,57]]]],19],20],[[[111,[[0,[21,57]]]],19],20],[[[103,[[0,[21,57]]]],19],20],[[[112,[[0,[21,57]]]],19],20],[[106,19],20],[[107,19],20],[[105,19],20],[[[113,[[0,[21,57]]]],19],20],[[114,19],20],[[89,19],20],[[89,19],20],[[90,19],20],[[91,19],20],[[92,19],20],[[93,19],20],[[94,19],20],[[[96,[[0,[21,95]]]],19],20],[[83,19],20],[[97,19],20],[[84,19],20],[[98,19],20],[[85,19],20],[[86,19],20],[[99,19],20],[[79,19],20],[[100,19],20],[[101,19],20],[[102,19],20],[[[87,[57]]],5],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[58,[57]],28],23],[[[96,[95]],73],3],[[97,73],[[3,[84]]]],[[],[[59,[3]]]],[[],[[59,[3]]]],[87,[[59,[3]]]],[[],[[59,[3]]]],[[],[[59,[3]]]],[87,[[59,[3]]]],[86],[[],17],[87,17],[79,17],[90],[91],[92],[93],[94],[83],[84],[99],[100],[101],[102],[[],[[59,[[108,[98]]]]]],[87,[[59,[[108,[98]]]]]],[[],92],[[],93],[[[81,[57]]],92],[[[82,[57]]],93],[94,[[3,[92]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[87,17],[[],17],[[[82,[57]]],17],[[],17],[[[82,[57]]],17],[88,17],[[],17],[[[82,[57]]],17],[[],17],[87,17],[[],17],[[[82,[57]]],17],[[],17],[[[82,[57]]],17],[[],17],[[[82,[57]]],17],[[],91],[[],6],[[],7],[[],8],[[[81,[57]]],6],[[[109,[57]]],7],[[[82,[57]]],8],[87,91],[79,10],[[],[[23,[73]]]],[88,78],[98],[[],[[59,[3]]]],[[],[[59,[3]]]],[87,[[59,[3]]]],[[],[[59,[[3,[115]]]]]],[[],[[59,[115]]]],[[],[[59,[115]]]],[[],[[59,[115]]]],[[[80,[57]]],[[59,[[3,[115]]]]]],[[[81,[57]]],[[59,[115]]]],[[[109,[57]]],[[59,[115]]]],[[[82,[57]]],[[59,[115]]]],[83,115],[84],[98],[85],[[],[[59,[3]]]],[[],59],[[],59],[[],59],[[[80,[57]]],[[59,[3]]]],[[[81,[57]]],59],[[[109,[57]]],59],[[[82,[57]]],59],[[57,73,73],[[58,[57]]]],[[[108,[95]]],[[96,[95]]]],[[73,115],83],[[[110,[57]]],3],[[[111,[57]]],3],[[[103,[57]]],3],[[[112,[57]]],3],[[[107,[57]]],3],[[[105,[57]]],3],[[[113,[57]]],3],[114,3],[3,101],[[],102],[[84,97]],[84,78],[[],97],[[],97],[87,97],[97],0,[57,[[59,[[87,[57]]]]]],[57,[[59,[90]]]],[[57,73],[[59,[90]]]],[86],[[],[[59,[[3,[86]]]]]],[[],[[59,[[3,[86]]]]]],[87,[[59,[[3,[86]]]]]],[73,23],[73,23],[88,23],[73,23],[73,23],[[88,78],23],[[73,73],23],[[73,73],23],[[88,78],[[23,[88]]]],[[73,73],23],[[88,78,78],[[23,[88]]]],[[[116,[73]],4],23],[[73,78],23],[[73,78],23],[[88,78],23],[[73,78],23],[[73,78],23],[[88,78,78],23],[88,23],[[88,78],23],[[],73],[87,73],[[]],[[[81,[57]]],[[113,[57]]]],[[],9],[[[82,[57]]],9],[[],94],[[[82,[57]]],94],[92,59],[[87,92],[[59,[81]]]],[115,3],[115,3],[[],3],[87,[[3,[81]]]],[[],[[3,[92]]]],[[],[[3,[92]]]],[[]],[[]],[[[109,[57]]],[[112,[57]]]],[87,111],[[],[[59,[[3,[115]]]]]],[[[81,[57]]],[[59,[[3,[115]]]]]],[[],[[59,[3]]]],[[[81,[57]]],[[59,[3]]]],[[]],[87,110],[[79,76]],[[],73],[[],73],[[],73],[[[80,[57]]],73],[[[81,[57]]],73],[[[82,[57]]],73],[84,73],[79,4],[[88,78],23],[[],93],[[[109,[57]]],93],[93,59],[93,59],[[87,93],[[59,[82]]]],[[[106,[57]],93],59],[[],[[96,[83]]]],[[],[[96,[83]]]],[87,[[96,[83]]]],[[],3],[87,[[3,[106]]]],[[]],[[]],[87,107],[[[106,[57]]]],[[[96,[95]]]],[97],[79,99],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],117],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],[[59,[104]]]],[[],[[59,[104]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[118,73],[119,73],[[[121,[120,57]]],73],[118,73],[119,73],[122,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[122,[[59,[3]]]],[[]],[[]],[[],28],[[[123,[[0,[15,120]]]]],[[123,[[0,[15,120]]]]]],[[[124,[[0,[15,120]]]]],[[124,[[0,[15,120]]]]]],[125,125],[121,121],[126,126],[127,127],[[[128,[[0,[15,120]]]]],[[128,[[0,[15,120]]]]]],[[[129,[[0,[15,120]]]]],[[129,[[0,[15,120]]]]]],[[[130,[[0,[15,120]]]]],[[130,[[0,[15,120]]]]]],[[[131,[[0,[15,120]]]]],[[131,[[0,[15,120]]]]]],[[[132,[[0,[15,120]]]]],[[132,[[0,[15,120]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[122,133],[119,[[59,[102]]]],[119,[[59,[101]]]],[[]],[[]],[57,23],[57,23],[57,59],[57,59],[122],[118,59],[119,59],[57,23],[57,23],[57,59],[57,59],[[57,73,73],[[23,[3]]]],[[57,73,73],[[23,[3]]]],[[118,73,73],[[59,[3]]]],[[119,73,73],[[59,[3]]]],[[],[[123,[[0,[55,120]]]]]],[[],[[124,[120,57]]]],[[],126],[[],127],[[],[[128,[120]]]],[[[134,[120]]]],[57,[[59,[3]]]],[57,[[59,[3]]]],[57,[[59,[3]]]],[57,[[59,[3]]]],[[[123,[120,57]],57],[[59,[3]]]],[122,[[3,[135]]]],[122,[[3,[125]]]],[122,136],[[],56],[[]],[[],28],[[],31],[[],56],[[],56],[[],56],[[]],[[],56],[[],56],[[]],[[],56],[[],56],[[],28],[[],59],[[],59],[122],[122,73],[122,[[59,[[108,[85]]]]]],[[]],[[]],[[],3],[[],3],[118],[119,3],[[[137,[120]],28,[3,[127]],124,128],3],[[[138,[120]],28,[3,[127]],124,128],3],[122,12],[118,13],[119,14],[[[121,[120,57]]],[[16,[92]]]],[[[136,[120,57]],19],20],[[135,19],20],[[139,19],20],[[122,19],20],[[140,19],20],[[118,19],20],[[[123,[[0,[21,120]]]],19],20],[[141,19],20],[[119,19],20],[[[124,[[0,[21,120]]]],19],20],[[125,19],20],[[121,19],20],[[142,19],20],[[133,19],20],[[143,19],20],[[144,19],20],[[145,19],20],[[134,19],20],[[[137,[[0,[21,120]]]],19],20],[[[138,[[0,[21,120]]]],19],20],[[126,19],20],[[127,19],20],[[[128,[[0,[21,120]]]],19],20],[[[129,[[0,[21,120]]]],19],20],[[[130,[[0,[21,120]]]],19],20],[[[131,[[0,[21,120]]]],19],20],[[[132,[[0,[21,120]]]],19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[142,78],[[3,[78]]]],[122,[[59,[3]]]],[122,[[59,[3]]]],[57,[[59,[3]]]],[57,[[59,[3]]]],[[[123,[120,57]],57],[[59,[3]]]],[57,[[59,[[3,[54]]]]]],[57,[[59,[[3,[54]]]]]],[[[123,[120,57]],57],[[59,[[3,[54]]]]]],[57,[[59,[3]]]],[57,[[59,[3]]]],[[[123,[120,57]],57],[[59,[3]]]],[57,[[59,[3]]]],[57,[[59,[3]]]],[[[123,[120,57]],57],[[59,[3]]]],[57,[[59,[3]]]],[57,[[59,[3]]]],[[[123,[120,57]],57],[[59,[3]]]],[57,[[59,[3]]]],[57,[[59,[3]]]],[122,17],[57,[[59,[3]]]],[57,[[59,[3]]]],[[[123,[120,57]],57],[[59,[3]]]],[127,28],[57,[[59,[[3,[53]]]]]],[57,[[59,[[3,[53]]]]]],[[[123,[120,57]],57],[[59,[[3,[53]]]]]],[122,[[59,[[108,[98]]]]]],[119,92],[[[121,[120,57]]],93],[126,56],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[122,17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[[121,[120,57]]],17],[[],17],[[],17],[[[121,[120,57]]],17],[[[123,[120,57]]],17],[[[124,[120,57]]],17],[[[128,[120]]],17],[[[121,[120,57]]],17],[126,17],[126,17],[[],17],[[],17],[122,17],[[[121,[120,57]]],17],[126,17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[[121,[120,57]]],17],[[[121,[120,57]]],17],[[[123,[120,57]]],146],[[[124,[120,57]]],146],[122,91],[119,6],[[[121,[120,57]]],8],[143,7],[[[123,[120,57]]],78],[[[124,[120,57]]],78],[[[124,[120,57]],147],[[96,[95]]]],[[[128,[120]],78,[3,[127]]],17],[[],28],[[[134,[120]]],28],[[],28],[[[134,[120]]],28],[[],28],[[[134,[120]]],28],[[[58,[57]]],59],[[[58,[57]]],59],[[[58,[57]]],59],[[[58,[57]]],59],[118,[[59,[[3,[115]]]]]],[119,[[59,[115]]]],[[[121,[120,57]]],[[59,[115]]]],[143,[[59,[115]]]],[[[134,[120]]]],[127],[118,[[59,[3]]]],[119,59],[[[121,[120,57]]],59],[143,59],[[[58,[57]]],[[123,[120,57]]]],[[[136,[120,57]]],3],[135,3],[139,3],[140,3],[141,3],[133,3],[144,3],[145,[[59,[[3,[134]]]]]],[[[129,[120]]],[[59,[3]]]],[[[130,[120]]],[[59,[[3,[48]]]]]],[[[131,[120]]],[[59,[3]]]],[[[132,[120]]],[[59,[[3,[50]]]]]],[57,[[59,[[3,[145]]]]]],[57,[[59,[[3,[145]]]]]],[57,[[59,[[3,[145]]]]]],[57,[[59,[[3,[145]]]]]],[[]],[[]],[[],28],[[]],[[]],[[]],[[],28],[[]],[57,59],[57,59],[[],[[59,[122]]]],[[57,123,92],[[59,[[124,[120,57]]]]]],[[123,92],[[59,[142]]]],[[],[[59,[[137,[120]]]]]],[[],[[59,[[138,[120]]]]]],[[[3,[[129,[120]]]],[3,[[131,[120]]]],[58,[57]]],[[59,[[128,[120]]]]]],[57,[[59,[78]]]],[57,[[59,[78]]]],[57,59],[57,59],[[]],[[]],[17],[[]],[[]],[[],28],[17,28],[[],28],[17,28],[122],[122],[57,[[59,[3]]]],[57,[[59,[3]]]],[57,[[59,[3]]]],[57,[[59,[3]]]],[122,73],[[[123,[120,57]],92],[[59,[142]]]],[119,139],[[[121,[120,57]]],9],[[[123,[120,57]],92],59],[[[124,[120,57]]],92],[[[121,[120,57]]],94],[57,[[59,[3]]]],[57,[[59,[3]]]],[[122,92],[[59,[119]]]],[[[123,[120,57]]],3],[122,[[3,[119]]]],[57,59],[57,59],[[[123,[120,57]]],59],[57,[[59,[[58,[57]]]]]],[57,[[59,[[58,[57]]]]]],[57,[[59,[[123,[57]]]]]],[57,[[59,[[123,[57]]]]]],[122,141],[143],[119,[[59,[[3,[115]]]]]],[119,[[59,[3]]]],[122,140],[[]],[[]],[[]],[[]],[[],28],[[],28],[[],28],[[]],[[]],[[],28],[[[124,[120,57]],78],[[3,[28]]]],[[[124,[120,57]]],92],[57,[[59,[78]]]],[57,[[59,[78]]]],[57,[[59,[28]]]],[57,[[59,[28]]]],[118,73],[119,73],[[[121,[120,57]]],73],[[],4],[[],4],[[],28],[[],4],[[],56],[[]],[[],4],[[]],[[],4],[58,59],[58,59],[[[124,[120,57]]],92],[57,[[59,[[3,[[58,[57]]]]]]]],[57,[[59,[[3,[[58,[57]]]]]]]],[[[123,[120,57]],57,92],[[59,[[58,[57]]]]]],[[[124,[120,57]]],[[58,[57]]]],[[[124,[120,57]],78],59],[143,93],[[[138,[120]]],28],[[122,93],[[59,[121]]]],[[[125,[120,57]],93],59],[[[124,[120,57]]],59],[[[124,[120,57]],78],[[59,[[3,[92]]]]]],[122,[[3,[125]]]],[[[123,[120,57]],57,92],[[59,[[124,[120,57]]]]]],[[[137,[120]]],28],[[[138,[120]]],[[3,[28]]]],[[57,123,92],[[59,[[3,[[124,[57]]]]]]]],[[57,123,92],[[59,[[3,[[124,[57]]]]]]]],[122,136],[[[123,[120,57]],57,28],[[59,[[124,[120,57]]]]]],[[[124,[120,57]]]],[[[125,[120,57]]]],[[],[[3,[28]]]],[[],[[3,[28]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],[[3,[28]]]],[[],[[3,[28]]]],[[[128,[120]],126],[[59,[[3,[127]]]]]],[[[128,[120]],78],126],[[[123,[120,57]],57],[[59,[[3,[[128,[120]]]]]]]]],"p":[[4,"Architecture"],[4,"AddressSize"],[4,"Option"],[15,"u8"],[4,"BinaryFormat"],[4,"SectionKind"],[4,"ComdatKind"],[4,"SymbolKind"],[4,"SymbolScope"],[4,"RelocationKind"],[4,"RelocationEncoding"],[4,"FileFlags"],[4,"SegmentFlags"],[4,"SectionFlags"],[8,"Clone"],[4,"SymbolFlags"],[15,"bool"],[8,"PartialEq"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[8,"Hash"],[4,"Result"],[3,"TypeId"],[8,"Endian"],[3,"CompressionHeader32"],[3,"CompressionHeader64"],[15,"u32"],[3,"FileHeader32"],[3,"FileHeader64"],[3,"Ident"],[3,"SectionHeader32"],[3,"SectionHeader64"],[3,"Sym32"],[3,"Sym64"],[3,"Syminfo32"],[3,"Syminfo64"],[3,"Rel32"],[3,"Rela32"],[3,"Rel64"],[3,"Rela64"],[3,"ProgramHeader32"],[3,"ProgramHeader64"],[3,"Dyn32"],[3,"Dyn64"],[3,"Versym"],[3,"Verdef"],[3,"Verdaux"],[3,"Verneed"],[3,"Vernaux"],[3,"NoteHeader32"],[3,"NoteHeader64"],[3,"HashHeader"],[3,"GnuHashHeader"],[8,"Default"],[15,"u16"],[8,"ReadRef"],[3,"StringTable"],[6,"Result"],[6,"U32"],[6,"U64"],[4,"Endianness"],[3,"LittleEndian"],[3,"BigEndian"],[3,"U16Bytes"],[3,"U32Bytes"],[3,"U64Bytes"],[3,"I16Bytes"],[3,"I32Bytes"],[3,"I64Bytes"],[8,"Ord"],[4,"Ordering"],[15,"u64"],[15,"i16"],[15,"i32"],[15,"i64"],[8,"PartialOrd"],[15,"usize"],[3,"Relocation"],[3,"Segment"],[3,"Section"],[3,"Symbol"],[3,"SymbolMapName"],[3,"ObjectMapEntry"],[3,"Export"],[3,"CodeView"],[3,"File"],[3,"Bytes"],[3,"Error"],[4,"FileKind"],[4,"ObjectKind"],[3,"SectionIndex"],[3,"SymbolIndex"],[4,"SymbolSection"],[8,"SymbolMapEntry"],[3,"SymbolMap"],[3,"ObjectMap"],[3,"Import"],[4,"RelocationTarget"],[4,"CompressionFormat"],[3,"CompressedFileRange"],[3,"CompressedData"],[3,"ComdatIterator"],[4,"Cow"],[3,"DynamicRelocationIterator"],[3,"SymbolTable"],[3,"SymbolIterator"],[3,"Vec"],[3,"Comdat"],[3,"SegmentIterator"],[3,"SectionIterator"],[3,"ComdatSectionIterator"],[3,"SectionRelocationIterator"],[3,"NoDynamicRelocationIterator"],[15,"str"],[3,"Range"],[3,"String"],[3,"ElfSegment"],[3,"ElfSection"],[8,"FileHeader"],[3,"ElfSymbol"],[3,"ElfFile"],[3,"SectionTable"],[3,"SymbolTable"],[3,"ElfSymbolTable"],[3,"VersionIndex"],[3,"Version"],[3,"VersionTable"],[3,"VerdefIterator"],[3,"VerdauxIterator"],[3,"VerneedIterator"],[3,"VernauxIterator"],[3,"ElfComdatIterator"],[3,"Note"],[3,"ElfDynamicRelocationIterator"],[3,"ElfSymbolIterator"],[3,"HashTable"],[3,"GnuHashTable"],[3,"ElfSectionRelocationIterator"],[3,"ElfSegmentIterator"],[3,"ElfSectionIterator"],[3,"RelocationSections"],[3,"ElfComdat"],[3,"ElfComdatSectionIterator"],[3,"NoteIterator"],[3,"Iter"],[8,"Fn"],[13,"Elf"],[13,"Coff"],[13,"Xcoff"],[13,"MachO"],[13,"MachO"],[13,"Coff"],[13,"MachO"],[13,"Xcoff"],[13,"Elf"],[13,"Coff"],[13,"MachO"],[13,"Elf"],[13,"CoffSection"],[13,"MachO"],[13,"Elf"],[8,"Object"],[8,"ObjectSection"],[8,"ObjectComdat"],[8,"ObjectSymbolTable"],[8,"ObjectSegment"],[8,"ObjectSymbol"],[8,"ProgramHeader"],[8,"SectionHeader"],[8,"Sym"],[8,"Rel"],[8,"Rela"],[8,"Dyn"],[8,"CompressionHeader"],[8,"NoteHeader"]]},\
"once_cell":{"doc":"Overview","t":[0,0,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["race","unsync","OnceBool","OnceBox","OnceNonZeroUsize","OnceRef","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","default","default","drop","fmt","fmt","fmt","fmt","from","from","from","from","get","get","get","get","get_or_init","get_or_init","get_or_init","get_or_init","get_or_try_init","get_or_try_init","get_or_try_init","get_or_try_init","into","into","into","into","new","new","new","new","set","set","set","set","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Lazy","OnceCell","borrow","borrow","borrow_mut","borrow_mut","clone","clone_from","clone_into","default","default","deref","deref_mut","eq","fmt","fmt","force","force_mut","from","from","from","from","get","get","get_mut","get_mut","get_or_init","get_or_try_init","into","into","into_inner","into_value","new","new","set","take","to_owned","try_from","try_from","try_insert","try_into","try_into","type_id","type_id","with_value"],"q":["once_cell","","once_cell::race","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","once_cell::unsync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Thread-safe, non-blocking, “first one wins” flavor of …","Single-threaded version of <code>OnceCell</code>.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets a reference to the underlying value.","Gets a reference to the underlying value.","Gets the underlying value.","Gets the underlying value.","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new empty cell.","Creates a new empty cell.","Creates a new empty cell.","Creates a new empty cell.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","","","","","","","","","","","","","A value which is initialized on the first access.","A cell which can be written to only once. It is not thread …","","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","Forces the evaluation of this lazy value and returns a …","Forces the evaluation of this lazy value and returns a …","","","Returns the argument unchanged.","Returns the argument unchanged.","Gets a reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets a mutable reference to the underlying value.","Gets the mutable reference to the result of this lazy …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>OnceCell</code>, returning the wrapped value.","Consumes this <code>Lazy</code> returning the stored value.","Creates a new empty cell.","Creates a new lazy value with the given initializing …","Sets the contents of this cell to <code>value</code>.","Takes the value out of this <code>OnceCell</code>, moving it back to an …","","","","Like <code>set</code>, but also returns a reference to the final cell …","","","","","Creates a new initialized cell."],"i":[0,0,0,0,0,0,1,2,3,4,1,2,3,4,1,2,3,4,2,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,0,0,14,16,14,16,14,14,14,14,16,16,16,14,14,16,16,16,14,14,14,16,14,16,14,16,14,14,14,16,14,16,14,16,14,14,14,14,16,14,14,16,14,16,14],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],2],[[],3],[[],4],[2],[[1,5],6],[[2,5],6],[[3,5],6],[[4,5],6],[[]],[[]],[[]],[[]],[1,7],[2,7],[3,[[7,[8]]]],[4,[[7,[9]]]],[1],[2],[3,8],[4,9],[1,10],[2,10],[3,[[10,[8]]]],[4,[[10,[9]]]],[[]],[[]],[[]],[[]],[[],1],[[],2],[[],3],[[],4],[1,10],[[2,11],[[10,[11]]]],[[3,8],10],[[4,9],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],12],[[],12],[[],12],[[],12],0,0,[[]],[[]],[[]],[[]],[[[14,[13]]],[[14,[13]]]],[[[14,[13]],[14,[13]]]],[[]],[[],14],[[],[[16,[15]]]],[[[16,[17]]]],[[[16,[17]]]],[[[14,[18]],[14,[18]]],9],[[[14,[19]],5],6],[[[16,[19]],5],6],[16],[16],[[],14],[20],[[]],[[]],[14,7],[16,7],[14,7],[16,7],[14],[14,10],[[]],[[]],[14,7],[16,10],[[],14],[[],16],[14,10],[14,7],[[]],[[],10],[[],10],[14,10],[[],10],[[],10],[[],12],[[],12],[[],14]],"p":[[3,"OnceRef"],[3,"OnceBox"],[3,"OnceNonZeroUsize"],[3,"OnceBool"],[3,"Formatter"],[6,"Result"],[4,"Option"],[3,"NonZeroUsize"],[15,"bool"],[4,"Result"],[3,"Box"],[3,"TypeId"],[8,"Clone"],[3,"OnceCell"],[8,"Default"],[3,"Lazy"],[8,"FnOnce"],[8,"PartialEq"],[8,"Debug"],[15,"never"]]},\
"project1":{"doc":"Project1: KeOS.","t":[0,0,18,18,18,18,18,13,18,18,13,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,4,3,3,3,3,3,3,3,3,3,18,18,18,18,18,18,18,18,18,3,18,18,18,18,18,13,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11],"n":["page_table","rr","A","A","A","A","D","Duplicated","EXECUTABLE","G","NotExist","P","P","P","P","PAT","PCD","PCD","PCD","PCD","PK_0","PK_1","PK_2","PK_3","PS","PWT","PWT","PWT","PWT","PageTable","PageTableMappingError","Pde","PdeFlags","Pdpe","PdpeFlags","Permission","Pml4e","Pml4eFlags","Pte","PteFlags","R","R","R","R","READ","RW","RW","RW","RW","TLBInvalidate","US","US","US","US","USER","Unaligned","WRITE","XD","XD","XD","XD","all","all","all","all","all","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","difference","difference","difference","difference","difference","do_map","drop","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","extend","extend","extend","extend","extend","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forget","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","from_iter","hash","hash","hash","hash","hash","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into_pd","into_pd_mut","into_pdp","into_pdp_mut","into_pt","into_pt_mut","invalidate","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","map","new","not","not","not","not","not","pa","pa","pa","pa","pa","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","remove","remove","remove","remove","set","set","set","set","set","set_pa","set_pa","set_pa","set_pa","set_perm","set_perm","set_perm","set_perm","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","unmap","walk","RoundRobin","borrow","borrow_mut","from","into","new","next_to_run","push_to_queue","timer_tick","try_from","try_into","type_id"],"q":["project1","","project1::page_tableproject1::rr","","","","","","","","","","",""],"d":["4-level page table of x86_64.","Multicore Round-robin Scheduling.","Accessed; indicates whether this entry has been used for …","Accessed; indicates whether this entry has been used for …","Accessed; indicates whether this entry has been used for …","Accessed; indicates whether software has accessed the …","Dirty; indicates whether software has written to the …","Duplicated mapping","Page is executable.","Global; if CR4.PGE = 1, determines whether the translation …","Not exist","Present; must be 1 to reference a page-directory-pointer …","Present; must be 1 to reference a page directory","Present; must be 1 to reference a page table","Present; must be 1 to map a 4-KByte page","Indirectly determines the memory type used to access the …","Page-level cache disable; indirectly determines the memory …","Page-level cache disable; indirectly determines the memory …","Page-level cache disable; indirectly determines the memory …","Page-level cache disable; indirectly determines the memory …","Protection key bit 0; if CR4.PKE = 1 or CR4.PKS = 1, this …","Protection key bit 1; if CR4.PKE = 1 or CR4.PKS = 1, this …","Protection key bit 2; if CR4.PKE = 1 or CR4.PKS = 1, this …","Protection key bit 3; if CR4.PKE = 1 or CR4.PKS = 1, this …","Page size; indicates whether this entry is 2M page.","Page-level write-through; indirectly determines the memory …","Page-level write-through; indirectly determines the memory …","Page-level write-through; indirectly determines the memory …","Page-level write-through; indirectly determines the memory …","4-level page table of x86_64.","A list specifying categories of page table operation error.","Page directory entry.","Flags for pde.","Page directory pointer table entry.","Flags for pdpe.","Possible memory permissions.","Page Map Level 4 entry.","Flags for pml4e.","Page table entry.","Flags for pte.","For ordinary paging, ignored; for HLAT paging, restart (if …","For ordinary paging, ignored; for HLAT paging, restart (if …","For ordinary paging, ignored; for HLAT paging, restart (if …","For ordinary paging, ignored; for HLAT paging, restart (if …","Page is readable.","Read/write; if 0, writes may not be allowed to the …","Read/write; if 0, writes may not be allowed to the 1-GByte …","Read/write; if 0, writes may not be allowed to the 2-MByte …","Read/write; if 0, writes may not be allowed to the 4-KByte …","Struct for invalidating the tlb entry.","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; if 0, user-mode accesses are not allowed …","User/supervisor; if 0, user-mode accesses are not allowed …","Page can be referred by user application.","Unaligned address","Page is writable.","If IA32_EFER.NXE = 1, execute-disable (if 1, instruction …","If IA32_EFER.NXE = 1, execute-disable (if 1, instruction …","If IA32_EFER.NXE = 1, execute-disable (if 1, instruction …","If IA32_EFER.NXE = 1, execute-disable (if 1, instruction …","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Map <code>pa</code> into <code>va</code> with permission <code>perm</code>.","","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","Get a flags this entry.","Get a flags this entry.","Get a flags this entry.","Get a flags this entry.","","","","","","","","","","","","","","","","","","","","","","","","","","","Forget this modification.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get a reference of page directory pointed by this entry.","Get a mutable reference of page directory pointed by this …","Get a reference of page directory pointer table pointed by …","Get a mutable reference of page directory pointer table …","Get a reference of page table pointed by this entry.","Get a mutable reference of page table pointed by this …","Invalidate the underlying va.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Map <code>pg</code> into <code>va</code> with permission <code>perm</code>.","Create a empty page table.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Get physical address of this page table.","Get a physical address pointed by this entry.","Get a physical address pointed by this entry.","Get a physical address pointed by this entry.","Get a physical address pointed by this entry.","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Set physical address of this entry.","Set physical address of this entry.","Set physical address of this entry.","Set physical address of this entry.","Set a permission of this entry.","Set a permission of this entry.","Set a permission of this entry.","Set a permission of this entry.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Unmap the <code>va</code> and returns <code>Page</code> that was mapped to <code>va</code>.","Walk the page table and return corresponding pte of the <code>va</code> …","A round robin scheduler.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new roundrobin scheduler.","","","","","",""],"i":[0,0,1,2,3,4,4,16,5,4,16,1,2,3,4,4,1,2,3,4,4,4,4,4,3,1,2,3,4,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,1,2,3,4,0,1,2,3,4,5,16,5,1,2,3,4,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,18,13,16,7,1,8,2,9,3,10,4,5,18,13,16,7,1,8,2,9,3,10,4,5,7,1,8,2,9,3,10,4,5,7,1,8,2,9,3,10,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,13,18,1,2,3,4,5,16,1,2,3,4,5,1,2,3,4,5,7,8,9,10,16,1,1,1,1,1,2,2,2,2,2,3,3,3,3,3,4,4,4,4,4,5,5,5,5,5,18,18,13,16,7,1,8,2,9,3,10,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,18,13,16,7,1,8,2,9,3,10,4,5,8,8,7,7,9,9,18,1,2,3,4,5,1,2,3,4,5,13,13,1,2,3,4,5,13,7,8,9,10,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,7,8,9,10,7,8,9,10,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,7,1,8,2,9,3,10,4,5,1,2,3,4,5,18,13,16,7,1,8,2,9,3,10,4,5,18,13,16,7,1,8,2,9,3,10,4,5,18,13,16,7,1,8,2,9,3,10,4,5,1,2,3,4,5,13,13,0,25,25,25,25,25,25,25,25,25,25,25],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],2],[[],3],[[],4],[[],5],[[1,1],1],[[2,2],2],[[3,3],3],[[4,4],4],[[5,5],5],[[1,1]],[[2,2]],[[3,3]],[[4,4]],[[5,5]],[[1,1],1],[[2,2],2],[[3,3],3],[[4,4],4],[[5,5],5],[[1,1]],[[2,2]],[[3,3]],[[4,4]],[[5,5]],[1,6],[2,6],[3,6],[4,6],[5,6],[[1,1],1],[[2,2],2],[[3,3],3],[[4,4],4],[[5,5],5],[[1,1]],[[2,2]],[[3,3]],[[4,4]],[[5,5]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,7],[1,1],[8,8],[2,2],[9,9],[3,3],[10,10],[4,4],[5,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],11],[[2,2],11],[[3,3],11],[[4,4],11],[[5,5],11],[1,1],[2,2],[3,3],[4,4],[5,5],[[1,1],12],[[2,2],12],[[3,3],12],[[4,4],12],[[5,5],12],[[1,1],1],[[2,2],2],[[3,3],3],[[4,4],4],[[5,5],5],[[13,14,15,5],[[17,[16]]]],[18],[[],1],[[],2],[[],3],[[],4],[[],5],[[16,16],12],[[1,1],12],[[2,2],12],[[3,3],12],[[4,4],12],[[5,5],12],[[1,19]],[[2,19]],[[3,19]],[[4,19]],[[5,19]],[7,1],[8,2],[9,3],[10,4],[[16,20],21],[[1,20],21],[[1,20],21],[[1,20],21],[[1,20],21],[[1,20],21],[[2,20],21],[[2,20],21],[[2,20],21],[[2,20],21],[[2,20],21],[[3,20],21],[[3,20],21],[[3,20],21],[[3,20],21],[[3,20],21],[[4,20],21],[[4,20],21],[[4,20],21],[[4,20],21],[[4,20],21],[[5,20],21],[[5,20],21],[[5,20],21],[[5,20],21],[[5,20],21],[18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,[[22,[1]]]],[6,[[22,[2]]]],[6,[[22,[3]]]],[6,[[22,[4]]]],[6,[[22,[5]]]],[6,1],[6,2],[6,3],[6,4],[6,5],[6,1],[6,2],[6,3],[6,4],[6,5],[19,1],[19,2],[19,3],[19,4],[19,5],[1],[2],[3],[4],[5],[[1,1]],[[2,2]],[[3,3]],[[4,4]],[[5,5]],[[1,1],1],[[2,2],2],[[3,3],3],[[4,4],4],[[5,5],5],[[1,1],12],[[2,2],12],[[3,3],12],[[4,4],12],[[5,5],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,[[17,[16]]]],[8,[[17,[16]]]],[7,[[17,[16]]]],[7,[[17,[16]]]],[9,[[17,[16]]]],[9,[[17,[16]]]],[18],[1,12],[2,12],[3,12],[4,12],[5,12],[1,12],[2,12],[3,12],[4,12],[5,12],[[13,14,23,5],[[17,[16]]]],[[],13],[1,1],[2,2],[3,3],[4,4],[5,5],[13,15],[7,[[22,[15]]]],[8,[[22,[15]]]],[9,[[22,[15]]]],[10,[[22,[15]]]],[[1,1],[[22,[11]]]],[[2,2],[[22,[11]]]],[[3,3],[[22,[11]]]],[[4,4],[[22,[11]]]],[[5,5],[[22,[11]]]],[[1,1]],[[2,2]],[[3,3]],[[4,4]],[[5,5]],[[1,1,12]],[[2,2,12]],[[3,3,12]],[[4,4,12]],[[5,5,12]],[[7,15],[[17,[7,16]]]],[[8,15],[[17,[8,16]]]],[[9,15],[[17,[9,16]]]],[[10,15],[[17,[10,16]]]],[[7,1],7],[[8,2],8],[[9,3],9],[[10,4],10],[[1,1],1],[[2,2],2],[[3,3],3],[[4,4],4],[[5,5],5],[[1,1]],[[2,2]],[[3,3]],[[4,4]],[[5,5]],[[1,1],1],[[2,2],2],[[3,3],3],[[4,4],4],[[5,5],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1]],[[2,2]],[[3,3]],[[4,4]],[[5,5]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[1,1],1],[[2,2],2],[[3,3],3],[[4,4],4],[[5,5],5],[[13,14],[[17,[23,16]]]],[[13,14],[[17,[10,16]]]],0,[[]],[[]],[[]],[[]],[[],25],[25,[[22,[[27,[26]]]]]],[[25,[27,[26]]]],[25],[[],17],[[],17],[[],24]],"p":[[3,"Pml4eFlags"],[3,"PdpeFlags"],[3,"PdeFlags"],[3,"PteFlags"],[3,"Permission"],[15,"usize"],[3,"Pml4e"],[3,"Pdpe"],[3,"Pde"],[3,"Pte"],[4,"Ordering"],[15,"bool"],[3,"PageTable"],[3,"Va"],[3,"Pa"],[4,"PageTableMappingError"],[4,"Result"],[3,"TLBInvalidate"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[4,"Option"],[3,"Page"],[3,"TypeId"],[3,"RoundRobin"],[3,"Thread"],[3,"Box"]]},\
"rustc_demangle":{"doc":"Demangle Rust compiler symbol names.","t":[3,3,11,11,11,11,11,11,5,11,11,11,11,11,11,11,5,11,11,11,11,11,11],"n":["Demangle","TryDemangleError","as_str","borrow","borrow","borrow_mut","borrow_mut","clone","demangle","fmt","fmt","fmt","from","from","into","into","try_demangle","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["rustc_demangle","","","","","","","","","","","","","","","","","","","","","",""],"d":["Representation of a demangled symbol name.","Error returned from the <code>try_demangle</code> function below when …","Returns the underlying string that’s being demangled.","","","","","","De-mangles a Rust symbol into a more readable version","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The same as <code>demangle</code>, except return an <code>Err</code> if the string …","","","","","",""],"i":[0,0,1,1,3,1,3,3,0,1,1,3,1,3,1,3,0,1,3,1,3,1,3],"f":[0,0,[1,2],[[]],[[]],[[]],[[]],[3,3],[2,1],[[1,4],5],[[1,4],5],[[3,4],5],[[]],[[]],[[]],[[]],[2,[[6,[1,3]]]],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7]],"p":[[3,"Demangle"],[15,"str"],[3,"TryDemangleError"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"]]},\
"simple_fs":{"doc":"A very simple fs.","t":[8,13,4,3,3,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11],"n":["Disk","DiskError","Error","File","FileSystem","FsError","Sector","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","close","cmp","create","eq","fmt","fmt","from","from","from","from","into","into","into","into","into_offset","into_usize","load","name","new","open","partial_cmp","read","read","size","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","write"],"q":["simple_fs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A device that has byte sink.","Disk operation has an error.","Possible error kinds.","The file.","The root file system","File system operation has an error.","Sector.","","","","","","","","","","","Close this filesystem.","","Create a file that contains <code>contents</code>.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get offset that represented by the sector.","Cast into usize.","Load a file system from disk","Get name of this file.","Create a new file system to disk.","Open a file with <code>name</code>.","","Read 512 bytes from disk starting from sector.","Read from file starting from <code>ofs</code> to <code>contents</code>.","Get size of this file.","","","","","","","","","","","","","","Write 512 bytes to disk starting from sector.","Write to file starting from <code>ofs</code> from <code>contents</code>."],"i":[0,6,0,0,0,6,0,3,12,1,6,3,12,1,6,1,1,3,1,3,1,1,6,3,12,1,6,3,12,1,6,1,1,3,12,3,3,1,2,12,12,1,3,12,1,6,3,12,1,6,3,12,1,6,2,12],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[]],[[[3,[2]]],2],[[1,1],4],[[[3,[2]],5],[[7,[6]]]],[[1,1],8],[[1,9],10],[[6,9],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,11],[1,11],[2,[[7,[[3,[2]],6]]]],[[[12,[2]]],5],[[2,11],[[7,[[3,[2]],6]]]],[[[3,[2]],5],[[13,[[12,[2]]]]]],[[1,1],[[13,[4]]]],[1,[[7,[6]]]],[[[12,[2]],11],[[7,[11,6]]]],[[[12,[2]]],11],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],14],[[],14],[[],14],[[],14],[1,[[7,[6]]]],[[[12,[2]],11],[[7,[11,6]]]]],"p":[[3,"Sector"],[8,"Disk"],[3,"FileSystem"],[4,"Ordering"],[15,"str"],[4,"Error"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"usize"],[3,"File"],[4,"Option"],[3,"TypeId"]]},\
"spin":{"doc":"Synchronization primitives based on spinning","t":[18,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["INIT","Mutex","MutexGuard","Once","RwLock","RwLockReadGuard","RwLockUpgradeableGuard","RwLockWriteGuard","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_once","default","default","deref","deref","deref","deref","deref_mut","deref_mut","downgrade","downgrade","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_read_decrement","force_unlock","force_write_unlock","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into_inner","into_inner","lock","new","new","new","read","try","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_read","try_upgrade","try_upgradeable_read","try_write","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upgrade","upgradeable_read","wait","write"],"q":["spin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Initialization constant of <code>Once</code>.","This type provides MUTual EXclusion based on spinning.","A guard to which the protected data can be accessed","A synchronization primitive which can be used to run a …","A reader-writer lock","A guard from which the protected data can be read","A guard from which the protected data can be read, and can …","A guard to which the protected data can be written","","","","","","","","","","","","","","","Performs an initialization routine once and only once. The …","","","","","","","","","Downgrades the writable lock guard to a readable, shared …","Downgrades the upgradeable lock guard to a readable, …","The dropping of the MutexGuard will release the lock it …","","","","","","","","","","","Force decrement the reader count.","Force unlock the spinlock.","Force unlock exclusive write access.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this mutex, returning the underlying data.","Consumes this <code>RwLock</code>, returning the underlying data.","Locks the spinlock and returns a guard.","Creates a new spinlock wrapping the supplied data.","Creates a new spinlock wrapping the supplied data.","Creates a new <code>Once</code> value.","Locks this rwlock with shared read access, blocking the …","Returns a pointer iff the <code>Once</code> was previously initialized","","","","","","","","","","","","","","","Tries to lock the mutex. If it is already locked, it will …","Attempt to acquire this lock with shared read access.","Tries to upgrade an upgradeable lock guard to a writable …","Tries to obtain an upgradeable lock guard.","Attempt to lock this rwlock with exclusive write access.","","","","","","","","Upgrades an upgradeable lock guard to a writable lock …","Obtain a readable lock guard that can later be upgraded to …","Like try, but will spin if the <code>Once</code> is in the process of …","Lock this rwlock with exclusive write access, blocking the …"],"i":[1,0,0,0,0,0,0,0,4,5,1,6,7,8,9,4,5,1,6,7,8,9,1,4,5,6,7,8,9,6,8,8,9,6,7,8,9,4,5,1,6,7,8,9,5,4,5,4,5,1,6,7,8,9,4,5,1,6,7,8,9,4,5,4,4,5,1,5,1,4,5,1,6,7,8,9,4,5,1,6,7,8,9,4,5,9,5,5,4,5,1,6,7,8,9,9,5,1,5],"f":[0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[[],[[4,[[0,[2,3]]]]]],[[],[[5,[[0,[2,3]]]]]],[[[6,[2]]]],[[[7,[2]]]],[[[8,[2]]]],[[[9,[2]]]],[[[6,[2]]]],[[[8,[2]]]],[[[8,[2]]],[[7,[2]]]],[[[9,[2]]],[[7,[2]]]],[[[6,[2]]]],[[[7,[2]]]],[[[8,[2]]]],[[[9,[2]]]],[[[4,[[0,[2,10]]]],11],12],[[[5,[[0,[2,10]]]],11],12],[[[1,[10]],11],12],[[[6,[[0,[10,2]]]],11],12],[[[7,[[0,[10,2]]]],11],12],[[[8,[[0,[10,2]]]],11],12],[[[9,[[0,[10,2]]]],11],12],[[[5,[2]]]],[[[4,[2]]]],[[[5,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4],[5],[[[4,[2]]],[[6,[2]]]],[[],4],[[],5],[[],1],[[[5,[2]]],[[7,[2]]]],[1,13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[[4,[2]]],[[13,[[6,[2]]]]]],[[[5,[2]]],[[13,[[7,[2]]]]]],[[[9,[2]]],[[14,[[8,[2]],[9,[2]]]]]],[[[5,[2]]],[[13,[[9,[2]]]]]],[[[5,[2]]],[[13,[[8,[2]]]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[[9,[2]]],[[8,[2]]]],[[[5,[2]]],[[9,[2]]]],[1,13],[[[5,[2]]],[[8,[2]]]]],"p":[[3,"Once"],[8,"Sized"],[8,"Default"],[3,"Mutex"],[3,"RwLock"],[3,"MutexGuard"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"RwLockUpgradeableGuard"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[4,"Option"],[4,"Result"],[3,"TypeId"]]},\
"spin_lock":{"doc":"","t":[0,3,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["smplock","SpinLock","SpinLockGuard","TryLockError","WouldBlock","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","deref","deref_mut","drop","from","from","from","into","into","into","into_inner","lock","new","try_from","try_from","try_from","try_into","try_into","try_into","try_lock","type_id","type_id","type_id"],"q":["spin_lock","spin_lock::smplock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["SMP-supported spinlock.","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a …","An enumeration of possible errors associated while trying …","The lock could not be acquired at this time because the …","","","","","","","Creates a <code>SpinLock&lt;T&gt;</code>, with the <code>Default</code> value for T.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this spinlock, returning the underlying data.","Acquires a spinlock, blocking the current thread until it …","Creates a new spinlock in an unlocked state ready for use.","","","","","","","Attempts to acquire this lock.","","",""],"i":[0,0,0,0,6,6,3,4,6,3,4,3,4,4,4,6,3,4,6,3,4,3,3,3,6,3,4,6,3,4,3,6,3,4],"f":[0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],[[3,[[0,[1,2]]]]]],[[[4,[1]]]],[[[4,[1]]]],[[[4,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[1]]],1],[[[3,[1]]],[[4,[1]]]],[[],3],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[3,[1]]],[[5,[[4,[1]],6]]]],[[],7],[[],7],[[],7]],"p":[[8,"Sized"],[8,"Default"],[3,"SpinLock"],[3,"SpinLockGuard"],[4,"Result"],[4,"TryLockError"],[3,"TypeId"]]},\
"stable_deref_trait":{"doc":"This module defines an unsafe marker trait, StableDeref, …","t":[8,8],"n":["CloneStableDeref","StableDeref"],"q":["stable_deref_trait",""],"d":["An unsafe marker trait for types where clones deref to the …","An unsafe marker trait for types that deref to a stable …"],"i":[0,0],"f":[0,0],"p":[]},\
"unwind":{"doc":"A pure rust implementation of Unwind project.","t":[13,13,13,13,3,3,4,3,13,13,13,13,13,8,13,13,3,13,13,3,4,3,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,10,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BadOpcode","BadOperand","BadRegister","Cleanup","DwarfReader","Encoding","ExceptionHandlingPhase","FrameDescriptionEntry","InvalidApplication","InvalidOp","InvalidPc","MemoryOutOfBound","ParsingFailure","Peeker","PersonalityFailure","Search","StackFrame","UnknownRegister","UnmanagedRegister","UnwindContext","UnwindError","UnwindHandler","UnwindablePc","application","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cie","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","current","current","end","finish","finish","fmt","fmt","fmt","fmt","format","frame","from","from","from","from","from","from","from","from","from","from_peeker","get","get_mut","instructions","into","into","into","into","into","into","into","into","lsda","new_boxed","pc","pc","r10","r11","r12","r13","r14","r15","r8","r9","rax","rbp","rbx","rcx","rdi","rdx","read","read","read_mem","read_sleb128","read_uleb128","read_with_encoding","reset","resume","rip","rsi","rsp","run","set_end","set_pc","size","sp","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwind_frame","unwind_raise_exception_with_hook","wheel"],"q":["unwind","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","Byte peekable object.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finish the unwinding.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","rip.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Raise exception through unwind with hook function.",""],"i":[8,8,8,19,0,0,0,0,8,8,8,8,8,0,8,19,0,8,8,0,0,0,8,1,19,8,11,1,2,3,4,5,19,8,11,1,2,3,4,5,11,1,2,3,4,5,1,2,3,4,5,2,3,2,4,4,8,11,1,3,1,5,19,8,11,1,1,2,3,4,5,2,3,3,11,19,8,11,1,2,3,4,5,11,5,3,11,3,3,3,3,3,3,3,3,3,3,3,3,3,3,20,2,5,2,2,2,2,4,3,3,3,11,2,3,1,3,1,2,3,4,5,19,8,11,1,2,3,4,5,19,8,11,1,2,3,4,5,19,8,11,1,2,3,4,5,5,5,2],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1,1],[2,2],[3,3],[4,4],[5,5],[[]],[[]],[[]],[[]],[[]],[2,6],[[],3],[2,6],[[7,7]],0,[[8,9],10],[[11,9],10],[[1,9],10],[[3,9],10],0,0,[[]],[[]],[[]],[7,1],[[]],[[]],[[]],[[]],[[]],[6,2],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[3,[13,[6]],2],[[14,[5]]]],[3,6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[6,15],[2,15],[[5,6],[[12,[6,8]]]],[2,[[15,[16]]]],[2,[[15,[6]]]],[[2,1],[[15,[6]]]],[[2,6]],0,0,0,0,[[11,6],[[12,[[14,[0]],8]]]],[[2,6],17],[[3,6]],[1,6],[3,6],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[[14,[5]]],[[12,[8]]]],[[[14,[5]]],[[12,[8]]]],[[2,16]]],"p":[[3,"Encoding"],[3,"DwarfReader"],[3,"StackFrame"],[3,"UnwindHandler"],[3,"UnwindContext"],[15,"usize"],[15,"u8"],[4,"UnwindError"],[3,"Formatter"],[6,"Result"],[3,"FrameDescriptionEntry"],[4,"Result"],[3,"Range"],[3,"Box"],[4,"Option"],[15,"isize"],[15,"bool"],[3,"TypeId"],[4,"ExceptionHandlingPhase"],[8,"Peeker"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
