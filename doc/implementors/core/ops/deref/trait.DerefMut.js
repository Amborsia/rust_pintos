(function() {var implementors = {
"abyss":[["impl&lt;T:&nbsp;?Sized&gt; DerefMut for <a class=\"struct\" href=\"abyss/spin_lock/struct.SpinLockGuard.html\" title=\"struct abyss::spin_lock::SpinLockGuard\">SpinLockGuard</a>&lt;'_, T&gt;"]],
"crossbeam_utils":[["impl&lt;T&gt; DerefMut for <a class=\"struct\" href=\"crossbeam_utils/struct.CachePadded.html\" title=\"struct crossbeam_utils::CachePadded\">CachePadded</a>&lt;T&gt;"]],
"once_cell":[["impl&lt;T, F:&nbsp;FnOnce() -&gt; T&gt; DerefMut for <a class=\"struct\" href=\"once_cell/unsync/struct.Lazy.html\" title=\"struct once_cell::unsync::Lazy\">Lazy</a>&lt;T, F&gt;"]],
"spin":[["impl&lt;'a, T:&nbsp;?Sized&gt; DerefMut for <a class=\"struct\" href=\"spin/struct.MutexGuard.html\" title=\"struct spin::MutexGuard\">MutexGuard</a>&lt;'a, T&gt;"],["impl&lt;'rwlock, T:&nbsp;?Sized&gt; DerefMut for <a class=\"struct\" href=\"spin/struct.RwLockWriteGuard.html\" title=\"struct spin::RwLockWriteGuard\">RwLockWriteGuard</a>&lt;'rwlock, T&gt;"]],
"spin_lock":[["impl&lt;T:&nbsp;?Sized&gt; DerefMut for <a class=\"struct\" href=\"spin_lock/smplock/struct.SpinLockGuard.html\" title=\"struct spin_lock::smplock::SpinLockGuard\">SpinLockGuard</a>&lt;'_, T&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()