(function() {var implementors = {
"abyss":[["impl BitOr&lt;usize&gt; for <a class=\"struct\" href=\"abyss/addressing/struct.Va.html\" title=\"struct abyss::addressing::Va\">Va</a>"],["impl BitOr&lt;usize&gt; for <a class=\"struct\" href=\"abyss/addressing/struct.Pa.html\" title=\"struct abyss::addressing::Pa\">Pa</a>"],["impl BitOr&lt;<a class=\"struct\" href=\"abyss/dev/pci/struct.Status.html\" title=\"struct abyss::dev::pci::Status\">Status</a>&gt; for <a class=\"struct\" href=\"abyss/dev/pci/struct.Status.html\" title=\"struct abyss::dev::pci::Status\">Status</a>"],["impl BitOr&lt;<a class=\"struct\" href=\"abyss/dev/pci/virtio/struct.Status.html\" title=\"struct abyss::dev::pci::virtio::Status\">Status</a>&gt; for <a class=\"struct\" href=\"abyss/dev/pci/virtio/struct.Status.html\" title=\"struct abyss::dev::pci::virtio::Status\">Status</a>"],["impl BitOr&lt;<a class=\"struct\" href=\"abyss/dev/pci/virtio/struct.VirtIoFeaturesCommon.html\" title=\"struct abyss::dev::pci::virtio::VirtIoFeaturesCommon\">VirtIoFeaturesCommon</a>&gt; for <a class=\"struct\" href=\"abyss/dev/pci/virtio/struct.VirtIoFeaturesCommon.html\" title=\"struct abyss::dev::pci::virtio::VirtIoFeaturesCommon\">VirtIoFeaturesCommon</a>"],["impl BitOr&lt;<a class=\"struct\" href=\"abyss/dev/pci/virtio/struct.IsrCfg.html\" title=\"struct abyss::dev::pci::virtio::IsrCfg\">IsrCfg</a>&gt; for <a class=\"struct\" href=\"abyss/dev/pci/virtio/struct.IsrCfg.html\" title=\"struct abyss::dev::pci::virtio::IsrCfg\">IsrCfg</a>"],["impl BitOr&lt;<a class=\"struct\" href=\"abyss/dev/pci/virtio/virt_queue/struct.VirtqDescFlags.html\" title=\"struct abyss::dev::pci::virtio::virt_queue::VirtqDescFlags\">VirtqDescFlags</a>&gt; for <a class=\"struct\" href=\"abyss/dev/pci/virtio/virt_queue/struct.VirtqDescFlags.html\" title=\"struct abyss::dev::pci::virtio::virt_queue::VirtqDescFlags\">VirtqDescFlags</a>"],["impl BitOr&lt;<a class=\"struct\" href=\"abyss/x86_64/interrupt/struct.PFErrorCode.html\" title=\"struct abyss::x86_64::interrupt::PFErrorCode\">PFErrorCode</a>&gt; for <a class=\"struct\" href=\"abyss/x86_64/interrupt/struct.PFErrorCode.html\" title=\"struct abyss::x86_64::interrupt::PFErrorCode\">PFErrorCode</a>"],["impl BitOr&lt;<a class=\"struct\" href=\"abyss/x86_64/segmentation/struct.SegmentAccess.html\" title=\"struct abyss::x86_64::segmentation::SegmentAccess\">SegmentAccess</a>&gt; for <a class=\"struct\" href=\"abyss/x86_64/segmentation/struct.SegmentAccess.html\" title=\"struct abyss::x86_64::segmentation::SegmentAccess\">SegmentAccess</a>"],["impl BitOr&lt;<a class=\"struct\" href=\"abyss/x86_64/segmentation/struct.SegmentAccess64.html\" title=\"struct abyss::x86_64::segmentation::SegmentAccess64\">SegmentAccess64</a>&gt; for <a class=\"struct\" href=\"abyss/x86_64/segmentation/struct.SegmentAccess64.html\" title=\"struct abyss::x86_64::segmentation::SegmentAccess64\">SegmentAccess64</a>"],["impl BitOr&lt;<a class=\"struct\" href=\"abyss/x86_64/struct.Rflags.html\" title=\"struct abyss::x86_64::Rflags\">Rflags</a>&gt; for <a class=\"struct\" href=\"abyss/x86_64/struct.Rflags.html\" title=\"struct abyss::x86_64::Rflags\">Rflags</a>"],["impl BitOr&lt;<a class=\"struct\" href=\"abyss/x86_64/struct.Cr0.html\" title=\"struct abyss::x86_64::Cr0\">Cr0</a>&gt; for <a class=\"struct\" href=\"abyss/x86_64/struct.Cr0.html\" title=\"struct abyss::x86_64::Cr0\">Cr0</a>"],["impl BitOr&lt;<a class=\"struct\" href=\"abyss/x86_64/struct.Cr4.html\" title=\"struct abyss::x86_64::Cr4\">Cr4</a>&gt; for <a class=\"struct\" href=\"abyss/x86_64/struct.Cr4.html\" title=\"struct abyss::x86_64::Cr4\">Cr4</a>"]],
"hashbrown":[["impl&lt;T, S, A&gt; BitOr&lt;&amp;<a class=\"struct\" href=\"hashbrown/hash_set/struct.HashSet.html\" title=\"struct hashbrown::hash_set::HashSet\">HashSet</a>&lt;T, S, A&gt;&gt; for &amp;<a class=\"struct\" href=\"hashbrown/hash_set/struct.HashSet.html\" title=\"struct hashbrown::hash_set::HashSet\">HashSet</a>&lt;T, S, A&gt;<span class=\"where fmt-newline\">where\n    T: Eq + Hash + Clone,\n    S: BuildHasher + Default,\n    A: Allocator + Clone,</span>"]],
"kev":[["impl BitOr&lt;usize&gt; for <a class=\"struct\" href=\"kev/vm/struct.Gva.html\" title=\"struct kev::vm::Gva\">Gva</a>"],["impl BitOr&lt;usize&gt; for <a class=\"struct\" href=\"kev/vm/struct.Gpa.html\" title=\"struct kev::vm::Gpa\">Gpa</a>"],["impl BitOr&lt;<a class=\"struct\" href=\"kev/vm_control/struct.VmcsPinBasedVmexecCtl.html\" title=\"struct kev::vm_control::VmcsPinBasedVmexecCtl\">VmcsPinBasedVmexecCtl</a>&gt; for <a class=\"struct\" href=\"kev/vm_control/struct.VmcsPinBasedVmexecCtl.html\" title=\"struct kev::vm_control::VmcsPinBasedVmexecCtl\">VmcsPinBasedVmexecCtl</a>"],["impl BitOr&lt;<a class=\"struct\" href=\"kev/vm_control/struct.VmcsProcBasedVmexecCtl.html\" title=\"struct kev::vm_control::VmcsProcBasedVmexecCtl\">VmcsProcBasedVmexecCtl</a>&gt; for <a class=\"struct\" href=\"kev/vm_control/struct.VmcsProcBasedVmexecCtl.html\" title=\"struct kev::vm_control::VmcsProcBasedVmexecCtl\">VmcsProcBasedVmexecCtl</a>"],["impl BitOr&lt;<a class=\"struct\" href=\"kev/vm_control/struct.VmcsProcBasedSecondaryVmexecCtl.html\" title=\"struct kev::vm_control::VmcsProcBasedSecondaryVmexecCtl\">VmcsProcBasedSecondaryVmexecCtl</a>&gt; for <a class=\"struct\" href=\"kev/vm_control/struct.VmcsProcBasedSecondaryVmexecCtl.html\" title=\"struct kev::vm_control::VmcsProcBasedSecondaryVmexecCtl\">VmcsProcBasedSecondaryVmexecCtl</a>"],["impl BitOr&lt;<a class=\"struct\" href=\"kev/vm_control/struct.VmcsEntryCtl.html\" title=\"struct kev::vm_control::VmcsEntryCtl\">VmcsEntryCtl</a>&gt; for <a class=\"struct\" href=\"kev/vm_control/struct.VmcsEntryCtl.html\" title=\"struct kev::vm_control::VmcsEntryCtl\">VmcsEntryCtl</a>"],["impl BitOr&lt;<a class=\"struct\" href=\"kev/vm_control/struct.VmcsExitCtl.html\" title=\"struct kev::vm_control::VmcsExitCtl\">VmcsExitCtl</a>&gt; for <a class=\"struct\" href=\"kev/vm_control/struct.VmcsExitCtl.html\" title=\"struct kev::vm_control::VmcsExitCtl\">VmcsExitCtl</a>"],["impl BitOr&lt;<a class=\"struct\" href=\"kev/vmcs/struct.EptViolationQualification.html\" title=\"struct kev::vmcs::EptViolationQualification\">EptViolationQualification</a>&gt; for <a class=\"struct\" href=\"kev/vmcs/struct.EptViolationQualification.html\" title=\"struct kev::vmcs::EptViolationQualification\">EptViolationQualification</a>"]],
"project1":[["impl BitOr&lt;<a class=\"struct\" href=\"project1/page_table/struct.Pml4eFlags.html\" title=\"struct project1::page_table::Pml4eFlags\">Pml4eFlags</a>&gt; for <a class=\"struct\" href=\"project1/page_table/struct.Pml4eFlags.html\" title=\"struct project1::page_table::Pml4eFlags\">Pml4eFlags</a>"],["impl BitOr&lt;<a class=\"struct\" href=\"project1/page_table/struct.PdpeFlags.html\" title=\"struct project1::page_table::PdpeFlags\">PdpeFlags</a>&gt; for <a class=\"struct\" href=\"project1/page_table/struct.PdpeFlags.html\" title=\"struct project1::page_table::PdpeFlags\">PdpeFlags</a>"],["impl BitOr&lt;<a class=\"struct\" href=\"project1/page_table/struct.PdeFlags.html\" title=\"struct project1::page_table::PdeFlags\">PdeFlags</a>&gt; for <a class=\"struct\" href=\"project1/page_table/struct.PdeFlags.html\" title=\"struct project1::page_table::PdeFlags\">PdeFlags</a>"],["impl BitOr&lt;<a class=\"struct\" href=\"project1/page_table/struct.PteFlags.html\" title=\"struct project1::page_table::PteFlags\">PteFlags</a>&gt; for <a class=\"struct\" href=\"project1/page_table/struct.PteFlags.html\" title=\"struct project1::page_table::PteFlags\">PteFlags</a>"],["impl BitOr&lt;<a class=\"struct\" href=\"project1/page_table/struct.Permission.html\" title=\"struct project1::page_table::Permission\">Permission</a>&gt; for <a class=\"struct\" href=\"project1/page_table/struct.Permission.html\" title=\"struct project1::page_table::Permission\">Permission</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()